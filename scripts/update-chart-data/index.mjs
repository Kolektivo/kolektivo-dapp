const uT = "celo", lT = 42220, cT = {
  monetaryBadger: {
    abi: "Badger",
    address: "0xac0c9314f008047228B18Aa0f2B0f69349B7cE15"
  },
  kolektivoBadger: {
    abi: "Badger",
    address: "0x4D7116B96a7A2dE170fe40e2dF59617aBcF56018"
  },
  bacMD: {
    abi: "BACRoles",
    address: "0x92ca28643FC27b35D7B706f373ba76aD675BeADa"
  },
  bacFFD: {
    abi: "BACRoles",
    address: "0x615857388C1314Ee771643F1537307D5729facbA"
  },
  bacMC: {
    abi: "BACRoles",
    address: "0x75E62731F9c9BB76989269f151bA9A049B615632"
  },
  bacK: {
    abi: "BACRoles",
    address: "0xda7316eBd1c475d79059b2C08337d53C23cCa0Ba"
  },
  reserveDelegateScope: {
    abi: "ScopeGuard",
    address: "0xe134419f1955F254956A9E436005F60849f6a6c5"
  },
  foodForestDelegateScope: {
    abi: "ScopeGuard",
    address: "0xa578E29E64aa47a270f86d43623083e7FdEF84D4"
  },
  monetaryMultisigScope: {
    abi: "ScopeGuard",
    address: "0x61171BB19fA468793856a7Ef23e62e263b5Ce8A2"
  },
  monetaryDelay: {
    abi: "SecretDelay",
    address: "0xAF5614E1577b85A3fd725532ce01D51881089945"
  },
  foodForestDelay: {
    abi: "SecretDelay",
    address: "0xeaae16F74A4851f2655289f6074f6457a4C7b033"
  },
  kolektivoDelay: {
    abi: "SecretDelay",
    address: "0xce3614A5C6a3F15d71ED1AF70bcd1a113c3252ee"
  }
}, lB = {
  name: uT,
  chainId: lT,
  contracts: cT
}, cB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: uT,
  chainId: lT,
  contracts: cT,
  default: lB
}, Symbol.toStringTag, { value: "Module" })), dT = "celo", fT = "42220", pT = {
  GeoNFT: {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    abi: [
      {
        inputs: [
          {
            internalType: "string",
            name: "_name",
            type: "string"
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidIdentifier",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidLatitude",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidLongitude",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidTokenId",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "ApprovalForAll",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "TokenModified",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "getApproved",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isApprovedForAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "int32",
            name: "latitude",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "longitude",
            type: "int32"
          },
          {
            internalType: "string",
            name: "identifier",
            type: "string"
          }
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "int32",
            name: "latitude",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "longitude",
            type: "int32"
          },
          {
            internalType: "string",
            name: "identifier",
            type: "string"
          }
        ],
        name: "modify",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ownerOf",
        outputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes4",
            name: "interfaceId",
            type: "bytes4"
          }
        ],
        name: "supportsInterface",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "tokenData",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "int32",
            name: "",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "",
            type: "int32"
          },
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "tokenURI",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Oracle: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "uint256",
            name: "reportExpirationTime_",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "reportDelay_",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minimumProviders_",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "invalidProvider",
            type: "address"
          }
        ],
        name: "Oracle__InvalidProvider",
        type: "error"
      },
      {
        inputs: [],
        name: "Oracle__NewReportTooSoonAfterPastReport",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldMinimumProviders",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newMinimumProviders",
            type: "uint256"
          }
        ],
        name: "MinimumProvidersChanged",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [],
        name: "OracleMarkedAsInvalid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [],
        name: "OracleMarkedAsValid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          }
        ],
        name: "ProviderReportPushed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "purger",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderReportsPurged",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "addProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "getData",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "isValid",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "minimumProviders",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "providerReports",
        outputs: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "providers",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "providersSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "purgeReports",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "purgeReportsFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          }
        ],
        name: "pushReport",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "removeProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "reportDelay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "reportExpirationTime",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bool",
            name: "isValid_",
            type: "bool"
          }
        ],
        name: "setIsValid",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "minimumProviders_",
            type: "uint256"
          }
        ],
        name: "setMinimumProviders",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Mento Exchange": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "goldBucket",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "stableBucket",
            type: "uint256"
          }
        ],
        name: "BucketsUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchanger",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "bool",
            name: "soldGold",
            type: "bool"
          }
        ],
        name: "Exchanged",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "minSupplyForStableBucketCap",
            type: "uint256"
          }
        ],
        name: "MinSupplyForStableBucketCapSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "minimumReports",
            type: "uint256"
          }
        ],
        name: "MinimumReportsSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "reserveFraction",
            type: "uint256"
          }
        ],
        name: "ReserveFractionSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "spread",
            type: "uint256"
          }
        ],
        name: "SpreadSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "stableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "StableBucketMaxFractionSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "stable",
            type: "address"
          }
        ],
        name: "StableTokenSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "updateFrequency",
            type: "uint256"
          }
        ],
        name: "UpdateFrequencySet",
        type: "event"
      },
      {
        constant: !1,
        inputs: [],
        name: "activateStable",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "maxSellAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "buyGold",
            type: "bool"
          }
        ],
        name: "buy",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minBuyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "exchange",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getBuyAndSellBuckets",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getBuyTokenAmount",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getSellTokenAmount",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getStableBucketCap",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "goldBucket",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "string",
            name: "stableTokenIdentifier",
            type: "string"
          },
          {
            internalType: "uint256",
            name: "_spread",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_reserveFraction",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_updateFrequency",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_minimumReports",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_minSupplyForStableBucketCap",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_stableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "lastBucketUpdate",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minSupplyForStableBucketCap",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minimumReports",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "reserveFraction",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minBuyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "sell",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newMinSupplyForStableBucketCap",
            type: "uint256"
          }
        ],
        name: "setMinSupplyForStableBucketCap",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newMininumReports",
            type: "uint256"
          }
        ],
        name: "setMinimumReports",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newReserveFraction",
            type: "uint256"
          }
        ],
        name: "setReserveFraction",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newSpread",
            type: "uint256"
          }
        ],
        name: "setSpread",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newStableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "setStableBucketMaxFraction",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newStableToken",
            type: "address"
          }
        ],
        name: "setStableToken",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newUpdateFrequency",
            type: "uint256"
          }
        ],
        name: "setUpdateFrequency",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "spread",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stable",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableBucket",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableBucketMaxFraction",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableTokenRegistryId",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "updateFrequency",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      }
    ]
  },
  "Mento Reserve": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "bytes32[]",
            name: "symbols",
            type: "bytes32[]"
          },
          {
            indexed: !1,
            internalType: "uint256[]",
            name: "weights",
            type: "uint256[]"
          }
        ],
        name: "AssetAllocationSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "ratio",
            type: "uint256"
          }
        ],
        name: "DailySpendingRatioSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchangeSpender",
            type: "address"
          }
        ],
        name: "ExchangeSpenderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchangeSpender",
            type: "address"
          }
        ],
        name: "ExchangeSpenderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "otherReserveAddress",
            type: "address"
          }
        ],
        name: "OtherReserveAddressAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "otherReserveAddress",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "OtherReserveAddressRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "ReserveGoldTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "SpenderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "SpenderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxReserveRatioSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxStalenessThresholdSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "token",
            type: "address"
          }
        ],
        name: "TokenAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "TokenRemoved",
        type: "event"
      },
      {
        payable: !0,
        stateMutability: "payable",
        type: "fallback"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "addExchangeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "reserveAddress",
            type: "address"
          }
        ],
        name: "addOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "addSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          }
        ],
        name: "addToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "assetAllocationSymbols",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        name: "assetAllocationWeights",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "exchangeSpenderAddresses",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldDays",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldStartBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldStartDay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getAssetAllocationSymbols",
        outputs: [
          {
            internalType: "bytes32[]",
            name: "",
            type: "bytes32[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getAssetAllocationWeights",
        outputs: [
          {
            internalType: "uint256[]",
            name: "",
            type: "uint256[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getDailySpendingRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getExchangeSpenders",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getFrozenReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "getOrComputeTobinTax",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getOtherReserveAddresses",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getOtherReserveAddressesGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getReserveRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getTokens",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getUnfrozenBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getUnfrozenReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "_tobinTaxStalenessThreshold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_spendingRatio",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_frozenGold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_frozenDays",
            type: "uint256"
          },
          {
            internalType: "bytes32[]",
            name: "_assetAllocationSymbols",
            type: "bytes32[]"
          },
          {
            internalType: "uint256[]",
            name: "_assetAllocationWeights",
            type: "uint256[]"
          },
          {
            internalType: "uint256",
            name: "_tobinTax",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_tobinTaxReserveRatio",
            type: "uint256"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isExchangeSpender",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isSpender",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "lastSpendingDay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "otherReserveAddresses",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeExchangeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "reserveAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "removeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "bytes32[]",
            name: "symbols",
            type: "bytes32[]"
          },
          {
            internalType: "uint256[]",
            name: "weights",
            type: "uint256[]"
          }
        ],
        name: "setAssetAllocations",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "ratio",
            type: "uint256"
          }
        ],
        name: "setDailySpendingRatio",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "frozenGold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "frozenDays",
            type: "uint256"
          }
        ],
        name: "setFrozenGold",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTax",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTaxReserveRatio",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTaxStalenessThreshold",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "spendingLimit",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTax",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxCache",
        outputs: [
          {
            internalType: "uint128",
            name: "numerator",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "timestamp",
            type: "uint128"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxReserveRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxStalenessThreshold",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address payable",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferExchangeGold",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address payable",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferGold",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Kolektivo Curacao Guilder Token": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "factor",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256"
          }
        ],
        name: "InflationFactorUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "rate",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "updatePeriod",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256"
          }
        ],
        name: "InflationParametersUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "string",
            name: "comment",
            type: "string"
          }
        ],
        name: "TransferComment",
        type: "event"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "accountOwner",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "accountOwner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "burn",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "blsKey",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "blsPop",
            type: "bytes"
          }
        ],
        name: "checkProofOfPossession",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          },
          {
            internalType: "address",
            name: "gatewayFeeRecipient",
            type: "address"
          },
          {
            internalType: "address",
            name: "communityFund",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "tipTxFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gatewayFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "baseTxFee",
            type: "uint256"
          }
        ],
        name: "creditGasFees",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "debitGasFees",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "aNumerator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "aDenominator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "bNumerator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "bDenominator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "exponent",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_decimals",
            type: "uint256"
          }
        ],
        name: "fractionMulExp",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "getBlockNumberFromHeader",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getEpochNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "getEpochNumberOfBlock",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getEpochSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getExchangeRegistryId",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getInflationParameters",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "getParentSealBitmap",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "getVerifiedSealBitmapFromHeader",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "hashHeader",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "string",
            name: "_name",
            type: "string"
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string"
          },
          {
            internalType: "uint8",
            name: "_decimals",
            type: "uint8"
          },
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "inflationRate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "inflationFactorUpdatePeriod",
            type: "uint256"
          },
          {
            internalType: "address[]",
            name: "initialBalanceAddresses",
            type: "address[]"
          },
          {
            internalType: "uint256[]",
            name: "initialBalanceValues",
            type: "uint256[]"
          },
          {
            internalType: "string",
            name: "exchangeIdentifier",
            type: "string"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "minQuorumSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minQuorumSizeInCurrentSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "mint",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "numberValidatorsInCurrentSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "numberValidatorsInSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "updatePeriod",
            type: "uint256"
          }
        ],
        name: "setInflationParameters",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "totalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "comment",
            type: "string"
          }
        ],
        name: "transferWithComment",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "units",
            type: "uint256"
          }
        ],
        name: "unitsToValue",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "validatorSignerAddressFromCurrentSet",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "validatorSignerAddressFromSet",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "valueToUnits",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      }
    ]
  },
  Reserve: {
    address: "0xdb2B19C8e3ce01E7f5101652B9dEb500D1298716",
    abi: [
      {
        inputs: [
          {
            internalType: "address",
            name: "token_",
            type: "address"
          },
          {
            internalType: "address",
            name: "tokenOracle_",
            type: "address"
          },
          {
            internalType: "address",
            name: "vestingVault_",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "minBacking_",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20BalanceNotSufficient",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20BondingLimitExceeded",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotBondable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotRedeemable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotRegistered",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20RedeemLimitExceeded",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotBondable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotRedeemable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotRegistered",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidAmount",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidOracle",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__MinimumBackingLimitExceeded",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldBacking",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newBacking",
            type: "uint256"
          }
        ],
        name: "BackingUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sBonded",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensMinted",
            type: "uint256"
          }
        ],
        name: "BondedERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensMinted",
            type: "uint256"
          }
        ],
        name: "BondedERC721",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "DebtIncurred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "DebtPaid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20Deregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "enum IReserve.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            indexed: !1,
            internalType: "enum IReserve.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "ERC20Registered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDeregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdRegistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sRedeemed",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensBurned",
            type: "uint256"
          }
        ],
        name: "RedeemedERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensBurned",
            type: "uint256"
          }
        ],
        name: "RedeemedERC721Id",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldDiscount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newDiscount",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingDiscount",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldVestingDuration",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newVestingDuration",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingVesting",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetERC20Oracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20RedeemLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldDiscount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newDiscount",
            type: "uint256"
          }
        ],
        name: "SetERC721IdBondingDiscount",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldVestingDuration",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newVestingDuration",
            type: "uint256"
          }
        ],
        name: "SetERC721IdBondingVesting",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetERC721IdOracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldMinBacking",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newMinBacking",
            type: "uint256"
          }
        ],
        name: "SetMinBacking",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetTokenOracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "oldVestingVault",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newVestingVault",
            type: "address"
          }
        ],
        name: "SetVestingVault",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sWithdrawn",
            type: "uint256"
          }
        ],
        name: "WithdrewERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "WithdrewERC721Id",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC20s",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC721Ids",
        outputs: [
          {
            components: [
              {
                internalType: "address",
                name: "erc721",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              }
            ],
            internalType: "struct IReserve.ERC721Id[]",
            name: "",
            type: "tuple[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "assetTypeOfERC20",
        outputs: [
          {
            internalType: "enum IReserve.AssetType",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "bondERC20All",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "bondERC20AllFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC20AllFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC20AllTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20From",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20FromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "bondERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "bondERC721IdFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC721IdFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC721IdTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingDiscountPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "bondingDiscountPerERC721Id",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingVestingDurationPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "bondingVestingDurationPerERC721Id",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "deregisterERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "deregisterERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "executeTx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "incurDebt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Bondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Redeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdBondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdRedeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "minBacking",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        name: "onERC721Received",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "oraclePerERC20",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "oraclePerERC721Id",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "payDebt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "redeemERC20All",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "redeemERC20AllFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC20AllFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC20AllTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20From",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20FromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "redeemERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "redeemERC721IdFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC721IdFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC721IdTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "redeemLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            internalType: "enum IReserve.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            internalType: "enum IReserve.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "registerERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "registerERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC20s",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC721Ids",
        outputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "reserveStatus",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "riskLevelOfERC20",
        outputs: [
          {
            internalType: "enum IReserve.RiskLevel",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          }
        ],
        name: "setBondingDiscountForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          }
        ],
        name: "setBondingDiscountForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setBondingVestingForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setBondingVestingForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20BondingLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20RedeemLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "minBacking_",
            type: "uint256"
          }
        ],
        name: "setMinBacking",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "tokenOracle_",
            type: "address"
          }
        ],
        name: "setTokenOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "vestingVault_",
            type: "address"
          }
        ],
        name: "setVestingVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Bond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Redemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setupAndListERC721IdBond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "setupAndListERC721IdRedemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "token",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "tokenOracle",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateOracleForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateOracleForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "vestingVault",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "withdrawERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Treasury: {
    address: "0x74b06277Cd1efaA9f6595D25AdB54b4530d15BF5",
    abi: [
      {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidAmount",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "MaxSupplyReached",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20BondingLimitExceeded",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotBondable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotRedeemable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotRegistered",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20RedeemLimitExceeded",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotBondable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotRedeemable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotRegistered",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "Treasury__StaleERC20PriceDeliveredByOracle",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "Treasury__StaleERC721IdPriceDeliveredByOracle",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20Deregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "ERC20OracleUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldPrice",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newPrice",
            type: "uint256"
          }
        ],
        name: "ERC20PriceUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "enum Treasury.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            indexed: !1,
            internalType: "enum Treasury.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "ERC20Registered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sWithdrawn",
            type: "uint256"
          }
        ],
        name: "ERC20Withdrawn",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsMinted",
            type: "uint256"
          }
        ],
        name: "ERC20sBonded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsBurned",
            type: "uint256"
          }
        ],
        name: "ERC20sRedeemed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDeregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "ERC721IdOracleUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldPrice",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newPrice",
            type: "uint256"
          }
        ],
        name: "ERC721IdPriceUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "ERC721IdRegistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "ERC721IdWithdrawn",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsMinted",
            type: "uint256"
          }
        ],
        name: "ERC721IdsBonded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsBurned",
            type: "uint256"
          }
        ],
        name: "ERC721IdsRedeemed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "uint256",
            name: "epoch",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newScalar",
            type: "uint256"
          }
        ],
        name: "Rebase",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20RedeemLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "EIP712_DOMAIN",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "EIP712_REVISION",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "PERMIT_TYPEHASH",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC20s",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC721Ids",
        outputs: [
          {
            components: [
              {
                internalType: "address",
                name: "erc721",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              }
            ],
            internalType: "struct Treasury.ERC721Id[]",
            name: "",
            type: "tuple[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner_",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "assetTypeOfERC20",
        outputs: [
          {
            internalType: "enum Treasury.AssetType",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "bondERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "bondERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "deregisterERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "deregisterERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "executeTx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Bondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Redeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdBondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdRedeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "lastRebase",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "nonces",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        name: "onERC721Received",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "oraclePerERC20",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "oraclePerERC721Id",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8"
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32"
          }
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "rebase",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "kttWad",
            type: "uint256"
          }
        ],
        name: "redeemERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "redeemERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "redeemLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            internalType: "enum Treasury.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            internalType: "enum Treasury.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "registerERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "registerERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC20s",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC721Ids",
        outputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "riskLevelOfERC20",
        outputs: [
          {
            internalType: "enum Treasury.RiskLevel",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "scaledBalanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "scaledTotalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20BondingLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20RedeemLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Bond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Redemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalValuation",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "transferAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "transferAllFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateERC20Oracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateERC721IdOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "withdrawERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Kolektivo Curacao Reserve Token": {
    address: "0xf4cb43D02842c65101e5DA329ED01dFeC2280EdA",
    abi: "ERC20"
  },
  "Kolektivo Treasury Token": {
    address: "0x74b06277Cd1efaA9f6595D25AdB54b4530d15BF5",
    abi: "ERC20"
  },
  "Test Token #1": {
    address: "0x4cB13ED364bd2c212B694921CdAca979DCA76054",
    abi: "ERC20"
  },
  "Test Token #2": {
    address: "0x5bFE78b0d15eF0cdcA4077336e0bEbEc15CFb142",
    abi: "ERC20"
  },
  "Test Token #3": {
    address: "0xd312bCeA257799a39e0C85d7EC45031612e4dd50",
    abi: "ERC20"
  },
  "GeoNFT #1": {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    id: 1,
    abi: "ERC721"
  },
  "GeoNFT #2": {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    id: 2,
    abi: "ERC721"
  },
  VestingVault: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "claim",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "depositFor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "token",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "unvestedFor",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "vestedFor",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      }
    ]
  }
}, dB = {
  name: dT,
  chainId: fT,
  contracts: pT
}, fB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: dT,
  chainId: fT,
  contracts: pT,
  default: dB
}, Symbol.toStringTag, { value: "Module" })), hT = "celo", yT = 42220, mT = {}, pB = {
  name: hT,
  chainId: yT,
  contracts: mT
}, hB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: hT,
  chainId: yT,
  contracts: mT,
  default: pB
}, Symbol.toStringTag, { value: "Module" })), bT = "celo", gT = "42220", vT = {}, yB = {
  name: bT,
  chainId: gT,
  contracts: vT
}, mB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: bT,
  chainId: gT,
  contracts: vT,
  default: yB
}, Symbol.toStringTag, { value: "Module" })), xT = "celo", wT = "42220", TT = {
  GeoNFT: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "string",
            name: "_name",
            type: "string"
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidIdentifier",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidLatitude",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidLongitude",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidTokenId",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "ApprovalForAll",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "TokenModified",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "getApproved",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isApprovedForAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "int32",
            name: "latitude",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "longitude",
            type: "int32"
          },
          {
            internalType: "string",
            name: "identifier",
            type: "string"
          }
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "int32",
            name: "latitude",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "longitude",
            type: "int32"
          },
          {
            internalType: "string",
            name: "identifier",
            type: "string"
          }
        ],
        name: "modify",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ownerOf",
        outputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes4",
            name: "interfaceId",
            type: "bytes4"
          }
        ],
        name: "supportsInterface",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "tokenData",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "int32",
            name: "",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "",
            type: "int32"
          },
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "tokenURI",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Oracle: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "uint256",
            name: "reportExpirationTime_",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "reportDelay_",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minimumProviders_",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "invalidProvider",
            type: "address"
          }
        ],
        name: "Oracle__InvalidProvider",
        type: "error"
      },
      {
        inputs: [],
        name: "Oracle__NewReportTooSoonAfterPastReport",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldMinimumProviders",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newMinimumProviders",
            type: "uint256"
          }
        ],
        name: "MinimumProvidersChanged",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [],
        name: "OracleMarkedAsInvalid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [],
        name: "OracleMarkedAsValid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          }
        ],
        name: "ProviderReportPushed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "purger",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderReportsPurged",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "addProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "getData",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "isValid",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "minimumProviders",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "providerReports",
        outputs: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "providers",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "providersSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "purgeReports",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "purgeReportsFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          }
        ],
        name: "pushReport",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "removeProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "reportDelay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "reportExpirationTime",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bool",
            name: "isValid_",
            type: "bool"
          }
        ],
        name: "setIsValid",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "minimumProviders_",
            type: "uint256"
          }
        ],
        name: "setMinimumProviders",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Reserve: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "address",
            name: "token_",
            type: "address"
          },
          {
            internalType: "address",
            name: "tokenOracle_",
            type: "address"
          },
          {
            internalType: "address",
            name: "vestingVault_",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "minBacking_",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20BalanceNotSufficient",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20BondingLimitExceeded",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotBondable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotRedeemable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotRegistered",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20RedeemLimitExceeded",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotBondable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotRedeemable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotRegistered",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidAmount",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidOracle",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__MinimumBackingLimitExceeded",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldBacking",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newBacking",
            type: "uint256"
          }
        ],
        name: "BackingUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sBonded",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensMinted",
            type: "uint256"
          }
        ],
        name: "BondedERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensMinted",
            type: "uint256"
          }
        ],
        name: "BondedERC721",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "DebtIncurred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "DebtPaid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20Deregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "enum IReserve.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            indexed: !1,
            internalType: "enum IReserve.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "ERC20Registered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDeregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdRegistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sRedeemed",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensBurned",
            type: "uint256"
          }
        ],
        name: "RedeemedERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensBurned",
            type: "uint256"
          }
        ],
        name: "RedeemedERC721Id",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldDiscount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newDiscount",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingDiscount",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldVestingDuration",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newVestingDuration",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingVesting",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetERC20Oracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20RedeemLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldDiscount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newDiscount",
            type: "uint256"
          }
        ],
        name: "SetERC721IdBondingDiscount",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldVestingDuration",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newVestingDuration",
            type: "uint256"
          }
        ],
        name: "SetERC721IdBondingVesting",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetERC721IdOracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldMinBacking",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newMinBacking",
            type: "uint256"
          }
        ],
        name: "SetMinBacking",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetTokenOracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "oldVestingVault",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newVestingVault",
            type: "address"
          }
        ],
        name: "SetVestingVault",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sWithdrawn",
            type: "uint256"
          }
        ],
        name: "WithdrewERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "WithdrewERC721Id",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC20s",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC721Ids",
        outputs: [
          {
            components: [
              {
                internalType: "address",
                name: "erc721",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              }
            ],
            internalType: "struct IReserve.ERC721Id[]",
            name: "",
            type: "tuple[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "assetTypeOfERC20",
        outputs: [
          {
            internalType: "enum IReserve.AssetType",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "bondERC20All",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "bondERC20AllFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC20AllFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC20AllTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20From",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20FromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "bondERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "bondERC721IdFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC721IdFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC721IdTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingDiscountPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "bondingDiscountPerERC721Id",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingVestingDurationPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "bondingVestingDurationPerERC721Id",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "deregisterERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "deregisterERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "executeTx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "incurDebt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Bondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Redeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdBondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdRedeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "minBacking",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        name: "onERC721Received",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "oraclePerERC20",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "oraclePerERC721Id",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "payDebt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "redeemERC20All",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "redeemERC20AllFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC20AllFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC20AllTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20From",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20FromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "redeemERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "redeemERC721IdFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC721IdFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC721IdTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "redeemLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            internalType: "enum IReserve.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            internalType: "enum IReserve.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "registerERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "registerERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC20s",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC721Ids",
        outputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "reserveStatus",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "riskLevelOfERC20",
        outputs: [
          {
            internalType: "enum IReserve.RiskLevel",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          }
        ],
        name: "setBondingDiscountForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          }
        ],
        name: "setBondingDiscountForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setBondingVestingForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setBondingVestingForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20BondingLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20RedeemLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "minBacking_",
            type: "uint256"
          }
        ],
        name: "setMinBacking",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "tokenOracle_",
            type: "address"
          }
        ],
        name: "setTokenOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "vestingVault_",
            type: "address"
          }
        ],
        name: "setVestingVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Bond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Redemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setupAndListERC721IdBond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "setupAndListERC721IdRedemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "token",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "tokenOracle",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateOracleForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateOracleForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "vestingVault",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "withdrawERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Treasury: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidAmount",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "MaxSupplyReached",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20BondingLimitExceeded",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotBondable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotRedeemable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotRegistered",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20RedeemLimitExceeded",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotBondable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotRedeemable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotRegistered",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "Treasury__StaleERC20PriceDeliveredByOracle",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "Treasury__StaleERC721IdPriceDeliveredByOracle",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20Deregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "ERC20OracleUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldPrice",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newPrice",
            type: "uint256"
          }
        ],
        name: "ERC20PriceUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "enum Treasury.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            indexed: !1,
            internalType: "enum Treasury.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "ERC20Registered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sWithdrawn",
            type: "uint256"
          }
        ],
        name: "ERC20Withdrawn",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsMinted",
            type: "uint256"
          }
        ],
        name: "ERC20sBonded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsBurned",
            type: "uint256"
          }
        ],
        name: "ERC20sRedeemed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDeregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "ERC721IdOracleUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldPrice",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newPrice",
            type: "uint256"
          }
        ],
        name: "ERC721IdPriceUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "ERC721IdRegistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "ERC721IdWithdrawn",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsMinted",
            type: "uint256"
          }
        ],
        name: "ERC721IdsBonded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsBurned",
            type: "uint256"
          }
        ],
        name: "ERC721IdsRedeemed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "uint256",
            name: "epoch",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newScalar",
            type: "uint256"
          }
        ],
        name: "Rebase",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20RedeemLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "EIP712_DOMAIN",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "EIP712_REVISION",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "PERMIT_TYPEHASH",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC20s",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC721Ids",
        outputs: [
          {
            components: [
              {
                internalType: "address",
                name: "erc721",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              }
            ],
            internalType: "struct Treasury.ERC721Id[]",
            name: "",
            type: "tuple[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner_",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "assetTypeOfERC20",
        outputs: [
          {
            internalType: "enum Treasury.AssetType",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "bondERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "bondERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "deregisterERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "deregisterERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "executeTx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Bondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Redeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdBondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdRedeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "lastRebase",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "nonces",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        name: "onERC721Received",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "oraclePerERC20",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "oraclePerERC721Id",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8"
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32"
          }
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "rebase",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "kttWad",
            type: "uint256"
          }
        ],
        name: "redeemERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "redeemERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "redeemLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            internalType: "enum Treasury.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            internalType: "enum Treasury.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "registerERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "registerERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC20s",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC721Ids",
        outputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "riskLevelOfERC20",
        outputs: [
          {
            internalType: "enum Treasury.RiskLevel",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "scaledBalanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "scaledTotalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20BondingLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20RedeemLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Bond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Redemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalValuation",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "transferAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "transferAllFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateERC20Oracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateERC721IdOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "withdrawERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Mento Exchange": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "goldBucket",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "stableBucket",
            type: "uint256"
          }
        ],
        name: "BucketsUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchanger",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "bool",
            name: "soldGold",
            type: "bool"
          }
        ],
        name: "Exchanged",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "minSupplyForStableBucketCap",
            type: "uint256"
          }
        ],
        name: "MinSupplyForStableBucketCapSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "minimumReports",
            type: "uint256"
          }
        ],
        name: "MinimumReportsSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "reserveFraction",
            type: "uint256"
          }
        ],
        name: "ReserveFractionSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "spread",
            type: "uint256"
          }
        ],
        name: "SpreadSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "stableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "StableBucketMaxFractionSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "stable",
            type: "address"
          }
        ],
        name: "StableTokenSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "updateFrequency",
            type: "uint256"
          }
        ],
        name: "UpdateFrequencySet",
        type: "event"
      },
      {
        constant: !1,
        inputs: [],
        name: "activateStable",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "maxSellAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "buyGold",
            type: "bool"
          }
        ],
        name: "buy",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minBuyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "exchange",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getBuyAndSellBuckets",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getBuyTokenAmount",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getSellTokenAmount",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getStableBucketCap",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "goldBucket",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "string",
            name: "stableTokenIdentifier",
            type: "string"
          },
          {
            internalType: "uint256",
            name: "_spread",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_reserveFraction",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_updateFrequency",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_minimumReports",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_minSupplyForStableBucketCap",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_stableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "lastBucketUpdate",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minSupplyForStableBucketCap",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minimumReports",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "reserveFraction",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minBuyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "sell",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newMinSupplyForStableBucketCap",
            type: "uint256"
          }
        ],
        name: "setMinSupplyForStableBucketCap",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newMininumReports",
            type: "uint256"
          }
        ],
        name: "setMinimumReports",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newReserveFraction",
            type: "uint256"
          }
        ],
        name: "setReserveFraction",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newSpread",
            type: "uint256"
          }
        ],
        name: "setSpread",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newStableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "setStableBucketMaxFraction",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newStableToken",
            type: "address"
          }
        ],
        name: "setStableToken",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newUpdateFrequency",
            type: "uint256"
          }
        ],
        name: "setUpdateFrequency",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "spread",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stable",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableBucket",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableBucketMaxFraction",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableTokenRegistryId",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "updateFrequency",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      }
    ]
  },
  "Mento Reserve": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "bytes32[]",
            name: "symbols",
            type: "bytes32[]"
          },
          {
            indexed: !1,
            internalType: "uint256[]",
            name: "weights",
            type: "uint256[]"
          }
        ],
        name: "AssetAllocationSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "ratio",
            type: "uint256"
          }
        ],
        name: "DailySpendingRatioSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchangeSpender",
            type: "address"
          }
        ],
        name: "ExchangeSpenderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchangeSpender",
            type: "address"
          }
        ],
        name: "ExchangeSpenderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "otherReserveAddress",
            type: "address"
          }
        ],
        name: "OtherReserveAddressAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "otherReserveAddress",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "OtherReserveAddressRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "ReserveGoldTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "SpenderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "SpenderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxReserveRatioSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxStalenessThresholdSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "token",
            type: "address"
          }
        ],
        name: "TokenAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "TokenRemoved",
        type: "event"
      },
      {
        payable: !0,
        stateMutability: "payable",
        type: "fallback"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "addExchangeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "reserveAddress",
            type: "address"
          }
        ],
        name: "addOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "addSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          }
        ],
        name: "addToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "assetAllocationSymbols",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        name: "assetAllocationWeights",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "exchangeSpenderAddresses",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldDays",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldStartBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldStartDay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getAssetAllocationSymbols",
        outputs: [
          {
            internalType: "bytes32[]",
            name: "",
            type: "bytes32[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getAssetAllocationWeights",
        outputs: [
          {
            internalType: "uint256[]",
            name: "",
            type: "uint256[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getDailySpendingRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getExchangeSpenders",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getFrozenReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "getOrComputeTobinTax",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getOtherReserveAddresses",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getOtherReserveAddressesGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getReserveRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getTokens",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getUnfrozenBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getUnfrozenReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "_tobinTaxStalenessThreshold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_spendingRatio",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_frozenGold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_frozenDays",
            type: "uint256"
          },
          {
            internalType: "bytes32[]",
            name: "_assetAllocationSymbols",
            type: "bytes32[]"
          },
          {
            internalType: "uint256[]",
            name: "_assetAllocationWeights",
            type: "uint256[]"
          },
          {
            internalType: "uint256",
            name: "_tobinTax",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_tobinTaxReserveRatio",
            type: "uint256"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isExchangeSpender",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isSpender",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "lastSpendingDay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "otherReserveAddresses",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeExchangeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "reserveAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "removeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "bytes32[]",
            name: "symbols",
            type: "bytes32[]"
          },
          {
            internalType: "uint256[]",
            name: "weights",
            type: "uint256[]"
          }
        ],
        name: "setAssetAllocations",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "ratio",
            type: "uint256"
          }
        ],
        name: "setDailySpendingRatio",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "frozenGold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "frozenDays",
            type: "uint256"
          }
        ],
        name: "setFrozenGold",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTax",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTaxReserveRatio",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTaxStalenessThreshold",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "spendingLimit",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTax",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxCache",
        outputs: [
          {
            internalType: "uint128",
            name: "numerator",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "timestamp",
            type: "uint128"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxReserveRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxStalenessThreshold",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address payable",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferExchangeGold",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address payable",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferGold",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Kolektivo Curacao Guilder Token": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "factor",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256"
          }
        ],
        name: "InflationFactorUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "rate",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "updatePeriod",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256"
          }
        ],
        name: "InflationParametersUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "string",
            name: "comment",
            type: "string"
          }
        ],
        name: "TransferComment",
        type: "event"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "accountOwner",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "accountOwner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "burn",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "blsKey",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "blsPop",
            type: "bytes"
          }
        ],
        name: "checkProofOfPossession",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          },
          {
            internalType: "address",
            name: "gatewayFeeRecipient",
            type: "address"
          },
          {
            internalType: "address",
            name: "communityFund",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "tipTxFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gatewayFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "baseTxFee",
            type: "uint256"
          }
        ],
        name: "creditGasFees",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "debitGasFees",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "aNumerator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "aDenominator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "bNumerator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "bDenominator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "exponent",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_decimals",
            type: "uint256"
          }
        ],
        name: "fractionMulExp",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "getBlockNumberFromHeader",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getEpochNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "getEpochNumberOfBlock",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getEpochSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getExchangeRegistryId",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getInflationParameters",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "getParentSealBitmap",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "getVerifiedSealBitmapFromHeader",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "hashHeader",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "string",
            name: "_name",
            type: "string"
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string"
          },
          {
            internalType: "uint8",
            name: "_decimals",
            type: "uint8"
          },
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "inflationRate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "inflationFactorUpdatePeriod",
            type: "uint256"
          },
          {
            internalType: "address[]",
            name: "initialBalanceAddresses",
            type: "address[]"
          },
          {
            internalType: "uint256[]",
            name: "initialBalanceValues",
            type: "uint256[]"
          },
          {
            internalType: "string",
            name: "exchangeIdentifier",
            type: "string"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "minQuorumSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minQuorumSizeInCurrentSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "mint",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "numberValidatorsInCurrentSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "numberValidatorsInSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "updatePeriod",
            type: "uint256"
          }
        ],
        name: "setInflationParameters",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "totalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "comment",
            type: "string"
          }
        ],
        name: "transferWithComment",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "units",
            type: "uint256"
          }
        ],
        name: "unitsToValue",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "validatorSignerAddressFromCurrentSet",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "validatorSignerAddressFromSet",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "valueToUnits",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      }
    ]
  },
  "Kolektivo Curacao Reserve Token": {
    address: "0x0000000000000000000000000000000000000000",
    abi: "ERC20"
  },
  "Kolektivo Treasury Token": {
    address: "0x0000000000000000000000000000000000000000",
    abi: "ERC20"
  },
  VestingVault: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "claim",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "depositFor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "token",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "unvestedFor",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "vestedFor",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      }
    ]
  }
}, bB = {
  name: xT,
  chainId: wT,
  contracts: TT
}, gB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: xT,
  chainId: wT,
  contracts: TT,
  default: bB
}, Symbol.toStringTag, { value: "Module" })), AT = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseUri",
        type: "string"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "TransferDisabled",
    type: "error"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "approved",
        type: "bool"
      }
    ],
    name: "ApprovalForAll",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "string",
        name: "uri",
        type: "string"
      }
    ],
    name: "TokenUriUpdated",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      },
      {
        indexed: !1,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]"
      }
    ],
    name: "TransferBatch",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "TransferSingle",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "string",
        name: "value",
        type: "string"
      },
      {
        indexed: !0,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "URI",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      }
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]"
      }
    ],
    name: "burnFromMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "address",
        name: "operator",
        type: "address"
      }
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]"
      }
    ],
    name: "mintToMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string"
      }
    ],
    name: "setBaseUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256"
      },
      {
        internalType: "string",
        name: "newUri",
        type: "string"
      }
    ],
    name: "setUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "tokenUris",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256"
      }
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
], CT = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "_avatar",
        type: "address"
      },
      {
        internalType: "address",
        name: "_target",
        type: "address"
      },
      {
        internalType: "address",
        name: "_badger",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "ArraysDifferentLength",
    type: "error"
  },
  {
    inputs: [],
    name: "ModuleTransactionFailed",
    type: "error"
  },
  {
    inputs: [],
    name: "NoMembership",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard_",
        type: "address"
      }
    ],
    name: "NotIERC165Compliant",
    type: "error"
  },
  {
    inputs: [],
    name: "RedundantUpdateOfState",
    type: "error"
  },
  {
    inputs: [],
    name: "SetUpModulesAlreadyCalled",
    type: "error"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousAvatar",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newAvatar",
        type: "address"
      }
    ],
    name: "AvatarSet",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "badgerAddress",
        type: "address"
      }
    ],
    name: "BadgerUpdated",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "guard",
        type: "address"
      }
    ],
    name: "ChangedGuard",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "initiator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "avatar",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "RolesModSetup",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "multisendAddress",
        type: "address"
      }
    ],
    name: "SetMultisendAddress",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousTarget",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newTarget",
        type: "address"
      }
    ],
    name: "TargetSet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "enum ExecutionOptions",
        name: "options",
        type: "uint8"
      }
    ],
    name: "allowTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "avatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "badger",
    outputs: [
      {
        internalType: "contract IBadger",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      }
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      }
    ],
    name: "execTransactionFromModuleReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "getGuard",
    outputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "multisend",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      }
    ],
    name: "revokeTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "enum ExecutionOptions",
        name: "options",
        type: "uint8"
      }
    ],
    name: "scopeAllowFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "bool[]",
        name: "isParamScoped",
        type: "bool[]"
      },
      {
        internalType: "enum ParameterType[]",
        name: "paramType",
        type: "uint8[]"
      },
      {
        internalType: "enum Comparison[]",
        name: "paramComp",
        type: "uint8[]"
      },
      {
        internalType: "bytes[]",
        name: "compValue",
        type: "bytes[]"
      },
      {
        internalType: "enum ExecutionOptions",
        name: "options",
        type: "uint8"
      }
    ],
    name: "scopeFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "enum ExecutionOptions",
        name: "options",
        type: "uint8"
      }
    ],
    name: "scopeFunctionExecutionOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "uint256",
        name: "paramIndex",
        type: "uint256"
      },
      {
        internalType: "enum ParameterType",
        name: "paramType",
        type: "uint8"
      },
      {
        internalType: "enum Comparison",
        name: "paramComp",
        type: "uint8"
      },
      {
        internalType: "bytes",
        name: "compValue",
        type: "bytes"
      }
    ],
    name: "scopeParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "uint256",
        name: "paramIndex",
        type: "uint256"
      },
      {
        internalType: "enum ParameterType",
        name: "paramType",
        type: "uint8"
      },
      {
        internalType: "bytes[]",
        name: "compValues",
        type: "bytes[]"
      }
    ],
    name: "scopeParameterAsOneOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      }
    ],
    name: "scopeRevokeFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      }
    ],
    name: "scopeTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address"
      }
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address"
      }
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_multisend",
        type: "address"
      }
    ],
    name: "setMultisend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address"
      }
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes"
      }
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "uint8",
        name: "paramIndex",
        type: "uint8"
      }
    ],
    name: "unscopeParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBadger",
        type: "address"
      }
    ],
    name: "updateBadger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
], ST = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "initiator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      }
    ],
    name: "ScopeGuardSetup",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetDelegateCallAllowedOnTarget",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetFallbackAllowedOnTarget",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetFunctionAllowedOnTarget",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetTargetAllowed",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "scoped",
        type: "bool"
      }
    ],
    name: "SetTargetScoped",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetValueAllowedOnTarget",
    type: "event"
  },
  {
    stateMutability: "nonpayable",
    type: "fallback"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "allowedTargets",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool"
      },
      {
        internalType: "bool",
        name: "scoped",
        type: "bool"
      },
      {
        internalType: "bool",
        name: "delegateCallAllowed",
        type: "bool"
      },
      {
        internalType: "bool",
        name: "fallbackAllowed",
        type: "bool"
      },
      {
        internalType: "bool",
        name: "valueAllowed",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    name: "checkAfterExecution",
    outputs: [],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "address payable",
        name: "",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "checkTransaction",
    outputs: [],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      }
    ],
    name: "isAllowedFunction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isAllowedTarget",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isAllowedToDelegateCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isScoped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isValueAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isfallbackAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setAllowedFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setDelegateCallAllowedOnTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setFallbackAllowedOnTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "scoped",
        type: "bool"
      }
    ],
    name: "setScoped",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setTargetAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializeParams",
        type: "bytes"
      }
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setValueAllowedOnTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
], ET = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "_avatar",
        type: "address"
      },
      {
        internalType: "address",
        name: "_target",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_cooldown",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "AlreadyDisabledModule",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "AlreadyEnabledModule",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "InvalidModule",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "NotAuthorized",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard_",
        type: "address"
      }
    ],
    name: "NotIERC165Compliant",
    type: "error"
  },
  {
    inputs: [],
    name: "RedundantUpdateOfState",
    type: "error"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousAvatar",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newAvatar",
        type: "address"
      }
    ],
    name: "AvatarSet",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "guard",
        type: "address"
      }
    ],
    name: "ChangedGuard",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "initiator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "avatar",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "DelaySetup",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "DisabledModule",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "EnabledModule",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "ExecutionFromModuleFailure",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "ExecutionFromModuleSuccess",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256"
      },
      {
        indexed: !0,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32"
      },
      {
        indexed: !1,
        internalType: "string",
        name: "uri",
        type: "string"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "salt",
        type: "uint256"
      }
    ],
    name: "SecretTransactionAdded",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        indexed: !1,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "_salt",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256"
      }
    ],
    name: "SecretTransactionExecuted",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousTarget",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newTarget",
        type: "address"
      }
    ],
    name: "TargetSet",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256"
      },
      {
        indexed: !0,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32"
      },
      {
        indexed: !1,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        indexed: !1,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "TransactionAdded",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        indexed: !1,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256"
      }
    ],
    name: "TransactionExecuted",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "uint256",
        name: "startingApprovedTrxNonce",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "numberOfTrxApproved",
        type: "uint256"
      }
    ],
    name: "TransactionsApproved",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "uint256",
        name: "startingVetoedTrxNonce",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "numberOfTrxVetoed",
        type: "uint256"
      }
    ],
    name: "TransactionsVetoed",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_transactions",
        type: "uint256"
      }
    ],
    name: "approveNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "approved",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "avatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevModule",
        type: "address"
      },
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "disableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "enableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedTransaction",
        type: "bytes32"
      },
      {
        internalType: "string",
        name: "uri",
        type: "string"
      }
    ],
    name: "enqueueSecretTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "execTransactionFromModuleReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256"
      }
    ],
    name: "executeNextSecretTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "executeNextTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "getGuard",
    outputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "start",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256"
      }
    ],
    name: "getModulesPaginated",
    outputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]"
      },
      {
        internalType: "address",
        name: "next",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256"
      }
    ],
    name: "getSecretTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256"
      }
    ],
    name: "getTxCreatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256"
      }
    ],
    name: "getTxHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address"
      }
    ],
    name: "isModuleEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "queuePointer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "salt",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address"
      }
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address"
      }
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address"
      }
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cooldown",
        type: "uint256"
      }
    ],
    name: "setTxCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256"
      }
    ],
    name: "setTxExpiration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes"
      }
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "skipExpired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "txCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "txCreatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "txExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "txHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "txNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newTxNonce",
        type: "uint256"
      }
    ],
    name: "vetoTransactionsTill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newTxNonce",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_transactions",
        type: "uint256"
      }
    ],
    name: "vetoTransactionsTillAndApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
], vB = {
  Badger: AT,
  BACRoles: CT,
  ScopeGuard: ST,
  SecretDelay: ET
}, xB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Badger: AT,
  BACRoles: CT,
  ScopeGuard: ST,
  SecretDelay: ET,
  default: vB
}, Symbol.toStringTag, { value: "Module" })), wB = {}, TB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: wB
}, Symbol.toStringTag, { value: "Module" })), _T = [
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256"
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8"
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32"
      }
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
], MT = [
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "approved",
        type: "bool"
      }
    ],
    name: "ApprovalForAll",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool"
      }
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
], AB = {
  ERC20: _T,
  ERC721: MT
}, CB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ERC20: _T,
  ERC721: MT,
  default: AB
}, Symbol.toStringTag, { value: "Module" }));
var SB = RT, P1 = 128, EB = 127, _B = ~EB, MB = Math.pow(2, 31);
function RT(n, e, t) {
  e = e || [], t = t || 0;
  for (var r = t; n >= MB; )
    e[t++] = n & 255 | P1, n /= 128;
  for (; n & _B; )
    e[t++] = n & 255 | P1, n >>>= 7;
  return e[t] = n | 0, RT.bytes = t - r + 1, e;
}
var RB = jh, PB = 128, O1 = 127;
function jh(n, r) {
  var t = 0, r = r || 0, i = 0, s = r, a, o = n.length;
  do {
    if (s >= o)
      throw jh.bytes = 0, new RangeError("Could not decode varint");
    a = n[s++], t += i < 28 ? (a & O1) << i : (a & O1) * Math.pow(2, i), i += 7;
  } while (a >= PB);
  return jh.bytes = s - r, t;
}
var OB = Math.pow(2, 7), IB = Math.pow(2, 14), kB = Math.pow(2, 21), DB = Math.pow(2, 28), BB = Math.pow(2, 35), NB = Math.pow(2, 42), FB = Math.pow(2, 49), LB = Math.pow(2, 56), $B = Math.pow(2, 63), UB = function(n) {
  return n < OB ? 1 : n < IB ? 2 : n < kB ? 3 : n < DB ? 4 : n < BB ? 5 : n < NB ? 6 : n < FB ? 7 : n < LB ? 8 : n < $B ? 9 : 10;
}, VB = {
  encode: SB,
  decode: RB,
  encodingLength: UB
}, Nd = VB;
const Gh = (n, e = 0) => [
  Nd.decode(n, e),
  Nd.decode.bytes
], Fd = (n, e, t = 0) => (Nd.encode(n, e, t), e), Ld = (n) => Nd.encodingLength(n), jB = (n, e) => {
  if (n === e)
    return !0;
  if (n.byteLength !== e.byteLength)
    return !1;
  for (let t = 0; t < n.byteLength; t++)
    if (n[t] !== e[t])
      return !1;
  return !0;
}, Xy = (n) => {
  if (n instanceof Uint8Array && n.constructor.name === "Uint8Array")
    return n;
  if (n instanceof ArrayBuffer)
    return new Uint8Array(n);
  if (ArrayBuffer.isView(n))
    return new Uint8Array(n.buffer, n.byteOffset, n.byteLength);
  throw new Error("Unknown type, must be binary type");
}, GB = (n, e) => {
  const t = e.byteLength, r = Ld(n), i = r + Ld(t), s = new Uint8Array(i + t);
  return Fd(n, s, 0), Fd(t, s, r), s.set(e, i), new Zy(n, t, e, s);
}, WB = (n) => {
  const e = Xy(n), [t, r] = Gh(e), [i, s] = Gh(e.subarray(r)), a = e.subarray(r + s);
  if (a.byteLength !== i)
    throw new Error("Incorrect length");
  return new Zy(t, i, a, e);
}, zB = (n, e) => n === e ? !0 : n.code === e.code && n.size === e.size && jB(n.bytes, e.bytes);
class Zy {
  constructor(e, t, r, i) {
    this.code = e, this.size = t, this.digest = r, this.bytes = i;
  }
}
function HB(n, e) {
  if (n.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), r = 0; r < t.length; r++)
    t[r] = 255;
  for (var i = 0; i < n.length; i++) {
    var s = n.charAt(i), a = s.charCodeAt(0);
    if (t[a] !== 255)
      throw new TypeError(s + " is ambiguous");
    t[a] = i;
  }
  var o = n.length, u = n.charAt(0), l = Math.log(o) / Math.log(256), c = Math.log(256) / Math.log(o);
  function p(g) {
    if (g instanceof Uint8Array || (ArrayBuffer.isView(g) ? g = new Uint8Array(g.buffer, g.byteOffset, g.byteLength) : Array.isArray(g) && (g = Uint8Array.from(g))), !(g instanceof Uint8Array))
      throw new TypeError("Expected Uint8Array");
    if (g.length === 0)
      return "";
    for (var w = 0, T = 0, _ = 0, I = g.length; _ !== I && g[_] === 0; )
      _++, w++;
    for (var N = (I - _) * c + 1 >>> 0, B = new Uint8Array(N); _ !== I; ) {
      for (var D = g[_], $ = 0, H = N - 1; (D !== 0 || $ < T) && H !== -1; H--, $++)
        D += 256 * B[H] >>> 0, B[H] = D % o >>> 0, D = D / o >>> 0;
      if (D !== 0)
        throw new Error("Non-zero carry");
      T = $, _++;
    }
    for (var j = N - T; j !== N && B[j] === 0; )
      j++;
    for (var Q = u.repeat(w); j < N; ++j)
      Q += n.charAt(B[j]);
    return Q;
  }
  function b(g) {
    if (typeof g != "string")
      throw new TypeError("Expected String");
    if (g.length === 0)
      return new Uint8Array();
    var w = 0;
    if (g[w] !== " ") {
      for (var T = 0, _ = 0; g[w] === u; )
        T++, w++;
      for (var I = (g.length - w) * l + 1 >>> 0, N = new Uint8Array(I); g[w]; ) {
        var B = t[g.charCodeAt(w)];
        if (B === 255)
          return;
        for (var D = 0, $ = I - 1; (B !== 0 || D < _) && $ !== -1; $--, D++)
          B += o * N[$] >>> 0, N[$] = B % 256 >>> 0, B = B / 256 >>> 0;
        if (B !== 0)
          throw new Error("Non-zero carry");
        _ = D, w++;
      }
      if (g[w] !== " ") {
        for (var H = I - _; H !== I && N[H] === 0; )
          H++;
        for (var j = new Uint8Array(T + (I - H)), Q = T; H !== I; )
          j[Q++] = N[H++];
        return j;
      }
    }
  }
  function A(g) {
    var w = b(g);
    if (w)
      return w;
    throw new Error(`Non-${e} character`);
  }
  return {
    encode: p,
    decodeUnsafe: b,
    decode: A
  };
}
var KB = HB, qB = KB;
class QB {
  constructor(e, t, r) {
    this.name = e, this.prefix = t, this.baseEncode = r;
  }
  encode(e) {
    if (e instanceof Uint8Array)
      return `${this.prefix}${this.baseEncode(e)}`;
    throw Error("Unknown type, must be binary type");
  }
}
class JB {
  constructor(e, t, r) {
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0)
      throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r;
  }
  decode(e) {
    if (typeof e == "string") {
      if (e.codePointAt(0) !== this.prefixCodePoint)
        throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e.slice(this.prefix.length));
    } else
      throw Error("Can only multibase decode strings");
  }
  or(e) {
    return PT(this, e);
  }
}
class YB {
  constructor(e) {
    this.decoders = e;
  }
  or(e) {
    return PT(this, e);
  }
  decode(e) {
    const t = e[0], r = this.decoders[t];
    if (r)
      return r.decode(e);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
}
const PT = (n, e) => new YB({
  ...n.decoders || { [n.prefix]: n },
  ...e.decoders || { [e.prefix]: e }
});
class XB {
  constructor(e, t, r, i) {
    this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = i, this.encoder = new QB(e, t, r), this.decoder = new JB(e, t, i);
  }
  encode(e) {
    return this.encoder.encode(e);
  }
  decode(e) {
    return this.decoder.decode(e);
  }
}
const OT = ({ name: n, prefix: e, encode: t, decode: r }) => new XB(n, e, t, r), IT = ({ prefix: n, name: e, alphabet: t }) => {
  const { encode: r, decode: i } = qB(t, e);
  return OT({
    prefix: n,
    name: e,
    encode: r,
    decode: (s) => Xy(i(s))
  });
}, ZB = (n, e, t, r) => {
  const i = {};
  for (let c = 0; c < e.length; ++c)
    i[e[c]] = c;
  let s = n.length;
  for (; n[s - 1] === "="; )
    --s;
  const a = new Uint8Array(s * t / 8 | 0);
  let o = 0, u = 0, l = 0;
  for (let c = 0; c < s; ++c) {
    const p = i[n[c]];
    if (p === void 0)
      throw new SyntaxError(`Non-${r} character`);
    u = u << t | p, o += t, o >= 8 && (o -= 8, a[l++] = 255 & u >> o);
  }
  if (o >= t || 255 & u << 8 - o)
    throw new SyntaxError("Unexpected end of data");
  return a;
}, eN = (n, e, t) => {
  const r = e[e.length - 1] === "=", i = (1 << t) - 1;
  let s = "", a = 0, o = 0;
  for (let u = 0; u < n.length; ++u)
    for (o = o << 8 | n[u], a += 8; a > t; )
      a -= t, s += e[i & o >> a];
  if (a && (s += e[i & o << t - a]), r)
    for (; s.length * t & 7; )
      s += "=";
  return s;
}, Ki = ({ name: n, prefix: e, bitsPerChar: t, alphabet: r }) => OT({
  prefix: e,
  name: n,
  encode(i) {
    return eN(i, r, t);
  },
  decode(i) {
    return ZB(i, r, t, n);
  }
}), ls = IT({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
IT({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});
const kc = Ki({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
Ki({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
Ki({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
Ki({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
Ki({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
Ki({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
Ki({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
Ki({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
Ki({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});
class ln {
  constructor(e, t, r, i) {
    this.code = t, this.version = e, this.multihash = r, this.bytes = i, this.byteOffset = i.byteOffset, this.byteLength = i.byteLength, this.asCID = this, this._baseCache = /* @__PURE__ */ new Map(), Object.defineProperties(this, {
      byteOffset: dc,
      byteLength: dc,
      code: cc,
      version: cc,
      multihash: cc,
      bytes: cc,
      _baseCache: dc,
      asCID: dc
    });
  }
  toV0() {
    switch (this.version) {
      case 0:
        return this;
      default: {
        const { code: e, multihash: t } = this;
        if (e !== du)
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        if (t.code !== iN)
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        return ln.createV0(t);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: e, digest: t } = this.multihash, r = GB(e, t);
        return ln.createV1(this.code, r);
      }
      case 1:
        return this;
      default:
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
    }
  }
  equals(e) {
    return e && this.code === e.code && this.version === e.version && zB(this.multihash, e.multihash);
  }
  toString(e) {
    const { bytes: t, version: r, _baseCache: i } = this;
    switch (r) {
      case 0:
        return nN(t, i, e || ls.encoder);
      default:
        return rN(t, i, e || kc.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(e) {
    return aN(/^0\.0/, oN), !!(e && (e[k1] || e.asCID === e));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(e) {
    if (e instanceof ln)
      return e;
    if (e != null && e.asCID === e) {
      const { version: t, code: r, multihash: i, bytes: s } = e;
      return new ln(t, r, i, s || I1(t, r, i.bytes));
    } else if (e != null && e[k1] === !0) {
      const { version: t, multihash: r, code: i } = e, s = WB(r);
      return ln.create(t, i, s);
    } else
      return null;
  }
  static create(e, t, r) {
    if (typeof t != "number")
      throw new Error("String codecs are no longer supported");
    switch (e) {
      case 0: {
        if (t !== du)
          throw new Error(`Version 0 CID must use dag-pb (code: ${du}) block encoding`);
        return new ln(e, t, r, r.bytes);
      }
      case 1: {
        const i = I1(e, t, r.bytes);
        return new ln(e, t, r, i);
      }
      default:
        throw new Error("Invalid version");
    }
  }
  static createV0(e) {
    return ln.create(0, du, e);
  }
  static createV1(e, t) {
    return ln.create(1, e, t);
  }
  static decode(e) {
    const [t, r] = ln.decodeFirst(e);
    if (r.length)
      throw new Error("Incorrect length");
    return t;
  }
  static decodeFirst(e) {
    const t = ln.inspectBytes(e), r = t.size - t.multihashSize, i = Xy(e.subarray(r, r + t.multihashSize));
    if (i.byteLength !== t.multihashSize)
      throw new Error("Incorrect length");
    const s = i.subarray(t.multihashSize - t.digestSize), a = new Zy(t.multihashCode, t.digestSize, s, i);
    return [
      t.version === 0 ? ln.createV0(a) : ln.createV1(t.codec, a),
      e.subarray(t.size)
    ];
  }
  static inspectBytes(e) {
    let t = 0;
    const r = () => {
      const [p, b] = Gh(e.subarray(t));
      return t += b, p;
    };
    let i = r(), s = du;
    if (i === 18 ? (i = 0, t = 0) : i === 1 && (s = r()), i !== 0 && i !== 1)
      throw new RangeError(`Invalid CID version ${i}`);
    const a = t, o = r(), u = r(), l = t + u, c = l - a;
    return {
      version: i,
      codec: s,
      multihashCode: o,
      digestSize: u,
      multihashSize: c,
      size: l
    };
  }
  static parse(e, t) {
    const [r, i] = tN(e, t), s = ln.decode(i);
    return s._baseCache.set(r, e), s;
  }
}
const tN = (n, e) => {
  switch (n[0]) {
    case "Q": {
      const t = e || ls;
      return [
        ls.prefix,
        t.decode(`${ls.prefix}${n}`)
      ];
    }
    case ls.prefix: {
      const t = e || ls;
      return [
        ls.prefix,
        t.decode(n)
      ];
    }
    case kc.prefix: {
      const t = e || kc;
      return [
        kc.prefix,
        t.decode(n)
      ];
    }
    default: {
      if (e == null)
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      return [
        n[0],
        e.decode(n)
      ];
    }
  }
}, nN = (n, e, t) => {
  const { prefix: r } = t;
  if (r !== ls.prefix)
    throw Error(`Cannot string encode V0 in ${t.name} encoding`);
  const i = e.get(r);
  if (i == null) {
    const s = t.encode(n).slice(1);
    return e.set(r, s), s;
  } else
    return i;
}, rN = (n, e, t) => {
  const { prefix: r } = t, i = e.get(r);
  if (i == null) {
    const s = t.encode(n);
    return e.set(r, s), s;
  } else
    return i;
}, du = 112, iN = 18, I1 = (n, e, t) => {
  const r = Ld(n), i = r + Ld(e), s = new Uint8Array(i + t.byteLength);
  return Fd(n, s, 0), Fd(e, s, r), s.set(t, i), s;
}, k1 = Symbol.for("@ipld/js-cid/CID"), cc = {
  writable: !1,
  configurable: !1,
  enumerable: !0
}, dc = {
  writable: !1,
  enumerable: !1,
  configurable: !1
}, sN = "0.0.0-dev", aN = (n, e) => {
  if (n.test(sN))
    console.warn(e);
  else
    throw new Error(e);
}, oN = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`, uN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CID: ln
}, Symbol.toStringTag, { value: "Module" }));
function kT(n) {
  return globalThis.Buffer != null ? new Uint8Array(n.buffer, n.byteOffset, n.byteLength) : n;
}
function DT(n = 0) {
  return globalThis.Buffer?.allocUnsafe != null ? kT(globalThis.Buffer.allocUnsafe(n)) : new Uint8Array(n);
}
function lN(n, e) {
  e == null && (e = n.reduce((i, s) => i + s.length, 0));
  const t = DT(e);
  let r = 0;
  for (const i of n)
    t.set(i, r), r += i.length;
  return kT(t);
}
const cN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  concat: lN
}, Symbol.toStringTag, { value: "Module" }));
function dN(n, e) {
  if (n.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), r = 0; r < t.length; r++)
    t[r] = 255;
  for (var i = 0; i < n.length; i++) {
    var s = n.charAt(i), a = s.charCodeAt(0);
    if (t[a] !== 255)
      throw new TypeError(s + " is ambiguous");
    t[a] = i;
  }
  var o = n.length, u = n.charAt(0), l = Math.log(o) / Math.log(256), c = Math.log(256) / Math.log(o);
  function p(g) {
    if (g instanceof Uint8Array || (ArrayBuffer.isView(g) ? g = new Uint8Array(g.buffer, g.byteOffset, g.byteLength) : Array.isArray(g) && (g = Uint8Array.from(g))), !(g instanceof Uint8Array))
      throw new TypeError("Expected Uint8Array");
    if (g.length === 0)
      return "";
    for (var w = 0, T = 0, _ = 0, I = g.length; _ !== I && g[_] === 0; )
      _++, w++;
    for (var N = (I - _) * c + 1 >>> 0, B = new Uint8Array(N); _ !== I; ) {
      for (var D = g[_], $ = 0, H = N - 1; (D !== 0 || $ < T) && H !== -1; H--, $++)
        D += 256 * B[H] >>> 0, B[H] = D % o >>> 0, D = D / o >>> 0;
      if (D !== 0)
        throw new Error("Non-zero carry");
      T = $, _++;
    }
    for (var j = N - T; j !== N && B[j] === 0; )
      j++;
    for (var Q = u.repeat(w); j < N; ++j)
      Q += n.charAt(B[j]);
    return Q;
  }
  function b(g) {
    if (typeof g != "string")
      throw new TypeError("Expected String");
    if (g.length === 0)
      return new Uint8Array();
    var w = 0;
    if (g[w] !== " ") {
      for (var T = 0, _ = 0; g[w] === u; )
        T++, w++;
      for (var I = (g.length - w) * l + 1 >>> 0, N = new Uint8Array(I); g[w]; ) {
        var B = t[g.charCodeAt(w)];
        if (B === 255)
          return;
        for (var D = 0, $ = I - 1; (B !== 0 || D < _) && $ !== -1; $--, D++)
          B += o * N[$] >>> 0, N[$] = B % 256 >>> 0, B = B / 256 >>> 0;
        if (B !== 0)
          throw new Error("Non-zero carry");
        _ = D, w++;
      }
      if (g[w] !== " ") {
        for (var H = I - _; H !== I && N[H] === 0; )
          H++;
        for (var j = new Uint8Array(T + (I - H)), Q = T; H !== I; )
          j[Q++] = N[H++];
        return j;
      }
    }
  }
  function A(g) {
    var w = b(g);
    if (w)
      return w;
    throw new Error(`Non-${e} character`);
  }
  return {
    encode: p,
    decodeUnsafe: b,
    decode: A
  };
}
var fN = dN, pN = fN;
const BT = (n) => {
  if (n instanceof Uint8Array && n.constructor.name === "Uint8Array")
    return n;
  if (n instanceof ArrayBuffer)
    return new Uint8Array(n);
  if (ArrayBuffer.isView(n))
    return new Uint8Array(n.buffer, n.byteOffset, n.byteLength);
  throw new Error("Unknown type, must be binary type");
}, hN = (n) => new TextEncoder().encode(n), yN = (n) => new TextDecoder().decode(n);
class mN {
  constructor(e, t, r) {
    this.name = e, this.prefix = t, this.baseEncode = r;
  }
  encode(e) {
    if (e instanceof Uint8Array)
      return `${this.prefix}${this.baseEncode(e)}`;
    throw Error("Unknown type, must be binary type");
  }
}
class bN {
  constructor(e, t, r) {
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0)
      throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r;
  }
  decode(e) {
    if (typeof e == "string") {
      if (e.codePointAt(0) !== this.prefixCodePoint)
        throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e.slice(this.prefix.length));
    } else
      throw Error("Can only multibase decode strings");
  }
  or(e) {
    return NT(this, e);
  }
}
class gN {
  constructor(e) {
    this.decoders = e;
  }
  or(e) {
    return NT(this, e);
  }
  decode(e) {
    const t = e[0], r = this.decoders[t];
    if (r)
      return r.decode(e);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
}
const NT = (n, e) => new gN({
  ...n.decoders || { [n.prefix]: n },
  ...e.decoders || { [e.prefix]: e }
});
class vN {
  constructor(e, t, r, i) {
    this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = i, this.encoder = new mN(e, t, r), this.decoder = new bN(e, t, i);
  }
  encode(e) {
    return this.encoder.encode(e);
  }
  decode(e) {
    return this.decoder.decode(e);
  }
}
const Sf = ({ name: n, prefix: e, encode: t, decode: r }) => new vN(n, e, t, r), Ul = ({ prefix: n, name: e, alphabet: t }) => {
  const { encode: r, decode: i } = pN(t, e);
  return Sf({
    prefix: n,
    name: e,
    encode: r,
    decode: (s) => BT(i(s))
  });
}, xN = (n, e, t, r) => {
  const i = {};
  for (let c = 0; c < e.length; ++c)
    i[e[c]] = c;
  let s = n.length;
  for (; n[s - 1] === "="; )
    --s;
  const a = new Uint8Array(s * t / 8 | 0);
  let o = 0, u = 0, l = 0;
  for (let c = 0; c < s; ++c) {
    const p = i[n[c]];
    if (p === void 0)
      throw new SyntaxError(`Non-${r} character`);
    u = u << t | p, o += t, o >= 8 && (o -= 8, a[l++] = 255 & u >> o);
  }
  if (o >= t || 255 & u << 8 - o)
    throw new SyntaxError("Unexpected end of data");
  return a;
}, wN = (n, e, t) => {
  const r = e[e.length - 1] === "=", i = (1 << t) - 1;
  let s = "", a = 0, o = 0;
  for (let u = 0; u < n.length; ++u)
    for (o = o << 8 | n[u], a += 8; a > t; )
      a -= t, s += e[i & o >> a];
  if (a && (s += e[i & o << t - a]), r)
    for (; s.length * t & 7; )
      s += "=";
  return s;
}, on = ({ name: n, prefix: e, bitsPerChar: t, alphabet: r }) => Sf({
  prefix: e,
  name: n,
  encode(i) {
    return wN(i, r, t);
  },
  decode(i) {
    return xN(i, r, t, n);
  }
}), TN = Sf({
  prefix: "\0",
  name: "identity",
  encode: (n) => yN(n),
  decode: (n) => hN(n)
}), AN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  identity: TN
}, Symbol.toStringTag, { value: "Module" })), CN = on({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
}), SN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base2: CN
}, Symbol.toStringTag, { value: "Module" })), EN = on({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
}), _N = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base8: EN
}, Symbol.toStringTag, { value: "Module" })), MN = Ul({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
}), RN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base10: MN
}, Symbol.toStringTag, { value: "Module" })), PN = on({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
}), ON = on({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
}), IN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base16: PN,
  base16upper: ON
}, Symbol.toStringTag, { value: "Module" })), kN = on({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
}), DN = on({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
}), BN = on({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
}), NN = on({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
}), FN = on({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
}), LN = on({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
}), $N = on({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
}), UN = on({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
}), VN = on({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
}), jN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base32: kN,
  base32upper: DN,
  base32pad: BN,
  base32padupper: NN,
  base32hex: FN,
  base32hexupper: LN,
  base32hexpad: $N,
  base32hexpadupper: UN,
  base32z: VN
}, Symbol.toStringTag, { value: "Module" })), GN = Ul({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
}), WN = Ul({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
}), zN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base36: GN,
  base36upper: WN
}, Symbol.toStringTag, { value: "Module" })), HN = Ul({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
}), KN = Ul({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
}), qN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base58btc: HN,
  base58flickr: KN
}, Symbol.toStringTag, { value: "Module" })), QN = on({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
}), JN = on({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
}), YN = on({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
}), XN = on({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
}), ZN = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base64: QN,
  base64pad: JN,
  base64url: YN,
  base64urlpad: XN
}, Symbol.toStringTag, { value: "Module" })), FT = Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"), eF = FT.reduce((n, e, t) => (n[t] = e, n), []), tF = FT.reduce((n, e, t) => (n[e.codePointAt(0)] = t, n), []);
function nF(n) {
  return n.reduce((e, t) => (e += eF[t], e), "");
}
function rF(n) {
  const e = [];
  for (const t of n) {
    const r = tF[t.codePointAt(0)];
    if (r === void 0)
      throw new Error(`Non-base256emoji character: ${t}`);
    e.push(r);
  }
  return new Uint8Array(e);
}
const iF = Sf({
  prefix: "\u{1F680}",
  name: "base256emoji",
  encode: nF,
  decode: rF
}), sF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base256emoji: iF
}, Symbol.toStringTag, { value: "Module" }));
var aF = LT, D1 = 128, oF = 127, uF = ~oF, lF = Math.pow(2, 31);
function LT(n, e, t) {
  e = e || [], t = t || 0;
  for (var r = t; n >= lF; )
    e[t++] = n & 255 | D1, n /= 128;
  for (; n & uF; )
    e[t++] = n & 255 | D1, n >>>= 7;
  return e[t] = n | 0, LT.bytes = t - r + 1, e;
}
var cF = Wh, dF = 128, B1 = 127;
function Wh(n, r) {
  var t = 0, r = r || 0, i = 0, s = r, a, o = n.length;
  do {
    if (s >= o)
      throw Wh.bytes = 0, new RangeError("Could not decode varint");
    a = n[s++], t += i < 28 ? (a & B1) << i : (a & B1) * Math.pow(2, i), i += 7;
  } while (a >= dF);
  return Wh.bytes = s - r, t;
}
var fF = Math.pow(2, 7), pF = Math.pow(2, 14), hF = Math.pow(2, 21), yF = Math.pow(2, 28), mF = Math.pow(2, 35), bF = Math.pow(2, 42), gF = Math.pow(2, 49), vF = Math.pow(2, 56), xF = Math.pow(2, 63), wF = function(n) {
  return n < fF ? 1 : n < pF ? 2 : n < hF ? 3 : n < yF ? 4 : n < mF ? 5 : n < bF ? 6 : n < gF ? 7 : n < vF ? 8 : n < xF ? 9 : 10;
}, TF = {
  encode: aF,
  decode: cF,
  encodingLength: wF
}, $T = TF;
const N1 = (n, e, t = 0) => ($T.encode(n, e, t), e), F1 = (n) => $T.encodingLength(n), zh = (n, e) => {
  const t = e.byteLength, r = F1(n), i = r + F1(t), s = new Uint8Array(i + t);
  return N1(n, s, 0), N1(t, s, r), s.set(e, i), new AF(n, t, e, s);
};
class AF {
  constructor(e, t, r, i) {
    this.code = e, this.size = t, this.digest = r, this.bytes = i;
  }
}
const UT = ({ name: n, code: e, encode: t }) => new CF(n, e, t);
class CF {
  constructor(e, t, r) {
    this.name = e, this.code = t, this.encode = r;
  }
  digest(e) {
    if (e instanceof Uint8Array) {
      const t = this.encode(e);
      return t instanceof Uint8Array ? zh(this.code, t) : t.then((r) => zh(this.code, r));
    } else
      throw Error("Unknown type, must be binary type");
  }
}
const VT = (n) => async (e) => new Uint8Array(await crypto.subtle.digest(n, e)), SF = UT({
  name: "sha2-256",
  code: 18,
  encode: VT("SHA-256")
}), EF = UT({
  name: "sha2-512",
  code: 19,
  encode: VT("SHA-512")
}), _F = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  sha256: SF,
  sha512: EF
}, Symbol.toStringTag, { value: "Module" })), jT = 0, MF = "identity", GT = BT, RF = (n) => zh(jT, GT(n)), PF = { code: jT, name: MF, encode: GT, digest: RF }, OF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  identity: PF
}, Symbol.toStringTag, { value: "Module" }));
new TextEncoder();
new TextDecoder();
const L1 = { ...AN, ...SN, ..._N, ...RN, ...IN, ...jN, ...zN, ...qN, ...ZN, ...sF };
({ ..._F, ...OF });
function WT(n, e, t, r) {
  return {
    name: n,
    prefix: e,
    encoder: {
      name: n,
      prefix: e,
      encode: t
    },
    decoder: {
      decode: r
    }
  };
}
const $1 = WT("utf8", "u", (n) => "u" + new TextDecoder("utf8").decode(n), (n) => new TextEncoder().encode(n.substring(1))), Fp = WT("ascii", "a", (n) => {
  let e = "a";
  for (let t = 0; t < n.length; t++)
    e += String.fromCharCode(n[t]);
  return e;
}, (n) => {
  n = n.substring(1);
  const e = DT(n.length);
  for (let t = 0; t < n.length; t++)
    e[t] = n.charCodeAt(t);
  return e;
}), IF = {
  utf8: $1,
  "utf-8": $1,
  hex: L1.base16,
  latin1: Fp,
  ascii: Fp,
  binary: Fp,
  ...L1
};
function kF(n, e = "utf8") {
  const t = IF[e];
  if (t == null)
    throw new Error(`Unsupported encoding "${e}"`);
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(n.buffer, n.byteOffset, n.byteLength).toString("utf8") : t.encoder.encode(n).substring(1);
}
const DF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  toString: kF
}, Symbol.toStringTag, { value: "Module" }));

function Vn(n) {
  return typeof n == "object" && n !== null || typeof n == "function";
}
function Hh(n) {
  return n == null;
}
let Bu = /* @__PURE__ */ new WeakMap();
const hn = (n, e, t, r, i) => new TypeError(`${n}(${e.map(String).join(",")}) - Expected '${t}' to be of type ${i}, but got: ${Object.prototype.toString.call(r)} (${String(r)})`);
function Ms(n) {
  switch (typeof n) {
    case "undefined":
    case "string":
    case "symbol":
      return n;
    default:
      return `${n}`;
  }
}
function zT(n) {
  switch (typeof n) {
    case "string":
    case "symbol":
      return n;
    default:
      return `${n}`;
  }
}
function HT(n) {
  switch (typeof n) {
    case "undefined":
    case "string":
    case "symbol":
      return n;
    default:
      throw new TypeError(`Invalid metadata propertyKey: ${n}.`);
  }
}
function pl(n, e, t) {
  let r = Bu.get(n);
  if (r === void 0) {
    if (!t)
      return;
    r = /* @__PURE__ */ new Map(), Bu.set(n, r);
  }
  let i = r.get(e);
  if (i === void 0) {
    if (!t)
      return;
    i = /* @__PURE__ */ new Map(), r.set(e, i);
  }
  return i;
}
function Kh(n, e, t) {
  const r = pl(e, t, !1);
  return r === void 0 ? !1 : r.has(n);
}
function U1(n, e, t) {
  if (Kh(n, e, t))
    return !0;
  const r = qh(e);
  return r !== null ? U1(n, r, t) : !1;
}
function V1(n, e, t) {
  const r = pl(e, t, !1);
  if (r !== void 0)
    return r.get(n);
}
function j1(n, e, t) {
  if (Kh(n, e, t))
    return V1(n, e, t);
  const r = qh(e);
  if (r !== null)
    return j1(n, r, t);
}
function G1(n, e, t, r) {
  pl(t, r, !0).set(n, e);
}
function W1(n, e) {
  const t = [], r = pl(n, e, !1);
  if (r === void 0)
    return t;
  const i = r.keys();
  let s = 0;
  for (const a of i)
    t[s] = a, ++s;
  return t;
}
function z1(n, e) {
  const t = W1(n, e), r = qh(n);
  if (r === null)
    return t;
  const i = z1(r, e), s = t.length;
  if (s === 0)
    return i;
  const a = i.length;
  if (a === 0)
    return t;
  const o = /* @__PURE__ */ new Set(), u = [];
  let l = 0, c;
  for (let p = 0; p < s; ++p)
    c = t[p], o.has(c) || (o.add(c), u[l] = c, ++l);
  for (let p = 0; p < a; ++p)
    c = i[p], o.has(c) || (o.add(c), u[l] = c, ++l);
  return u;
}
function KT(n, e, t) {
  const r = pl(n, t, !1);
  return r === void 0 ? !1 : r.delete(e);
}
function qT(n, e) {
  function t(r, i) {
    if (!Vn(r))
      throw hn("@metadata", [n, e, r, i], "target", r, "Object or Function");
    G1(n, e, r, HT(i));
  }
  return t;
}
function QT(n, e, t, r) {
  if (t !== void 0) {
    if (!Array.isArray(n))
      throw hn("Metadata.decorate", [n, e, t, r], "decorators", n, "Array");
    if (!Vn(e))
      throw hn("Metadata.decorate", [n, e, t, r], "target", e, "Object or Function");
    if (!Vn(r) && !Hh(r))
      throw hn("Metadata.decorate", [n, e, t, r], "attributes", r, "Object, Function, null, or undefined");
    return r === null && (r = void 0), t = zT(t), YT(n, e, t, r);
  } else {
    if (!Array.isArray(n))
      throw hn("Metadata.decorate", [n, e, t, r], "decorators", n, "Array");
    if (typeof e != "function")
      throw hn("Metadata.decorate", [n, e, t, r], "target", e, "Function");
    return JT(n, e);
  }
}
function JT(n, e) {
  for (let t = n.length - 1; t >= 0; --t) {
    const r = n[t], i = r(e);
    if (!Hh(i)) {
      if (typeof i != "function")
        throw hn("DecorateConstructor", [n, e], "decorated", i, "Function, null, or undefined");
      e = i;
    }
  }
  return e;
}
function YT(n, e, t, r) {
  for (let i = n.length - 1; i >= 0; --i) {
    const s = n[i], a = s(e, t, r);
    if (!Hh(a)) {
      if (!Vn(a))
        throw hn("DecorateProperty", [n, e, t, r], "decorated", a, "Object, Function, null, or undefined");
      r = a;
    }
  }
  return r;
}
function H1(n, e, t, r) {
  if (!Vn(t))
    throw hn("Metadata.define", [n, e, t, r], "target", t, "Object or Function");
  return G1(n, e, t, Ms(r));
}
function K1(n, e, t) {
  if (!Vn(e))
    throw hn("Metadata.has", [n, e, t], "target", e, "Object or Function");
  return U1(n, e, Ms(t));
}
function q1(n, e, t) {
  if (!Vn(e))
    throw hn("Metadata.hasOwn", [n, e, t], "target", e, "Object or Function");
  return Kh(n, e, Ms(t));
}
function Q1(n, e, t) {
  if (!Vn(e))
    throw hn("Metadata.get", [n, e, t], "target", e, "Object or Function");
  return j1(n, e, Ms(t));
}
function J1(n, e, t) {
  if (!Vn(e))
    throw hn("Metadata.getOwn", [n, e, t], "target", e, "Object or Function");
  return V1(n, e, Ms(t));
}
function Y1(n, e) {
  if (!Vn(n))
    throw hn("Metadata.getKeys", [n, e], "target", n, "Object or Function");
  return z1(n, Ms(e));
}
function X1(n, e) {
  if (!Vn(n))
    throw hn("Metadata.getOwnKeys", [n, e], "target", n, "Object or Function");
  return W1(n, Ms(e));
}
function Z1(n, e, t) {
  if (!Vn(e))
    throw hn("Metadata.delete", [n, e, t], "target", e, "Object or Function");
  return KT(e, n, Ms(t));
}
const oi = {
  define: H1,
  has: K1,
  hasOwn: q1,
  get: Q1,
  getOwn: J1,
  getKeys: Y1,
  getOwnKeys: X1,
  delete: Z1
}, XT = (n, e, t, r, i) => {
  if (!Reflect.defineProperty(n, e, {
    writable: r,
    enumerable: !1,
    configurable: i,
    value: t
  }))
    throw Lp(`AUR1000:${e}`);
}, yu = "[[$au]]", ZT = (n) => yu in n, em = (n, e, t) => [[yu, Bu], ["metadata", qT], ["decorate", QT], ["defineMetadata", H1], ["hasMetadata", K1], ["hasOwnMetadata", q1], ["getMetadata", Q1], ["getOwnMetadata", J1], ["getMetadataKeys", Y1], ["getOwnMetadataKeys", X1], ["deleteMetadata", Z1]].forEach(([r, i]) => XT(n, r, i, e, t)), e3 = (n, e = !0, t = !1, r = !0, i = !0) => {
  if (ZT(n)) {
    if (n[yu] === Bu)
      return;
    if (n[yu] instanceof WeakMap) {
      Bu = n[yu];
      return;
    }
    throw Lp("AUR1001");
  }
  const s = "metadata decorate defineMetadata hasMetadata hasOwnMetadata getMetadata getOwnMetadata getMetadataKeys getOwnMetadataKeys deleteMetadata".split(" ").filter((a) => a in Reflect);
  if (s.length > 0)
    if (e) {
      const a = s.map(function(o) {
        const u = `${Reflect[o].toString().slice(0, 100)}...`;
        return `${o}:
${u}`;
      }).join(`

`);
      throw Lp(`AUR1002:${a}`);
    } else
      t && em(n, r, i);
  else
    em(n, r, i);
}, Lp = (n) => new Error(n), qh = Object.getPrototypeOf, Oo = String, Ln = oi.getOwn, t3 = oi.hasOwn, ws = oi.define, Ri = (n) => typeof n == "function", Dc = (n) => typeof n == "string", Si = () => /* @__PURE__ */ Object.create(null), zt = (n) => new Error(n), Vl = {}, Nu = (n) => {
  switch (typeof n) {
    case "number":
      return n >= 0 && (0 | n) === n;
    case "string": {
      const e = Vl[n];
      if (e !== void 0)
        return e;
      const t = n.length;
      if (t === 0)
        return Vl[n] = !1;
      let r = 0, i = 0;
      for (; i < t; ++i)
        if (r = un(n, i), i === 0 && r === 48 && t > 1 || r < 48 || r > 57)
          return Vl[n] = !1;
      return Vl[n] = !0;
    }
    default:
      return !1;
  }
}, ev = function() {
  const n = Object.assign(Si(), {
    0: !0,
    1: !0,
    2: !0,
    3: !0,
    4: !0,
    5: !0,
    6: !0,
    7: !0,
    8: !0,
    9: !0
  }), e = (t) => t === "" ? 0 : t !== t.toUpperCase() ? 3 : t !== t.toLowerCase() ? 2 : n[t] === !0 ? 1 : 0;
  return (t, r) => {
    const i = t.length;
    if (i === 0)
      return t;
    let s = !1, a = "", o, u = "", l = 0, c = t.charAt(0), p = e(c), b = 0;
    for (; b < i; ++b)
      o = l, u = c, l = p, c = t.charAt(b + 1), p = e(c), l === 0 ? a.length > 0 && (s = !0) : (!s && a.length > 0 && l === 2 && (s = o === 3 || p === 3), a += r(u, s), s = !1);
    return a;
  };
}(), Zn = function() {
  const n = Si(), e = (t, r) => r ? t.toUpperCase() : t.toLowerCase();
  return (t) => {
    let r = n[t];
    return r === void 0 && (r = n[t] = ev(t, e)), r;
  };
}(), n3 = function() {
  const n = Si();
  return (e) => {
    let t = n[e];
    return t === void 0 && (t = Zn(e), t.length > 0 && (t = t[0].toUpperCase() + t.slice(1)), n[e] = t), t;
  };
}(), tv = function() {
  const n = Si(), e = (t, r) => r ? `-${t.toLowerCase()}` : t.toLowerCase();
  return (t) => {
    let r = n[t];
    return r === void 0 && (r = n[t] = ev(t, e)), r;
  };
}(), Uf = (n) => {
  const e = n.length, t = Array(e);
  let r = 0;
  for (; r < e; ++r)
    t[r] = n[r];
  return t;
}, Io = (n, e, t) => ({
  configurable: !0,
  enumerable: t.enumerable,
  get() {
    const r = t.value.bind(this);
    return Reflect.defineProperty(this, e, {
      value: r,
      writable: !0,
      configurable: !0,
      enumerable: t.enumerable
    }), r;
  }
}), Ft = (...n) => {
  const e = [];
  let t = 0;
  const r = n.length;
  let i = 0, s, a = 0;
  for (; a < r; ++a)
    if (s = n[a], s !== void 0) {
      i = s.length;
      let o = 0;
      for (; o < i; ++o)
        e[t++] = s[o];
    }
  return e;
}, fn = (...n) => {
  const e = n.length;
  let t, r = 0;
  for (; e > r; ++r)
    if (t = n[r], t !== void 0)
      return t;
  throw zt("No default value found");
}, nv = function() {
  const n = Function.prototype, e = Object.getPrototypeOf, t = /* @__PURE__ */ new WeakMap();
  let r = n, i = 0, s;
  return function(a) {
    if (s = t.get(a), s === void 0)
      for (t.set(a, s = [r = a]), i = 0; (r = e(r)) !== n; )
        s[++i] = r;
    return s;
  };
}();
function Fu(...n) {
  return Object.assign(Si(), ...n);
}
const tm = function() {
  const n = /* @__PURE__ */ new WeakMap();
  let e = !1, t = "", r = 0;
  return (i) => (e = n.get(i), e === void 0 && (t = i.toString(), r = t.length, e = r >= 29 && r <= 100 && un(t, r - 1) === 125 && un(t, r - 2) <= 32 && un(t, r - 3) === 93 && un(t, r - 4) === 101 && un(t, r - 5) === 100 && un(t, r - 6) === 111 && un(t, r - 7) === 99 && un(t, r - 8) === 32 && un(t, r - 9) === 101 && un(t, r - 10) === 118 && un(t, r - 11) === 105 && un(t, r - 12) === 116 && un(t, r - 13) === 97 && un(t, r - 14) === 110 && un(t, r - 15) === 88, n.set(i, e)), e);
}(), Me = (n, e) => n instanceof Promise ? n.then(e) : e(n), qt = (...n) => {
  let e, t, r, i = 0, s = n.length;
  for (; i < s; ++i)
    e = n[i], (e = n[i]) instanceof Promise && (t === void 0 ? t = e : r === void 0 ? r = [t, e] : r.push(e));
  return r === void 0 ? t : Promise.all(r);
}, un = (n, e) => n.charCodeAt(e), la = "au:annotation", Ei = (n, e) => e === void 0 ? `${la}:${n}` : `${la}:${n}:${e}`, Qh = (n, e) => {
  const t = Ln(la, n);
  t === void 0 ? ws(la, [e], n) : t.push(e);
}, r3 = Object.freeze({
  name: "au:annotation",
  appendTo: Qh,
  set(n, e, t) {
    ws(Ei(e), t, n);
  },
  get: (n, e) => Ln(Ei(e), n),
  getKeys(n) {
    let e = Ln(la, n);
    return e === void 0 && ws(la, e = [], n), e;
  },
  isKey: (n) => n.startsWith(la),
  keyFor: Ei
}), Ur = "au:resource", i3 = Object.freeze({
  name: Ur,
  appendTo(n, e) {
    const t = Ln(Ur, n);
    t === void 0 ? ws(Ur, [e], n) : t.push(e);
  },
  has: (n) => t3(Ur, n),
  getAll(n) {
    const e = Ln(Ur, n);
    return e === void 0 ? Le : e.map((t) => Ln(t, n));
  },
  getKeys(n) {
    let e = Ln(Ur, n);
    return e === void 0 && ws(Ur, e = [], n), e;
  },
  isKey: (n) => n.startsWith(Ur),
  keyFor(n, e) {
    return e === void 0 ? `${Ur}:${n}` : `${Ur}:${n}:${e}`;
  }
}), Pr = {
  annotation: r3,
  resource: i3
}, rv = Object.prototype.hasOwnProperty;
function Tr(n, e, t, r) {
  let i = Ln(Ei(n), t);
  return i === void 0 ? (i = e[n], i === void 0 ? (i = t[n], i === void 0 || !rv.call(t, n) ? r() : i) : i) : i;
}
function ir(n, e, t) {
  let r = Ln(Ei(n), e);
  return r === void 0 ? (r = e[n], r === void 0 || !rv.call(e, n) ? t() : r) : r;
}
function On(n, e, t) {
  const r = e[n];
  return r === void 0 ? t() : r;
}
const s3 = new Set("Array ArrayBuffer Boolean DataView Date Error EvalError Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Number Object Promise RangeError ReferenceError RegExp Set SharedArrayBuffer String SyntaxError TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array URIError WeakMap WeakSet".split(" "));
let a3 = 0;
class mu {
  constructor(e, t) {
    this.parent = e, this.config = t, this.id = ++a3, this.t = 0, this.i = /* @__PURE__ */ new Map(), e === null ? (this.root = this, this.u = /* @__PURE__ */ new Map(), this.h = /* @__PURE__ */ new Map(), this.res = Si()) : (this.root = e.root, this.u = /* @__PURE__ */ new Map(), this.h = e.h, t.inheritParentResources ? this.res = Object.assign(Si(), e.res, this.root.res) : this.res = Si()), this.u.set(ko, o3);
  }
  get depth() {
    return this.parent === null ? 0 : this.parent.depth + 1;
  }
  register(...e) {
    if (++this.t === 100)
      throw d3(e);
    let t, r, i, s, a, o = 0, u = e.length;
    for (; o < u; ++o)
      if (t = e[o], !!Vn(t))
        if (fc(t))
          t.register(this);
        else if (Pr.resource.has(t)) {
          const l = Pr.resource.getAll(t);
          if (l.length === 1)
            l[0].register(this);
          else
            for (s = 0, a = l.length; a > s; )
              l[s].register(this), ++s;
        } else if (l3(t))
          pe.singleton(t, t).register(this);
        else
          for (r = Object.keys(t), s = 0, a = r.length; s < a; ++s)
            i = t[r[s]], Vn(i) && (fc(i) ? i.register(this) : this.register(i));
    return --this.t, this;
  }
  registerResolver(e, t, r = !1) {
    jl(e);
    const i = this.u, s = i.get(e);
    if (s == null) {
      if (i.set(e, t), c3(e)) {
        if (this.res[e] !== void 0)
          throw f3(e);
        this.res[e] = t;
      }
    } else
      s instanceof hr && s.R === 4 ? s._state.push(t) : i.set(e, new hr(e, 4, [s, t]));
    return r && this.i.set(e, t), t;
  }
  registerTransformer(e, t) {
    const r = this.getResolver(e);
    if (r == null)
      return !1;
    if (r.getFactory) {
      const i = r.getFactory(this);
      return i == null ? !1 : (i.registerTransformer(t), !0);
    }
    return !1;
  }
  getResolver(e, t = !0) {
    if (jl(e), e.resolve !== void 0)
      return e;
    let r = this, i, s;
    for (; r != null; )
      if (i = r.u.get(e), i == null) {
        if (r.parent == null)
          return s = rm(e) ? this : r, t ? this.$(e, s) : null;
        r = r.parent;
      } else
        return i;
    return null;
  }
  has(e, t = !1) {
    return this.u.has(e) ? !0 : t && this.parent != null ? this.parent.has(e, !0) : !1;
  }
  get(e) {
    if (jl(e), e.$isResolver)
      return e.resolve(this, this);
    let t = this, r, i;
    for (; t != null; )
      if (r = t.u.get(e), r == null) {
        if (t.parent == null)
          return i = rm(e) ? this : t, r = this.$(e, i), r.resolve(t, this);
        t = t.parent;
      } else
        return r.resolve(t, this);
    throw p3(e);
  }
  getAll(e, t = !1) {
    jl(e);
    const r = this;
    let i = r, s;
    if (t) {
      let a = Le;
      for (; i != null; )
        s = i.u.get(e), s != null && (a = a.concat(nm(s, i, r))), i = i.parent;
      return a;
    } else
      for (; i != null; )
        if (s = i.u.get(e), s == null) {
          if (i = i.parent, i == null)
            return Le;
        } else
          return nm(s, i, r);
    return Le;
  }
  invoke(e, t) {
    if (tm(e))
      throw sm(e);
    return t === void 0 ? new e(...bu(e).map(Bc, this)) : new e(...bu(e).map(Bc, this), ...t);
  }
  getFactory(e) {
    let t = this.h.get(e);
    if (t === void 0) {
      if (tm(e))
        throw sm(e);
      this.h.set(e, t = new N3(e, bu(e)));
    }
    return t;
  }
  registerFactory(e, t) {
    this.h.set(e, t);
  }
  createChild(e) {
    return e === void 0 && this.config.inheritParentResources ? this.config === Jr.DEFAULT ? new mu(this, this.config) : new mu(this, Jr.from({
      ...this.config,
      inheritParentResources: !1
    })) : new mu(this, Jr.from(e ?? this.config));
  }
  disposeResolvers() {
    const e = this.u, t = this.i;
    let r, i;
    for ([i, r] of t.entries())
      r.dispose(), e.delete(i);
    t.clear();
  }
  find(e, t) {
    const r = e.keyFrom(t);
    let i = this.res[r];
    if (i === void 0 && (i = this.root.res[r], i === void 0) || i === null)
      return null;
    if (Ri(i.getFactory)) {
      const s = i.getFactory(this);
      if (s == null)
        return null;
      const a = Ln(e.name, s.Type);
      return a === void 0 ? null : a;
    }
    return null;
  }
  create(e, t) {
    const r = e.keyFrom(t);
    let i = this.res[r];
    return i === void 0 ? (i = this.root.res[r], i === void 0 ? null : i.resolve(this.root, this) ?? null) : i.resolve(this, this) ?? null;
  }
  dispose() {
    this.i.size > 0 && this.disposeResolvers(), this.u.clear();
  }
  $(e, t) {
    if (!Ri(e))
      throw h3(e);
    if (s3.has(e.name))
      throw y3(e);
    if (fc(e)) {
      const r = e.register(t, e);
      if (!(r instanceof Object) || r.resolve == null) {
        const i = t.u.get(e);
        if (i != null)
          return i;
        throw im();
      }
      return r;
    } else if (Pr.resource.has(e)) {
      const r = Pr.resource.getAll(e);
      if (r.length === 1)
        r[0].register(t);
      else {
        const s = r.length;
        for (let a = 0; a < s; ++a)
          r[a].register(t);
      }
      const i = t.u.get(e);
      if (i != null)
        return i;
      throw im();
    } else {
      if (e.$isInterface)
        throw m3(e.friendlyName);
      {
        const r = this.config.defaultResolver(e, t);
        return t.u.set(e, r), r;
      }
    }
  }
}
function jl(n) {
  if (n == null)
    throw zt("AUR0014");
}
const nm = (n, e, t) => {
  if (n instanceof hr && n.R === 4) {
    const r = n._state;
    let i = r.length;
    const s = new Array(i);
    for (; i--; )
      s[i] = r[i].resolve(e, t);
    return s;
  }
  return [n.resolve(e, t)];
}, o3 = {
  $isResolver: !0,
  resolve(n, e) {
    return e;
  }
}, fc = (n) => Ri(n.register), u3 = (n) => fc(n) && typeof n.registerInRequestor == "boolean", rm = (n) => u3(n) && n.registerInRequestor, l3 = (n) => n.prototype !== void 0, c3 = (n) => Dc(n) && n.indexOf(":") > 0, d3 = (n) => zt(`AUR0006:${n.map(Oo)}`), f3 = (n) => zt(`AUR0007:${Oo(n)}`), p3 = (n) => zt(`AUR0008:${Oo(n)}`), h3 = (n) => zt(`AUR0009:${Oo(n)}`), y3 = (n) => zt(`AUR0010:${n.name}`), im = () => zt("AUR0011"), m3 = (n) => zt(`AUR0012:${n}`), sm = (n) => zt(`AUR0015:${n.name}`), iv = (n, e) => new hr(n, 0, e), Jh = (n, e) => new hr(n, 1, e), b3 = (n, e) => new hr(n, 2, e), g3 = (n, e) => new hr(n, 3, e), v3 = (n, e) => new hr(n, 3, sv(e)), x3 = (n, e) => new hr(e, 5, n), w3 = (n, ...e) => new F3(n, e), am = /* @__PURE__ */ new WeakMap(), sv = (n) => (e, t, r) => {
  let i = am.get(e);
  if (i === void 0 && am.set(e, i = /* @__PURE__ */ new WeakMap()), i.has(r))
    return i.get(r);
  const s = n(e, t, r);
  return i.set(r, s), s;
};
e3(Reflect, !1, !1);
class T3 {
  constructor(e, t) {
    this.c = e, this.k = t;
  }
  instance(e) {
    return this.C(0, e);
  }
  singleton(e) {
    return this.C(1, e);
  }
  transient(e) {
    return this.C(2, e);
  }
  callback(e) {
    return this.C(3, e);
  }
  cachedCallback(e) {
    return this.C(3, sv(e));
  }
  aliasTo(e) {
    return this.C(5, e);
  }
  C(e, t) {
    const { c: r, k: i } = this;
    return this.c = this.k = void 0, r.registerResolver(i, new hr(i, e, t));
  }
}
const Zo = (n) => {
  const e = n.slice(), t = Object.keys(n), r = t.length;
  let i;
  for (let s = 0; s < r; ++s)
    i = t[s], Nu(i) || (e[i] = n[i]);
  return e;
}, A3 = {
  none(n) {
    throw C3(n);
  },
  singleton: (n) => new hr(n, 1, n),
  transient: (n) => new hr(n, 2, n)
}, C3 = (n) => zt(`AUR0002:${Oo(n)}`);
class Jr {
  constructor(e, t) {
    this.inheritParentResources = e, this.defaultResolver = t;
  }
  static from(e) {
    return e === void 0 || e === Jr.DEFAULT ? Jr.DEFAULT : new Jr(e.inheritParentResources ?? !1, e.defaultResolver ?? A3.singleton);
  }
}
Jr.DEFAULT = Jr.from({});
const S3 = (n) => new mu(null, Jr.from(n)), av = (n) => {
  const e = Ei("di:paramtypes");
  return Ln(e, n);
}, E3 = (n) => Ln("design:paramtypes", n), Ya = (n) => {
  const e = Ei("di:paramtypes");
  let t = Ln(e, n);
  return t === void 0 && (ws(e, t = [], n), Qh(n, e)), t;
}, bu = (n) => {
  const e = Ei("di:dependencies");
  let t = Ln(e, n);
  if (t === void 0) {
    const r = n.inject;
    if (r === void 0) {
      const i = he.getDesignParamtypes(n), s = av(n);
      if (i === void 0)
        if (s === void 0) {
          const a = Object.getPrototypeOf(n);
          Ri(a) && a !== Function.prototype ? t = Zo(bu(a)) : t = [];
        } else
          t = Zo(s);
      else if (s === void 0)
        t = Zo(i);
      else {
        t = Zo(i);
        let a = s.length, o, u = 0;
        for (; u < a; ++u)
          o = s[u], o !== void 0 && (t[u] = o);
        const l = Object.keys(s);
        let c;
        for (u = 0, a = l.length, u = 0; u < a; ++u)
          c = l[u], Nu(c) || (t[c] = s[c]);
      }
    } else
      t = Zo(r);
    ws(e, t, n), Qh(n, e);
  }
  return t;
}, ui = (n, e) => {
  const t = Ri(n) ? n : e, r = Dc(n) ? n : void 0, i = function(s, a, o) {
    if (s == null || new.target !== void 0)
      throw _3(i.friendlyName);
    const u = Ya(s);
    u[o] = i;
  };
  return i.$isInterface = !0, i.friendlyName = r ?? "(anonymous)", t != null && (i.register = (s, a) => t(new T3(s, a ?? i))), i.toString = () => `InterfaceSymbol<${i.friendlyName}>`, i;
}, _3 = (n) => zt(`AUR0001:${n}`), he = {
  createContainer: S3,
  getDesignParamtypes: E3,
  getAnnotationParamtypes: av,
  getOrCreateAnnotationParamTypes: Ya,
  getDependencies: bu,
  createInterface: ui,
  inject(...n) {
    return (e, t, r) => {
      if (typeof r == "number") {
        const i = Ya(e), s = n[0];
        s !== void 0 && (i[r] = s);
      } else if (t) {
        const i = Ya(e.constructor), s = n[0];
        s !== void 0 && (i[t] = s);
      } else if (r) {
        const i = r.value, s = Ya(i);
        let a, o = 0;
        for (; o < n.length; ++o)
          a = n[o], a !== void 0 && (s[o] = a);
      } else {
        const i = Ya(e);
        let s, a = 0;
        for (; a < n.length; ++a)
          s = n[a], s !== void 0 && (i[a] = s);
      }
    };
  },
  transient(n) {
    return n.register = function(e) {
      return pe.transient(n, n).register(e, n);
    }, n.registerInRequestor = !1, n;
  },
  singleton(n, e = P3) {
    return n.register = function(t) {
      return pe.singleton(n, n).register(t, n);
    }, n.registerInRequestor = e.scoped, n;
  }
}, ko = ui("IContainer"), M3 = ko;
function R3(n) {
  return function(e) {
    const t = function(r, i, s) {
      Yh(t)(r, i, s);
    };
    return t.$isResolver = !0, t.resolve = function(r, i) {
      return n(e, r, i);
    }, t;
  };
}
const Yh = he.inject;
function om(n) {
  return he.transient(n);
}
function ov(n) {
  return n == null ? om : om(n);
}
const P3 = {
  scoped: !1
}, O3 = (n) => (e, t) => {
  t = !!t;
  const r = function(i, s, a) {
    Yh(r)(i, s, a);
  };
  return r.$isResolver = !0, r.resolve = function(i, s) {
    return n(e, i, s, t);
  }, r;
}, uv = O3((n, e, t, r) => t.getAll(n, r)), lv = R3((n, e, t) => {
  if (t.has(n, !0))
    return t.get(n);
}), $d = (n, e, t) => {
  Yh($d)(n, e, t);
};
$d.$isResolver = !0;
$d.resolve = () => {
};
class hr {
  constructor(e, t, r) {
    this.k = e, this.R = t, this._state = r, this.resolving = !1;
  }
  get $isResolver() {
    return !0;
  }
  register(e, t) {
    return e.registerResolver(t || this.k, this);
  }
  resolve(e, t) {
    switch (this.R) {
      case 0:
        return this._state;
      case 1:
        if (this.resolving)
          throw I3(this._state.name);
        return this.resolving = !0, this._state = e.getFactory(this._state).construct(t), this.R = 0, this.resolving = !1, this._state;
      case 2: {
        const r = e.getFactory(this._state);
        if (r === null)
          throw k3(this.k);
        return r.construct(t);
      }
      case 3:
        return this._state(e, t, this);
      case 4:
        return this._state[0].resolve(e, t);
      case 5:
        return t.get(this._state);
      default:
        throw D3(this.R);
    }
  }
  getFactory(e) {
    switch (this.R) {
      case 1:
      case 2:
        return e.getFactory(this._state);
      case 5:
        return e.getResolver(this._state)?.getFactory?.(e) ?? null;
      default:
        return null;
    }
  }
}
const I3 = (n) => zt(`AUR0003:${n}`), k3 = (n) => zt(`AUR0004:${Oo(n)}`), D3 = (n) => zt(`AUR0005:${n}`);
function Bc(n) {
  return this.get(n);
}
function B3(n, e) {
  return e(n);
}
class N3 {
  constructor(e, t) {
    this.Type = e, this.dependencies = t, this.transformers = null;
  }
  construct(e, t) {
    let r;
    return t === void 0 ? r = new this.Type(...this.dependencies.map(Bc, e)) : r = new this.Type(...this.dependencies.map(Bc, e), ...t), this.transformers == null ? r : this.transformers.reduce(B3, r);
  }
  registerTransformer(e) {
    (this.transformers ?? (this.transformers = [])).push(e);
  }
}
class F3 {
  constructor(e, t) {
    this.key = e, this.params = t;
  }
  register(e) {
    e.has(this.key, !0) ? e.get(this.key).register(e, ...this.params) : e.register(...this.params.filter((t) => typeof t == "object"));
  }
}
const pe = {
  instance: iv,
  singleton: Jh,
  transient: b3,
  callback: g3,
  cachedCallback: v3,
  aliasTo: x3,
  defer: w3
};
class yn {
  constructor(e, t) {
    this.A = null, this.j = e, t !== void 0 && (this.A = t);
  }
  get friendlyName() {
    return this.j;
  }
  prepare(e) {
    this.A = e;
  }
  get $isResolver() {
    return !0;
  }
  resolve() {
    if (this.A == null)
      throw L3(this.j);
    return this.A;
  }
  dispose() {
    this.A = null;
  }
}
const L3 = (n) => zt(`AUR0013:${n}`), Le = Object.freeze([]), $3 = Object.freeze({});
function _i() {
}
const hl = ui("IPlatform");
function $i(n, e, t, r) {
  var i = arguments.length, s = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, a;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    s = Reflect.decorate(n, e, t, r);
  else
    for (var o = n.length - 1; o >= 0; o--)
      (a = n[o]) && (s = (i < 3 ? a(s) : i > 3 ? a(e, t, s) : a(e, t)) || s);
  return i > 3 && s && Object.defineProperty(e, t, s), s;
}
function sa(n, e) {
  return function(t, r) {
    e(t, r, n);
  };
}
var um;
(function(n) {
  n[n.trace = 0] = "trace", n[n.debug = 1] = "debug", n[n.info = 2] = "info", n[n.warn = 3] = "warn", n[n.error = 4] = "error", n[n.fatal = 5] = "fatal", n[n.none = 6] = "none";
})(um || (um = {}));
var lm;
(function(n) {
  n[n.noColors = 0] = "noColors", n[n.colors = 1] = "colors";
})(lm || (lm = {}));
const Xh = ui("ILogConfig", (n) => n.instance(new cv(0, 3))), Zh = ui("ISink"), U3 = ui("ILogEventFactory", (n) => n.singleton($p)), Ra = ui("ILogger", (n) => n.singleton(Pi)), V3 = ui("ILogScope"), j3 = Object.freeze({
  key: Ei("logger-sink-handles"),
  define(n, e) {
    return ws(this.key, e.handles, n.prototype), n;
  },
  getHandles(n) {
    return oi.get(this.key, n);
  }
}), yi = Fu({
  red(n) {
    return `\x1B[31m${n}\x1B[39m`;
  },
  green(n) {
    return `\x1B[32m${n}\x1B[39m`;
  },
  yellow(n) {
    return `\x1B[33m${n}\x1B[39m`;
  },
  blue(n) {
    return `\x1B[34m${n}\x1B[39m`;
  },
  magenta(n) {
    return `\x1B[35m${n}\x1B[39m`;
  },
  cyan(n) {
    return `\x1B[36m${n}\x1B[39m`;
  },
  white(n) {
    return `\x1B[37m${n}\x1B[39m`;
  },
  grey(n) {
    return `\x1B[90m${n}\x1B[39m`;
  }
});
class cv {
  constructor(e, t) {
    this.colorOptions = e, this.level = t;
  }
}
const cm = function() {
  const n = [Fu({
    TRC: "TRC",
    DBG: "DBG",
    INF: "INF",
    WRN: "WRN",
    ERR: "ERR",
    FTL: "FTL",
    QQQ: "???"
  }), Fu({
    TRC: yi.grey("TRC"),
    DBG: yi.grey("DBG"),
    INF: yi.white("INF"),
    WRN: yi.yellow("WRN"),
    ERR: yi.red("ERR"),
    FTL: yi.red("FTL"),
    QQQ: yi.grey("???")
  })];
  return (e, t) => e <= 0 ? n[t].TRC : e <= 1 ? n[t].DBG : e <= 2 ? n[t].INF : e <= 3 ? n[t].WRN : e <= 4 ? n[t].ERR : e <= 5 ? n[t].FTL : n[t].QQQ;
}(), G3 = (n, e) => e === 0 ? n.join(".") : n.map(yi.cyan).join("."), dm = (n, e) => e === 0 ? new Date(n).toISOString() : yi.grey(new Date(n).toISOString());
class W3 {
  constructor(e, t, r, i, s, a) {
    this.severity = e, this.message = t, this.optionalParams = r, this.scope = i, this.colorOptions = s, this.timestamp = a;
  }
  toString() {
    const { severity: e, message: t, scope: r, colorOptions: i, timestamp: s } = this;
    return r.length === 0 ? `${dm(s, i)} [${cm(e, i)}] ${t}` : `${dm(s, i)} [${cm(e, i)} ${G3(r, i)}] ${t}`;
  }
}
let $p = class {
  constructor(e) {
    this.config = e;
  }
  createLogEvent(e, t, r, i) {
    return new W3(t, r, i, e.scope, this.config.colorOptions, Date.now());
  }
};
$p = $i([sa(0, Xh)], $p);
let fm = class dv {
  constructor(e) {
    const t = e.console;
    this.handleEvent = function(i) {
      const s = i.optionalParams;
      if (s === void 0 || s.length === 0) {
        const a = i.toString();
        switch (i.severity) {
          case 0:
          case 1:
            return t.debug(a);
          case 2:
            return t.info(a);
          case 3:
            return t.warn(a);
          case 4:
          case 5:
            return t.error(a);
        }
      } else {
        let a = i.toString(), o = 0;
        for (; a.includes("%s"); )
          a = a.replace("%s", String(s[o++]));
        switch (i.severity) {
          case 0:
          case 1:
            return t.debug(a, ...s.slice(o));
          case 2:
            return t.info(a, ...s.slice(o));
          case 3:
            return t.warn(a, ...s.slice(o));
          case 4:
          case 5:
            return t.error(a, ...s.slice(o));
        }
      }
    };
  }
  static register(e) {
    Jh(Zh, dv).register(e);
  }
};
fm = $i([sa(0, hl)], fm);
let Pi = class fv {
  constructor(e, t, r, i = [], s = null) {
    this.scope = i, this.I = Si();
    let a, o, u, l, c, p;
    if (this.config = e, this.f = t, this.sinks = r, s === null) {
      this.root = this, this.parent = this, a = this.O = [], o = this.M = [], u = this.F = [], l = this.L = [], c = this.U = [], p = this.T = [];
      for (const b of r) {
        const A = j3.getHandles(b);
        (A?.includes(0) ?? !0) && a.push(b), (A?.includes(1) ?? !0) && o.push(b), (A?.includes(2) ?? !0) && u.push(b), (A?.includes(3) ?? !0) && l.push(b), (A?.includes(4) ?? !0) && c.push(b), (A?.includes(5) ?? !0) && p.push(b);
      }
    } else
      this.root = s.root, this.parent = s, a = this.O = s.O, o = this.M = s.M, u = this.F = s.F, l = this.L = s.L, c = this.U = s.U, p = this.T = s.T;
  }
  trace(e, ...t) {
    this.config.level <= 0 && this.P(this.O, 0, e, t);
  }
  debug(e, ...t) {
    this.config.level <= 1 && this.P(this.M, 1, e, t);
  }
  info(e, ...t) {
    this.config.level <= 2 && this.P(this.F, 2, e, t);
  }
  warn(e, ...t) {
    this.config.level <= 3 && this.P(this.L, 3, e, t);
  }
  error(e, ...t) {
    this.config.level <= 4 && this.P(this.U, 4, e, t);
  }
  fatal(e, ...t) {
    this.config.level <= 5 && this.P(this.T, 5, e, t);
  }
  scopeTo(e) {
    const t = this.I;
    let r = t[e];
    return r === void 0 && (r = t[e] = new fv(this.config, this.f, void 0, this.scope.concat(e), this)), r;
  }
  P(e, t, r, i) {
    const s = Ri(r) ? r() : r, a = this.f.createLogEvent(this, t, s, i);
    for (let o = 0, u = e.length; o < u; ++o)
      e[o].handleEvent(a);
  }
};
$i([Io], Pi.prototype, "trace", null);
$i([Io], Pi.prototype, "debug", null);
$i([Io], Pi.prototype, "info", null);
$i([Io], Pi.prototype, "warn", null);
$i([Io], Pi.prototype, "error", null);
$i([Io], Pi.prototype, "fatal", null);
Pi = $i([sa(0, Xh), sa(1, U3), sa(2, uv(Zh)), sa(3, lv(V3)), sa(4, $d)], Pi);
Fu({
  create({ level: n = 3, colorOptions: e = 0, sinks: t = [] } = {}) {
    return Fu({
      register(r) {
        r.register(iv(Xh, new cv(e, n)));
        for (const i of t)
          Ri(i) ? r.register(Jh(Zh, i)) : r.register(i);
        return r;
      }
    });
  }
});
ui((n) => n.singleton(K3));
const z3 = (n) => n;
class H3 {
  constructor(e) {
    this.N = /* @__PURE__ */ new Map(), this.W = /* @__PURE__ */ new Map(), this.B = e;
  }
  transform(e) {
    if (e instanceof Promise)
      return this._(e);
    if (typeof e == "object" && e !== null)
      return this.G(e);
    throw zt(`Invalid input: ${String(e)}. Expected Promise or Object.`);
  }
  _(e) {
    if (this.N.has(e))
      return this.N.get(e);
    const t = e.then((r) => this.G(r));
    return this.N.set(e, t), t.then((r) => {
      this.N.set(e, r);
    }), t;
  }
  G(e) {
    if (this.W.has(e))
      return this.W.get(e);
    const t = this.B(this.K(e));
    return this.W.set(e, t), t instanceof Promise && t.then((r) => {
      this.W.set(e, r);
    }), t;
  }
  K(e) {
    if (e == null)
      throw new Error(`Invalid input: ${String(e)}. Expected Object.`);
    if (typeof e != "object")
      return new pm(e, []);
    let t, r, i, s;
    const a = [];
    for (const o in e) {
      switch (typeof (t = e[o])) {
        case "object":
          if (t === null)
            continue;
          r = Ri(t.register), i = !1, s = Le;
          break;
        case "function":
          r = Ri(t.register), i = t.prototype !== void 0, s = Pr.resource.getAll(t);
          break;
        default:
          continue;
      }
      a.push(new q3(o, t, r, i, s));
    }
    return new pm(e, a);
  }
}
class K3 {
  constructor() {
    this.transformers = /* @__PURE__ */ new Map();
  }
  load(e, t = z3) {
    const r = this.transformers;
    let i = r.get(t);
    return i === void 0 && r.set(t, i = new H3(t)), i.transform(e);
  }
  dispose() {
    this.transformers.clear();
  }
}
class pm {
  constructor(e, t) {
    this.raw = e, this.items = t;
  }
}
class q3 {
  constructor(e, t, r, i, s) {
    this.key = e, this.value = t, this.isRegistry = r, this.isConstructable = i, this.definitions = s;
  }
}
class Q3 {
  constructor(e, t) {
    this.type = e, this.cb = t;
  }
  handle(e) {
    e instanceof this.type && this.cb.call(null, e);
  }
}
const Ud = ui("IEventAggregator", (n) => n.singleton(J3));
class J3 {
  constructor() {
    this.eventLookup = {}, this.messageHandlers = [];
  }
  publish(e, t) {
    if (!e)
      throw zt(`Invalid channel name or instance: ${e}.`);
    if (Dc(e)) {
      let r = this.eventLookup[e];
      if (r !== void 0) {
        r = r.slice();
        let i = r.length;
        for (; i-- > 0; )
          r[i](t, e);
      }
    } else {
      const r = this.messageHandlers.slice();
      let i = r.length;
      for (; i-- > 0; )
        r[i].handle(e);
    }
  }
  subscribe(e, t) {
    if (!e)
      throw zt(`Invalid channel name or type: ${e}.`);
    let r, i;
    return Dc(e) ? (this.eventLookup[e] === void 0 && (this.eventLookup[e] = []), r = t, i = this.eventLookup[e]) : (r = new Q3(e, t), i = this.messageHandlers), i.push(r), {
      dispose() {
        const s = i.indexOf(r);
        s !== -1 && i.splice(s, 1);
      }
    };
  }
  subscribeOnce(e, t) {
    const r = this.subscribe(e, (i, s) => {
      r.dispose(), t(i, s);
    });
    return r;
  }
}
const Vd = Object, Y3 = Vd.prototype.hasOwnProperty, yr = Reflect.defineProperty, ae = (n) => new Error(n), cr = (n) => typeof n == "function", gu = (n) => n instanceof Vd, Ts = (n) => n instanceof Array, yl = (n) => n instanceof Set, hs = (n) => n instanceof Map, e0 = Vd.is;
function jd(n, e, t) {
  return yr(n, e, {
    enumerable: !1,
    configurable: !0,
    writable: !0,
    value: t
  }), t;
}
function xi(n, e, t) {
  e in n || jd(n, e, t);
}
const t0 = String, Do = he.createInterface, vu = () => Vd.create(null), Bo = oi.getOwn, No = oi.define;
Pr.annotation.keyFor;
Pr.resource.keyFor;
Pr.resource.appendTo;
var hm;
(function(n) {
  n[n.AccessThis = 0] = "AccessThis", n[n.AccessScope = 1] = "AccessScope", n[n.ArrayLiteral = 2] = "ArrayLiteral", n[n.ObjectLiteral = 3] = "ObjectLiteral", n[n.PrimitiveLiteral = 4] = "PrimitiveLiteral", n[n.Template = 5] = "Template", n[n.Unary = 6] = "Unary", n[n.CallScope = 7] = "CallScope", n[n.CallMember = 8] = "CallMember", n[n.CallFunction = 9] = "CallFunction", n[n.AccessMember = 10] = "AccessMember", n[n.AccessKeyed = 11] = "AccessKeyed", n[n.TaggedTemplate = 12] = "TaggedTemplate", n[n.Binary = 13] = "Binary", n[n.Conditional = 14] = "Conditional", n[n.Assign = 15] = "Assign", n[n.ArrowFunction = 16] = "ArrowFunction", n[n.ValueConverter = 17] = "ValueConverter", n[n.BindingBehavior = 18] = "BindingBehavior", n[n.ArrayBindingPattern = 19] = "ArrayBindingPattern", n[n.ObjectBindingPattern = 20] = "ObjectBindingPattern", n[n.BindingIdentifier = 21] = "BindingIdentifier", n[n.ForOfStatement = 22] = "ForOfStatement", n[n.Interpolation = 23] = "Interpolation", n[n.ArrayDestructuring = 24] = "ArrayDestructuring", n[n.ObjectDestructuring = 25] = "ObjectDestructuring", n[n.DestructuringAssignmentLeaf = 26] = "DestructuringAssignmentLeaf", n[n.DestructuringAssignmentRestLeaf = 27] = "DestructuringAssignmentRestLeaf", n[n.Custom = 28] = "Custom";
})(hm || (hm = {}));
class n0 {
  constructor(e) {
    this.value = e, this.$kind = 28;
  }
  evaluate(e, t, r) {
    return this.value;
  }
  assign(e, t, r) {
    return r;
  }
  bind(e, t) {
  }
  unbind(e, t) {
  }
  accept(e) {
  }
}
class X3 {
  constructor(e, t, r) {
    this.expression = e, this.name = t, this.args = r, this.$kind = 18, this.key = `_bb_${t}`;
  }
}
class Lu {
  constructor(e, t, r) {
    this.expression = e, this.name = t, this.args = r, this.$kind = 17;
  }
}
class Z3 {
  constructor(e, t) {
    this.target = e, this.value = t, this.$kind = 15;
  }
}
class eA {
  constructor(e, t, r) {
    this.condition = e, this.yes = t, this.no = r, this.$kind = 14;
  }
}
class Mi {
  constructor(e = 0) {
    this.ancestor = e, this.$kind = 0;
  }
}
Mi.$this = new Mi(0);
Mi.$parent = new Mi(1);
class pc {
  constructor(e, t = 0) {
    this.name = e, this.ancestor = t, this.$kind = 1;
  }
}
class Up {
  constructor(e, t, r = !1) {
    this.object = e, this.name = t, this.optional = r, this.$kind = 10;
  }
}
class pv {
  constructor(e, t, r = !1) {
    this.object = e, this.key = t, this.optional = r, this.$kind = 11;
  }
}
class hv {
  constructor(e, t, r = 0, i = !1) {
    this.name = e, this.args = t, this.ancestor = r, this.optional = i, this.$kind = 7;
  }
}
class Nc {
  constructor(e, t, r, i = !1, s = !1) {
    this.object = e, this.name = t, this.args = r, this.optionalMember = i, this.optionalCall = s, this.$kind = 8;
  }
}
class hc {
  constructor(e, t, r = !1) {
    this.func = e, this.args = t, this.optional = r, this.$kind = 9;
  }
}
class tA {
  constructor(e, t, r) {
    this.operation = e, this.left = t, this.right = r, this.$kind = 13;
  }
}
class nA {
  constructor(e, t) {
    this.operation = e, this.expression = t, this.$kind = 6;
  }
}
class rn {
  constructor(e) {
    this.value = e, this.$kind = 4;
  }
}
rn.$undefined = new rn(void 0);
rn.$null = new rn(null);
rn.$true = new rn(!0);
rn.$false = new rn(!1);
rn.$empty = new rn("");
class Vp {
  constructor(e) {
    this.elements = e, this.$kind = 2;
  }
}
Vp.$empty = new Vp(Le);
class jp {
  constructor(e, t) {
    this.keys = e, this.values = t, this.$kind = 3;
  }
}
jp.$empty = new jp(Le, Le);
class Fc {
  constructor(e, t = Le) {
    this.cooked = e, this.expressions = t, this.$kind = 5;
  }
}
Fc.$empty = new Fc([""]);
class yv {
  constructor(e, t, r, i = Le) {
    this.cooked = e, this.func = r, this.expressions = i, this.$kind = 12, e.raw = t;
  }
}
class rA {
  constructor(e) {
    this.elements = e, this.$kind = 19;
  }
}
class iA {
  constructor(e, t) {
    this.keys = e, this.values = t, this.$kind = 20;
  }
}
class Lc {
  constructor(e) {
    this.name = e, this.$kind = 21;
  }
}
class sA {
  constructor(e, t, r) {
    this.declaration = e, this.iterable = t, this.semiIdx = r, this.$kind = 22;
  }
}
class mv {
  constructor(e, t = Le) {
    this.parts = e, this.expressions = t, this.$kind = 23, this.isMulti = t.length > 1, this.firstExpression = t[0];
  }
}
class aA {
  constructor(e, t, r, i) {
    this.$kind = e, this.list = t, this.source = r, this.initializer = i;
  }
}
class bv {
  constructor(e, t, r) {
    this.target = e, this.source = t, this.initializer = r, this.$kind = 26;
  }
}
class Gp {
  constructor(e, t, r = !1) {
    this.args = e, this.body = t, this.rest = r, this.$kind = 16;
  }
}
class ym {
  constructor(e, t) {
    e !== void 0 && (this[e] = t);
  }
}
class sn {
  constructor(e, t, r, i) {
    this.parent = e, this.bindingContext = t, this.overrideContext = r, this.isBoundary = i;
  }
  static getContext(e, t, r) {
    if (e == null)
      throw mm();
    let i = e.overrideContext, s = e;
    if (r > 0) {
      for (; r > 0; )
        if (r--, s = s.parent, s == null)
          return;
      return i = s.overrideContext, t in i ? i : s.bindingContext;
    }
    for (; s != null && !s.isBoundary && !(t in s.overrideContext) && !(t in s.bindingContext); )
      s = s.parent;
    return s == null ? e.bindingContext : (i = s.overrideContext, t in i ? i : s.bindingContext);
  }
  static create(e, t, r) {
    if (e == null)
      throw oA();
    return new sn(null, e, t ?? new bm(), r ?? !1);
  }
  static fromParent(e, t) {
    if (e == null)
      throw mm();
    return new sn(e, t, new bm(), !1);
  }
}
const mm = () => ae("AUR0203"), oA = () => ae("AUR0204");
class bm {
}
const Wp = sn.getContext;
function G(n, e, t, r) {
  switch (n.$kind) {
    case 0: {
      let i = e.overrideContext, s = e, a = n.ancestor;
      for (; a-- && i; )
        s = s.parent, i = s?.overrideContext ?? null;
      return a < 1 && s ? s.bindingContext : void 0;
    }
    case 1: {
      const i = Wp(e, n.name, n.ancestor);
      r !== null && r.observe(i, n.name);
      const s = i[n.name];
      if (s == null && n.name === "$host")
        throw ae("AUR0105");
      return t?.strict ? t?.boundFn && cr(s) ? s.bind(i) : s : s == null ? "" : t?.boundFn && cr(s) ? s.bind(i) : s;
    }
    case 2:
      return n.elements.map((i) => G(i, e, t, r));
    case 3: {
      const i = {};
      for (let s = 0; s < n.keys.length; ++s)
        i[n.keys[s]] = G(n.values[s], e, t, r);
      return i;
    }
    case 4:
      return n.value;
    case 5: {
      let i = n.cooked[0];
      for (let s = 0; s < n.expressions.length; ++s)
        i += String(G(n.expressions[s], e, t, r)), i += n.cooked[s + 1];
      return i;
    }
    case 6:
      switch (n.operation) {
        case "void":
          return void G(n.expression, e, t, r);
        case "typeof":
          return typeof G(n.expression, e, t, r);
        case "!":
          return !G(n.expression, e, t, r);
        case "-":
          return -G(n.expression, e, t, r);
        case "+":
          return +G(n.expression, e, t, r);
        default:
          throw ae(`AUR0109:${n.operation}`);
      }
    case 7: {
      const i = n.args.map((o) => G(o, e, t, r)), s = Wp(e, n.name, n.ancestor), a = gm(t?.strictFnCall, s, n.name);
      return a ? a.apply(s, i) : void 0;
    }
    case 8: {
      const i = G(n.object, e, t, r), s = n.args.map((u) => G(u, e, t, r)), a = gm(t?.strictFnCall, i, n.name);
      let o;
      return a && (o = a.apply(i, s), Ts(i) && cA.includes(n.name) && r?.observeCollection(i)), o;
    }
    case 9: {
      const i = G(n.func, e, t, r);
      if (cr(i))
        return i(...n.args.map((s) => G(s, e, t, r)));
      if (!t?.strictFnCall && i == null)
        return;
      throw ae("AUR0107");
    }
    case 16:
      return (...s) => {
        const a = n.args, o = n.rest, u = a.length - 1, l = a.reduce((p, b, A) => (o && A === u ? p[b.name] = s.slice(A) : p[b.name] = s[A], p), {}), c = sn.fromParent(e, l);
        return G(n.body, c, t, r);
      };
    case 10: {
      const i = G(n.object, e, t, r);
      let s;
      return t?.strict ? i == null ? i : (r !== null && r.observe(i, n.name), s = i[n.name], t?.boundFn && cr(s) ? s.bind(i) : s) : (r !== null && gu(i) && r.observe(i, n.name), i ? (s = i[n.name], t?.boundFn && cr(s) ? s.bind(i) : s) : "");
    }
    case 11: {
      const i = G(n.object, e, t, r);
      if (gu(i)) {
        const s = G(n.key, e, t, r);
        return r !== null && r.observe(i, s), i[s];
      }
      return;
    }
    case 12: {
      const i = n.expressions.map((a) => G(a, e, t, r)), s = G(n.func, e, t, r);
      if (!cr(s))
        throw ae("AUR0110");
      return s(n.cooked, ...i);
    }
    case 13: {
      const i = n.left, s = n.right;
      switch (n.operation) {
        case "&&":
          return G(i, e, t, r) && G(s, e, t, r);
        case "||":
          return G(i, e, t, r) || G(s, e, t, r);
        case "??":
          return G(i, e, t, r) ?? G(s, e, t, r);
        case "==":
          return G(i, e, t, r) == G(s, e, t, r);
        case "===":
          return G(i, e, t, r) === G(s, e, t, r);
        case "!=":
          return G(i, e, t, r) != G(s, e, t, r);
        case "!==":
          return G(i, e, t, r) !== G(s, e, t, r);
        case "instanceof": {
          const a = G(s, e, t, r);
          return cr(a) ? G(i, e, t, r) instanceof a : !1;
        }
        case "in": {
          const a = G(s, e, t, r);
          return gu(a) ? G(i, e, t, r) in a : !1;
        }
        case "+": {
          const a = G(i, e, t, r), o = G(s, e, t, r);
          if (t?.strict)
            return a + o;
          if (!a || !o) {
            if (vm(a) || vm(o))
              return (a || 0) + (o || 0);
            if (xm(a) || xm(o))
              return (a || "") + (o || "");
          }
          return a + o;
        }
        case "-":
          return G(i, e, t, r) - G(s, e, t, r);
        case "*":
          return G(i, e, t, r) * G(s, e, t, r);
        case "/":
          return G(i, e, t, r) / G(s, e, t, r);
        case "%":
          return G(i, e, t, r) % G(s, e, t, r);
        case "<":
          return G(i, e, t, r) < G(s, e, t, r);
        case ">":
          return G(i, e, t, r) > G(s, e, t, r);
        case "<=":
          return G(i, e, t, r) <= G(s, e, t, r);
        case ">=":
          return G(i, e, t, r) >= G(s, e, t, r);
        default:
          throw ae(`AUR0108:${n.operation}`);
      }
    }
    case 14:
      return G(n.condition, e, t, r) ? G(n.yes, e, t, r) : G(n.no, e, t, r);
    case 15:
      return cn(n.target, e, t, G(n.value, e, t, r));
    case 17: {
      const i = t?.getConverter?.(n.name);
      if (i == null)
        throw ae(`AUR0103:${n.name}`);
      return "toView" in i ? i.toView(G(n.expression, e, t, r), ...n.args.map((s) => G(s, e, t, r))) : G(n.expression, e, t, r);
    }
    case 18:
      return G(n.expression, e, t, r);
    case 21:
      return n.name;
    case 22:
      return G(n.iterable, e, t, r);
    case 23:
      if (n.isMulti) {
        let i = n.parts[0], s = 0;
        for (; s < n.expressions.length; ++s)
          i += t0(G(n.expressions[s], e, t, r)), i += n.parts[s + 1];
        return i;
      } else
        return `${n.parts[0]}${G(n.firstExpression, e, t, r)}${n.parts[1]}`;
    case 26:
      return G(n.target, e, t, r);
    case 24:
      return n.list.map((i) => G(i, e, t, r));
    case 19:
    case 20:
    case 25:
    default:
      return;
    case 28:
      return n.evaluate(e, t, r);
  }
}
function cn(n, e, t, r) {
  switch (n.$kind) {
    case 1: {
      if (n.name === "$host")
        throw ae("AUR0106");
      const i = Wp(e, n.name, n.ancestor);
      return i[n.name] = r;
    }
    case 10: {
      const i = G(n.object, e, t, null);
      return gu(i) ? n.name === "length" && Ts(i) && !isNaN(r) ? i.splice(r) : i[n.name] = r : cn(n.object, e, t, {
        [n.name]: r
      }), r;
    }
    case 11: {
      const i = G(n.object, e, t, null), s = G(n.key, e, t, null);
      if (Ts(i)) {
        if (s === "length" && !isNaN(r))
          return i.splice(r), r;
        if (Nu(s))
          return i.splice(s, 1, r), r;
      }
      return i[s] = r;
    }
    case 15:
      return cn(n.value, e, t, r), cn(n.target, e, t, r);
    case 17: {
      const i = t?.getConverter?.(n.name);
      if (i == null)
        throw gv(n.name);
      return "fromView" in i && (r = i.fromView(r, ...n.args.map((s) => G(s, e, t, null)))), cn(n.expression, e, t, r);
    }
    case 18:
      return cn(n.expression, e, t, r);
    case 24:
    case 25: {
      const i = n.list, s = i.length;
      let a, o;
      for (a = 0; a < s; a++)
        switch (o = i[a], o.$kind) {
          case 26:
            cn(o, e, t, r);
            break;
          case 24:
          case 25: {
            if (typeof r != "object" || r === null)
              throw ae("AUR0112");
            let u = G(o.source, sn.create(r), t, null);
            u === void 0 && o.initializer && (u = G(o.initializer, e, t, null)), cn(o, e, t, u);
            break;
          }
        }
      break;
    }
    case 26:
      if (n instanceof bv) {
        if (r == null)
          return;
        if (typeof r != "object")
          throw ae("AUR0112");
        let i = G(n.source, sn.create(r), t, null);
        i === void 0 && n.initializer && (i = G(n.initializer, e, t, null)), cn(n.target, e, t, i);
      } else {
        if (r == null)
          return;
        if (typeof r != "object")
          throw ae("AUR0112");
        const i = n.indexOrProperties;
        let s;
        if (Nu(i)) {
          if (!Array.isArray(r))
            throw ae("AUR0112");
          s = r.slice(i);
        } else
          s = Object.entries(r).reduce((a, [o, u]) => (i.includes(o) || (a[o] = u), a), {});
        cn(n.target, e, t, s);
      }
      break;
    case 28:
      return n.assign(e, t, r);
    default:
      return;
  }
}
function Dr(n, e, t) {
  switch (n.$kind) {
    case 18: {
      const r = n.name, i = n.key, s = t.getBehavior?.(r);
      if (s == null)
        throw uA(r);
      if (t[i] === void 0)
        t[i] = s, s.bind?.(e, t, ...n.args.map((a) => G(a, e, t, null)));
      else
        throw lA(r);
      Dr(n.expression, e, t);
      return;
    }
    case 17: {
      const r = n.name, i = t.getConverter?.(r);
      if (i == null)
        throw gv(r);
      const s = i.signals;
      if (s != null) {
        const a = t.getSignaler?.(), o = s.length;
        let u = 0;
        for (; u < o; ++u)
          a?.addSignalListener(s[u], t);
      }
      Dr(n.expression, e, t);
      return;
    }
    case 22:
      Dr(n.iterable, e, t);
      break;
    case 28:
      n.bind?.(e, t);
  }
}
function fr(n, e, t) {
  switch (n.$kind) {
    case 18: {
      const r = n.key, i = t;
      i[r] !== void 0 && (i[r].unbind?.(e, t), i[r] = void 0), fr(n.expression, e, t);
      break;
    }
    case 17: {
      const r = t.getConverter?.(n.name);
      if (r?.signals === void 0)
        return;
      const i = t.getSignaler?.();
      let s = 0;
      for (; s < r.signals.length; ++s)
        i?.removeSignalListener(r.signals[s], t);
      fr(n.expression, e, t);
      break;
    }
    case 22:
      fr(n.iterable, e, t);
      break;
    case 28:
      n.unbind?.(e, t);
  }
}
const uA = (n) => ae(`AUR0101:${n}`), lA = (n) => ae(`AUR0102:${n}`), gv = (n) => ae(`AUR0103:${n}`), gm = (n, e, t) => {
  const r = e == null ? null : e[t];
  if (cr(r))
    return r;
  if (!n && r == null)
    return null;
  throw ae(`AUR0111:${t}`);
}, vm = (n) => {
  switch (typeof n) {
    case "number":
    case "bigint":
      return !0;
    default:
      return !1;
  }
}, xm = (n) => {
  switch (typeof n) {
    case "string":
      return !0;
    case "object":
      return n instanceof Date;
    default:
      return !1;
  }
}, cA = "at map filter includes indexOf lastIndexOf findIndex find flat flatMap join reduce reduceRight slice every some sort".split(" "), wm = he.createInterface("ICoercionConfiguration");
var Tm;
(function(n) {
  n[n.indexed = 8] = "indexed", n[n.keyed = 4] = "keyed", n[n.array = 9] = "array", n[n.map = 6] = "map", n[n.set = 7] = "set";
})(Tm || (Tm = {}));
var Am;
(function(n) {
  n[n.None = 0] = "None", n[n.Observer = 1] = "Observer", n[n.Node = 2] = "Node", n[n.Layout = 4] = "Layout", n[n.Primtive = 8] = "Primtive", n[n.Array = 18] = "Array", n[n.Set = 34] = "Set", n[n.Map = 66] = "Map";
})(Am || (Am = {}));
function pa(n = 0) {
  const e = Array(n);
  let t = 0;
  for (; t < n; )
    e[t] = t++;
  return e.deletedIndices = [], e.deletedItems = [], e.isIndexMap = !0, e;
}
function dA(n) {
  const e = n.slice();
  return e.deletedIndices = n.deletedIndices.slice(), e.deletedItems = n.deletedItems.slice(), e.isIndexMap = !0, e;
}
function Rn(n) {
  return n == null ? Cm : Cm(n);
}
function Cm(n) {
  const e = n.prototype;
  yr(e, "subs", {
    get: pA
  }), xi(e, "subscribe", hA), xi(e, "unsubscribe", yA);
}
class fA {
  constructor() {
    this.count = 0, this.t = [];
  }
  add(e) {
    return this.t.includes(e) ? !1 : (this.t[this.t.length] = e, ++this.count, !0);
  }
  remove(e) {
    const t = this.t.indexOf(e);
    return t !== -1 ? (this.t.splice(t, 1), --this.count, !0) : !1;
  }
  notify(e, t) {
    const r = this.t.slice(0), i = r.length;
    let s = 0;
    for (; s < i; ++s)
      r[s].handleChange(e, t);
  }
  notifyCollection(e, t) {
    const r = this.t.slice(0), i = r.length;
    let s = 0;
    for (; s < i; ++s)
      r[s].handleCollectionChange(e, t);
  }
}
function pA() {
  return jd(this, "subs", new fA());
}
function hA(n) {
  return this.subs.add(n);
}
function yA(n) {
  return this.subs.remove(n);
}
class vv {
  constructor(e) {
    this.owner = e, this.type = 18, this.v = (this.o = e.collection).length;
  }
  getValue() {
    return this.o.length;
  }
  setValue(e) {
    e !== this.v && (Number.isNaN(e) || (this.o.splice(e), this.v = this.o.length));
  }
  handleCollectionChange(e, t) {
    const r = this.v, i = this.o.length;
    (this.v = i) !== r && this.subs.notify(this.v, r);
  }
}
class r0 {
  constructor(e) {
    this.owner = e, this.v = (this.o = e.collection).size, this.type = hs(this.o) ? 66 : 34;
  }
  getValue() {
    return this.o.size;
  }
  setValue() {
    throw ae("AUR02");
  }
  handleCollectionChange(e, t) {
    const r = this.v, i = this.o.size;
    (this.v = i) !== r && this.subs.notify(this.v, r);
  }
}
function xv(n) {
  const e = n.prototype;
  xi(e, "subscribe", mA), xi(e, "unsubscribe", bA), Rn(n);
}
function mA(n) {
  this.subs.add(n) && this.subs.count === 1 && this.owner.subscribe(this);
}
function bA(n) {
  this.subs.remove(n) && this.subs.count === 0 && this.owner.subscribe(this);
}
xv(vv);
xv(r0);
const Sm = "__au_array_obs__", mi = (() => {
  let n = Bo(Sm, Array);
  return n == null && No(Sm, n = /* @__PURE__ */ new WeakMap(), Array), n;
})();
function gA(n, e) {
  return n === e ? 0 : (n = n === null ? "null" : n.toString(), e = e === null ? "null" : e.toString(), n < e ? -1 : 1);
}
function vA(n, e) {
  return n === void 0 ? e === void 0 ? 0 : 1 : e === void 0 ? -1 : 0;
}
function xA(n, e, t, r, i) {
  let s, a, o, u, l, c, p;
  for (c = t + 1; c < r; c++) {
    for (s = n[c], a = e[c], p = c - 1; p >= t && (o = n[p], u = e[p], l = i(o, s), l > 0); p--)
      n[p + 1] = o, e[p + 1] = u;
    n[p + 1] = s, e[p + 1] = a;
  }
}
function $c(n, e, t, r, i) {
  let s = 0, a = 0, o, u, l, c, p, b, A, g, w, T, _, I, N, B, D, $, H, j, Q;
  for (; ; ) {
    if (r - t <= 10) {
      xA(n, e, t, r, i);
      return;
    }
    s = t + (r - t >> 1), o = n[t], c = e[t], u = n[r - 1], p = e[r - 1], l = n[s], b = e[s], A = i(o, u), A > 0 && (T = o, _ = c, o = u, c = p, u = T, p = _), g = i(o, l), g >= 0 ? (T = o, _ = c, o = l, c = b, l = u, b = p, u = T, p = _) : (w = i(u, l), w > 0 && (T = u, _ = p, u = l, p = b, l = T, b = _)), n[t] = o, e[t] = c, n[r - 1] = l, e[r - 1] = b, I = u, N = p, B = t + 1, D = r - 1, n[s] = n[B], e[s] = e[B], n[B] = I, e[B] = N;
    e:
      for (a = B + 1; a < D; a++)
        if ($ = n[a], H = e[a], j = i($, I), j < 0)
          n[a] = n[B], e[a] = e[B], n[B] = $, e[B] = H, B++;
        else if (j > 0) {
          do {
            if (D--, D == a)
              break e;
            Q = n[D], j = i(Q, I);
          } while (j > 0);
          n[a] = n[D], e[a] = e[D], n[D] = $, e[D] = H, j < 0 && ($ = n[a], H = e[a], n[a] = n[B], e[a] = e[B], n[B] = $, e[B] = H, B++);
        }
    r - D < B - t ? ($c(n, e, D, r, i), r = B) : ($c(n, e, t, B, i), t = D);
  }
}
const Oi = Array.prototype, wA = Oi.push, Vf = Oi.unshift, jf = Oi.pop, Gf = Oi.shift, Gl = Oi.splice, TA = Oi.reverse, AA = Oi.sort, wv = ["push", "unshift", "pop", "shift", "splice", "reverse", "sort"], Tv = {
  push: function(...n) {
    const e = mi.get(this);
    if (e === void 0)
      return wA.apply(this, n);
    const t = this.length, r = n.length;
    if (r === 0)
      return t;
    this.length = e.indexMap.length = t + r;
    let i = t;
    for (; i < this.length; )
      this[i] = n[i - t], e.indexMap[i] = -2, i++;
    return e.notify(), this.length;
  },
  unshift: function(...n) {
    const e = mi.get(this);
    if (e === void 0)
      return Vf.apply(this, n);
    const t = n.length, r = new Array(t);
    let i = 0;
    for (; i < t; )
      r[i++] = -2;
    Vf.apply(e.indexMap, r);
    const s = Vf.apply(this, n);
    return e.notify(), s;
  },
  pop: function() {
    const n = mi.get(this);
    if (n === void 0)
      return jf.call(this);
    const e = n.indexMap, t = jf.call(this), r = e.length - 1;
    return e[r] > -1 && (e.deletedIndices.push(e[r]), e.deletedItems.push(t)), jf.call(e), n.notify(), t;
  },
  shift: function() {
    const n = mi.get(this);
    if (n === void 0)
      return Gf.call(this);
    const e = n.indexMap, t = Gf.call(this);
    return e[0] > -1 && (e.deletedIndices.push(e[0]), e.deletedItems.push(t)), Gf.call(e), n.notify(), t;
  },
  splice: function(...n) {
    const e = n[0], t = n[1], r = mi.get(this);
    if (r === void 0)
      return Gl.apply(this, n);
    const i = this.length, s = 0 | e, a = s < 0 ? Math.max(i + s, 0) : Math.min(s, i), o = r.indexMap, u = n.length, l = u === 0 ? 0 : u === 1 ? i - a : t;
    let c = a;
    if (l > 0) {
      const b = c + l;
      for (; c < b; )
        o[c] > -1 && (o.deletedIndices.push(o[c]), o.deletedItems.push(this[c])), c++;
    }
    if (c = 0, u > 2) {
      const b = u - 2, A = new Array(b);
      for (; c < b; )
        A[c++] = -2;
      Gl.call(o, e, t, ...A);
    } else
      Gl.apply(o, n);
    const p = Gl.apply(this, n);
    return (l > 0 || c > 0) && r.notify(), p;
  },
  reverse: function() {
    const n = mi.get(this);
    if (n === void 0)
      return TA.call(this), this;
    const e = this.length, t = e / 2 | 0;
    let r = 0;
    for (; r !== t; ) {
      const i = e - r - 1, s = this[r], a = n.indexMap[r], o = this[i], u = n.indexMap[i];
      this[r] = o, n.indexMap[r] = u, this[i] = s, n.indexMap[i] = a, r++;
    }
    return n.notify(), this;
  },
  sort: function(n) {
    const e = mi.get(this);
    if (e === void 0)
      return AA.call(this, n), this;
    let t = this.length;
    if (t < 2)
      return this;
    $c(this, e.indexMap, 0, t, vA);
    let r = 0;
    for (; r < t && this[r] !== void 0; )
      r++;
    (n === void 0 || !cr(n)) && (n = gA), $c(this, e.indexMap, 0, r, n);
    let i = !1;
    for (r = 0, t = e.indexMap.length; t > r; ++r)
      if (e.indexMap[r] !== r) {
        i = !0;
        break;
      }
    return i && e.notify(), this;
  }
};
for (const n of wv)
  yr(Tv[n], "observing", {
    value: !0,
    writable: !1,
    configurable: !1,
    enumerable: !1
  });
let Em = !1;
const _m = "__au_arr_on__";
function CA() {
  if (!(Bo(_m, Array) ?? !1)) {
    No(_m, !0, Array);
    for (const n of wv)
      Oi[n].observing !== !0 && jd(Oi, n, Tv[n]);
  }
}
class Av {
  constructor(e) {
    this.type = 18, Em || (Em = !0, CA()), this.indexObservers = {}, this.collection = e, this.indexMap = pa(e.length), this.lenObs = void 0, mi.set(e, this);
  }
  notify() {
    this.subs;
    const e = this.indexMap, t = this.collection, r = t.length;
    this.indexMap = pa(r), this.subs.notifyCollection(t, e);
  }
  getLengthObserver() {
    return this.lenObs ?? (this.lenObs = new vv(this));
  }
  getIndexObserver(e) {
    var t;
    return (t = this.indexObservers)[e] ?? (t[e] = new Cv(this, e));
  }
}
class Cv {
  constructor(e, t) {
    this.owner = e, this.index = t, this.doNotCache = !0, this.value = this.getValue();
  }
  getValue() {
    return this.owner.collection[this.index];
  }
  setValue(e) {
    if (e === this.getValue())
      return;
    const t = this.owner, r = this.index, i = t.indexMap;
    i[r] > -1 && i.deletedIndices.push(i[r]), i[r] = -2, t.collection[r] = e, t.notify();
  }
  handleCollectionChange(e, t) {
    const r = this.index;
    if (t[r] === r)
      return;
    const s = this.value, a = this.value = this.getValue();
    s !== a && this.subs.notify(a, s);
  }
  subscribe(e) {
    this.subs.add(e) && this.subs.count === 1 && this.owner.subscribe(this);
  }
  unsubscribe(e) {
    this.subs.remove(e) && this.subs.count === 0 && this.owner.unsubscribe(this);
  }
}
Rn(Av);
Rn(Cv);
function xu(n) {
  let e = mi.get(n);
  return e === void 0 && (e = new Av(n)), e;
}
const SA = (n, e) => n - e;
function EA(n) {
  let e = 0, t = 0, r = 0;
  const i = dA(n);
  i.deletedIndices.length > 1 && i.deletedIndices.sort(SA);
  const s = i.length;
  for (; r < s; ++r) {
    for (; i.deletedIndices[t] <= r - e; )
      ++t, --e;
    i[r] === -2 ? ++e : i[r] += e;
  }
  return i;
}
function _A(n, e) {
  const t = n.slice(), r = e.length;
  let i = 0, s = 0;
  for (; i < r; )
    s = e[i], s !== -2 && (n[i] = t[s]), ++i;
}
const Mm = "__au_set_obs__", wu = (() => {
  let n = Bo(Mm, Set);
  return n == null && No(Mm, n = /* @__PURE__ */ new WeakMap(), Set), n;
})(), $u = Set.prototype, Rm = $u.add, Pm = $u.clear, Om = $u.delete, Sv = ["add", "clear", "delete"], Ev = {
  add: function(n) {
    const e = wu.get(this);
    if (e === void 0)
      return Rm.call(this, n), this;
    const t = this.size;
    return Rm.call(this, n), this.size === t ? this : (e.indexMap[t] = -2, e.notify(), this);
  },
  clear: function() {
    const n = wu.get(this);
    if (n === void 0)
      return Pm.call(this);
    if (this.size > 0) {
      const t = n.indexMap;
      let r = 0;
      for (const i of this.keys())
        t[r] > -1 && (t.deletedIndices.push(t[r]), t.deletedItems.push(i)), r++;
      Pm.call(this), t.length = 0, n.notify();
    }
  },
  delete: function(n) {
    const e = wu.get(this);
    if (e === void 0)
      return Om.call(this, n);
    if (this.size === 0)
      return !1;
    let r = 0;
    const i = e.indexMap;
    for (const s of this.keys()) {
      if (s === n) {
        i[r] > -1 && (i.deletedIndices.push(i[r]), i.deletedItems.push(s)), i.splice(r, 1);
        const a = Om.call(this, n);
        return a === !0 && e.notify(), a;
      }
      r++;
    }
    return !1;
  }
}, MA = {
  writable: !0,
  enumerable: !1,
  configurable: !0
};
for (const n of Sv)
  yr(Ev[n], "observing", {
    value: !0,
    writable: !1,
    configurable: !1,
    enumerable: !1
  });
let Im = !1;
const km = "__au_set_on__";
function RA() {
  if (!(Bo(km, Set) ?? !1)) {
    No(km, !0, Set);
    for (const n of Sv)
      $u[n].observing !== !0 && yr($u, n, {
        ...MA,
        value: Ev[n]
      });
  }
}
class _v {
  constructor(e) {
    this.type = 34, Im || (Im = !0, RA()), this.collection = e, this.indexMap = pa(e.size), this.lenObs = void 0, wu.set(e, this);
  }
  notify() {
    this.subs;
    const e = this.indexMap, t = this.collection, r = t.size;
    this.indexMap = pa(r), this.subs.notifyCollection(t, e);
  }
  getLengthObserver() {
    return this.lenObs ?? (this.lenObs = new r0(this));
  }
}
Rn(_v);
function Uc(n) {
  let e = wu.get(n);
  return e === void 0 && (e = new _v(n)), e;
}
const Dm = "__au_map_obs__", Tu = (() => {
  let n = Bo(Dm, Map);
  return n == null && No(Dm, n = /* @__PURE__ */ new WeakMap(), Map), n;
})(), Uu = Map.prototype, Bm = Uu.set, Nm = Uu.clear, Fm = Uu.delete, Mv = ["set", "clear", "delete"], Rv = {
  set: function(n, e) {
    const t = Tu.get(this);
    if (t === void 0)
      return Bm.call(this, n, e), this;
    const r = this.get(n), i = this.size;
    if (Bm.call(this, n, e), this.size === i) {
      let a = 0;
      for (const o of this.entries()) {
        if (o[0] === n)
          return o[1] !== r && (t.indexMap.deletedIndices.push(t.indexMap[a]), t.indexMap.deletedItems.push(o), t.indexMap[a] = -2, t.notify()), this;
        a++;
      }
      return this;
    }
    return t.indexMap[i] = -2, t.notify(), this;
  },
  clear: function() {
    const n = Tu.get(this);
    if (n === void 0)
      return Nm.call(this);
    if (this.size > 0) {
      const t = n.indexMap;
      let r = 0;
      for (const i of this.keys())
        t[r] > -1 && (t.deletedIndices.push(t[r]), t.deletedItems.push(i)), r++;
      Nm.call(this), t.length = 0, n.notify();
    }
  },
  delete: function(n) {
    const e = Tu.get(this);
    if (e === void 0)
      return Fm.call(this, n);
    if (this.size === 0)
      return !1;
    let r = 0;
    const i = e.indexMap;
    for (const s of this.keys()) {
      if (s === n) {
        i[r] > -1 && (i.deletedIndices.push(i[r]), i.deletedItems.push(s)), i.splice(r, 1);
        const a = Fm.call(this, n);
        return a === !0 && e.notify(), a;
      }
      ++r;
    }
    return !1;
  }
}, PA = {
  writable: !0,
  enumerable: !1,
  configurable: !0
};
for (const n of Mv)
  yr(Rv[n], "observing", {
    value: !0,
    writable: !1,
    configurable: !1,
    enumerable: !1
  });
let Lm = !1;
const $m = "__au_map_on__";
function OA() {
  if (!(Bo($m, Map) ?? !1)) {
    No($m, !0, Map);
    for (const n of Mv)
      Uu[n].observing !== !0 && yr(Uu, n, {
        ...PA,
        value: Rv[n]
      });
  }
}
class Pv {
  constructor(e) {
    this.type = 66, Lm || (Lm = !0, OA()), this.collection = e, this.indexMap = pa(e.size), this.lenObs = void 0, Tu.set(e, this);
  }
  notify() {
    const e = this.subs, t = this.indexMap, r = this.collection, i = r.size;
    this.indexMap = pa(i), e.notifyCollection(r, t);
  }
  getLengthObserver() {
    return this.lenObs ?? (this.lenObs = new r0(this));
  }
}
Rn(Pv);
function Vc(n) {
  let e = Tu.get(n);
  return e === void 0 && (e = new Pv(n)), e;
}
function IA() {
  return jd(this, "obs", new LA(this));
}
function kA(n, e) {
  this.obs.add(this.oL.getObserver(n, e));
}
function DA(n) {
  let e;
  if (Ts(n))
    e = xu(n);
  else if (yl(n))
    e = Uc(n);
  else if (hs(n))
    e = Vc(n);
  else
    throw ae("AUR0210");
  this.obs.add(e);
}
function BA(n) {
  this.obs.add(n);
}
function NA() {
  throw ae("AUR2011:handleChange");
}
function FA() {
  throw ae("AUR2011:handleCollectionChange");
}
class LA {
  constructor(e) {
    this.version = 0, this.count = 0, this.o = /* @__PURE__ */ new Map(), this.b = e;
  }
  add(e) {
    this.o.has(e) || (e.subscribe(this.b), ++this.count), this.o.set(e, this.version);
  }
  clear() {
    this.o.forEach(UA, this), this.count = this.o.size;
  }
  clearAll() {
    this.o.forEach($A, this), this.o.clear(), this.count = 0;
  }
}
function $A(n, e) {
  e.unsubscribe(this.b);
}
function UA(n, e) {
  this.version !== n && (e.unsubscribe(this.b), this.o.delete(e));
}
function Um(n) {
  const e = n.prototype;
  return xi(e, "observe", kA), xi(e, "observeCollection", DA), xi(e, "subscribeTo", BA), yr(e, "obs", {
    get: IA
  }), xi(e, "handleChange", NA), xi(e, "handleCollectionChange", FA), n;
}
function Lr(n) {
  return n == null ? Um : Um(n);
}
const i0 = Do("IExpressionParser", (n) => n.singleton(VA));
class VA {
  constructor() {
    this.i = vu(), this.u = vu(), this.h = vu();
  }
  parse(e, t) {
    let r;
    switch (t) {
      case 32:
        return new n0(e);
      case 1:
        return r = this.h[e], r === void 0 && (r = this.h[e] = this.$parse(e, t)), r;
      case 2:
        return r = this.u[e], r === void 0 && (r = this.u[e] = this.$parse(e, t)), r;
      default:
        if (e.length === 0) {
          if ((t & 24) > 0)
            return rn.$empty;
          throw iC();
        }
        return r = this.i[e], r === void 0 && (r = this.i[e] = this.$parse(e, t)), r;
    }
  }
  $parse(e, t) {
    return Re = e, Ce = 0, ti = e.length, Jn = 0, ha = 0, ee = 6291456, Ue = "", xt = ya(0), Pe = !0, Se = !1, a0 = -1, Pt(61, t === void 0 ? 16 : t);
  }
}
function s0(n) {
  switch (n) {
    case 98:
      return 8;
    case 116:
      return 9;
    case 110:
      return 10;
    case 118:
      return 11;
    case 102:
      return 12;
    case 114:
      return 13;
    case 34:
      return 34;
    case 39:
      return 39;
    case 92:
      return 92;
    default:
      return n;
  }
}
const jA = rn.$false, GA = rn.$true, WA = rn.$null, Ov = rn.$undefined, Au = Mi.$this, Wf = Mi.$parent;
var Vm;
(function(n) {
  n[n.None = 0] = "None", n[n.Interpolation = 1] = "Interpolation", n[n.IsIterator = 2] = "IsIterator", n[n.IsChainable = 4] = "IsChainable", n[n.IsFunction = 8] = "IsFunction", n[n.IsProperty = 16] = "IsProperty", n[n.IsCustom = 32] = "IsCustom";
})(Vm || (Vm = {}));
let Re = "", Ce = 0, ti = 0, Jn = 0, ha = 0, ee = 6291456, Ue = "", xt, Pe = !0, Se = !1, a0 = -1;
const Vu = String.fromCharCode, ya = (n) => Re.charCodeAt(n), uo = () => Re.slice(ha, Ce);
function Pt(n, e) {
  if (e === 32)
    return new n0(Re);
  if (Ce === 0) {
    if (1 & e)
      return YA();
    if (le(), 4194304 & ee)
      throw tC();
  }
  Pe = 513 > n, Se = !1;
  let t = !1, r, i = 0;
  if (131072 & ee) {
    const s = bc[63 & ee];
    le(), r = new nA(s, Pt(514, e)), Pe = !1;
  } else {
    e:
      switch (ee) {
        case 12294:
          i = Jn, Pe = !1;
          do
            switch (le(), ++i, ee) {
              case 65545:
                if (le(), (12288 & ee) === 0)
                  throw hi();
                break;
              case 10:
              case 11:
                throw hi();
              case 2162700:
                if (Se = !0, le(), (12288 & ee) === 0) {
                  r = i === 0 ? Au : i === 1 ? Wf : new Mi(i), t = !0;
                  break e;
                }
                break;
              default:
                if (2097152 & ee) {
                  r = i === 0 ? Au : i === 1 ? Wf : new Mi(i);
                  break e;
                }
                throw nC();
            }
          while (ee === 12294);
        case 4096: {
          const s = Ue;
          if (2 & e ? r = new Lc(s) : r = new pc(s, i), Pe = !Se, le(), Er(50)) {
            if (ee === 524296)
              throw Lv();
            const a = Se, o = Jn;
            ++Jn;
            const u = Pt(62, 0);
            Se = a, Jn = o, Pe = !1, r = new Gp([new Lc(s)], u);
          }
          break;
        }
        case 10:
          throw pC();
        case 11:
          throw zp();
        case 12292:
          switch (Pe = !1, le(), Jn) {
            case 0:
              r = Au;
              break;
            case 1:
              r = Wf;
              break;
            default:
              r = new Mi(Jn);
              break;
          }
          break;
        case 2688007:
          r = KA(e);
          break;
        case 2688016:
          r = Re.search(/\s+of\s+/) > Ce ? zA() : qA(e);
          break;
        case 524296:
          r = JA(e);
          break;
        case 2163759:
          r = new Fc([Ue]), Pe = !1, le();
          break;
        case 2163760:
          r = zf(e, r, !1);
          break;
        case 16384:
        case 32768:
          r = new rn(Ue), Pe = !1, le();
          break;
        case 8194:
        case 8195:
        case 8193:
        case 8192:
          r = bc[63 & ee], Pe = !1, le();
          break;
        default:
          throw Ce >= ti ? rC() : Hf();
      }
    if (2 & e)
      return QA(r);
    if (514 < n)
      return r;
    if (ee === 10 || ee === 11)
      throw hi();
    if (r.$kind === 0)
      switch (ee) {
        case 2162700:
          if (Se = !0, Pe = !1, le(), (13312 & ee) === 0)
            throw o0();
          if (12288 & ee)
            r = new pc(Ue, r.ancestor), le();
          else if (ee === 2688007)
            r = new hc(r, zr(), !0);
          else if (ee === 2688016)
            r = yc(r, !0);
          else
            throw mc();
          break;
        case 65545:
          if (Pe = !Se, le(), (12288 & ee) === 0)
            throw hi();
          r = new pc(Ue, r.ancestor), le();
          break;
        case 10:
        case 11:
          throw hi();
        case 2688007:
          r = new hc(r, zr(), t);
          break;
        case 2688016:
          r = yc(r, t);
          break;
        case 2163759:
          r = jm(r);
          break;
        case 2163760:
          r = zf(e, r, !0);
          break;
      }
    for (; (65536 & ee) > 0; )
      switch (ee) {
        case 2162700:
          r = HA(r);
          break;
        case 65545:
          if (le(), (12288 & ee) === 0)
            throw hi();
          r = Iv(r, !1);
          break;
        case 10:
        case 11:
          throw hi();
        case 2688007:
          r.$kind === 1 ? r = new hv(r.name, zr(), r.ancestor, !1) : r.$kind === 10 ? r = new Nc(r.object, r.name, zr(), r.optional, !1) : r = new hc(r, zr(), !1);
          break;
        case 2688016:
          r = yc(r, !1);
          break;
        case 2163759:
          if (Se)
            throw mc();
          r = jm(r);
          break;
        case 2163760:
          if (Se)
            throw mc();
          r = zf(e, r, !0);
          break;
      }
  }
  if (ee === 10 || ee === 11)
    throw hi();
  if (513 < n)
    return r;
  for (; (262144 & ee) > 0; ) {
    const s = ee;
    if ((960 & s) <= n)
      break;
    le(), r = new tA(bc[63 & s], r, Pt(960 & s, e)), Pe = !1;
  }
  if (63 < n)
    return r;
  if (Er(6291478)) {
    const s = Pt(62, e);
    Br(6291476), r = new eA(r, s, Pt(62, e)), Pe = !1;
  }
  if (62 < n)
    return r;
  if (Er(4194349)) {
    if (!Pe)
      throw sC();
    r = new Z3(r, Pt(62, e));
  }
  if (61 < n)
    return r;
  for (; Er(6291480); ) {
    if (ee === 6291456)
      throw aC();
    const s = Ue;
    le();
    const a = new Array();
    for (; Er(6291476); )
      a.push(Pt(62, e));
    r = new Lu(r, s, a);
  }
  for (; Er(6291479); ) {
    if (ee === 6291456)
      throw oC();
    const s = Ue;
    le();
    const a = new Array();
    for (; Er(6291476); )
      a.push(Pt(62, e));
    r = new X3(r, s, a);
  }
  if (ee !== 6291456) {
    if ((1 & e) > 0 && ee === 7340045)
      return r;
    if ((4 & e) > 0 && ee === 6291477) {
      if (Ce === ti)
        throw Hf();
      return a0 = Ce - 1, r;
    }
    throw uo() === "of" ? uC() : Hf();
  }
  return r;
}
function zA() {
  const n = [], e = new aA(24, n, void 0, void 0);
  let t = "", r = !0, i = 0;
  for (; r; )
    switch (le(), ee) {
      case 7340051:
        r = !1, s();
        break;
      case 6291471:
        s();
        break;
      case 4096:
        t = uo();
        break;
      default:
        throw dC();
    }
  return Br(7340051), e;
  function s() {
    t !== "" ? (n.push(new bv(new Up(Au, t), new pv(Au, new rn(i++)), void 0)), t = "") : i++;
  }
}
function zr() {
  const n = Se;
  le();
  const e = [];
  for (; ee !== 7340046 && (e.push(Pt(62, 0)), !!Er(6291471)); )
    ;
  return Br(7340046), Pe = !1, Se = n, e;
}
function yc(n, e) {
  const t = Se;
  return le(), n = new pv(n, Pt(62, 0), e), Br(7340051), Pe = !t, Se = t, n;
}
function HA(n) {
  if (Se = !0, Pe = !1, le(), (13312 & ee) === 0)
    throw o0();
  if (12288 & ee)
    return Iv(n, !0);
  if (ee === 2688007)
    return n.$kind === 1 ? new hv(n.name, zr(), n.ancestor, !0) : n.$kind === 10 ? new Nc(n.object, n.name, zr(), n.optional, !0) : new hc(n, zr(), !0);
  if (ee === 2688016)
    return yc(n, !0);
  throw mc();
}
function Iv(n, e) {
  const t = Ue;
  switch (ee) {
    case 2162700: {
      Se = !0, Pe = !1;
      const r = Ce, i = ha, s = ee, a = xt, o = Ue, u = Pe, l = Se;
      if (le(), (13312 & ee) === 0)
        throw o0();
      return ee === 2688007 ? new Nc(n, t, zr(), e, !0) : (Ce = r, ha = i, ee = s, xt = a, Ue = o, Pe = u, Se = l, new Up(n, t, e));
    }
    case 2688007:
      return Pe = !1, new Nc(n, t, zr(), e, !1);
    default:
      return Pe = !Se, le(), new Up(n, t, e);
  }
}
function KA(n) {
  le();
  const e = Ce, t = ha, r = ee, i = xt, s = Ue, a = Pe, o = Se, u = [];
  let l = 1, c = !1;
  e:
    for (; ; ) {
      if (ee === 11) {
        if (le(), ee !== 4096)
          throw hi();
        if (u.push(new Lc(Ue)), le(), ee === 6291471)
          throw fC();
        if (ee !== 7340046 || (le(), ee !== 50))
          throw zp();
        le();
        const A = Se, g = Jn;
        ++Jn;
        const w = Pt(62, 0);
        return Se = A, Jn = g, Pe = !1, new Gp(u, w, !0);
      }
      switch (ee) {
        case 4096:
          u.push(new Lc(Ue)), le();
          break;
        case 7340046:
          le();
          break e;
        case 524296:
        case 2688016:
          le(), l = 4;
          break;
        case 6291471:
          l = 2, c = !0;
          break e;
        case 2688007:
          l = 2;
          break e;
        default:
          le(), l = 2;
          break;
      }
      switch (ee) {
        case 6291471:
          if (le(), c = !0, l === 1)
            break;
          break e;
        case 7340046:
          le();
          break e;
        case 4194349:
          l === 1 && (l = 3);
          break e;
        case 50:
          if (c)
            throw Wl();
          le(), l = 2;
          break e;
        default:
          l === 1 && (l = 2);
          break e;
      }
    }
  if (ee === 50) {
    if (l === 1) {
      if (le(), ee === 524296)
        throw Lv();
      const A = Se, g = Jn;
      ++Jn;
      const w = Pt(62, 0);
      return Se = A, Jn = g, Pe = !1, new Gp(u, w);
    }
    throw Wl();
  } else if (l === 1 && u.length === 0)
    throw Nv(50);
  if (c)
    switch (l) {
      case 2:
        throw Wl();
      case 3:
        throw Wm();
      case 4:
        throw zm();
    }
  Ce = e, ha = t, ee = r, xt = i, Ue = s, Pe = a, Se = o;
  const p = Se, b = Pt(62, n);
  if (Se = p, Br(7340046), ee === 50)
    switch (l) {
      case 2:
        throw Wl();
      case 3:
        throw Wm();
      case 4:
        throw zm();
    }
  return b;
}
function qA(n) {
  const e = Se;
  le();
  const t = new Array();
  for (; ee !== 7340051; )
    if (Er(6291471)) {
      if (t.push(Ov), ee === 7340051)
        break;
    } else if (t.push(Pt(62, -3 & n)), Er(6291471)) {
      if (ee === 7340051)
        break;
    } else
      break;
  return Se = e, Br(7340051), 2 & n ? new rA(t) : (Pe = !1, new Vp(t));
}
function QA(n) {
  if ((n.$kind & 23) === 0 || ee !== 4204593)
    throw Gm();
  le();
  const e = n, t = Pt(61, 4);
  return new sA(e, t, a0);
}
function JA(n) {
  const e = Se, t = new Array(), r = new Array();
  for (le(); ee !== 7340045; ) {
    if (t.push(Ue), 49152 & ee)
      le(), Br(6291476), r.push(Pt(62, -3 & n));
    else if (12288 & ee) {
      const i = xt, s = ee, a = Ce;
      le(), Er(6291476) ? r.push(Pt(62, -3 & n)) : (xt = i, ee = s, Ce = a, r.push(Pt(515, -3 & n)));
    } else
      throw lC();
    ee !== 7340045 && Br(6291471);
  }
  return Se = e, Br(7340045), 2 & n ? new iA(t, r) : (Pe = !1, new jp(t, r));
}
function YA() {
  const n = [], e = [], t = ti;
  let r = "";
  for (; Ce < t; ) {
    switch (xt) {
      case 36:
        if (ya(Ce + 1) === 123) {
          n.push(r), r = "", Ce += 2, xt = ya(Ce), le();
          const i = Pt(61, 1);
          e.push(i);
          continue;
        } else
          r += "$";
        break;
      case 92:
        r += Vu(s0(me()));
        break;
      default:
        r += Vu(xt);
    }
    me();
  }
  return e.length ? (n.push(r), new mv(n, e)) : null;
}
function zf(n, e, t) {
  const r = Se, i = [Ue];
  Br(2163760);
  const s = [Pt(62, n)];
  for (; (ee = eC()) !== 2163759; )
    i.push(Ue), Br(2163760), s.push(Pt(62, n));
  return i.push(Ue), Pe = !1, Se = r, t ? (le(), new yv(i, i, e, s)) : (le(), new Fc(i, s));
}
function jm(n) {
  Pe = !1;
  const e = [Ue];
  return le(), new yv(e, e, n);
}
function le() {
  for (; Ce < ti; )
    if (ha = Ce, (ee = ke[xt]()) != null)
      return;
  ee = 6291456;
}
function me() {
  return xt = ya(++Ce);
}
function XA() {
  for (; u0[me()]; )
    ;
  const n = hC[Ue = uo()];
  return n === void 0 ? 4096 : n;
}
function kv(n) {
  let e = xt;
  if (n === !1) {
    do
      e = me();
    while (e <= 57 && e >= 48);
    if (e !== 46)
      return Ue = parseInt(uo(), 10), 32768;
    if (e = me(), Ce >= ti)
      return Ue = parseInt(uo().slice(0, -1), 10), 32768;
  }
  if (e <= 57 && e >= 48)
    do
      e = me();
    while (e <= 57 && e >= 48);
  else
    xt = ya(--Ce);
  return Ue = parseFloat(uo()), 32768;
}
function ZA() {
  const n = xt;
  me();
  let e = 0;
  const t = new Array();
  let r = Ce;
  for (; xt !== n; )
    if (xt === 92)
      t.push(Re.slice(r, Ce)), me(), e = s0(xt), me(), t.push(Vu(e)), r = Ce;
    else {
      if (Ce >= ti)
        throw cC();
      me();
    }
  const i = Re.slice(r, Ce);
  return me(), t.push(i), Ue = t.join(""), 16384;
}
function Dv() {
  let n = !0, e = "";
  for (; me() !== 96; )
    if (xt === 36)
      if (Ce + 1 < ti && ya(Ce + 1) === 123) {
        Ce++, n = !1;
        break;
      } else
        e += "$";
    else if (xt === 92)
      e += Vu(s0(me()));
    else {
      if (Ce >= ti)
        throw Bv();
      e += Vu(xt);
    }
  return me(), Ue = e, n ? 2163759 : 2163760;
}
const eC = () => {
  if (Ce >= ti)
    throw Bv();
  return Ce--, Dv();
}, Er = (n) => ee === n ? (le(), !0) : !1, Br = (n) => {
  if (ee === n)
    le();
  else
    throw Nv(n);
}, tC = () => ae(`AUR0151:${Re}`), zp = () => ae(`AUR0152:${Re}`), hi = () => ae(`AUR0153:${Re}`), nC = () => ae(`AUR0154:${Re}`), rC = () => ae(`AUR0155:${Re}`), Hf = () => ae(`AUR0156:${Re}`), iC = () => ae("AUR0157"), sC = () => ae(`AUR0158:${Re}`), aC = () => ae(`AUR0159:${Re}`), oC = () => ae(`AUR0160:${Re}`), uC = () => ae(`AUR0161:${Re}`), Gm = () => ae(`AUR0163:${Re}`), lC = () => ae(`AUR0164:${Re}`), cC = () => ae(`AUR0165:${Re}`), Bv = () => ae(`AUR0166:${Re}`), Nv = (n) => ae(`AUR0167:${Re}<${bc[63 & n]}`), Fv = () => {
  throw ae(`AUR0168:${Re}`);
};
Fv.notMapped = !0;
const dC = () => ae(`AUR0170:${Re}`), o0 = () => ae(`AUR0171:${Re}`), mc = () => ae(`AUR0172:${Re}`), Wl = () => ae(`AUR0173:${Re}`), Wm = () => ae(`AUR0174:${Re}`), zm = () => ae(`AUR0175:${Re}`), fC = () => ae(`AUR0176:${Re}`), Lv = () => ae(`AUR0178:${Re}`), pC = () => ae(`AUR0179:${Re}`), bc = [jA, GA, WA, Ov, "$this", null, "$parent", "(", "{", ".", "..", "...", "?.", "}", ")", ",", "[", "]", ":", ";", "?", "'", '"', "&", "|", "??", "||", "&&", "==", "!=", "===", "!==", "<", ">", "<=", ">=", "in", "instanceof", "+", "-", "typeof", "void", "*", "%", "/", "=", "!", 2163759, 2163760, "of", "=>"], hC = Object.assign(/* @__PURE__ */ Object.create(null), {
  true: 8193,
  null: 8194,
  false: 8192,
  undefined: 8195,
  $this: 12292,
  $parent: 12294,
  in: 6562212,
  instanceof: 6562213,
  typeof: 139304,
  void: 139305,
  of: 4204593
}), Fo = {
  AsciiIdPart: [36, 0, 48, 58, 65, 91, 95, 0, 97, 123],
  IdStart: [36, 0, 65, 91, 95, 0, 97, 123, 170, 0, 186, 0, 192, 215, 216, 247, 248, 697, 736, 741, 7424, 7462, 7468, 7517, 7522, 7526, 7531, 7544, 7545, 7615, 7680, 7936, 8305, 0, 8319, 0, 8336, 8349, 8490, 8492, 8498, 0, 8526, 0, 8544, 8585, 11360, 11392, 42786, 42888, 42891, 42927, 42928, 42936, 42999, 43008, 43824, 43867, 43868, 43877, 64256, 64263, 65313, 65339, 65345, 65371],
  Digit: [48, 58],
  Skip: [0, 33, 127, 161]
}, Lo = (n, e, t, r) => {
  const i = t.length;
  for (let s = 0; s < i; s += 2) {
    const a = t[s];
    let o = t[s + 1];
    if (o = o > 0 ? o : a + 1, n && n.fill(r, a, o), e)
      for (let u = a; u < o; u++)
        e.add(u);
  }
}, Gn = (n) => () => (me(), n), yC = /* @__PURE__ */ new Set();
Lo(null, yC, Fo.AsciiIdPart, !0);
const u0 = new Uint8Array(65535);
Lo(u0, null, Fo.IdStart, 1);
Lo(u0, null, Fo.Digit, 1);
const ke = new Array(65535);
ke.fill(Fv, 0, 65535);
Lo(ke, null, Fo.Skip, () => (me(), null));
Lo(ke, null, Fo.IdStart, XA);
Lo(ke, null, Fo.Digit, () => kv(!1));
ke[34] = ke[39] = () => ZA();
ke[96] = () => Dv();
ke[33] = () => me() !== 61 ? 131118 : me() !== 61 ? 6553949 : (me(), 6553951);
ke[61] = () => me() === 62 ? (me(), 50) : xt !== 61 ? 4194349 : me() !== 61 ? 6553948 : (me(), 6553950);
ke[38] = () => me() !== 38 ? 6291479 : (me(), 6553883);
ke[124] = () => me() !== 124 ? 6291480 : (me(), 6553818);
ke[63] = () => {
  if (me() === 46) {
    const n = ya(Ce + 1);
    return n <= 48 || n >= 57 ? (me(), 2162700) : 6291478;
  }
  return xt !== 63 ? 6291478 : (me(), 6553753);
};
ke[46] = () => me() <= 57 && xt >= 48 ? kv(!0) : xt === 46 ? me() !== 46 ? 10 : (me(), 11) : 65545;
ke[60] = () => me() !== 61 ? 6554016 : (me(), 6554018);
ke[62] = () => me() !== 61 ? 6554017 : (me(), 6554019);
ke[37] = Gn(6554155);
ke[40] = Gn(2688007);
ke[41] = Gn(7340046);
ke[42] = Gn(6554154);
ke[43] = Gn(2490854);
ke[44] = Gn(6291471);
ke[45] = Gn(2490855);
ke[47] = Gn(6554156);
ke[58] = Gn(6291476);
ke[59] = Gn(6291477);
ke[91] = Gn(2688016);
ke[93] = Gn(7340051);
ke[123] = Gn(524296);
ke[125] = Gn(7340045);
let ve = null;
const ro = [];
let Ii = !1;
function mC() {
  Ii = !1;
}
function bC() {
  Ii = !0;
}
function l0() {
  return ve;
}
function c0(n) {
  if (n == null)
    throw ae("AUR0206");
  if (ve == null) {
    ve = n, ro[0] = ve, Ii = !0;
    return;
  }
  if (ve === n)
    throw ae("AUR0207");
  ro.push(n), ve = n, Ii = !0;
}
function d0(n) {
  if (n == null)
    throw ae("AUR0208");
  if (ve !== n)
    throw ae("AUR0209");
  ro.pop(), ve = ro.length > 0 ? ro[ro.length - 1] : null, Ii = ve != null;
}
const gC = Object.freeze({
  get current() {
    return ve;
  },
  get connecting() {
    return Ii;
  },
  enter: c0,
  exit: d0,
  pause: mC,
  resume: bC
}), bo = Reflect.get, vC = Object.prototype.toString, $v = /* @__PURE__ */ new WeakMap();
function Uv(n) {
  switch (vC.call(n)) {
    case "[object Object]":
    case "[object Array]":
    case "[object Map]":
    case "[object Set]":
      return !0;
    default:
      return !1;
  }
}
const $o = "__raw__";
function be(n) {
  return Uv(n) ? Gd(n) : n;
}
function Gd(n) {
  return $v.get(n) ?? xC(n);
}
function _e(n) {
  return n[$o] ?? n;
}
function _n(n) {
  return Uv(n) && n[$o] || n;
}
function f0(n) {
  return n === "constructor" || n === "__proto__" || n === "$observers" || n === Symbol.toPrimitive || n === Symbol.toStringTag;
}
function xC(n) {
  const e = Ts(n) ? TC : hs(n) || yl(n) ? zC : wC, t = new Proxy(n, e);
  return $v.set(n, t), t;
}
const wC = {
  get(n, e, t) {
    if (e === $o)
      return n;
    const r = l0();
    return !Ii || f0(e) || r == null ? bo(n, e, t) : (r.observe(n, e), be(bo(n, e, t)));
  }
}, TC = {
  get(n, e, t) {
    if (e === $o)
      return n;
    if (!Ii || f0(e) || ve == null)
      return bo(n, e, t);
    switch (e) {
      case "length":
        return ve.observe(n, "length"), n.length;
      case "map":
        return AC;
      case "includes":
        return EC;
      case "indexOf":
        return _C;
      case "lastIndexOf":
        return MC;
      case "every":
        return CC;
      case "filter":
        return SC;
      case "find":
        return PC;
      case "findIndex":
        return RC;
      case "flat":
        return OC;
      case "flatMap":
        return IC;
      case "join":
        return kC;
      case "push":
        return BC;
      case "pop":
        return DC;
      case "reduce":
        return GC;
      case "reduceRight":
        return WC;
      case "reverse":
        return $C;
      case "shift":
        return NC;
      case "unshift":
        return FC;
      case "slice":
        return jC;
      case "splice":
        return LC;
      case "some":
        return UC;
      case "sort":
        return VC;
      case "keys":
        return Vv;
      case "values":
      case Symbol.iterator:
        return Hp;
      case "entries":
        return Kp;
    }
    return ve.observe(n, e), be(bo(n, e, t));
  },
  ownKeys(n) {
    return l0()?.observe(n, "length"), Reflect.ownKeys(n);
  }
};
function AC(n, e) {
  const t = _e(this), r = t.map((i, s) => _n(n.call(e, be(i), s, this)));
  return _t(ve, t), be(r);
}
function CC(n, e) {
  const t = _e(this), r = t.every((i, s) => n.call(e, be(i), s, this));
  return _t(ve, t), r;
}
function SC(n, e) {
  const t = _e(this), r = t.filter((i, s) => _n(n.call(e, be(i), s, this)));
  return _t(ve, t), be(r);
}
function EC(n) {
  const e = _e(this), t = e.includes(_n(n));
  return _t(ve, e), t;
}
function _C(n) {
  const e = _e(this), t = e.indexOf(_n(n));
  return _t(ve, e), t;
}
function MC(n) {
  const e = _e(this), t = e.lastIndexOf(_n(n));
  return _t(ve, e), t;
}
function RC(n, e) {
  const t = _e(this), r = t.findIndex((i, s) => _n(n.call(e, be(i), s, this)));
  return _t(ve, t), r;
}
function PC(n, e) {
  const t = _e(this), r = t.find((i, s) => n(be(i), s, this), e);
  return _t(ve, t), be(r);
}
function OC() {
  const n = _e(this);
  return _t(ve, n), be(n.flat());
}
function IC(n, e) {
  const t = _e(this);
  return _t(ve, t), Gd(t.flatMap((r, i) => be(n.call(e, be(r), i, this))));
}
function kC(n) {
  const e = _e(this);
  return _t(ve, e), e.join(n);
}
function DC() {
  return be(_e(this).pop());
}
function BC(...n) {
  return _e(this).push(...n);
}
function NC() {
  return be(_e(this).shift());
}
function FC(...n) {
  return _e(this).unshift(...n);
}
function LC(...n) {
  return be(_e(this).splice(...n));
}
function $C(...n) {
  const e = _e(this), t = e.reverse();
  return _t(ve, e), be(t);
}
function UC(n, e) {
  const t = _e(this), r = t.some((i, s) => _n(n.call(e, be(i), s, this)));
  return _t(ve, t), r;
}
function VC(n) {
  const e = _e(this), t = e.sort(n);
  return _t(ve, e), be(t);
}
function jC(n, e) {
  const t = _e(this);
  return _t(ve, t), Gd(t.slice(n, e));
}
function GC(n, e) {
  const t = _e(this), r = t.reduce((i, s, a) => n(i, be(s), a, this), e);
  return _t(ve, t), be(r);
}
function WC(n, e) {
  const t = _e(this), r = t.reduceRight((i, s, a) => n(i, be(s), a, this), e);
  return _t(ve, t), be(r);
}
const zC = {
  get(n, e, t) {
    if (e === $o)
      return n;
    const r = l0();
    if (!Ii || f0(e) || r == null)
      return bo(n, e, t);
    switch (e) {
      case "size":
        return r.observe(n, "size"), n.size;
      case "clear":
        return YC;
      case "delete":
        return XC;
      case "forEach":
        return HC;
      case "add":
        if (yl(n))
          return JC;
        break;
      case "get":
        if (hs(n))
          return qC;
        break;
      case "set":
        if (hs(n))
          return QC;
        break;
      case "has":
        return KC;
      case "keys":
        return Vv;
      case "values":
        return Hp;
      case "entries":
        return Kp;
      case Symbol.iterator:
        return hs(n) ? Kp : Hp;
    }
    return be(bo(n, e, t));
  }
};
function HC(n, e) {
  const t = _e(this);
  return _t(ve, t), t.forEach((r, i) => {
    n.call(e, be(r), be(i), this);
  });
}
function KC(n) {
  const e = _e(this);
  return _t(ve, e), e.has(_n(n));
}
function qC(n) {
  const e = _e(this);
  return _t(ve, e), be(e.get(_n(n)));
}
function QC(n, e) {
  return be(_e(this).set(_n(n), _n(e)));
}
function JC(n) {
  return be(_e(this).add(_n(n)));
}
function YC() {
  return be(_e(this).clear());
}
function XC(n) {
  return be(_e(this).delete(_n(n)));
}
function Vv() {
  const n = _e(this);
  _t(ve, n);
  const e = n.keys();
  return {
    next() {
      const t = e.next(), r = t.value, i = t.done;
      return i ? {
        value: void 0,
        done: i
      } : {
        value: be(r),
        done: i
      };
    },
    [Symbol.iterator]() {
      return this;
    }
  };
}
function Hp() {
  const n = _e(this);
  _t(ve, n);
  const e = n.values();
  return {
    next() {
      const t = e.next(), r = t.value, i = t.done;
      return i ? {
        value: void 0,
        done: i
      } : {
        value: be(r),
        done: i
      };
    },
    [Symbol.iterator]() {
      return this;
    }
  };
}
function Kp() {
  const n = _e(this);
  _t(ve, n);
  const e = n.entries();
  return {
    next() {
      const t = e.next(), r = t.value, i = t.done;
      return i ? {
        value: void 0,
        done: i
      } : {
        value: [be(r[0]), be(r[1])],
        done: i
      };
    },
    [Symbol.iterator]() {
      return this;
    }
  };
}
const _t = (n, e) => n?.observeCollection(e), ZC = Object.freeze({
  getProxy: Gd,
  getRaw: _e,
  wrap: be,
  unwrap: _n,
  rawKey: $o
});
class ml {
  constructor(e, t, r, i, s) {
    this.type = 1, this.v = void 0, this.ov = void 0, this.ir = !1, this.D = !1, this.o = e, this.$get = t, this.$set = r, this.up = i, this.oL = s;
  }
  static create(e, t, r, i, s) {
    const a = r.get, o = r.set, u = new ml(e, a, o, s, i), l = () => u.getValue();
    return l.getObserver = () => u, yr(e, t, {
      enumerable: r.enumerable,
      configurable: !0,
      get: l,
      set: (c) => {
        u.setValue(c);
      }
    }), u;
  }
  getValue() {
    return this.subs.count === 0 ? this.$get.call(this.o, this) : (this.D && (this.compute(), this.D = !1), this.v);
  }
  setValue(e) {
    if (cr(this.$set))
      e !== this.v && (this.ir = !0, this.$set.call(this.o, e), this.ir = !1, this.run());
    else
      throw ae("AUR0221");
  }
  handleChange() {
    this.D = !0, this.subs.count > 0 && this.run();
  }
  handleCollectionChange() {
    this.D = !0, this.subs.count > 0 && this.run();
  }
  subscribe(e) {
    this.subs.add(e) && this.subs.count === 1 && (this.compute(), this.D = !1);
  }
  unsubscribe(e) {
    this.subs.remove(e) && this.subs.count === 0 && (this.D = !0, this.obs.clearAll());
  }
  run() {
    if (this.ir)
      return;
    const e = this.v, t = this.compute();
    this.D = !1, e0(t, e) || (this.ov = e, Hm = this.ov, this.ov = this.v, this.subs.notify(this.v, Hm));
  }
  compute() {
    this.ir = !0, this.obs.version++;
    try {
      return c0(this), this.v = _n(this.$get.call(this.up ? be(this.o) : this.o, this));
    } finally {
      this.obs.clear(), this.ir = !1, d0(this);
    }
  }
}
Lr(ml);
Rn(ml);
let Hm;
const jv = Do("IDirtyChecker", (n) => n.singleton(Gv)), eS = {
  timeoutsPerCheck: 25,
  disabled: !1,
  throw: !1,
  resetToDefault() {
    this.timeoutsPerCheck = 6, this.disabled = !1, this.throw = !1;
  }
}, tS = {
  persistent: !0
};
class Gv {
  constructor(e) {
    this.p = e, this.tracked = [], this.A = null, this.O = 0, this.check = () => {
      if (++this.O < eS.timeoutsPerCheck)
        return;
      this.O = 0;
      const t = this.tracked, r = t.length;
      let i, s = 0;
      for (; s < r; ++s)
        i = t[s], i.isDirty() && i.flush();
    };
  }
  createProperty(e, t) {
    return new Wv(this, e, t);
  }
  addProperty(e) {
    this.tracked.push(e), this.tracked.length === 1 && (this.A = this.p.taskQueue.queueTask(this.check, tS));
  }
  removeProperty(e) {
    this.tracked.splice(this.tracked.indexOf(e), 1), this.tracked.length === 0 && (this.A.cancel(), this.A = null);
  }
}
Gv.inject = [hl];
class Wv {
  constructor(e, t, r) {
    this.obj = t, this.key = r, this.type = 0, this.ov = void 0, this.C = e;
  }
  getValue() {
    return this.obj[this.key];
  }
  setValue(e) {
    throw ae(`Trying to set value for property ${t0(this.key)} in dirty checker`);
  }
  isDirty() {
    return this.ov !== this.obj[this.key];
  }
  flush() {
    const e = this.ov, t = this.getValue();
    this.ov = t, this.subs.notify(t, e);
  }
  subscribe(e) {
    this.subs.add(e) && this.subs.count === 1 && (this.ov = this.obj[this.key], this.C.addProperty(this));
  }
  unsubscribe(e) {
    this.subs.remove(e) && this.subs.count === 0 && this.C.removeProperty(this);
  }
}
Rn(Wv);
class nS {
  constructor(e, t) {
    this.type = 0, this.o = e, this.k = t;
  }
  get doNotCache() {
    return !0;
  }
  getValue() {
    return this.o[this.k];
  }
  setValue() {
  }
  subscribe() {
  }
  unsubscribe() {
  }
}
class zv {
  constructor() {
    this.type = 0;
  }
  getValue(e, t) {
    return e[t];
  }
  setValue(e, t, r) {
    t[r] = e;
  }
}
class p0 {
  constructor(e, t) {
    this.type = 1, this.v = void 0, this.iO = !1, this.o = e, this.k = t;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    if (this.iO) {
      if (e0(e, this.v))
        return;
      jc = this.v, this.v = e, this.subs.notify(e, jc);
    } else
      this.o[this.k] = e;
  }
  subscribe(e) {
    this.iO === !1 && this.start(), this.subs.add(e);
  }
  start() {
    return this.iO === !1 && (this.iO = !0, this.v = this.o[this.k], yr(this.o, this.k, {
      enumerable: !0,
      configurable: !0,
      get: () => this.getValue(),
      set: (e) => {
        this.setValue(e);
      }
    })), this;
  }
  stop() {
    return this.iO && (yr(this.o, this.k, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: this.v
    }), this.iO = !1), this;
  }
}
class rS {
  constructor(e, t, r, i) {
    this.type = 1, this.v = void 0, this.ov = void 0, this.o = e, this.S = r, this.hs = cr(r);
    const s = e[t];
    this.cb = cr(s) ? s : void 0, this.v = i;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    this.hs && (e = this.S(e, null)), e0(e, this.v) || (this.ov = this.v, this.v = e, this.cb?.call(this.o, this.v, this.ov), jc = this.ov, this.ov = this.v, this.subs.notify(this.v, jc));
  }
}
Rn(p0);
Rn(rS);
let jc;
const qp = new zv(), Pa = Do("IObserverLocator", (n) => n.singleton(Hv)), Gc = Do("INodeObserverLocator", (n) => n.cachedCallback((e) => new iS()));
class iS {
  handles() {
    return !1;
  }
  getObserver() {
    return qp;
  }
  getAccessor() {
    return qp;
  }
}
class Hv {
  constructor(e, t) {
    this.$ = [], this.C = e, this.R = t;
  }
  addAdapter(e) {
    this.$.push(e);
  }
  getObserver(e, t) {
    if (e == null)
      throw aS(t);
    if (!gu(e))
      return new nS(e, t);
    const r = Kv(e);
    let i = r[t];
    return i === void 0 && (i = this.createObserver(e, t), i.doNotCache || (r[t] = i)), i;
  }
  getAccessor(e, t) {
    const r = e.$observers?.[t];
    return r !== void 0 ? r : this.R.handles(e, t, this) ? this.R.getAccessor(e, t, this) : qp;
  }
  getArrayObserver(e) {
    return xu(e);
  }
  getMapObserver(e) {
    return Vc(e);
  }
  getSetObserver(e) {
    return Uc(e);
  }
  createObserver(e, t) {
    if (this.R.handles(e, t, this))
      return this.R.getObserver(e, t, this);
    switch (t) {
      case "length":
        if (Ts(e))
          return xu(e).getLengthObserver();
        break;
      case "size":
        if (hs(e))
          return Vc(e).getLengthObserver();
        if (yl(e))
          return Uc(e).getLengthObserver();
        break;
      default:
        if (Ts(e) && Nu(t))
          return xu(e).getIndexObserver(Number(t));
        break;
    }
    let r = qm(e, t);
    if (r === void 0) {
      let i = Km(e);
      for (; i !== null && (r = qm(i, t), r === void 0); )
        i = Km(i);
    }
    if (r !== void 0 && !Y3.call(r, "value")) {
      let i = this.U(e, t, r);
      return i == null && (i = (r.get?.getObserver ?? r.set?.getObserver)?.(e, this)), i ?? (r.configurable ? ml.create(e, t, r, this, !0) : this.C.createProperty(e, t));
    }
    return new p0(e, t);
  }
  U(e, t, r) {
    if (this.$.length > 0)
      for (const i of this.$) {
        const s = i.getObserver(e, t, r, this);
        if (s != null)
          return s;
      }
    return null;
  }
}
Hv.inject = [jv, Gc];
const sS = (n) => {
  let e;
  return Ts(n) ? e = xu(n) : hs(n) ? e = Vc(n) : yl(n) && (e = Uc(n)), e;
}, Km = Object.getPrototypeOf, qm = Object.getOwnPropertyDescriptor, Kv = (n) => {
  let e = n.$observers;
  return e === void 0 && yr(n, "$observers", {
    enumerable: !1,
    value: e = vu()
  }), e;
}, aS = (n) => ae(`AUR0199:${t0(n)}`);
Do("IObservation", (n) => n.singleton(oS));
class oS {
  constructor(e) {
    this.oL = e;
  }
  static get inject() {
    return [Pa];
  }
  run(e) {
    const t = new qv(this.oL, e);
    return t.run(), t;
  }
}
class qv {
  constructor(e, t) {
    this.oL = e, this.fn = t, this.maxRunCount = 10, this.queued = !1, this.running = !1, this.runCount = 0, this.stopped = !1;
  }
  handleChange() {
    this.queued = !0, this.run();
  }
  handleCollectionChange() {
    this.queued = !0, this.run();
  }
  run() {
    if (this.stopped)
      throw ae("AUR0225");
    if (!this.running) {
      ++this.runCount, this.running = !0, this.queued = !1, ++this.obs.version;
      try {
        c0(this), this.fn(this);
      } finally {
        this.obs.clear(), this.running = !1, d0(this);
      }
      if (this.queued) {
        if (this.runCount > this.maxRunCount)
          throw this.runCount = 0, ae("AUR0226");
        this.run();
      } else
        this.runCount = 0;
    }
  }
  stop() {
    this.stopped = !0, this.obs.clearAll();
  }
}
Lr(qv);
const h0 = Do("ISignaler", (n) => n.singleton(uS));
class uS {
  constructor() {
    this.signals = vu();
  }
  dispatchSignal(e) {
    const t = this.signals[e];
    if (t === void 0)
      return;
    let r;
    for (r of t.keys())
      r.handleChange(void 0, void 0);
  }
  addSignalListener(e, t) {
    const r = this.signals, i = r[e];
    i === void 0 ? r[e] = /* @__PURE__ */ new Set([t]) : i.add(t);
  }
  removeSignalListener(e, t) {
    this.signals[e]?.delete(t);
  }
}
class lS extends Error {
  constructor(e) {
    super("Task was canceled."), this.task = e;
  }
}
var Qm;
(function(n) {
  n[n.pending = 0] = "pending", n[n.running = 1] = "running", n[n.completed = 2] = "completed", n[n.canceled = 3] = "canceled";
})(Qm || (Qm = {}));
var Jm;
(function(n) {
  n[n.render = 0] = "render", n[n.macroTask = 1] = "macroTask", n[n.postRender = 2] = "postRender";
})(Jm || (Jm = {}));
function X(n, e, t, r) {
  var i = arguments.length, s = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, a;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    s = Reflect.decorate(n, e, t, r);
  else
    for (var o = n.length - 1; o >= 0; o--)
      (a = n[o]) && (s = (i < 3 ? a(s) : i > 3 ? a(e, t, s) : a(e, t)) || s);
  return i > 3 && s && Object.defineProperty(e, t, s), s;
}
function gn(n, e) {
  return function(t, r) {
    e(t, r, n);
  };
}
const wn = oi.getOwn, bl = oi.hasOwn, Et = oi.define, { annotation: y0, resource: Qv } = Pr, Tn = y0.keyFor, Oa = Qv.keyFor, Rs = Qv.appendTo, m0 = y0.appendTo, Jv = y0.getKeys, Ps = Object, b0 = Ps.prototype, dn = () => Ps.create(null), ie = (n) => new Error(n), ys = b0.hasOwnProperty, tr = Ps.freeze, g0 = Ps.assign, v0 = Ps.getOwnPropertyNames, x0 = Ps.keys, Ym = dn(), Qp = (n, e, t) => {
  if (Ym[e] === !0)
    return !0;
  if (!wt(e))
    return !1;
  const r = e.slice(0, 5);
  return Ym[e] = r === "aria-" || r === "data-" || t.isStandardSvgAttribute(n, e);
}, nn = (n) => n instanceof Promise, Nr = (n) => n instanceof Array, $n = (n) => typeof n == "function", wt = (n) => typeof n == "string", cS = Ps.defineProperty, Wc = (n) => {
  throw n;
}, gl = Ps.is, Jp = Reflect.defineProperty, Or = (n, e, t) => (Jp(n, e, {
  enumerable: !1,
  configurable: !0,
  writable: !0,
  value: t
}), t);
function $e(n, e) {
  let t;
  function r(i, s) {
    arguments.length > 1 && (t.property = s), Et(as, cs.create(s, i, t), i.constructor, s), m0(i.constructor, wi.keyFrom(s));
  }
  if (arguments.length > 1) {
    t = {}, r(n, e);
    return;
  } else if (wt(n))
    return t = {}, r;
  return t = n === void 0 ? {} : n, r;
}
function dS(n) {
  return n.startsWith(as);
}
const as = Tn("bindable"), wi = tr({
  name: as,
  keyFrom: (n) => `${as}:${n}`,
  from(n, ...e) {
    const t = {}, r = Array.isArray;
    function i(o) {
      t[o] = cs.create(o, n);
    }
    function s(o, u) {
      t[o] = u instanceof cs ? u : cs.create(o, n, u);
    }
    function a(o) {
      r(o) ? o.forEach(i) : o instanceof cs ? t[o.property] = o : o !== void 0 && x0(o).forEach((u) => s(u, o[u]));
    }
    return e.forEach(a), t;
  },
  for(n) {
    let e;
    const t = {
      add(r) {
        let i, s;
        return wt(r) ? (i = r, s = {
          property: i
        }) : (i = r.property, s = r), e = cs.create(i, n, s), bl(as, n, i) || m0(n, wi.keyFrom(i)), Et(as, e, n, i), t;
      },
      mode(r) {
        return e.mode = r, t;
      },
      callback(r) {
        return e.callback = r, t;
      },
      attribute(r) {
        return e.attribute = r, t;
      },
      primary() {
        return e.primary = !0, t;
      },
      set(r) {
        return e.set = r, t;
      }
    };
    return t;
  },
  getAll(n) {
    const e = as.length + 1, t = [], r = nv(n);
    let i = r.length, s = 0, a, o, u, l;
    for (; --i >= 0; )
      for (u = r[i], a = Jv(u).filter(dS), o = a.length, l = 0; l < o; ++l)
        t[s++] = wn(as, u, a[l].slice(e));
    return t;
  }
});
class cs {
  constructor(e, t, r, i, s, a) {
    this.attribute = e, this.callback = t, this.mode = r, this.primary = i, this.property = s, this.set = a;
  }
  static create(e, t, r = {}) {
    return new cs(fn(r.attribute, tv(e)), fn(r.callback, `${e}Changed`), fn(r.mode, 2), fn(r.primary, !1), fn(r.property, e), fn(r.set, fS(e, t, r)));
  }
}
const Yp = {
  key: Tn("coercer"),
  define(n, e) {
    Et(Yp.key, n[e].bind(n), n);
  },
  for(n) {
    return wn(Yp.key, n);
  }
};
function fS(n, e, t = {}) {
  const r = t.type ?? oi.get("design:type", e, n) ?? null;
  if (r == null)
    return _i;
  let i;
  switch (r) {
    case Number:
    case Boolean:
    case String:
    case BigInt:
      i = r;
      break;
    default: {
      const s = r.coerce;
      i = typeof s == "function" ? s.bind(r) : Yp.for(r) ?? _i;
      break;
    }
  }
  return i === _i ? i : pS(i, t.nullable);
}
function pS(n, e) {
  return function(t, r) {
    return r?.enableCoercion ? (e ?? !(r?.coerceNullish ?? !1)) && t == null ? t : n(t, r) : t;
  };
}
class Yv {
  constructor(e, t, r, i, s, a) {
    this.set = i, this.$controller = s, this.i = a, this.v = void 0, this.ov = void 0;
    const o = e[r], u = e.propertyChanged, l = this.u = $n(o), c = this.A = $n(u), p = this.hs = i !== _i;
    let b;
    this.o = e, this.k = t, this.C = c ? u : _i, this.cb = l ? o : _i, this.cb === void 0 && !c && !p ? this.iO = !1 : (this.iO = !0, b = e[t], this.v = p && b !== void 0 ? i(b, this.i) : b, this.B());
  }
  get type() {
    return 1;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    this.hs && (e = this.set(e, this.i));
    const t = this.v;
    if (this.iO) {
      if (gl(e, t))
        return;
      this.v = e, this.ov = t, (this.$controller == null || this.$controller.isBound) && (this.u && this.cb.call(this.o, e, t), this.A && this.C.call(this.o, this.k, e, t)), this.subs.notify(this.v, this.ov);
    } else
      this.o[this.k] = e;
  }
  subscribe(e) {
    this.iO && (this.iO = !0, this.v = this.hs ? this.set(this.o[this.k], this.i) : this.o[this.k], this.B()), this.subs.add(e);
  }
  B() {
    Reflect.defineProperty(this.o, this.k, {
      enumerable: !0,
      configurable: !0,
      get: () => this.v,
      set: (e) => {
        this.setValue(e);
      }
    });
  }
}
Rn(Yv);
const Xm = function(n) {
  function e(t, r, i) {
    he.inject(e)(t, r, i);
  }
  return e.$isResolver = !0, e.resolve = function(t, r) {
    return r.root === r || r.has(n, !1) ? r.get(n) : r.root.get(n);
  }, e;
}, Oe = he.createInterface, Ia = pe.singleton, vl = pe.aliasTo, hS = pe.instance, Xv = pe.transient, St = (n, e, t) => n.registerResolver(e, t);
function yS(...n) {
  return function(e) {
    const t = Tn("aliases"), r = wn(t, e);
    r === void 0 ? Et(t, n, e) : r.push(...n);
  };
}
function xl(n, e, t, r) {
  for (let i = 0, s = n.length; i < s; ++i)
    pe.aliasTo(t, e.keyFrom(n[i])).register(r);
}
class w0 {
  constructor(e, t, r, i) {
    if (this.chars = e, this.repeat = t, this.isSymbol = r, this.isInverted = i, i)
      switch (e.length) {
        case 0:
          this.has = this.R;
          break;
        case 1:
          this.has = this.I;
          break;
        default:
          this.has = this.T;
      }
    else
      switch (e.length) {
        case 0:
          this.has = this.P;
          break;
        case 1:
          this.has = this.L;
          break;
        default:
          this.has = this.U;
      }
  }
  equals(e) {
    return this.chars === e.chars && this.repeat === e.repeat && this.isSymbol === e.isSymbol && this.isInverted === e.isInverted;
  }
  U(e) {
    return this.chars.includes(e);
  }
  L(e) {
    return this.chars === e;
  }
  P(e) {
    return !1;
  }
  T(e) {
    return !this.chars.includes(e);
  }
  I(e) {
    return this.chars !== e;
  }
  R(e) {
    return !0;
  }
}
class mS {
  constructor() {
    this.parts = Le, this.$ = "", this._ = {}, this.q = {};
  }
  get pattern() {
    const e = this.$;
    return e === "" ? null : e;
  }
  set pattern(e) {
    e == null ? (this.$ = "", this.parts = Le) : (this.$ = e, this.parts = this.q[e]);
  }
  append(e, t) {
    const r = this._;
    r[e] === void 0 ? r[e] = t : r[e] += t;
  }
  next(e) {
    const t = this._;
    let r;
    t[e] !== void 0 && (r = this.q, r[e] === void 0 ? r[e] = [t[e]] : r[e].push(t[e]), t[e] = void 0);
  }
}
class T0 {
  constructor(e, ...t) {
    this.charSpec = e, this.M = [], this.F = null, this.O = !1, this.V = t;
  }
  get $() {
    return this.O ? this.V[0] : null;
  }
  findChild(e) {
    const t = this.M, r = t.length;
    let i = null, s = 0;
    for (; s < r; ++s)
      if (i = t[s], e.equals(i.charSpec))
        return i;
    return null;
  }
  append(e, t) {
    const r = this.V;
    r.includes(t) || r.push(t);
    let i = this.findChild(e);
    return i == null && (i = new T0(e, t), this.M.push(i), e.repeat && i.M.push(i)), i;
  }
  findMatches(e, t) {
    const r = [], i = this.M, s = i.length;
    let a = 0, o = null, u = 0, l = 0;
    for (; u < s; ++u)
      if (o = i[u], o.charSpec.has(e))
        if (r.push(o), a = o.V.length, l = 0, o.charSpec.isSymbol)
          for (; l < a; ++l)
            t.next(o.V[l]);
        else
          for (; l < a; ++l)
            t.append(o.V[l], e);
    return r;
  }
}
class Zm {
  constructor(e) {
    this.text = e;
    const t = this.N = e.length, r = this.j = [];
    let i = 0;
    for (; t > i; ++i)
      r.push(new w0(e[i], !1, !1, !1));
  }
  eachChar(e) {
    const t = this.N, r = this.j;
    let i = 0;
    for (; t > i; ++i)
      e(r[i]);
  }
}
class bS {
  constructor(e) {
    this.text = "PART", this.H = new w0(e, !0, !1, !0);
  }
  eachChar(e) {
    e(this.H);
  }
}
class gS {
  constructor(e) {
    this.text = e, this.H = new w0(e, !1, !0, !1);
  }
  eachChar(e) {
    e(this.H);
  }
}
class vS {
  constructor() {
    this.statics = 0, this.dynamics = 0, this.symbols = 0;
  }
}
const xS = Oe("ISyntaxInterpreter", (n) => n.singleton(wS));
class wS {
  constructor() {
    this.W = new T0(null), this.G = [this.W];
  }
  add(e) {
    e = e.slice(0).sort((b, A) => b.pattern > A.pattern ? 1 : -1);
    const t = e.length;
    let r, i, s, a, o, u, l, c = 0, p;
    for (; t > c; ) {
      for (r = this.W, i = e[c], s = i.pattern, a = new vS(), o = this.X(i, a), u = o.length, l = (b) => r = r.append(b, s), p = 0; u > p; ++p)
        o[p].eachChar(l);
      r.F = a, r.O = !0, ++c;
    }
  }
  interpret(e) {
    const t = new mS(), r = e.length;
    let i = this.G, s = 0, a;
    for (; s < r && (i = this.K(i, e.charAt(s), t), i.length !== 0); ++s)
      ;
    return i = i.filter(TS), i.length > 0 && (i.sort(AS), a = i[0], a.charSpec.isSymbol || t.next(a.$), t.pattern = a.$), t;
  }
  K(e, t, r) {
    const i = [];
    let s = null;
    const a = e.length;
    let o = 0;
    for (; o < a; ++o)
      s = e[o], i.push(...s.findMatches(t, r));
    return i;
  }
  X(e, t) {
    const r = [], i = e.pattern, s = i.length, a = e.symbols;
    let o = 0, u = 0, l = "";
    for (; o < s; )
      l = i.charAt(o), a.length === 0 || !a.includes(l) ? o === u && l === "P" && i.slice(o, o + 4) === "PART" ? (u = o += 4, r.push(new bS(a)), ++t.dynamics) : ++o : o !== u ? (r.push(new Zm(i.slice(u, o))), ++t.statics, u = o) : (r.push(new gS(i.slice(u, o + 1))), ++t.symbols, u = ++o);
    return u !== o && (r.push(new Zm(i.slice(u, o))), ++t.statics), r;
  }
}
function TS(n) {
  return n.O;
}
function AS(n, e) {
  const t = n.F, r = e.F;
  return t.statics !== r.statics ? r.statics - t.statics : t.dynamics !== r.dynamics ? r.dynamics - t.dynamics : t.symbols !== r.symbols ? r.symbols - t.symbols : 0;
}
class mr {
  constructor(e, t, r, i) {
    this.rawName = e, this.rawValue = t, this.target = r, this.command = i;
  }
}
const Zv = Oe("IAttributePattern"), CS = Oe("IAttributeParser", (n) => n.singleton(ex));
class ex {
  constructor(e, t) {
    this.Y = {}, this.Z = e;
    const r = this.V = {}, i = t.reduce((s, a) => {
      const o = tx(a.constructor);
      return o.forEach((u) => r[u.pattern] = a), s.concat(o);
    }, Le);
    e.add(i);
  }
  parse(e, t) {
    let r = this.Y[e];
    r == null && (r = this.Y[e] = this.Z.interpret(e));
    const i = r.pattern;
    return i == null ? new mr(e, t, e, null) : this.V[i][i](e, t, r.parts);
  }
}
ex.inject = [xS, uv(Zv)];
function Ui(...n) {
  return function(t) {
    return ES.define(n, t);
  };
}
class SS {
  constructor(e) {
    this.Type = e, this.name = void 0;
  }
  register(e) {
    Ia(Zv, this.Type).register(e);
  }
}
const Kf = Oa("attribute-pattern"), gc = "attribute-pattern-definitions", tx = (n) => Pr.annotation.get(n, gc), ES = tr({
  name: Kf,
  definitionAnnotationKey: gc,
  define(n, e) {
    const t = new SS(e);
    return Et(Kf, t, e), Rs(e, Kf), Pr.annotation.set(e, gc, n), m0(e, gc), e;
  },
  getPatternDefinitions: tx
});
let eb = class {
  "PART.PART"(e, t, r) {
    return new mr(e, t, r[0], r[1]);
  }
  "PART.PART.PART"(e, t, r) {
    return new mr(e, t, `${r[0]}.${r[1]}`, r[2]);
  }
};
eb = X([Ui({
  pattern: "PART.PART",
  symbols: "."
}, {
  pattern: "PART.PART.PART",
  symbols: "."
})], eb);
let tb = class {
  ref(e, t, r) {
    return new mr(e, t, "element", "ref");
  }
  "PART.ref"(e, t, r) {
    return new mr(e, t, r[0], "ref");
  }
};
tb = X([Ui({
  pattern: "ref",
  symbols: ""
}, {
  pattern: "PART.ref",
  symbols: "."
})], tb);
let nb = class {
  ":PART"(e, t, r) {
    return new mr(e, t, r[0], "bind");
  }
};
nb = X([Ui({
  pattern: ":PART",
  symbols: ":"
})], nb);
let rb = class {
  "@PART"(e, t, r) {
    return new mr(e, t, r[0], "trigger");
  }
};
rb = X([Ui({
  pattern: "@PART",
  symbols: "@"
})], rb);
let ib = class {
  "...$attrs"(e, t, r) {
    return new mr(e, t, "", "...$attrs");
  }
};
ib = X([Ui({
  pattern: "...$attrs",
  symbols: ""
})], ib);
class nx {
  constructor(e, t, r) {
    this.type = 7, this.v = null, this.ov = null, this.J = !1, this.o = e, this.tt = t, this.et = r;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    this.v = e, this.J = e !== this.ov, this.it();
  }
  it() {
    if (this.J)
      switch (this.J = !1, this.ov = this.v, this.et) {
        case "class":
          this.o.classList.toggle(this.tt, !!this.v);
          break;
        case "style": {
          let e = "", t = this.v;
          wt(t) && t.includes("!important") && (e = "important", t = t.replace("!important", "")), this.o.style.setProperty(this.tt, t, e);
          break;
        }
        default:
          this.v == null ? this.o.removeAttribute(this.et) : this.o.setAttribute(this.et, String(this.v));
      }
  }
  handleMutation(e) {
    let t = !1;
    for (let r = 0, i = e.length; i > r; ++r) {
      const s = e[r];
      if (s.type === "attributes" && s.attributeName === this.tt) {
        t = !0;
        break;
      }
    }
    if (t) {
      let r;
      switch (this.et) {
        case "class":
          r = this.o.classList.contains(this.tt);
          break;
        case "style":
          r = this.o.style.getPropertyValue(this.tt);
          break;
        default:
          throw ie(`AUR0651:${this.et}`);
      }
      r !== this.v && (this.ov = this.v, this.v = r, this.J = !1, this.st());
    }
  }
  subscribe(e) {
    this.subs.add(e) && this.subs.count === 1 && (this.v = this.ov = this.o.getAttribute(this.tt), _S(this.o.ownerDocument.defaultView.MutationObserver, this.o, this));
  }
  unsubscribe(e) {
    this.subs.remove(e) && this.subs.count === 0 && MS(this.o, this);
  }
  st() {
    sb = this.ov, this.ov = this.v, this.subs.notify(this.v, sb);
  }
}
Rn(nx);
const _S = (n, e, t) => {
  e.$eMObs === void 0 && (e.$eMObs = /* @__PURE__ */ new Set()), e.$mObs === void 0 && (e.$mObs = new n(RS)).observe(e, {
    attributes: !0
  }), e.$eMObs.add(t);
}, MS = (n, e) => {
  const t = n.$eMObs;
  return t && t.delete(e) ? (t.size === 0 && (n.$mObs.disconnect(), n.$mObs = void 0), !0) : !1;
}, RS = (n) => {
  n[0].target.$eMObs.forEach(PS, n);
};
function PS(n) {
  n.handleMutation(this);
}
let sb;
function Wn(n) {
  return function(e) {
    return zc.define(n, e);
  };
}
class A0 {
  constructor(e, t, r, i) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i;
  }
  static create(e, t) {
    let r, i;
    return wt(e) ? (r = e, i = {
      name: r
    }) : (r = e.name, i = e), new A0(t, fn(Xp(t, "name"), r), Ft(Xp(t, "aliases"), i.aliases, t.aliases), zc.keyFrom(r));
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    Ia(r, t).register(e), vl(r, t).register(e), xl(i, zc, r, e);
  }
}
const Xs = Oa("binding-behavior"), Xp = (n, e) => wn(Tn(e), n), zc = tr({
  name: Xs,
  keyFrom(n) {
    return `${Xs}:${n}`;
  },
  isType(n) {
    return $n(n) && bl(Xs, n);
  },
  define(n, e) {
    const t = A0.create(n, e);
    return Et(Xs, t, t.Type), Et(Xs, t, t), Rs(e, Xs), t.Type;
  },
  getDefinition(n) {
    const e = wn(Xs, n);
    if (e === void 0)
      throw ie(`AUR0151:${n.name}`);
    return e;
  },
  annotate(n, e, t) {
    Et(Tn(e), t, n);
  },
  getAnnotation: Xp
});
function wl(n) {
  return function(e) {
    return Hc.define(n, e);
  };
}
class C0 {
  constructor(e, t, r, i) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i;
  }
  static create(e, t) {
    let r, i;
    return wt(e) ? (r = e, i = {
      name: r
    }) : (r = e.name, i = e), new C0(t, fn(Zp(t, "name"), r), Ft(Zp(t, "aliases"), i.aliases, t.aliases), Hc.keyFrom(r));
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    pe.singleton(r, t).register(e), pe.aliasTo(r, t).register(e), xl(i, Hc, r, e);
  }
}
const Zs = Oa("value-converter"), Zp = (n, e) => wn(Tn(e), n), Hc = tr({
  name: Zs,
  keyFrom: (n) => `${Zs}:${n}`,
  isType(n) {
    return $n(n) && bl(Zs, n);
  },
  define(n, e) {
    const t = C0.create(n, e);
    return Et(Zs, t, t.Type), Et(Zs, t, t), Rs(e, Zs), t.Type;
  },
  getDefinition(n) {
    const e = wn(Zs, n);
    if (e === void 0)
      throw ie(`AUR0152:${n.name}`);
    return e;
  },
  annotate(n, e, t) {
    Et(Tn(e), t, n);
  },
  getAnnotation: Zp
});
class OS {
  constructor(e, t) {
    this.v = void 0, this.b = e, this.nt = t;
  }
  flush() {
    this.b.updateSource(this.v);
  }
  handleChange(e, t) {
    const r = this.b;
    e !== G(r.ast, r.s, r, null) && (this.v = e, this.nt.add(this));
  }
}
const Uo = (n) => {
  Or(n.prototype, "useScope", function(e) {
    this.s = e;
  });
}, li = (n, e = !0) => (t) => {
  const r = t.prototype;
  n != null && Jp(r, "strict", {
    enumerable: !0,
    get: function() {
      return n;
    }
  }), Jp(r, "strictFnCall", {
    enumerable: !0,
    get: function() {
      return e;
    }
  }), Or(r, "get", function(i) {
    return this.l.get(i);
  }), Or(r, "getSignaler", function() {
    return this.l.root.get(h0);
  }), Or(r, "getConverter", function(i) {
    const s = Hc.keyFrom(i);
    let a = zl.get(this);
    return a == null && zl.set(this, a = new ab()), a[s] ?? (a[s] = this.l.get(Xm(s)));
  }), Or(r, "getBehavior", function(i) {
    const s = zc.keyFrom(i);
    let a = zl.get(this);
    return a == null && zl.set(this, a = new ab()), a[s] ?? (a[s] = this.l.get(Xm(s)));
  });
}, zl = /* @__PURE__ */ new WeakMap();
class ab {
}
const IS = Oe("IFlushQueue", (n) => n.singleton(kS));
class kS {
  constructor() {
    this.rt = !1, this.ot = /* @__PURE__ */ new Set();
  }
  get count() {
    return this.ot.size;
  }
  add(e) {
    if (this.ot.add(e), !this.rt) {
      this.rt = !0;
      try {
        this.ot.forEach(DS);
      } finally {
        this.rt = !1;
      }
    }
  }
  clear() {
    this.ot.clear(), this.rt = !1;
  }
}
function DS(n, e, t) {
  t.delete(n), n.flush();
}
const qf = /* @__PURE__ */ new WeakSet(), ka = (n, e) => {
  Or(n.prototype, "limit", function(t) {
    if (qf.has(this))
      throw ie("AURXXXX: a rate limit has already been applied.");
    qf.add(this);
    const r = e(this, t), i = this[r], s = (...o) => i.call(this, ...o), a = t.type === "debounce" ? BS(t, s, this) : NS(t, s, this);
    return this[r] = a, {
      dispose: () => {
        qf.delete(this), a.dispose(), delete this[r];
      }
    };
  });
}, BS = (n, e, t) => {
  let r, i, s;
  const a = n.queue, o = (u) => {
    s = u, t.isBound ? (i = r, r = a.queueTask(() => e(s), {
      delay: n.delay,
      reusable: !1
    }), i?.cancel()) : e(s);
  };
  return o.dispose = () => {
    i?.cancel(), r?.cancel();
  }, o;
}, NS = (n, e, t) => {
  let r, i, s = 0, a = 0, o;
  const u = n.queue, l = () => n.now(), c = (p) => {
    o = p, t.isBound ? (a = l() - s, i = r, a > n.delay ? (s = l(), e(o)) : r = u.queueTask(() => {
      s = l(), e(o);
    }, {
      delay: n.delay - a,
      reusable: !1
    }), i?.cancel()) : e(o);
  };
  return c.dispose = () => {
    i?.cancel(), r?.cancel();
  }, c;
}, FS = {
  reusable: !1,
  preempt: !0
};
class Tl {
  constructor(e, t, r, i, s, a, o, u, l) {
    this.targetAttribute = o, this.targetProperty = u, this.mode = l, this.isBound = !1, this.s = void 0, this.lt = null, this.v = void 0, this.boundFn = !1, this.l = t, this.ast = s, this.ht = e, this.target = a, this.oL = r, this.ct = i;
  }
  updateTarget(e) {
    this.ut.setValue(e, this.target, this.targetProperty);
  }
  handleChange() {
    if (!this.isBound)
      return;
    let e;
    this.obs.version++;
    const t = G(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    this.obs.clear(), t !== this.v && (this.v = t, this.ht.state !== 1 && (4 & this.ut.type) > 0 ? (e = this.lt, this.lt = this.ct.queueTask(() => {
      this.lt = null, this.updateTarget(t);
    }, FS), e?.cancel()) : this.updateTarget(t));
  }
  handleCollectionChange() {
    this.handleChange();
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Dr(this.ast, e, this), this.ut ?? (this.ut = new nx(this.target, this.targetProperty, this.targetAttribute)), this.mode & 3 && this.updateTarget(this.v = G(this.ast, e, this, (2 & this.mode) > 0 ? this : null)), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, fr(this.ast, this.s, this), this.s = void 0, this.v = void 0, this.lt?.cancel(), this.lt = null, this.obs.clearAll());
  }
}
Uo(Tl);
ka(Tl, () => "updateTarget");
Lr(Tl);
li(!0)(Tl);
const rx = {
  reusable: !1,
  preempt: !0
};
class LS {
  constructor(e, t, r, i, s, a, o, u) {
    this.ast = s, this.target = a, this.targetProperty = o, this.mode = u, this.isBound = !1, this.s = void 0, this.lt = null, this.ht = e, this.oL = r, this.ct = i, this.ut = r.getAccessor(a, o);
    const l = s.expressions, c = this.partBindings = Array(l.length), p = l.length;
    let b = 0;
    for (; p > b; ++b)
      c[b] = new Al(l[b], a, o, t, r, this);
  }
  ft() {
    this.updateTarget();
  }
  updateTarget() {
    const e = this.partBindings, t = this.ast.parts, r = e.length;
    let i = "", s = 0;
    if (r === 1)
      i = t[0] + e[0].v + t[1];
    else
      for (i = t[0]; r > s; ++s)
        i += e[s].v + t[s + 1];
    const a = this.ut, o = this.ht.state !== 1 && (4 & a.type) > 0;
    let u;
    o ? (u = this.lt, this.lt = this.ct.queueTask(() => {
      this.lt = null, a.setValue(i, this.target, this.targetProperty);
    }, rx), u?.cancel(), u = null) : a.setValue(i, this.target, this.targetProperty);
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e;
    const t = this.partBindings, r = t.length;
    let i = 0;
    for (; r > i; ++i)
      t[i].bind(e);
    this.updateTarget(), this.isBound = !0;
  }
  unbind() {
    if (!this.isBound)
      return;
    this.isBound = !1, this.s = void 0;
    const e = this.partBindings, t = e.length;
    let r = 0;
    for (; t > r; ++r)
      e[r].unbind();
    this.lt?.cancel(), this.lt = null;
  }
}
class Al {
  constructor(e, t, r, i, s, a) {
    this.ast = e, this.target = t, this.targetProperty = r, this.owner = a, this.mode = 2, this.task = null, this.isBound = !1, this.v = "", this.boundFn = !1, this.l = i, this.oL = s;
  }
  updateTarget() {
    this.owner.ft();
  }
  handleChange() {
    if (!this.isBound)
      return;
    this.obs.version++;
    const e = G(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    this.obs.clear(), e != this.v && (this.v = e, Nr(e) && this.observeCollection(e), this.updateTarget());
  }
  handleCollectionChange() {
    this.handleChange();
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Dr(this.ast, e, this), this.v = G(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null), Nr(this.v) && this.observeCollection(this.v), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, fr(this.ast, this.s, this), this.s = void 0, this.obs.clearAll());
  }
}
Uo(Al);
ka(Al, () => "updateTarget");
Lr(Al);
li(!0)(Al);
class Cl {
  constructor(e, t, r, i, s, a, o, u) {
    this.p = s, this.ast = a, this.target = o, this.strict = u, this.isBound = !1, this.mode = 2, this.lt = null, this.v = "", this.boundFn = !1, this.l = t, this.ht = e, this.oL = r, this.ct = i;
  }
  updateTarget(e) {
    const t = this.target, r = this.p.Node, i = this.v;
    this.v = e, i instanceof r && i.parentNode?.removeChild(i), e instanceof r ? (t.textContent = "", t.parentNode?.insertBefore(e, t)) : t.textContent = String(e);
  }
  handleChange() {
    if (!this.isBound)
      return;
    this.obs.version++;
    const e = G(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    if (this.obs.clear(), e === this.v) {
      this.lt?.cancel(), this.lt = null;
      return;
    }
    this.ht.state !== 1 ? this.dt(e) : this.updateTarget(e);
  }
  handleCollectionChange() {
    if (!this.isBound)
      return;
    this.obs.version++;
    const e = this.v = G(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    this.obs.clear(), Nr(e) && this.observeCollection(e), this.ht.state !== 1 ? this.dt(e) : this.updateTarget(e);
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Dr(this.ast, e, this);
    const t = this.v = G(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    Nr(t) && this.observeCollection(t), this.updateTarget(t), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, fr(this.ast, this.s, this), this.s = void 0, this.obs.clearAll(), this.lt?.cancel(), this.lt = null);
  }
  dt(e) {
    const t = this.lt;
    this.lt = this.ct.queueTask(() => {
      this.lt = null, this.updateTarget(e);
    }, rx), t?.cancel();
  }
}
Uo(Cl);
ka(Cl, () => "updateTarget");
Lr()(Cl);
li(void 0, !1)(Cl);
class Sl {
  constructor(e, t, r, i, s = !1) {
    this.ast = r, this.targetProperty = i, this.isBound = !1, this.s = void 0, this.target = null, this.boundFn = !1, this.l = e, this.oL = t, this.gt = s;
  }
  updateTarget() {
    this.target[this.targetProperty] = this.v;
  }
  handleChange() {
    !this.isBound || (this.obs.version++, this.v = G(this.ast, this.s, this, this), this.obs.clear(), this.updateTarget());
  }
  handleCollectionChange() {
    this.handleChange();
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, this.target = this.gt ? e.bindingContext : e.overrideContext, Dr(this.ast, e, this), this.v = G(this.ast, this.s, this, this), this.updateTarget(), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, fr(this.ast, this.s, this), this.s = void 0, this.obs.clearAll());
  }
}
Uo(Sl);
ka(Sl, () => "updateTarget");
Lr(Sl);
li(!0)(Sl);
class Vi {
  constructor(e, t, r, i, s, a, o, u) {
    this.ast = s, this.target = a, this.targetProperty = o, this.mode = u, this.isBound = !1, this.s = void 0, this.ut = void 0, this.lt = null, this.vt = null, this.boundFn = !1, this.l = t, this.ht = e, this.ct = i, this.oL = r;
  }
  updateTarget(e) {
    this.ut.setValue(e, this.target, this.targetProperty);
  }
  updateSource(e) {
    cn(this.ast, this.s, this, e);
  }
  handleChange() {
    if (!this.isBound)
      return;
    this.obs.version++;
    const e = G(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    this.obs.clear(), this.ht.state !== 1 && (4 & this.ut.type) > 0 ? (Qf = this.lt, this.lt = this.ct.queueTask(() => {
      this.updateTarget(e), this.lt = null;
    }, $S), Qf?.cancel(), Qf = null) : this.updateTarget(e);
  }
  handleCollectionChange() {
    this.handleChange();
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Dr(this.ast, e, this);
    const t = this.oL, r = this.mode;
    let i = this.ut;
    i || (4 & r ? i = t.getObserver(this.target, this.targetProperty) : i = t.getAccessor(this.target, this.targetProperty), this.ut = i);
    const s = (2 & r) > 0;
    r & 3 && this.updateTarget(G(this.ast, this.s, this, s ? this : null)), 4 & r && (i.subscribe(this.vt ?? (this.vt = new OS(this, this.l.get(IS)))), s || this.updateSource(i.getValue(this.target, this.targetProperty))), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, fr(this.ast, this.s, this), this.s = void 0, this.vt && (this.ut.unsubscribe(this.vt), this.vt = null), this.lt?.cancel(), this.lt = null, this.obs.clearAll());
  }
  useTargetObserver(e) {
    this.ut?.unsubscribe(this), (this.ut = e).subscribe(this);
  }
  useTargetSubscriber(e) {
    if (this.vt != null)
      throw ie("AURxxxx: binding already has a target subscriber");
    this.vt = e;
  }
}
Uo(Vi);
ka(Vi, (n) => 4 & n.mode ? "updateSource" : "updateTarget");
Lr(Vi);
li(!0, !1)(Vi);
let Qf = null;
const $S = {
  reusable: !1,
  preempt: !0
};
class ix {
  constructor(e, t, r) {
    this.ast = t, this.target = r, this.isBound = !1, this.s = void 0, this.l = e;
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Dr(this.ast, e, this), cn(this.ast, this.s, this, this.target), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, G(this.ast, this.s, this, null) === this.target && cn(this.ast, this.s, this, null), fr(this.ast, this.s, this), this.s = void 0);
  }
}
li(!1)(ix);
class US {
  constructor(e, t = !1) {
    this.prevent = e, this.capture = t;
  }
}
class El {
  constructor(e, t, r, i, s) {
    this.ast = t, this.target = r, this.targetEvent = i, this.isBound = !1, this.self = !1, this.boundFn = !0, this.l = e, this.xt = s;
  }
  callSource(e) {
    const t = this.s.overrideContext;
    t.$event = e;
    let r = G(this.ast, this.s, this, null);
    return delete t.$event, $n(r) && (r = r(e)), r !== !0 && this.xt.prevent && e.preventDefault(), r;
  }
  handleEvent(e) {
    this.self && this.target !== e.composedPath()[0] || this.callSource(e);
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Dr(this.ast, e, this), this.target.addEventListener(this.targetEvent, this, this.xt), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, fr(this.ast, this.s, this), this.s = void 0, this.target.removeEventListener(this.targetEvent, this, this.xt));
  }
}
Uo(El);
ka(El, () => "callSource");
li(!0, !0)(El);
const VS = Oe("IAppTask");
class ob {
  constructor(e, t, r) {
    this.c = void 0, this.slot = e, this.k = t, this.cb = r;
  }
  register(e) {
    return this.c = e.register(hS(VS, this));
  }
  run() {
    const e = this.k, t = this.cb;
    return e === null ? t() : t(this.c.get(e));
  }
}
tr({
  creating: ea("creating"),
  hydrating: ea("hydrating"),
  hydrated: ea("hydrated"),
  activating: ea("activating"),
  activated: ea("activated"),
  deactivating: ea("deactivating"),
  deactivated: ea("deactivated")
});
function ea(n) {
  function e(t, r) {
    return $n(r) ? new ob(n, t, r) : new ob(n, null, t);
  }
  return e;
}
const jS = Le, Hl = Tn("watch"), eh = tr({
  name: Hl,
  add(n, e) {
    let t = wn(Hl, n);
    t == null && Et(Hl, t = [], n), t.push(e);
  },
  getAnnotation(n) {
    return wn(Hl, n) ?? jS;
  }
});
function sx(n) {
  return function(e) {
    return _0(n, e);
  };
}
function gr(n) {
  return function(e) {
    return _0(wt(n) ? {
      isTemplateController: !0,
      name: n
    } : {
      isTemplateController: !0,
      ...n
    }, e);
  };
}
class S0 {
  constructor(e, t, r, i, s, a, o, u, l, c) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i, this.defaultBindingMode = s, this.isTemplateController = a, this.bindables = o, this.noMultiBindings = u, this.watches = l, this.dependencies = c;
  }
  get type() {
    return 2;
  }
  static create(e, t) {
    let r, i;
    return wt(e) ? (r = e, i = {
      name: r
    }) : (r = e.name, i = e), new S0(t, fn(rs(t, "name"), r), Ft(rs(t, "aliases"), i.aliases, t.aliases), E0(r), fn(rs(t, "defaultBindingMode"), i.defaultBindingMode, t.defaultBindingMode, 2), fn(rs(t, "isTemplateController"), i.isTemplateController, t.isTemplateController, !1), wi.from(t, ...wi.getAll(t), rs(t, "bindables"), t.bindables, i.bindables), fn(rs(t, "noMultiBindings"), i.noMultiBindings, t.noMultiBindings, !1), Ft(eh.getAnnotation(t), t.watches), Ft(rs(t, "dependencies"), i.dependencies, t.dependencies));
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    Xv(r, t).register(e), vl(r, t).register(e), xl(i, M0, r, e);
  }
}
const ca = Oa("custom-attribute"), E0 = (n) => `${ca}:${n}`, rs = (n, e) => wn(Tn(e), n), GS = (n) => $n(n) && bl(ca, n), ax = (n, e) => pu(n, E0(e)) ?? void 0, _0 = (n, e) => {
  const t = S0.create(n, e);
  return Et(ca, t, t.Type), Et(ca, t, t), Rs(e, ca), t.Type;
}, th = (n) => {
  const e = wn(ca, n);
  if (e === void 0)
    throw ie(`AUR0759:${n.name}`);
  return e;
}, M0 = tr({
  name: ca,
  keyFrom: E0,
  isType: GS,
  for: ax,
  define: _0,
  getDefinition: th,
  annotate(n, e, t) {
    Et(Tn(e), t, n);
  },
  getAnnotation: rs
});
function WS(n) {
  return n.startsWith(fu);
}
const fu = Tn("children-observer"), eu = tr({
  name: fu,
  keyFrom: (n) => `${fu}:${n}`,
  from(...n) {
    const e = {};
    function t(s) {
      e[s] = Cu.create(s);
    }
    function r(s, a) {
      e[s] = Cu.create(s, a);
    }
    function i(s) {
      Nr(s) ? s.forEach(t) : s instanceof Cu ? e[s.property] = s : s !== void 0 && x0(s).forEach((a) => r(a, s));
    }
    return n.forEach(i), e;
  },
  getAll(n) {
    const e = fu.length + 1, t = [], r = nv(n);
    let i = r.length, s = 0, a, o, u;
    for (; --i >= 0; ) {
      u = r[i], a = Jv(u).filter(WS), o = a.length;
      for (let l = 0; l < o; ++l)
        t[s++] = wn(fu, u, a[l].slice(e));
    }
    return t;
  }
}), zS = {
  childList: !0
};
class Cu {
  constructor(e, t, r, i, s, a) {
    this.callback = e, this.property = t, this.options = r, this.query = i, this.filter = s, this.map = a;
  }
  static create(e, t = {}) {
    return new Cu(fn(t.callback, `${e}Changed`), fn(t.property, e), t.options ?? zS, t.query, t.filter, t.map);
  }
}
class ox {
  constructor(e, t, r, i, s = HS, a = KS, o = qS, u) {
    this.controller = e, this.obj = t, this.propertyKey = r, this.query = s, this.filter = a, this.map = o, this.options = u, this.observing = !1, this.children = void 0, this.observer = void 0, this.callback = t[i], Reflect.defineProperty(this.obj, this.propertyKey, {
      enumerable: !0,
      configurable: !0,
      get: () => this.getValue(),
      set: () => {
      }
    });
  }
  getValue() {
    return this.observing ? this.children : this.get();
  }
  setValue(e) {
  }
  start() {
    this.observing || (this.observing = !0, this.children = this.get(), (this.observer ?? (this.observer = new this.controller.host.ownerDocument.defaultView.MutationObserver(() => {
      this.wt();
    }))).observe(this.controller.host, this.options));
  }
  stop() {
    this.observing && (this.observing = !1, this.observer.disconnect(), this.children = Le);
  }
  wt() {
    this.children = this.get(), this.callback !== void 0 && this.callback.call(this.obj), this.subs.notify(this.children, void 0);
  }
  get() {
    return JS(this.controller, this.query, this.filter, this.map);
  }
}
Rn()(ox);
function HS(n) {
  return n.host.childNodes;
}
function KS(n, e, t) {
  return !!t;
}
function qS(n, e, t) {
  return t;
}
const QS = {
  optional: !0
};
function JS(n, e, t, r) {
  const i = e(n), s = i.length, a = [];
  let o, u, l, c = 0;
  for (; c < s; ++c)
    o = i[c], u = ms(o, QS), l = u?.viewModel ?? null, t(o, u, l) && a.push(r(o, u, l));
  return a;
}
const Pn = hl, ub = (n, e, t, r) => {
  n.addEventListener(e, t, r);
}, lb = (n, e, t, r) => {
  n.removeEventListener(e, t, r);
}, R0 = (n) => {
  const e = n.prototype;
  Or(e, "subscribe", function(t) {
    if (this.subs.add(t) && this.subs.count === 1) {
      for (Zi of this.cf.events)
        ub(this.bt, Zi, this);
      this.yt = !0, this.kt?.();
    }
  }), Or(e, "unsubscribe", function(t) {
    if (this.subs.remove(t) && this.subs.count === 0) {
      for (Zi of this.cf.events)
        lb(this.bt, Zi, this);
      this.yt = !1, this.At?.();
    }
  }), Or(e, "useConfig", function(t) {
    if (this.cf = t, this.yt) {
      for (Zi of this.cf.events)
        lb(this.bt, Zi, this);
      for (Zi of this.cf.events)
        ub(this.bt, Zi, this);
    }
  });
};
let Zi;
const Wd = (n) => {
  Or(n.prototype, "subscribe", _i), Or(n.prototype, "unsubscribe", _i);
};
class ux {
  constructor(e) {
    this.obj = e, this.type = 6, this.value = "", this.ov = "", this.Ct = {}, this.Bt = 0, this.J = !1;
  }
  get doNotCache() {
    return !0;
  }
  getValue() {
    return this.value;
  }
  setValue(e) {
    this.value = e, this.J = e !== this.ov, this.it();
  }
  it() {
    if (this.J) {
      this.J = !1;
      const e = this.value, t = this.Ct, r = lx(e);
      let i = this.Bt;
      if (this.ov = e, r.length > 0 && this.Rt(r), this.Bt += 1, i === 0)
        return;
      i -= 1;
      for (const s in t)
        !ys.call(t, s) || t[s] !== i || this.obj.classList.remove(s);
    }
  }
  Rt(e) {
    const t = this.obj, r = e.length;
    let i = 0, s;
    for (; i < r; i++)
      s = e[i], s.length !== 0 && (this.Ct[s] = this.Bt, t.classList.add(s));
  }
}
function lx(n) {
  if (wt(n))
    return cb(n);
  if (typeof n != "object")
    return Le;
  if (n instanceof Array) {
    const r = n.length;
    if (r > 0) {
      const i = [];
      let s = 0;
      for (; r > s; ++s)
        i.push(...lx(n[s]));
      return i;
    } else
      return Le;
  }
  const e = [];
  let t;
  for (t in n)
    Boolean(n[t]) && (t.includes(" ") ? e.push(...cb(t)) : e.push(t));
  return e;
}
function cb(n) {
  const e = n.match(/\S+/g);
  return e === null ? Le : e;
}
Wd(ux);
Oe("IShadowDOMStyleFactory", (n) => n.cachedCallback((e) => fx.supported(e.get(Pn)) ? e.get(cx) : e.get(dx)));
class cx {
  constructor(e) {
    this.p = e, this.cache = /* @__PURE__ */ new Map();
  }
  createStyles(e, t) {
    return new fx(this.p, e, this.cache, t);
  }
}
cx.inject = [Pn];
class dx {
  constructor(e) {
    this.p = e;
  }
  createStyles(e, t) {
    return new XS(this.p, e, t);
  }
}
dx.inject = [Pn];
const db = Oe("IShadowDOMStyles"), YS = Oe("IShadowDOMGlobalStyles", (n) => n.instance({
  applyTo: _i
}));
class fx {
  constructor(e, t, r, i = null) {
    this.sharedStyles = i, this.styleSheets = t.map((s) => {
      let a;
      return s instanceof e.CSSStyleSheet ? a = s : (a = r.get(s), a === void 0 && (a = new e.CSSStyleSheet(), a.replaceSync(s), r.set(s, a))), a;
    });
  }
  static supported(e) {
    return "adoptedStyleSheets" in e.ShadowRoot.prototype;
  }
  applyTo(e) {
    this.sharedStyles !== null && this.sharedStyles.applyTo(e), e.adoptedStyleSheets = [...e.adoptedStyleSheets, ...this.styleSheets];
  }
}
class XS {
  constructor(e, t, r = null) {
    this.p = e, this.localStyles = t, this.sharedStyles = r;
  }
  applyTo(e) {
    const t = this.localStyles, r = this.p;
    for (let i = t.length - 1; i > -1; --i) {
      const s = r.document.createElement("style");
      s.innerHTML = t[i], e.prepend(s);
    }
    this.sharedStyles !== null && this.sharedStyles.applyTo(e);
  }
}
const { enter: ZS, exit: eE } = gC, { wrap: tE, unwrap: nE } = ZC;
class px {
  constructor(e, t, r, i, s) {
    this.obj = e, this.$get = r, this.useProxy = s, this.isBound = !1, this.running = !1, this.v = void 0, this.cb = i, this.oL = t;
  }
  get value() {
    return this.v;
  }
  handleChange() {
    this.run();
  }
  handleCollectionChange() {
    this.run();
  }
  bind() {
    this.isBound || (this.compute(), this.isBound = !0);
  }
  unbind() {
    !this.isBound || (this.isBound = !1, this.obs.clearAll());
  }
  run() {
    if (!this.isBound || this.running)
      return;
    const e = this.obj, t = this.v, r = this.compute();
    gl(r, t) || this.cb.call(e, r, t, e);
  }
  compute() {
    this.running = !0, this.obs.version++;
    try {
      return ZS(this), this.v = nE(this.$get.call(void 0, this.useProxy ? tE(this.obj) : this.obj, this));
    } finally {
      this.obs.clear(), this.running = !1, eE(this);
    }
  }
}
class P0 {
  constructor(e, t, r, i, s) {
    this.scope = e, this.l = t, this.oL = r, this.isBound = !1, this.boundFn = !1, this.obj = e.bindingContext, this.St = i, this.cb = s;
  }
  get value() {
    return this.v;
  }
  handleChange(e) {
    const t = this.St, r = this.obj, i = this.v;
    t.$kind === 1 && this.obs.count === 1 || (this.obs.version++, e = G(t, this.scope, this, this), this.obs.clear()), gl(e, i) || (this.v = e, this.cb.call(r, e, i, r));
  }
  bind() {
    this.isBound || (this.obs.version++, this.v = G(this.St, this.scope, this, this), this.obs.clear(), this.isBound = !0);
  }
  unbind() {
    !this.isBound || (this.isBound = !1, this.obs.clearAll(), this.v = void 0);
  }
}
Lr(px);
Lr(P0);
li(!0)(P0);
const Xa = Oe("ILifecycleHooks");
class rE {
  constructor(e, t) {
    this.definition = e, this.instance = t;
  }
}
class O0 {
  constructor(e, t) {
    this.Type = e, this.propertyNames = t;
  }
  static create(e, t) {
    const r = /* @__PURE__ */ new Set();
    let i = t.prototype;
    for (; i !== b0; ) {
      for (const s of v0(i))
        s !== "constructor" && r.add(s);
      i = Object.getPrototypeOf(i);
    }
    return new O0(t, r);
  }
  register(e) {
    Ia(Xa, this.Type).register(e);
  }
}
const fb = /* @__PURE__ */ new WeakMap(), Kl = Tn("lifecycle-hooks"), pb = tr({
  name: Kl,
  define(n, e) {
    const t = O0.create(n, e);
    return Et(Kl, t, e), Rs(e, Kl), t.Type;
  },
  resolve(n) {
    let e = fb.get(n);
    if (e === void 0) {
      fb.set(n, e = new iE());
      const t = n.root, r = t.id === n.id ? n.getAll(Xa) : n.has(Xa, !1) ? t.getAll(Xa).concat(n.getAll(Xa)) : t.getAll(Xa);
      let i, s, a, o, u;
      for (i of r) {
        s = wn(Kl, i.constructor), a = new rE(s, i);
        for (o of s.propertyNames)
          u = e[o], u === void 0 ? e[o] = [a] : u.push(a);
      }
    }
    return e;
  }
});
class iE {
}
const nr = Oe("IViewFactory");
class zd {
  constructor(e, t) {
    this.isCaching = !1, this.Y = null, this.It = -1, this.name = t.name, this.container = e, this.def = t;
  }
  setCacheSize(e, t) {
    e && (e === "*" ? e = zd.maxCacheSize : wt(e) && (e = parseInt(e, 10)), (this.It === -1 || !t) && (this.It = e)), this.It > 0 ? this.Y = [] : this.Y = null, this.isCaching = this.It > 0;
  }
  canReturnToCache(e) {
    return this.Y != null && this.Y.length < this.It;
  }
  tryReturnToCache(e) {
    return this.canReturnToCache(e) ? (this.Y.push(e), !0) : !1;
  }
  create(e) {
    const t = this.Y;
    let r;
    return t != null && t.length > 0 ? (r = t.pop(), r) : (r = dr.$view(this, e), r);
  }
}
zd.maxCacheSize = 65535;
const Da = Oe("IRendering", (n) => n.singleton(hx));
class hx {
  constructor(e) {
    this.Tt = /* @__PURE__ */ new WeakMap(), this.Pt = /* @__PURE__ */ new WeakMap();
    const t = e.root;
    this.p = (this.Et = t).get(Pn), this.ep = t.get(i0), this.oL = t.get(Pa), this.Lt = new Xf(this.p, this.p.document.createDocumentFragment());
  }
  get renderers() {
    return this.Dt ?? (this.Dt = this.Et.getAll(Cx, !1).reduce((e, t) => (e[t.target] = t, e), dn()));
  }
  compile(e, t, r) {
    if (e.needsCompile !== !1) {
      const i = this.Tt, s = t.get(Ax);
      let a = i.get(e);
      return a == null ? i.set(e, a = s.compile(e, t, r)) : t.register(...a.dependencies), a;
    }
    return e;
  }
  getViewFactory(e, t) {
    return new zd(t, Hr.getOrCreate(e));
  }
  createNodes(e) {
    if (e.enhance === !0)
      return new Xf(this.p, e.template);
    let t;
    const r = this.Pt;
    if (r.has(e))
      t = r.get(e);
    else {
      const i = this.p, s = i.document, a = e.template;
      let o;
      a === null ? t = null : a instanceof i.Node ? a.nodeName === "TEMPLATE" ? t = s.adoptNode(a.content) : (t = s.adoptNode(s.createDocumentFragment())).appendChild(a.cloneNode(!0)) : (o = s.createElement("template"), wt(a) && (o.innerHTML = a), s.adoptNode(t = o.content)), r.set(e, t);
    }
    return t == null ? this.Lt : new Xf(this.p, t.cloneNode(!0));
  }
  render(e, t, r, i) {
    const s = r.instructions, a = this.renderers, o = t.length;
    if (t.length !== s.length)
      throw ie(`AUR0757:${o}<>${s.length}`);
    let u = 0, l = 0, c = 0, p, b, A;
    if (o > 0)
      for (; o > u; ) {
        for (p = s[u], A = t[u], l = 0, c = p.length; c > l; )
          b = p[l], a[b.type].render(e, A, b, this.p, this.ep, this.oL), ++l;
        ++u;
      }
    if (i != null && (p = r.surrogates, (c = p.length) > 0))
      for (l = 0; c > l; )
        b = p[l], a[b.type].render(e, i, b, this.p, this.ep, this.oL), ++l;
  }
}
hx.inject = [ko];
var hb;
(function(n) {
  n[n.none = 0] = "none", n[n.fromBind = 1] = "fromBind", n[n.fromUnbind = 2] = "fromUnbind", n[n.dispose = 4] = "dispose";
})(hb || (hb = {}));
var yb;
(function(n) {
  n[n.none = 0] = "none", n[n.host = 1] = "host", n[n.shadowRoot = 2] = "shadowRoot", n[n.location = 3] = "location";
})(yb || (yb = {}));
const sE = {
  optional: !0
}, es = /* @__PURE__ */ new WeakMap();
class dr {
  constructor(e, t, r, i, s, a, o) {
    this.container = e, this.vmKind = t, this.definition = r, this.viewFactory = i, this.host = a, this.head = null, this.tail = null, this.next = null, this.parent = null, this.bindings = null, this.children = null, this.hasLockedScope = !1, this.isStrictBinding = !1, this.scope = null, this.isBound = !1, this.hostController = null, this.mountTarget = 0, this.shadowRoot = null, this.nodes = null, this.location = null, this.Ut = null, this.state = 0, this.$t = !1, this._t = Le, this.flags = 0, this.$initiator = null, this.$flags = 0, this.$resolve = void 0, this.$reject = void 0, this.$promise = void 0, this.qt = 0, this.Mt = 0, this.Ft = 0, this.Ot = s, this.Vt = t === 2 ? io.none : new io(s), this.location = o, this.r = e.root.get(Da);
  }
  get lifecycleHooks() {
    return this.Ut;
  }
  get isActive() {
    return (this.state & 3) > 0 && (4 & this.state) === 0;
  }
  get name() {
    if (this.parent === null)
      switch (this.vmKind) {
        case 1:
          return `[${this.definition.name}]`;
        case 0:
          return this.definition.name;
        case 2:
          return this.viewFactory.name;
      }
    switch (this.vmKind) {
      case 1:
        return `${this.parent.name}>[${this.definition.name}]`;
      case 0:
        return `${this.parent.name}>${this.definition.name}`;
      case 2:
        return this.viewFactory.name === this.parent.definition?.name ? `${this.parent.name}[view]` : `${this.parent.name}[view:${this.viewFactory.name}]`;
    }
  }
  get hooks() {
    return this.Vt;
  }
  get viewModel() {
    return this.Ot;
  }
  set viewModel(e) {
    this.Ot = e, this.Vt = e == null || this.vmKind === 2 ? io.none : new io(e);
  }
  static getCached(e) {
    return es.get(e);
  }
  static getCachedOrThrow(e) {
    const t = dr.getCached(e);
    if (t === void 0)
      throw ie(`AUR0500:${e}`);
    return t;
  }
  static $el(e, t, r, i, s = void 0, a = null) {
    if (es.has(t))
      return es.get(t);
    s = s ?? ih(t.constructor);
    const o = new dr(e, 0, s, null, t, r, a), u = e.get(lv(Kc));
    return s.dependencies.length > 0 && e.register(...s.dependencies), St(e, Kc, new yn("IHydrationContext", new lE(o, i, u))), es.set(t, o), (i == null || i.hydrate !== !1) && o.hE(i, u), o;
  }
  static $attr(e, t, r, i) {
    if (es.has(t))
      return es.get(t);
    i = i ?? th(t.constructor);
    const s = new dr(e, 1, i, null, t, r, null);
    return i.dependencies.length > 0 && e.register(...i.dependencies), es.set(t, s), s.Nt(), s;
  }
  static $view(e, t = void 0) {
    const r = new dr(e.container, 2, null, e, null, null, null);
    return r.parent = t ?? null, r.jt(), r;
  }
  hE(e, t) {
    const r = this.container, i = this.flags, s = this.Ot;
    let a = this.definition;
    if (this.scope = sn.create(s, null, !0), a.watches.length > 0 && gb(this, r, a, s), mb(this, a, i, s), this._t = aE(this, a, s), this.Vt.hasDefine) {
      const o = s.define(this, t, a);
      o !== void 0 && o !== a && (a = Hr.getOrCreate(o));
    }
    this.Ut = pb.resolve(r), a.register(r), a.injectable !== null && St(r, a.injectable, new yn("definition.injectable", s)), (e == null || e.hydrate !== !1) && (this.hS(e), this.hC());
  }
  hS(e) {
    this.Ut.hydrating !== void 0 && this.Ut.hydrating.forEach(dE, this), this.Vt.hasHydrating && this.Ot.hydrating(this);
    const t = this.Ht = this.r.compile(this.definition, this.container, e), { shadowOptions: r, isStrictBinding: i, hasSlots: s, containerless: a } = t;
    let o = this.location;
    if (this.isStrictBinding = i, (this.hostController = ms(this.host, sE)) !== null && (this.host = this.container.root.get(Pn).document.createElement(this.definition.name), a && o == null && (o = this.location = I0(this.host))), Cn(this.host, Yt, this), Cn(this.host, this.definition.key, this), r !== null || s) {
      if (o != null)
        throw ie("AUR0501");
      Cn(this.shadowRoot = this.host.attachShadow(r ?? uE), Yt, this), Cn(this.shadowRoot, this.definition.key, this), this.mountTarget = 2;
    } else
      o != null ? (Cn(o, Yt, this), Cn(o, this.definition.key, this), this.mountTarget = 3) : this.mountTarget = 1;
    this.Ot.$controller = this, this.nodes = this.r.createNodes(t), this.Ut.hydrated !== void 0 && this.Ut.hydrated.forEach(fE, this), this.Vt.hasHydrated && this.Ot.hydrated(this);
  }
  hC() {
    this.r.render(this, this.nodes.findTargets(), this.Ht, this.host), this.Ut.created !== void 0 && this.Ut.created.forEach(Tb, this), this.Vt.hasCreated && this.Ot.created(this);
  }
  Nt() {
    const e = this.definition, t = this.Ot;
    e.watches.length > 0 && gb(this, this.container, e, t), mb(this, e, this.flags, t), t.$controller = this, this.Ut = pb.resolve(this.container), this.Ut.created !== void 0 && this.Ut.created.forEach(Tb, this), this.Vt.hasCreated && this.Ot.created(this);
  }
  jt() {
    this.Ht = this.r.compile(this.viewFactory.def, this.container, null), this.isStrictBinding = this.Ht.isStrictBinding, this.r.render(this, (this.nodes = this.r.createNodes(this.Ht)).findTargets(), this.Ht, void 0);
  }
  activate(e, t, r, i) {
    switch (this.state) {
      case 0:
      case 8:
        if (!(t === null || t.isActive))
          return;
        this.state = 1;
        break;
      case 2:
        return;
      case 32:
        throw ie(`AUR0502:${this.name}`);
      default:
        throw ie(`AUR0503:${this.name} ${wb(this.state)}`);
    }
    switch (this.parent = t, r |= 1, this.vmKind) {
      case 0:
        this.scope.parent = i ?? null;
        break;
      case 1:
        this.scope = i ?? null;
        break;
      case 2:
        if (i == null)
          throw ie("AUR0504");
        this.hasLockedScope || (this.scope = i);
        break;
    }
    this.isStrictBinding, this.$initiator = e, this.$flags = r, this.Wt();
    let s;
    return this.vmKind !== 2 && this.Ut.binding != null && (s = qt(...this.Ut.binding.map(pE, this))), this.Vt.hasBinding && (s = qt(s, this.Ot.binding(this.$initiator, this.parent, this.$flags))), nn(s) ? (this.zt(), s.then(() => {
      this.bind();
    }).catch((a) => {
      this.Gt(a);
    }), this.$promise) : (this.bind(), this.$promise);
  }
  bind() {
    let e = 0, t = this._t.length, r;
    if (t > 0)
      for (; t > e; )
        this._t[e].start(), ++e;
    if (this.bindings !== null)
      for (e = 0, t = this.bindings.length; t > e; )
        this.bindings[e].bind(this.scope), ++e;
    if (this.vmKind !== 2 && this.Ut.bound != null && (r = qt(...this.Ut.bound.map(hE, this))), this.Vt.hasBound && (r = qt(r, this.Ot.bound(this.$initiator, this.parent, this.$flags))), nn(r)) {
      this.zt(), r.then(() => {
        this.isBound = !0, this.Xt();
      }).catch((i) => {
        this.Gt(i);
      });
      return;
    }
    this.isBound = !0, this.Xt();
  }
  Kt(...e) {
    switch (this.mountTarget) {
      case 1:
        this.host.append(...e);
        break;
      case 2:
        this.shadowRoot.append(...e);
        break;
      case 3: {
        let t = 0;
        for (; t < e.length; ++t)
          this.location.parentNode.insertBefore(e[t], this.location);
        break;
      }
    }
  }
  Xt() {
    if (this.hostController !== null)
      switch (this.mountTarget) {
        case 1:
        case 2:
          this.hostController.Kt(this.host);
          break;
        case 3:
          this.hostController.Kt(this.location.$start, this.location);
          break;
      }
    switch (this.mountTarget) {
      case 1:
        this.nodes.appendTo(this.host, this.definition != null && this.definition.enhance);
        break;
      case 2: {
        const r = this.container;
        (r.has(db, !1) ? r.get(db) : r.get(YS)).applyTo(this.shadowRoot), this.nodes.appendTo(this.shadowRoot);
        break;
      }
      case 3:
        this.nodes.insertBefore(this.location);
        break;
    }
    let e = 0, t;
    if (this.vmKind !== 2 && this.Ut.attaching != null && (t = qt(...this.Ut.attaching.map(yE, this))), this.Vt.hasAttaching && (t = qt(t, this.Ot.attaching(this.$initiator, this.parent, this.$flags))), nn(t) && (this.zt(), this.Wt(), t.then(() => {
      this.Qt();
    }).catch((r) => {
      this.Gt(r);
    })), this.children !== null)
      for (; e < this.children.length; ++e)
        this.children[e].activate(this.$initiator, this, this.$flags, this.scope);
    this.Qt();
  }
  deactivate(e, t, r) {
    switch (-17 & this.state) {
      case 2:
        this.state = 4;
        break;
      case 0:
      case 8:
      case 32:
      case 40:
        return;
      default:
        throw ie(`AUR0505:${this.name} ${wb(this.state)}`);
    }
    this.$initiator = e, this.$flags = r, e === this && this.Yt();
    let i = 0, s;
    if (this._t.length)
      for (; i < this._t.length; ++i)
        this._t[i].stop();
    if (this.children !== null)
      for (i = 0; i < this.children.length; ++i)
        this.children[i].deactivate(e, this, r);
    if (this.vmKind !== 2 && this.Ut.detaching != null && (s = qt(...this.Ut.detaching.map(bE, this))), this.Vt.hasDetaching && (s = qt(s, this.Ot.detaching(this.$initiator, this.parent, this.$flags))), nn(s) && (this.zt(), e.Yt(), s.then(() => {
      e.Zt();
    }).catch((a) => {
      e.Gt(a);
    })), e.head === null ? e.head = this : e.tail.next = this, e.tail = this, e === this)
      return this.Zt(), this.$promise;
  }
  removeNodes() {
    switch (this.vmKind) {
      case 0:
      case 2:
        this.nodes.remove(), this.nodes.unlink();
    }
    if (this.hostController !== null)
      switch (this.mountTarget) {
        case 1:
        case 2:
          this.host.remove();
          break;
        case 3:
          this.location.$start.remove(), this.location.remove();
          break;
      }
  }
  unbind() {
    const e = 2 | this.$flags;
    let t = 0;
    if (this.bindings !== null)
      for (; t < this.bindings.length; ++t)
        this.bindings[t].unbind();
    switch (this.parent = null, this.vmKind) {
      case 1:
        this.scope = null;
        break;
      case 2:
        this.hasLockedScope || (this.scope = null), (16 & this.state) === 16 && !this.viewFactory.tryReturnToCache(this) && this.$initiator === this && this.dispose();
        break;
      case 0:
        this.scope.parent = null;
        break;
    }
    (4 & e) === 4 && this.$initiator === this && this.dispose(), this.state = 32 & this.state | 8, this.$initiator = null, this.Jt();
  }
  zt() {
    this.$promise === void 0 && (this.$promise = new Promise((e, t) => {
      this.$resolve = e, this.$reject = t;
    }), this.$initiator !== this && this.parent.zt());
  }
  Jt() {
    this.$promise !== void 0 && (Jf = this.$resolve, this.$resolve = this.$reject = this.$promise = void 0, Jf(), Jf = void 0);
  }
  Gt(e) {
    this.$promise !== void 0 && (Yf = this.$reject, this.$resolve = this.$reject = this.$promise = void 0, Yf(e), Yf = void 0), this.$initiator !== this && this.parent.Gt(e);
  }
  Wt() {
    ++this.qt, this.$initiator !== this && this.parent.Wt();
  }
  Qt() {
    if (--this.qt === 0) {
      if (this.vmKind !== 2 && this.Ut.attached != null && (ta = qt(...this.Ut.attached.map(mE, this))), this.Vt.hasAttached && (ta = qt(ta, this.Ot.attached(this.$initiator, this.$flags))), nn(ta)) {
        this.zt(), ta.then(() => {
          this.state = 2, this.Jt(), this.$initiator !== this && this.parent.Qt();
        }).catch((e) => {
          this.Gt(e);
        }), ta = void 0;
        return;
      }
      ta = void 0, this.state = 2, this.Jt();
    }
    this.$initiator !== this && this.parent.Qt();
  }
  Yt() {
    ++this.Mt;
  }
  Zt() {
    if (--this.Mt === 0) {
      this.te(), this.removeNodes();
      let e = this.$initiator.head, t;
      for (; e !== null; )
        e !== this && (e.debug && e.logger.trace("detach()"), e.removeNodes()), e.vmKind !== 2 && e.Ut.unbinding != null && (t = qt(...e.Ut.unbinding.map(gE, this))), e.Vt.hasUnbinding && (e.debug && e.logger.trace("unbinding()"), t = qt(t, e.viewModel.unbinding(e.$initiator, e.parent, e.$flags))), nn(t) && (this.zt(), this.te(), t.then(() => {
          this.ee();
        }).catch((r) => {
          this.Gt(r);
        })), t = void 0, e = e.next;
      this.ee();
    }
  }
  te() {
    ++this.Ft;
  }
  ee() {
    if (--this.Ft === 0) {
      let e = this.$initiator.head, t = null;
      for (; e !== null; )
        e !== this && (e.isBound = !1, e.unbind()), t = e.next, e.next = null, e = t;
      this.head = this.tail = null, this.isBound = !1, this.unbind();
    }
  }
  addBinding(e) {
    this.bindings === null ? this.bindings = [e] : this.bindings[this.bindings.length] = e;
  }
  addChild(e) {
    this.children === null ? this.children = [e] : this.children[this.children.length] = e;
  }
  is(e) {
    switch (this.vmKind) {
      case 1:
        return th(this.Ot.constructor).name === e;
      case 0:
        return ih(this.Ot.constructor).name === e;
      case 2:
        return this.viewFactory.name === e;
    }
  }
  lockScope(e) {
    this.scope = e, this.hasLockedScope = !0;
  }
  setHost(e) {
    return this.vmKind === 0 && (Cn(e, Yt, this), Cn(e, this.definition.key, this)), this.host = e, this.mountTarget = 1, this;
  }
  setShadowRoot(e) {
    return this.vmKind === 0 && (Cn(e, Yt, this), Cn(e, this.definition.key, this)), this.shadowRoot = e, this.mountTarget = 2, this;
  }
  setLocation(e) {
    return this.vmKind === 0 && (Cn(e, Yt, this), Cn(e, this.definition.key, this)), this.location = e, this.mountTarget = 3, this;
  }
  release() {
    this.state |= 16;
  }
  dispose() {
    (32 & this.state) !== 32 && (this.state |= 32, this.Vt.hasDispose && this.Ot.dispose(), this.children !== null && (this.children.forEach(cE), this.children = null), this.hostController = null, this.scope = null, this.nodes = null, this.location = null, this.viewFactory = null, this.Ot !== null && (es.delete(this.Ot), this.Ot = null), this.Ot = null, this.host = null, this.shadowRoot = null, this.container.disposeResolvers());
  }
  accept(e) {
    if (e(this) === !0 || this.Vt.hasAccept && this.Ot.accept(e) === !0)
      return !0;
    if (this.children !== null) {
      const { children: t } = this;
      for (let r = 0, i = t.length; r < i; ++r)
        if (t[r].accept(e) === !0)
          return !0;
    }
  }
}
function yx(n) {
  let e = n.$observers;
  return e === void 0 && Reflect.defineProperty(n, "$observers", {
    enumerable: !1,
    value: e = {}
  }), e;
}
function mb(n, e, t, r) {
  const i = e.bindables, s = v0(i), a = s.length;
  if (a > 0) {
    let o, u, l = 0;
    const c = yx(r), p = n.container, b = p.has(wm, !0) ? p.get(wm) : null;
    for (; l < a; ++l)
      o = s[l], c[o] === void 0 && (u = i[o], c[o] = new Yv(r, o, u.callback, u.set, n, b));
  }
}
function aE(n, e, t) {
  const r = e.childrenObservers, i = v0(r), s = i.length;
  if (s > 0) {
    const a = yx(t), o = [];
    let u, l = 0, c;
    for (; l < s; ++l)
      u = i[l], a[u] == null && (c = r[u], o[o.length] = a[u] = new ox(n, t, u, c.callback, c.query, c.filter, c.map, c.options));
    return o;
  }
  return Le;
}
const bb = /* @__PURE__ */ new Map(), oE = (n) => {
  let e = bb.get(n);
  return e == null && (e = new pc(n, 0), bb.set(n, e)), e;
};
function gb(n, e, t, r) {
  const i = e.get(Pa), s = e.get(i0), a = t.watches, o = n.vmKind === 0 ? n.scope : sn.create(r, null, !0), u = a.length;
  let l, c, p, b = 0;
  for (; u > b; ++b) {
    if ({ expression: l, callback: c } = a[b], c = $n(c) ? c : Reflect.get(r, c), !$n(c))
      throw ie(`AUR0506:${String(c)}`);
    $n(l) ? n.addBinding(new px(r, i, l, c, !0)) : (p = wt(l) ? s.parse(l, 16) : oE(l), n.addBinding(new P0(o, e, i, p, c)));
  }
}
class io {
  constructor(e) {
    this.hasDefine = "define" in e, this.hasHydrating = "hydrating" in e, this.hasHydrated = "hydrated" in e, this.hasCreated = "created" in e, this.hasBinding = "binding" in e, this.hasBound = "bound" in e, this.hasAttaching = "attaching" in e, this.hasAttached = "attached" in e, this.hasDetaching = "detaching" in e, this.hasUnbinding = "unbinding" in e, this.hasDispose = "dispose" in e, this.hasAccept = "accept" in e;
  }
}
io.none = new io({});
const uE = {
  mode: "open"
};
var vb;
(function(n) {
  n[n.customElement = 0] = "customElement", n[n.customAttribute = 1] = "customAttribute", n[n.synthetic = 2] = "synthetic";
})(vb || (vb = {}));
var xb;
(function(n) {
  n[n.none = 0] = "none", n[n.activating = 1] = "activating", n[n.activated = 2] = "activated", n[n.deactivating = 4] = "deactivating", n[n.deactivated = 8] = "deactivated", n[n.released = 16] = "released", n[n.disposed = 32] = "disposed";
})(xb || (xb = {}));
function wb(n) {
  const e = [];
  return (1 & n) === 1 && e.push("activating"), (2 & n) === 2 && e.push("activated"), (4 & n) === 4 && e.push("deactivating"), (8 & n) === 8 && e.push("deactivated"), (16 & n) === 16 && e.push("released"), (32 & n) === 32 && e.push("disposed"), e.length === 0 ? "none" : e.join("|");
}
const Hd = Oe("IController"), Kc = Oe("IHydrationContext");
class lE {
  constructor(e, t, r) {
    this.instruction = t, this.parent = r, this.controller = e;
  }
}
function cE(n) {
  n.dispose();
}
function Tb(n) {
  n.instance.created(this.Ot, this);
}
function dE(n) {
  n.instance.hydrating(this.Ot, this);
}
function fE(n) {
  n.instance.hydrated(this.Ot, this);
}
function pE(n) {
  return n.instance.binding(this.Ot, this.$initiator, this.parent, this.$flags);
}
function hE(n) {
  return n.instance.bound(this.Ot, this.$initiator, this.parent, this.$flags);
}
function yE(n) {
  return n.instance.attaching(this.Ot, this.$initiator, this.parent, this.$flags);
}
function mE(n) {
  return n.instance.attached(this.Ot, this.$initiator, this.$flags);
}
function bE(n) {
  return n.instance.detaching(this.Ot, this.$initiator, this.parent, this.$flags);
}
function gE(n) {
  return n.instance.unbinding(this.Ot, this.$initiator, this.parent, this.$flags);
}
let Jf, Yf, ta;
const Ab = Oe("IAppRoot"), vE = "au-start", xE = "au-end", Cb = (n, e) => n.document.createComment(e), wE = (n) => {
  const e = Cb(n, xE);
  return e.$start = Cb(n, vE), e;
}, TE = (n, e) => n.document.createTextNode(e), AE = (n, e, t) => n.insertBefore(e, t), ql = (n, e, t) => {
  if (n === null)
    return;
  const r = t.length;
  let i = 0;
  for (; r > i; )
    n.insertBefore(t[i], e), ++i;
}, CE = (n) => {
  const e = n.previousSibling;
  let t;
  if (e?.nodeType === 8 && e.textContent === "au-end") {
    if (t = e, (t.$start = t.previousSibling) == null)
      throw Sb();
    return n.parentNode?.removeChild(n), t;
  } else
    throw Sb();
}, Sb = () => ie("AURxxxx");
class SE {
}
function pu(n, e) {
  return n.$au?.[e] ?? null;
}
function Cn(n, e, t) {
  var r;
  ((r = n).$au ?? (r.$au = new SE()))[e] = t;
}
const go = Oe("INode");
Oe("IEventTarget", (n) => n.cachedCallback((e) => e.has(Ab, !0) ? e.get(Ab).host : e.get(Pn).document));
const Mn = Oe("IRenderLocation"), qc = /* @__PURE__ */ new WeakMap();
function nh(n) {
  if (qc.has(n))
    return qc.get(n);
  let e = 0, t = n.nextSibling;
  for (; t !== null; ) {
    if (t.nodeType === 8)
      switch (t.textContent) {
        case "au-start":
          ++e;
          break;
        case "au-end":
          if (e-- === 0)
            return t;
      }
    t = t.nextSibling;
  }
  if (n.parentNode === null && n.nodeType === 11) {
    const r = ms(n);
    if (r === void 0)
      return null;
    if (r.mountTarget === 2)
      return nh(r.host);
  }
  return n.parentNode;
}
function EE(n, e) {
  if (n.platform !== void 0 && !(n instanceof n.platform.Node)) {
    const t = n.childNodes;
    for (let r = 0, i = t.length; r < i; ++r)
      qc.set(t[r], e);
  } else
    qc.set(n, e);
}
function I0(n) {
  if (Qc(n))
    return n;
  const e = n.ownerDocument.createComment("au-end"), t = e.$start = n.ownerDocument.createComment("au-start"), r = n.parentNode;
  return r !== null && (r.replaceChild(e, n), r.insertBefore(t, e)), e;
}
function Qc(n) {
  return n.textContent === "au-end";
}
class Xf {
  constructor(e, t) {
    this.platform = e, this.next = void 0, this.ne = !1, this.re = !1, this.ref = null, this.f = t;
    const r = t.querySelectorAll(".au");
    let i = 0, s = r.length, a, o = this.t = Array(s);
    for (; s > i; )
      a = r[i], a.nodeName === "AU-M" ? o[i] = CE(a) : o[i] = a, ++i;
    const u = t.childNodes, l = this.childNodes = Array(s = u.length);
    for (i = 0; s > i; )
      l[i] = u[i], ++i;
    this.oe = t.firstChild, this.le = t.lastChild;
  }
  get firstChild() {
    return this.oe;
  }
  get lastChild() {
    return this.le;
  }
  findTargets() {
    return this.t;
  }
  insertBefore(e) {
    if (this.re && !!this.ref)
      this.addToLinked();
    else {
      const t = e.parentNode;
      if (this.ne) {
        let r = this.oe, i;
        const s = this.le;
        for (; r != null && (i = r.nextSibling, t.insertBefore(r, e), r !== s); )
          r = i;
      } else
        this.ne = !0, e.parentNode.insertBefore(this.f, e);
    }
  }
  appendTo(e, t = !1) {
    if (this.ne) {
      let r = this.oe, i;
      const s = this.le;
      for (; r != null && (i = r.nextSibling, e.appendChild(r), r !== s); )
        r = i;
    } else
      this.ne = !0, t || e.appendChild(this.f);
  }
  remove() {
    if (this.ne) {
      this.ne = !1;
      const e = this.f, t = this.le;
      let r, i = this.oe;
      for (; i !== null && (r = i.nextSibling, e.appendChild(i), i !== t); )
        i = r;
    }
  }
  addToLinked() {
    const e = this.ref, t = e.parentNode;
    if (this.ne) {
      let r = this.oe, i;
      const s = this.le;
      for (; r != null && (i = r.nextSibling, t.insertBefore(r, e), r !== s); )
        r = i;
    } else
      this.ne = !0, t.insertBefore(this.f, e);
  }
  unlink() {
    this.re = !1, this.next = void 0, this.ref = void 0;
  }
  link(e) {
    this.re = !0, Qc(e) ? this.ref = e : (this.next = e, this.he());
  }
  he() {
    this.next !== void 0 ? this.ref = this.next.firstChild : this.ref = void 0;
  }
}
const mx = Oe("IWindow", (n) => n.callback((e) => e.get(Pn).window));
Oe("ILocation", (n) => n.callback((e) => e.get(mx).location));
Oe("IHistory", (n) => n.callback((e) => e.get(mx).history));
function bx(n) {
  return function(e) {
    return gx(n, e);
  };
}
const Zf = /* @__PURE__ */ new WeakMap();
class Hr {
  constructor(e, t, r, i, s, a, o, u, l, c, p, b, A, g, w, T, _, I, N, B, D) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i, this.cache = s, this.capture = a, this.template = o, this.instructions = u, this.dependencies = l, this.injectable = c, this.needsCompile = p, this.surrogates = b, this.bindables = A, this.childrenObservers = g, this.containerless = w, this.isStrictBinding = T, this.shadowOptions = _, this.hasSlots = I, this.enhance = N, this.watches = B, this.processContent = D;
  }
  get type() {
    return 1;
  }
  static create(e, t = null) {
    if (t === null) {
      const i = e;
      if (wt(i))
        throw ie(`AUR0761:${e}`);
      const s = On("name", i, rh);
      return $n(i.Type) ? t = i.Type : t = vx(n3(s)), new Hr(t, s, Ft(i.aliases), On("key", i, () => vc(s)), On("cache", i, ep), On("capture", i, An), On("template", i, sr), Ft(i.instructions), Ft(i.dependencies), On("injectable", i, sr), On("needsCompile", i, tp), Ft(i.surrogates), wi.from(t, i.bindables), eu.from(i.childrenObservers), On("containerless", i, An), On("isStrictBinding", i, An), On("shadowOptions", i, sr), On("hasSlots", i, An), On("enhance", i, An), On("watches", i, ME), ir("processContent", t, sr));
    }
    if (wt(e))
      return new Hr(t, e, Ft(Kn(t, "aliases"), t.aliases), vc(e), ir("cache", t, ep), ir("capture", t, An), ir("template", t, sr), Ft(Kn(t, "instructions"), t.instructions), Ft(Kn(t, "dependencies"), t.dependencies), ir("injectable", t, sr), ir("needsCompile", t, tp), Ft(Kn(t, "surrogates"), t.surrogates), wi.from(t, ...wi.getAll(t), Kn(t, "bindables"), t.bindables), eu.from(...eu.getAll(t), Kn(t, "childrenObservers"), t.childrenObservers), ir("containerless", t, An), ir("isStrictBinding", t, An), ir("shadowOptions", t, sr), ir("hasSlots", t, An), ir("enhance", t, An), Ft(eh.getAnnotation(t), t.watches), ir("processContent", t, sr));
    const r = On("name", e, rh);
    return new Hr(t, r, Ft(Kn(t, "aliases"), e.aliases, t.aliases), vc(r), Tr("cache", e, t, ep), Tr("capture", e, t, An), Tr("template", e, t, sr), Ft(Kn(t, "instructions"), e.instructions, t.instructions), Ft(Kn(t, "dependencies"), e.dependencies, t.dependencies), Tr("injectable", e, t, sr), Tr("needsCompile", e, t, tp), Ft(Kn(t, "surrogates"), e.surrogates, t.surrogates), wi.from(t, ...wi.getAll(t), Kn(t, "bindables"), t.bindables, e.bindables), eu.from(...eu.getAll(t), Kn(t, "childrenObservers"), t.childrenObservers, e.childrenObservers), Tr("containerless", e, t, An), Tr("isStrictBinding", e, t, An), Tr("shadowOptions", e, t, sr), Tr("hasSlots", e, t, An), Tr("enhance", e, t, An), Ft(e.watches, eh.getAnnotation(t), t.watches), Tr("processContent", e, t, sr));
  }
  static getOrCreate(e) {
    if (e instanceof Hr)
      return e;
    if (Zf.has(e))
      return Zf.get(e);
    const t = Hr.create(e);
    return Zf.set(e, t), Et(Yt, t, t.Type), t;
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    e.has(r, !1) || (Xv(r, t).register(e), vl(r, t).register(e), xl(i, lo, r, e));
  }
}
const _E = {
  name: void 0,
  searchParents: !1,
  optional: !1
}, ep = () => 0, sr = () => null, An = () => !1, tp = () => !0, ME = () => Le, Yt = Oa("custom-element"), vc = (n) => `${Yt}:${n}`, rh = (() => {
  let n = 0;
  return () => `unnamed-${++n}`;
})(), RE = (n, e, t) => {
  Et(Tn(e), t, n);
}, gx = (n, e) => {
  const t = Hr.create(n, e);
  return Et(Yt, t, t.Type), Et(Yt, t, t), Rs(t.Type, Yt), t.Type;
}, PE = (n) => $n(n) && bl(Yt, n), ms = (n, e = _E) => {
  if (e.name === void 0 && e.searchParents !== !0) {
    const r = pu(n, Yt);
    if (r === null) {
      if (e.optional === !0)
        return null;
      throw ie("AUR0762");
    }
    return r;
  }
  if (e.name !== void 0) {
    if (e.searchParents !== !0) {
      const s = pu(n, Yt);
      if (s === null)
        throw ie("AUR0763");
      return s.is(e.name) ? s : void 0;
    }
    let r = n, i = !1;
    for (; r !== null; ) {
      const s = pu(r, Yt);
      if (s !== null && (i = !0, s.is(e.name)))
        return s;
      r = nh(r);
    }
    if (i)
      return;
    throw ie("AUR0764");
  }
  let t = n;
  for (; t !== null; ) {
    const r = pu(t, Yt);
    if (r !== null)
      return r;
    t = nh(t);
  }
  throw ie("AUR0765");
}, Kn = (n, e) => wn(Tn(e), n), ih = (n) => {
  const e = wn(Yt, n);
  if (e === void 0)
    throw ie(`AUR0760:${n.name}`);
  return e;
}, OE = () => {
  const n = function(e, t, r) {
    const i = he.getOrCreateAnnotationParamTypes(e);
    return i[r] = n, e;
  };
  return n.register = function(e) {
    return {
      resolve(t, r) {
        return r.has(n, !0) ? r.get(n) : null;
      }
    };
  }, n;
}, vx = function() {
  const n = {
    value: "",
    writable: !1,
    enumerable: !1,
    configurable: !0
  }, e = {};
  return function(t, r = e) {
    const i = class {
    };
    return n.value = t, Reflect.defineProperty(i, "name", n), r !== e && g0(i.prototype, r), i;
  };
}(), lo = tr({
  name: Yt,
  keyFrom: vc,
  isType: PE,
  for: ms,
  define: gx,
  getDefinition: ih,
  annotate: RE,
  getAnnotation: Kn,
  generateName: rh,
  createInjectable: OE,
  generateType: vx
});
Tn("processContent");
Oe("IProjections");
const xx = Oe("IAuSlotsInfo");
class wx {
  constructor(e) {
    this.projectedSlots = e;
  }
}
var Eb;
(function(n) {
  n.hydrateElement = "ra", n.hydrateAttribute = "rb", n.hydrateTemplateController = "rc", n.hydrateLetElement = "rd", n.setProperty = "re", n.interpolation = "rf", n.propertyBinding = "rg", n.letBinding = "ri", n.refBinding = "rj", n.iteratorBinding = "rk", n.multiAttr = "rl", n.textBinding = "ha", n.listenerBinding = "hb", n.attributeBinding = "hc", n.stylePropertyBinding = "hd", n.setAttribute = "he", n.setClassAttribute = "hf", n.setStyleAttribute = "hg", n.spreadBinding = "hs", n.spreadElementProp = "hp";
})(Eb || (Eb = {}));
const Vo = Oe("Instruction");
class _l {
  constructor(e, t, r) {
    this.from = e, this.to = t, this.mode = r, this.type = "rg";
  }
}
class IE {
  constructor(e, t, r) {
    this.forOf = e, this.to = t, this.props = r, this.type = "rk";
  }
}
class kE {
  constructor(e, t) {
    this.from = e, this.to = t, this.type = "rj";
  }
}
class DE {
  constructor(e, t, r) {
    this.value = e, this.to = t, this.command = r, this.type = "rl";
  }
}
class Tx {
  constructor(e, t, r, i) {
    this.from = e, this.to = t, this.preventDefault = r, this.capture = i, this.type = "hb";
  }
}
class k0 {
  constructor(e, t, r) {
    this.attr = e, this.from = t, this.to = r, this.type = "hc";
  }
}
class BE {
  constructor() {
    this.type = "hs";
  }
}
const Ax = Oe("ITemplateCompiler"), Cx = Oe("IRenderer");
function Vt(n) {
  return function(t) {
    return t.register = function(r) {
      Ia(Cx, this).register(r);
    }, cS(t.prototype, "target", {
      configurable: !0,
      get: function() {
        return n;
      }
    }), t;
  };
}
function ji(n, e, t) {
  return wt(e) ? n.parse(e, t) : e;
}
function Kd(n) {
  return n.viewModel != null ? n.viewModel : n;
}
function NE(n, e) {
  if (e === "element")
    return n;
  switch (e) {
    case "controller":
      return ms(n);
    case "view":
      throw ie("AUR0750");
    case "view-model":
      return ms(n).viewModel;
    default: {
      const t = ax(n, e);
      if (t !== void 0)
        return t.viewModel;
      const r = ms(n, {
        name: e
      });
      if (r === void 0)
        throw ie(`AUR0751:${e}`);
      return r.viewModel;
    }
  }
}
let _b = class {
  render(e, t, r) {
    const i = Kd(t);
    i.$observers?.[r.to] !== void 0 ? i.$observers[r.to].setValue(r.value) : i[r.to] = r.value;
  }
};
_b = X([Vt("re")], _b);
let Mb = class {
  constructor(e) {
    this.r = e;
  }
  static get inject() {
    return [Da];
  }
  render(e, t, r, i, s, a) {
    let o, u, l, c;
    const p = r.res, b = r.projections, A = e.container;
    switch (typeof p) {
      case "string":
        if (o = A.find(lo, p), o == null)
          throw ie(`AUR0752:${p}@${e.name}`);
        break;
      default:
        o = p;
    }
    const w = r.containerless || o.containerless ? I0(t) : null, T = VE(i, e, t, r, w, b == null ? void 0 : new wx(x0(b)));
    u = o.Type, l = T.invoke(u), St(T, u, new yn(o.key, l)), c = dr.$el(T, l, t, r, o, w), Cn(t, o.key, c);
    const _ = this.r.renderers, I = r.props, N = I.length;
    let B = 0, D;
    for (; N > B; )
      D = I[B], _[D.type].render(e, c, D, i, s, a), ++B;
    e.addChild(c);
  }
};
Mb = X([Vt("ra")], Mb);
let Rb = class {
  constructor(e) {
    this.r = e;
  }
  static get inject() {
    return [Da];
  }
  render(e, t, r, i, s, a) {
    let o = e.container, u;
    switch (typeof r.res) {
      case "string":
        if (u = o.find(M0, r.res), u == null)
          throw ie(`AUR0753:${r.res}@${e.name}`);
        break;
      default:
        u = r.res;
    }
    const l = Mx(i, u, e, t, r, void 0, void 0), c = dr.$attr(l.ctn, l.vm, t, u);
    Cn(t, u.key, c);
    const p = this.r.renderers, b = r.props, A = b.length;
    let g = 0, w;
    for (; A > g; )
      w = b[g], p[w.type].render(e, c, w, i, s, a), ++g;
    e.addChild(c);
  }
};
Rb = X([Vt("rb")], Rb);
let Pb = class {
  constructor(e, t) {
    this.r = e, this.p = t;
  }
  static get inject() {
    return [Da, Pn];
  }
  render(e, t, r, i, s, a) {
    let o = e.container, u;
    switch (typeof r.res) {
      case "string":
        if (u = o.find(M0, r.res), u == null)
          throw ie(`AUR0754:${r.res}@${e.name}`);
        break;
      default:
        u = r.res;
    }
    const l = this.r.getViewFactory(r.def, o), c = I0(t), p = Mx(this.p, u, e, t, r, l, c), b = dr.$attr(p.ctn, p.vm, t, u);
    Cn(c, u.key, b), p.vm.link?.(e, b, t, r);
    const A = this.r.renderers, g = r.props, w = g.length;
    let T = 0, _;
    for (; w > T; )
      _ = g[T], A[_.type].render(e, b, _, i, s, a), ++T;
    e.addChild(b);
  }
};
Pb = X([Vt("rc")], Pb);
let Ob = class {
  render(e, t, r, i, s, a) {
    t.remove();
    const o = r.instructions, u = r.toBindingContext, l = e.container, c = o.length;
    let p, b, A = 0;
    for (; c > A; )
      p = o[A], b = ji(s, p.from, 16), e.addBinding(new Sl(l, a, b, p.to, u)), ++A;
  }
};
Ob = X([Vt("rd")], Ob);
let Ib = class {
  render(e, t, r, i, s) {
    e.addBinding(new ix(e.container, ji(s, r.from, 16), NE(t, r.to)));
  }
};
Ib = X([Vt("rj")], Ib);
let kb = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new LS(e, e.container, a, i.domWriteQueue, ji(s, r.from, 1), Kd(t), r.to, 2));
  }
};
kb = X([Vt("rf")], kb);
let Db = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new Vi(e, e.container, a, i.domWriteQueue, ji(s, r.from, 16), Kd(t), r.to, r.mode));
  }
};
Db = X([Vt("rg")], Db);
let Bb = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new Vi(e, e.container, a, i.domWriteQueue, ji(s, r.forOf, 2), Kd(t), r.to, 2));
  }
};
Bb = X([Vt("rk")], Bb);
let Nb = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new Cl(e, e.container, a, i.domWriteQueue, i, ji(s, r.from, 16), AE(t.parentNode, TE(i, ""), t), r.strict));
  }
};
Nb = X([Vt("ha")], Nb);
let Fb = class {
  render(e, t, r, i, s) {
    e.addBinding(new El(e.container, ji(s, r.from, 8), t, r.to, new US(r.preventDefault, r.capture)));
  }
};
Fb = X([Vt("hb")], Fb);
let Lb = class {
  render(e, t, r) {
    t.setAttribute(r.to, r.value);
  }
};
Lb = X([Vt("he")], Lb);
let $b = class {
  render(e, t, r) {
    LE(t.classList, r.value);
  }
};
$b = X([Vt("hf")], $b);
let Ub = class {
  render(e, t, r) {
    t.style.cssText += r.value;
  }
};
Ub = X([Vt("hg")], Ub);
let Vb = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new Vi(e, e.container, a, i.domWriteQueue, ji(s, r.from, 16), t.style, r.to, 2));
  }
};
Vb = X([Vt("hd")], Vb);
let jb = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new Tl(e, e.container, a, i.domWriteQueue, ji(s, r.from, 16), t, r.attr, r.to, 2));
  }
};
jb = X([Vt("hc")], jb);
let Gb = class {
  constructor(e, t) {
    this.ae = e, this.r = t;
  }
  static get inject() {
    return [Ax, Da];
  }
  render(e, t, r, i, s, a) {
    const u = e.container.get(Kc), l = this.r.renderers, c = (b) => {
      let A = b, g = u;
      for (; g != null && A > 0; )
        g = g.parent, --A;
      if (g == null)
        throw ie("No scope context for spread binding.");
      return g;
    }, p = (b) => {
      const A = c(b), g = $E(A), w = this.ae.compileSpread(A.controller.definition, A.instruction?.captures ?? Le, A.controller.container, t);
      let T;
      for (T of w)
        switch (T.type) {
          case "hs":
            p(b + 1);
            break;
          case "hp":
            l[T.instructions.type].render(g, ms(t), T.instructions, i, s, a);
            break;
          default:
            l[T.type].render(g, t, T, i, s, a);
        }
      e.addBinding(g);
    };
    p(0);
  }
};
Gb = X([Vt("hs")], Gb);
class FE {
  constructor(e, t) {
    this.ce = e, this.ue = t, this.isBound = !1, this.ctrl = t.controller, this.locator = this.ctrl.container;
  }
  get container() {
    return this.locator;
  }
  get definition() {
    return this.ctrl.definition;
  }
  get isStrictBinding() {
    return this.ctrl.isStrictBinding;
  }
  get state() {
    return this.ctrl.state;
  }
  get(e) {
    return this.locator.get(e);
  }
  bind(e) {
    if (this.isBound)
      return;
    this.isBound = !0;
    const t = this.scope = this.ue.controller.scope.parent ?? void 0;
    if (t == null)
      throw ie("Invalid spreading. Context scope is null/undefined");
    this.ce.forEach((r) => r.bind(t));
  }
  unbind() {
    this.ce.forEach((e) => e.unbind()), this.isBound = !1;
  }
  addBinding(e) {
    this.ce.push(e);
  }
  addChild(e) {
    if (e.vmKind !== 1)
      throw ie("Spread binding does not support spreading custom attributes/template controllers");
    this.ctrl.addChild(e);
  }
  limit() {
    throw ie("not implemented");
  }
  useScope() {
    throw ie("not implemented");
  }
}
function LE(n, e) {
  const t = e.length;
  let r = 0;
  for (let i = 0; i < t; ++i)
    e.charCodeAt(i) === 32 ? (i !== r && n.add(e.slice(r, i)), r = i + 1) : i + 1 === t && n.add(e.slice(r));
}
const $E = (n) => new FE([], n), Sx = "IController", Ex = "IInstruction", UE = "IRenderLocation", D0 = "IAuSlotsInfo";
function VE(n, e, t, r, i, s) {
  const a = e.container.createChild();
  return St(a, n.HTMLElement, St(a, n.Element, St(a, go, new yn("ElementResolver", t)))), St(a, Hd, new yn(Sx, e)), St(a, Vo, new yn(Ex, r)), St(a, Mn, i == null ? Px : new Rx(i)), St(a, nr, Ox), St(a, xx, s == null ? Ix : new yn(D0, s)), a;
}
class _x {
  constructor(e) {
    this.f = e;
  }
  get $isResolver() {
    return !0;
  }
  resolve() {
    const e = this.f;
    if (e === null)
      throw ie("AUR7055");
    if (!wt(e.name) || e.name.length === 0)
      throw ie("AUR0756");
    return e;
  }
}
function Mx(n, e, t, r, i, s, a, o) {
  const u = t.container.createChild();
  return St(u, n.HTMLElement, St(u, n.Element, St(u, go, new yn("ElementResolver", r)))), t = t instanceof dr ? t : t.ctrl, St(u, Hd, new yn(Sx, t)), St(u, Vo, new yn(Ex, i)), St(u, Mn, a == null ? Px : new yn(UE, a)), St(u, nr, s == null ? Ox : new _x(s)), St(u, xx, o == null ? Ix : new yn(D0, o)), {
    vm: u.invoke(e.Type),
    ctn: u
  };
}
class Rx {
  constructor(e) {
    this.l = e;
  }
  get name() {
    return "IRenderLocation";
  }
  get $isResolver() {
    return !0;
  }
  resolve() {
    return this.l;
  }
}
const Px = new Rx(null), Ox = new _x(null), Ix = new yn(D0, new wx(Le));
var Wb;
(function(n) {
  n[n.None = 0] = "None", n[n.IgnoreAttr = 1] = "IgnoreAttr";
})(Wb || (Wb = {}));
function zn(n) {
  return function(e) {
    return Dx.define(n, e);
  };
}
class B0 {
  constructor(e, t, r, i, s) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i, this.type = s;
  }
  static create(e, t) {
    let r, i;
    return wt(e) ? (r = e, i = {
      name: r
    }) : (r = e.name, i = e), new B0(t, fn(xc(t, "name"), r), Ft(xc(t, "aliases"), i.aliases, t.aliases), kx(r), fn(xc(t, "type"), i.type, t.type, null));
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    Ia(r, t).register(e), vl(r, t).register(e), xl(i, Dx, r, e);
  }
}
const hu = Oa("binding-command"), kx = (n) => `${hu}:${n}`, xc = (n, e) => wn(Tn(e), n), Dx = tr({
  name: hu,
  keyFrom: kx,
  define(n, e) {
    const t = B0.create(n, e);
    return Et(hu, t, t.Type), Et(hu, t, t), Rs(e, hu), t.Type;
  },
  getAnnotation: xc
});
let zb = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    let s = e.attr.target, a = e.attr.rawValue;
    return e.bindable == null ? s = r.map(e.node, s) ?? Zn(s) : (a === "" && e.def.type === 1 && (a = Zn(s)), s = e.bindable.property), new _l(t.parse(a, 16), s, 1);
  }
};
zb = X([zn("one-time")], zb);
let Hb = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    let s = e.attr.target, a = e.attr.rawValue;
    return e.bindable == null ? s = r.map(e.node, s) ?? Zn(s) : (a === "" && e.def.type === 1 && (a = Zn(s)), s = e.bindable.property), new _l(t.parse(a, 16), s, 2);
  }
};
Hb = X([zn("to-view")], Hb);
let Kb = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    const i = e.attr;
    let s = i.target, a = i.rawValue;
    return e.bindable == null ? s = r.map(e.node, s) ?? Zn(s) : (a === "" && e.def.type === 1 && (a = Zn(s)), s = e.bindable.property), new _l(t.parse(a, 16), s, 4);
  }
};
Kb = X([zn("from-view")], Kb);
let qb = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    const i = e.attr;
    let s = i.target, a = i.rawValue;
    return e.bindable == null ? s = r.map(e.node, s) ?? Zn(s) : (a === "" && e.def.type === 1 && (a = Zn(s)), s = e.bindable.property), new _l(t.parse(a, 16), s, 6);
  }
};
qb = X([zn("two-way")], qb);
let Qb = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    const i = e.attr, s = e.bindable;
    let a, o, u = i.target, l = i.rawValue;
    return s == null ? (o = r.isTwoWay(e.node, u) ? 6 : 2, u = r.map(e.node, u) ?? Zn(u)) : (l === "" && e.def.type === 1 && (l = Zn(u)), a = e.def.defaultBindingMode, o = s.mode === 8 || s.mode == null ? a == null || a === 8 ? 2 : a : s.mode, u = s.property), new _l(t.parse(l, 16), u, o);
  }
};
Qb = X([zn("bind")], Qb);
let Jb = class {
  constructor(e) {
    this.fe = e;
  }
  get type() {
    return 0;
  }
  static get inject() {
    return [CS];
  }
  build(e, t) {
    const r = e.bindable === null ? Zn(e.attr.target) : e.bindable.property, i = t.parse(e.attr.rawValue, 2);
    let s = Le;
    if (i.semiIdx > -1) {
      const a = e.attr.rawValue.slice(i.semiIdx + 1), o = a.indexOf(":");
      if (o > -1) {
        const u = a.slice(0, o).trim(), l = a.slice(o + 1).trim(), c = this.fe.parse(u, l);
        s = [new DE(l, c.target, c.command)];
      }
    }
    return new IE(i, r, s);
  }
};
Jb = X([zn("for")], Jb);
let Yb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new Tx(t.parse(e.attr.rawValue, 8), e.attr.target, !0, !1);
  }
};
Yb = X([zn("trigger")], Yb);
let Xb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new Tx(t.parse(e.attr.rawValue, 8), e.attr.target, !1, !0);
  }
};
Xb = X([zn("capture")], Xb);
let Zb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new k0(e.attr.target, t.parse(e.attr.rawValue, 16), e.attr.target);
  }
};
Zb = X([zn("attr")], Zb);
let eg = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new k0("style", t.parse(e.attr.rawValue, 16), e.attr.target);
  }
};
eg = X([zn("style")], eg);
let tg = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new k0("class", t.parse(e.attr.rawValue, 16), e.attr.target);
  }
};
tg = X([zn("class")], tg);
let ng = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new kE(t.parse(e.attr.rawValue, 16), e.attr.target);
  }
};
ng = X([zn("ref")], ng);
let rg = class {
  get type() {
    return 1;
  }
  build(e) {
    return new BE();
  }
};
rg = X([zn("...$attrs")], rg);
const Bx = Oe("ISVGAnalyzer", (n) => n.singleton(jE));
class jE {
  isStandardSvgAttribute(e, t) {
    return !1;
  }
}
Oe("IAttrMapper", (n) => n.singleton(GE));
class GE {
  constructor(e) {
    this.svg = e, this.fns = [], this.pe = dn(), this.ve = dn(), this.useMapping({
      LABEL: {
        for: "htmlFor"
      },
      IMG: {
        usemap: "useMap"
      },
      INPUT: {
        maxlength: "maxLength",
        minlength: "minLength",
        formaction: "formAction",
        formenctype: "formEncType",
        formmethod: "formMethod",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        inputmode: "inputMode"
      },
      TEXTAREA: {
        maxlength: "maxLength"
      },
      TD: {
        rowspan: "rowSpan",
        colspan: "colSpan"
      },
      TH: {
        rowspan: "rowSpan",
        colspan: "colSpan"
      }
    }), this.useGlobalMapping({
      accesskey: "accessKey",
      contenteditable: "contentEditable",
      tabindex: "tabIndex",
      textcontent: "textContent",
      innerhtml: "innerHTML",
      scrolltop: "scrollTop",
      scrollleft: "scrollLeft",
      readonly: "readOnly"
    });
  }
  static get inject() {
    return [Bx];
  }
  useMapping(e) {
    var t;
    let r, i, s, a;
    for (s in e) {
      r = e[s], i = (t = this.pe)[s] ?? (t[s] = dn());
      for (a in r) {
        if (i[a] !== void 0)
          throw ig(a, s);
        i[a] = r[a];
      }
    }
  }
  useGlobalMapping(e) {
    const t = this.ve;
    for (const r in e) {
      if (t[r] !== void 0)
        throw ig(r, "*");
      t[r] = e[r];
    }
  }
  useTwoWay(e) {
    this.fns.push(e);
  }
  isTwoWay(e, t) {
    return WE(e, t) || this.fns.length > 0 && this.fns.some((r) => r(e, t));
  }
  map(e, t) {
    return this.pe[e.nodeName]?.[t] ?? this.ve[t] ?? (Qp(e, t, this.svg) ? t : null);
  }
}
function WE(n, e) {
  switch (n.nodeName) {
    case "INPUT":
      switch (n.type) {
        case "checkbox":
        case "radio":
          return e === "checked";
        default:
          return e === "value" || e === "files" || e === "value-as-number" || e === "value-as-date";
      }
    case "TEXTAREA":
    case "SELECT":
      return e === "value";
    default:
      switch (e) {
        case "textcontent":
        case "innerhtml":
          return n.hasAttribute("contenteditable");
        case "scrolltop":
        case "scrollleft":
          return !0;
        default:
          return !1;
      }
  }
}
function ig(n, e) {
  return ie(`Attribute ${n} has been already registered for ${e === "*" ? "all elements" : `<${e}/>`}`);
}
Oe("ITemplateElementFactory", (n) => n.singleton(Nx));
const sg = {};
class Nx {
  constructor(e) {
    this.p = e, this.xe = np(this.p);
  }
  createTemplate(e) {
    if (wt(e)) {
      let t = sg[e];
      if (t === void 0) {
        const r = this.xe;
        r.innerHTML = e;
        const i = r.content.firstElementChild;
        i == null || i.nodeName !== "TEMPLATE" || i.nextElementSibling != null ? (this.xe = np(this.p), t = r) : (r.content.removeChild(i), t = i), sg[e] = t;
      }
      return t.cloneNode(!0);
    }
    if (e.nodeName !== "TEMPLATE") {
      const t = np(this.p);
      return t.content.appendChild(e), t;
    }
    return e.parentNode?.removeChild(e), e.cloneNode(!0);
  }
}
Nx.inject = [Pn];
const np = (n) => n.document.createElement("template");
g0(dn(), {
  id: !0,
  name: !0,
  "au-slot": !0,
  "as-element": !0
});
tr(["property", "attribute", "mode"]);
const zE = Oe("ITemplateCompilerHooks"), ag = /* @__PURE__ */ new WeakMap(), rp = Oa("compiler-hooks");
tr({
  name: rp,
  define(n) {
    let e = ag.get(n);
    return e === void 0 && (ag.set(n, e = new HE(n)), Et(rp, e, n), Rs(n, rp)), n;
  }
});
class HE {
  constructor(e) {
    this.Type = e;
  }
  get name() {
    return "";
  }
  register(e) {
    e.register(Ia(zE, this.Type));
  }
}
const ip = /* @__PURE__ */ new Map();
class qd {
  bind(e, t) {
    ip.set(t, t.mode), t.mode = this.mode;
  }
  unbind(e, t) {
    t.mode = ip.get(t), ip.delete(t);
  }
}
class KE extends qd {
  get mode() {
    return 1;
  }
}
class qE extends qd {
  get mode() {
    return 2;
  }
}
class QE extends qd {
  get mode() {
    return 4;
  }
}
class JE extends qd {
  get mode() {
    return 6;
  }
}
Wn("oneTime")(KE);
Wn("toView")(qE);
Wn("fromView")(QE);
Wn("twoWay")(JE);
const sp = /* @__PURE__ */ new WeakMap(), YE = 200;
class Fx {
  constructor(e) {
    this.p = e;
  }
  bind(e, t, r) {
    r = Number(r);
    const i = {
      type: "debounce",
      delay: r > 0 ? r : YE,
      now: this.p.performanceNow,
      queue: this.p.taskQueue
    }, s = t.limit?.(i);
    s == null || sp.set(t, s);
  }
  unbind(e, t) {
    sp.get(t)?.dispose(), sp.delete(t);
  }
}
Fx.inject = [hl];
Wn("debounce")(Fx);
class Lx {
  constructor(e) {
    this.Ve = /* @__PURE__ */ new Map(), this.Ne = e;
  }
  bind(e, t, ...r) {
    if (!("handleChange" in t))
      throw ie("AUR0817");
    if (r.length === 0)
      throw ie("AUR0818");
    this.Ve.set(t, r);
    let i;
    for (i of r)
      this.Ne.addSignalListener(i, t);
  }
  unbind(e, t) {
    const r = this.Ve.get(t);
    this.Ve.delete(t);
    let i;
    for (i of r)
      this.Ne.removeSignalListener(i, t);
  }
}
Lx.inject = [h0];
Wn("signal")(Lx);
const ap = /* @__PURE__ */ new WeakMap(), XE = 200;
class $x {
  constructor(e) {
    this.je = e.performanceNow, this.ct = e.taskQueue;
  }
  bind(e, t, r) {
    r = Number(r);
    const i = {
      type: "throttle",
      delay: r > 0 ? r : XE,
      now: this.je,
      queue: this.ct
    }, s = t.limit?.(i);
    s == null || ap.set(t, s);
  }
  unbind(e, t) {
    ap.get(t)?.dispose(), ap.delete(t);
  }
}
$x.inject = [hl];
Wn("throttle")($x);
class Ux {
  constructor() {
    this.type = 6;
  }
  getValue(e, t) {
    return e.getAttribute(t);
  }
  setValue(e, t, r) {
    e == null ? t.removeAttribute(r) : t.setAttribute(r, e);
  }
}
Wd(Ux);
const wc = new Ux();
class ZE {
  bind(e, t) {
    if (!(t instanceof Vi))
      throw ie("AURxxxx");
    t.useTargetObserver(wc);
  }
}
Wn("attr")(ZE);
class e4 {
  bind(e, t) {
    if (!(t instanceof El))
      throw ie("AUR0801");
    t.self = !0;
  }
  unbind(e, t) {
    t.self = !1;
  }
}
Wn("self")(e4);
const og = dn();
class ju {
  constructor(e) {
    this.ns = e, this.type = 6;
  }
  static forNs(e) {
    return og[e] ?? (og[e] = new ju(e));
  }
  getValue(e, t) {
    return e.getAttributeNS(this.ns, t);
  }
  setValue(e, t, r) {
    e == null ? t.removeAttributeNS(this.ns, r) : t.setAttributeNS(this.ns, r, e);
  }
}
Wd(ju);
function ug(n, e) {
  return n === e;
}
class N0 {
  constructor(e, t, r, i) {
    this.type = 7, this.v = void 0, this.ov = void 0, this.He = void 0, this.We = void 0, this.yt = !1, this.bt = e, this.oL = i, this.cf = r;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    const t = this.v;
    e !== t && (this.v = e, this.ov = t, this.ze(), this.Ge(), this.st());
  }
  handleCollectionChange() {
    this.Ge();
  }
  handleChange(e, t) {
    this.Ge();
  }
  Ge() {
    const e = this.v, t = this.bt, r = ys.call(t, "model") ? t.model : t.value, i = t.type === "radio", s = t.matcher !== void 0 ? t.matcher : ug;
    if (i)
      t.checked = !!s(e, r);
    else if (e === !0)
      t.checked = !0;
    else {
      let a = !1;
      if (Nr(e))
        a = e.findIndex((o) => !!s(o, r)) !== -1;
      else if (e instanceof Set) {
        for (const o of e)
          if (s(o, r)) {
            a = !0;
            break;
          }
      } else if (e instanceof Map)
        for (const o of e) {
          const u = o[0], l = o[1];
          if (s(u, r) && l === !0) {
            a = !0;
            break;
          }
        }
      t.checked = a;
    }
  }
  handleEvent() {
    let e = this.ov = this.v;
    const t = this.bt, r = ys.call(t, "model") ? t.model : t.value, i = t.checked, s = t.matcher !== void 0 ? t.matcher : ug;
    if (t.type === "checkbox") {
      if (Nr(e)) {
        const a = e.findIndex((o) => !!s(o, r));
        i && a === -1 ? e.push(r) : !i && a !== -1 && e.splice(a, 1);
        return;
      } else if (e instanceof Set) {
        const a = {};
        let o = a;
        for (const u of e)
          if (s(u, r) === !0) {
            o = u;
            break;
          }
        i && o === a ? e.add(r) : !i && o !== a && e.delete(o);
        return;
      } else if (e instanceof Map) {
        let a;
        for (const o of e) {
          const u = o[0];
          if (s(u, r) === !0) {
            a = u;
            break;
          }
        }
        e.set(a, i);
        return;
      }
      e = i;
    } else if (i)
      e = r;
    else
      return;
    this.v = e, this.st();
  }
  kt() {
    this.ze();
  }
  At() {
    this.He?.unsubscribe(this), this.We?.unsubscribe(this), this.He = this.We = void 0;
  }
  st() {
    lg = this.ov, this.ov = this.v, this.subs.notify(this.v, lg);
  }
  ze() {
    const e = this.bt;
    (this.We ?? (this.We = e.$observers?.model ?? e.$observers?.value))?.subscribe(this), this.He?.unsubscribe(this), this.He = void 0, e.type === "checkbox" && (this.He = i4(this.v, this.oL))?.subscribe(this);
  }
}
R0(N0);
Rn(N0);
let lg;
const t4 = {
  childList: !0,
  subtree: !0,
  characterData: !0
};
function cg(n, e) {
  return n === e;
}
class F0 {
  constructor(e, t, r, i) {
    this.type = 7, this.v = void 0, this.ov = void 0, this.J = !1, this.Xe = void 0, this.Ke = void 0, this.iO = !1, this.yt = !1, this.bt = e, this.oL = i, this.cf = r;
  }
  getValue() {
    return this.iO ? this.v : this.bt.multiple ? n4(this.bt.options) : this.bt.value;
  }
  setValue(e) {
    this.ov = this.v, this.v = e, this.J = e !== this.ov, this.Qe(e instanceof Array ? e : null), this.it();
  }
  it() {
    this.J && (this.J = !1, this.syncOptions());
  }
  handleCollectionChange() {
    this.syncOptions();
  }
  syncOptions() {
    const e = this.v, t = this.bt, r = Nr(e), i = t.matcher ?? cg, s = t.options;
    let a = s.length;
    for (; a-- > 0; ) {
      const o = s[a], u = ys.call(o, "model") ? o.model : o.value;
      if (r) {
        o.selected = e.findIndex((l) => !!i(u, l)) !== -1;
        continue;
      }
      o.selected = !!i(u, e);
    }
  }
  syncValue() {
    const e = this.bt, t = e.options, r = t.length, i = this.v;
    let s = 0;
    if (e.multiple) {
      if (!(i instanceof Array))
        return !0;
      let u;
      const l = e.matcher || cg, c = [];
      for (; s < r; )
        u = t[s], u.selected && c.push(ys.call(u, "model") ? u.model : u.value), ++s;
      let p;
      for (s = 0; s < i.length; )
        p = i[s], c.findIndex((b) => !!l(p, b)) === -1 ? i.splice(s, 1) : ++s;
      for (s = 0; s < c.length; )
        p = c[s], i.findIndex((b) => !!l(p, b)) === -1 && i.push(p), ++s;
      return !1;
    }
    let a = null, o;
    for (; s < r; ) {
      if (o = t[s], o.selected) {
        a = ys.call(o, "model") ? o.model : o.value;
        break;
      }
      ++s;
    }
    return this.ov = this.v, this.v = a, !0;
  }
  kt() {
    (this.Ke = new this.bt.ownerDocument.defaultView.MutationObserver(this.Ye.bind(this))).observe(this.bt, t4), this.Qe(this.v instanceof Array ? this.v : null), this.iO = !0;
  }
  At() {
    this.Ke.disconnect(), this.Xe?.unsubscribe(this), this.Ke = this.Xe = void 0, this.iO = !1;
  }
  Qe(e) {
    if (this.Xe?.unsubscribe(this), this.Xe = void 0, e != null) {
      if (!this.bt.multiple)
        throw ie("AUR0654");
      (this.Xe = this.oL.getArrayObserver(e)).subscribe(this);
    }
  }
  handleEvent() {
    this.syncValue() && this.st();
  }
  Ye(e) {
    this.syncOptions(), this.syncValue() && this.st();
  }
  st() {
    dg = this.ov, this.ov = this.v, this.subs.notify(this.v, dg);
  }
}
R0(F0);
Rn(F0);
function n4(n) {
  const e = [];
  if (n.length === 0)
    return e;
  const t = n.length;
  let r = 0, i;
  for (; t > r; )
    i = n[r], i.selected && (e[e.length] = ys.call(i, "model") ? i.model : i.value), ++r;
  return e;
}
let dg;
const r4 = "--";
class Vx {
  constructor(e) {
    this.obj = e, this.type = 6, this.v = "", this.ov = "", this.styles = {}, this.version = 0, this.J = !1;
  }
  getValue() {
    return this.obj.style.cssText;
  }
  setValue(e) {
    this.v = e, this.J = e !== this.ov, this.it();
  }
  Ze(e) {
    const t = [], r = /url\([^)]+$/;
    let i = 0, s = "", a, o, u, l;
    for (; i < e.length; ) {
      if (a = e.indexOf(";", i), a === -1 && (a = e.length), s += e.substring(i, a), i = a + 1, r.test(s)) {
        s += ";";
        continue;
      }
      o = s.indexOf(":"), u = s.substring(0, o).trim(), l = s.substring(o + 1).trim(), t.push([u, l]), s = "";
    }
    return t;
  }
  Je(e) {
    let t, r;
    const i = [];
    for (r in e)
      if (t = e[r], t != null) {
        if (wt(t)) {
          if (r.startsWith(r4)) {
            i.push([r, t]);
            continue;
          }
          i.push([tv(r), t]);
          continue;
        }
        i.push(...this.ti(t));
      }
    return i;
  }
  ei(e) {
    const t = e.length;
    if (t > 0) {
      const r = [];
      let i = 0;
      for (; t > i; ++i)
        r.push(...this.ti(e[i]));
      return r;
    }
    return Le;
  }
  ti(e) {
    return wt(e) ? this.Ze(e) : e instanceof Array ? this.ei(e) : e instanceof Object ? this.Je(e) : Le;
  }
  it() {
    if (this.J) {
      this.J = !1;
      const e = this.v, t = this.styles, r = this.ti(e);
      let i, s = this.version;
      this.ov = e;
      let a, o, u, l = 0;
      const c = r.length;
      for (; l < c; ++l)
        a = r[l], o = a[0], u = a[1], this.setProperty(o, u), t[o] = s;
      if (this.styles = t, this.version += 1, s === 0)
        return;
      s -= 1;
      for (i in t)
        !ys.call(t, i) || t[i] !== s || this.obj.style.removeProperty(i);
    }
  }
  setProperty(e, t) {
    let r = "";
    t != null && $n(t.indexOf) && t.includes("!important") && (r = "important", t = t.replace("!important", "")), this.obj.style.setProperty(e, t, r);
  }
  bind() {
    this.v = this.ov = this.obj.style.cssText;
  }
}
Wd(Vx);
class L0 {
  constructor(e, t, r) {
    this.type = 7, this.v = "", this.ov = "", this.J = !1, this.yt = !1, this.bt = e, this.k = t, this.cf = r;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    gl(e, this.v) || (this.ov = this.v, this.v = e, this.J = !0, this.cf.readonly || this.it());
  }
  it() {
    this.J && (this.J = !1, this.bt[this.k] = this.v ?? this.cf.default, this.st());
  }
  handleEvent() {
    this.ov = this.v, this.v = this.bt[this.k], this.ov !== this.v && (this.J = !1, this.st());
  }
  kt() {
    this.v = this.ov = this.bt[this.k];
  }
  st() {
    fg = this.ov, this.ov = this.v, this.subs.notify(this.v, fg);
  }
}
R0(L0);
Rn(L0);
let fg;
const na = "http://www.w3.org/1999/xlink", pg = "http://www.w3.org/XML/1998/namespace", hg = "http://www.w3.org/2000/xmlns/", yg = g0(dn(), {
  "xlink:actuate": ["actuate", na],
  "xlink:arcrole": ["arcrole", na],
  "xlink:href": ["href", na],
  "xlink:role": ["role", na],
  "xlink:show": ["show", na],
  "xlink:title": ["title", na],
  "xlink:type": ["type", na],
  "xml:lang": ["lang", pg],
  "xml:space": ["space", pg],
  xmlns: ["xmlns", hg],
  "xmlns:xlink": ["xlink", hg]
}), jx = new zv();
jx.type = 6;
class Gu {
  constructor(e, t, r, i) {
    this.locator = e, this.platform = t, this.dirtyChecker = r, this.svgAnalyzer = i, this.allowDirtyCheck = !0, this.ii = dn(), this.si = dn(), this.ni = dn(), this.ri = dn();
    const s = ["change", "input"], a = {
      events: s,
      default: ""
    };
    this.useConfig({
      INPUT: {
        value: a,
        valueAsNumber: {
          events: s,
          default: 0
        },
        checked: {
          type: N0,
          events: s
        },
        files: {
          events: s,
          readonly: !0
        }
      },
      SELECT: {
        value: {
          type: F0,
          events: ["change"],
          default: ""
        }
      },
      TEXTAREA: {
        value: a
      }
    });
    const o = {
      events: ["change", "input", "blur", "keyup", "paste"],
      default: ""
    }, u = {
      events: ["scroll"],
      default: 0
    };
    this.useConfigGlobal({
      scrollTop: u,
      scrollLeft: u,
      textContent: o,
      innerHTML: o
    }), this.overrideAccessorGlobal("css", "style", "class"), this.overrideAccessor({
      INPUT: ["value", "checked", "model"],
      SELECT: ["value"],
      TEXTAREA: ["value"]
    });
  }
  static register(e) {
    vl(Gc, Gu).register(e), Ia(Gc, Gu).register(e);
  }
  handles(e, t) {
    return e instanceof this.platform.Node;
  }
  useConfig(e, t, r) {
    const i = this.ii;
    let s;
    if (wt(e))
      s = i[e] ?? (i[e] = dn()), s[t] == null ? s[t] = r : Ql(e, t);
    else
      for (const a in e) {
        s = i[a] ?? (i[a] = dn());
        const o = e[a];
        for (t in o)
          s[t] == null ? s[t] = o[t] : Ql(a, t);
      }
  }
  useConfigGlobal(e, t) {
    const r = this.si;
    if (typeof e == "object")
      for (const i in e)
        r[i] == null ? r[i] = e[i] : Ql("*", i);
    else
      r[e] == null ? r[e] = t : Ql("*", e);
  }
  getAccessor(e, t, r) {
    if (t in this.ri || t in (this.ni[e.tagName] ?? $3))
      return this.getObserver(e, t, r);
    switch (t) {
      case "src":
      case "href":
      case "role":
      case "minLength":
      case "maxLength":
      case "placeholder":
      case "size":
      case "pattern":
      case "title":
        return wc;
      default: {
        const i = yg[t];
        return i !== void 0 ? ju.forNs(i[1]) : Qp(e, t, this.svgAnalyzer) ? wc : jx;
      }
    }
  }
  overrideAccessor(e, t) {
    var r, i;
    let s;
    if (wt(e))
      s = (r = this.ni)[e] ?? (r[e] = dn()), s[t] = !0;
    else
      for (const a in e)
        for (const o of e[a])
          s = (i = this.ni)[a] ?? (i[a] = dn()), s[o] = !0;
  }
  overrideAccessorGlobal(...e) {
    for (const t of e)
      this.ri[t] = !0;
  }
  getNodeObserverConfig(e, t) {
    return this.ii[e.tagName]?.[t] ?? this.si[t];
  }
  getNodeObserver(e, t, r) {
    const i = this.ii[e.tagName]?.[t] ?? this.si[t];
    let s;
    return i != null ? (s = new (i.type ?? L0)(e, t, i, r, this.locator), s.doNotCache || (Kv(e)[t] = s), s) : null;
  }
  getObserver(e, t, r) {
    switch (t) {
      case "class":
        return new ux(e);
      case "css":
      case "style":
        return new Vx(e);
    }
    const i = this.getNodeObserver(e, t, r);
    if (i != null)
      return i;
    const s = yg[t];
    if (s !== void 0)
      return ju.forNs(s[1]);
    if (Qp(e, t, this.svgAnalyzer))
      return wc;
    if (t in e.constructor.prototype) {
      if (this.allowDirtyCheck)
        return this.dirtyChecker.createProperty(e, t);
      throw ie(`AUR0652:${String(t)}`);
    } else
      return new p0(e, t);
  }
}
Gu.inject = [M3, Pn, jv, Bx];
function i4(n, e) {
  if (n instanceof Array)
    return e.getArrayObserver(n);
  if (n instanceof Map)
    return e.getMapObserver(n);
  if (n instanceof Set)
    return e.getSetObserver(n);
}
function Ql(n, e) {
  throw ie(`AUR0653:${String(e)}@${n}`);
}
class Gx {
  constructor(e, t) {
    if (!(t instanceof Gu))
      throw ie("AURxxxx: updateTrigger binding behavior only works with the default implementation of Aurelia HTML observation. Implement your own node observation + updateTrigger");
    this.oL = e, this.oi = t;
  }
  bind(e, t, ...r) {
    if (r.length === 0)
      throw ie("AUR0802");
    if (!(t instanceof Vi) || !(4 & t.mode))
      throw ie("AUR0803");
    const i = this.oi.getNodeObserverConfig(t.target, t.targetProperty);
    if (i == null)
      throw ie("AURxxxx");
    const s = this.oi.getNodeObserver(t.target, t.targetProperty, this.oL);
    s.useConfig({
      readonly: i.readonly,
      default: i.default,
      events: r
    }), t.useTargetObserver(s);
  }
}
Gx.inject = [Pa, Gc];
Wn("updateTrigger")(Gx);
class $0 {
  constructor(e, t) {
    this.li = !1, this.hi = e, this.p = t;
  }
  binding() {
    this.valueChanged();
  }
  valueChanged() {
    this.$controller.isActive ? this.ai() : this.li = !0;
  }
  attached() {
    this.li && (this.li = !1, this.ai()), this.hi.addEventListener("focus", this), this.hi.addEventListener("blur", this);
  }
  afterDetachChildren() {
    const e = this.hi;
    e.removeEventListener("focus", this), e.removeEventListener("blur", this);
  }
  handleEvent(e) {
    e.type === "focus" ? this.value = !0 : this.ui || (this.value = !1);
  }
  ai() {
    const e = this.hi, t = this.ui, r = this.value;
    r && !t ? e.focus() : !r && t && e.blur();
  }
  get ui() {
    return this.hi === this.p.document.activeElement;
  }
}
$0.inject = [go, Pn];
X([$e({
  mode: 6
})], $0.prototype, "value", void 0);
sx("focus")($0);
let Wu = class {
  constructor(e, t, r) {
    this.el = e, this.p = t, this.fi = !1, this.lt = null, this.$val = "", this.$prio = "", this.update = () => {
      this.lt = null, Boolean(this.value) !== this.di && (this.di === this.mi ? (this.di = !this.mi, this.$val = this.el.style.getPropertyValue("display"), this.$prio = this.el.style.getPropertyPriority("display"), this.el.style.setProperty("display", "none", "important")) : (this.di = this.mi, this.el.style.setProperty("display", this.$val, this.$prio), this.el.getAttribute("style") === "" && this.el.removeAttribute("style")));
    }, this.di = this.mi = r.alias !== "hide";
  }
  binding() {
    this.fi = !0, this.update();
  }
  detaching() {
    this.fi = !1, this.lt?.cancel(), this.lt = null;
  }
  valueChanged() {
    this.fi && this.lt === null && (this.lt = this.p.domWriteQueue.queueTask(this.update));
  }
};
X([$e], Wu.prototype, "value", void 0);
Wu = X([gn(0, go), gn(1, Pn), gn(2, Vo)], Wu);
yS("hide")(Wu);
sx("show")(Wu);
class $r {
  constructor(e, t, r) {
    this.position = "beforeend", this.strict = !1, this.p = r, this.gi = r.document.createElement("div"), (this.view = e.create()).setLocation(this.pi = wE(r)), EE(this.view.nodes, t);
  }
  attaching(e, t, r) {
    this.callbackContext == null && (this.callbackContext = this.$controller.scope.bindingContext);
    const i = this.gi = this.vi();
    return this.xi(i, this.position), this.wi(e, i, r);
  }
  detaching(e, t, r) {
    return this.bi(e, this.gi, r);
  }
  targetChanged() {
    const { $controller: e } = this;
    if (!e.isActive)
      return;
    const t = this.vi();
    if (this.gi === t)
      return;
    this.gi = t;
    const r = Me(this.bi(null, t, e.flags), () => (this.xi(t, this.position), this.wi(null, t, e.flags)));
    nn(r) && r.catch(Wc);
  }
  positionChanged() {
    const { $controller: e, gi: t } = this;
    if (!e.isActive)
      return;
    const r = Me(this.bi(null, t, e.flags), () => (this.xi(t, this.position), this.wi(null, t, e.flags)));
    nn(r) && r.catch(Wc);
  }
  wi(e, t, r) {
    const { activating: i, callbackContext: s, view: a } = this;
    return Me(i?.call(s, t, a), () => this.yi(e, t, r));
  }
  yi(e, t, r) {
    const { $controller: i, view: s } = this;
    if (e === null)
      s.nodes.insertBefore(this.pi);
    else
      return Me(s.activate(e ?? s, i, r, i.scope), () => this.ki(t));
    return this.ki(t);
  }
  ki(e) {
    const { activated: t, callbackContext: r, view: i } = this;
    return t?.call(r, e, i);
  }
  bi(e, t, r) {
    const { deactivating: i, callbackContext: s, view: a } = this;
    return Me(i?.call(s, t, a), () => this.Ai(e, t, r));
  }
  Ai(e, t, r) {
    const { $controller: i, view: s } = this;
    if (e === null)
      s.nodes.remove();
    else
      return Me(s.deactivate(e, i, r), () => this.Ci(t));
    return this.Ci(t);
  }
  Ci(e) {
    const { deactivated: t, callbackContext: r, view: i } = this;
    return t?.call(r, e, i);
  }
  vi() {
    const e = this.p, t = e.document;
    let r = this.target, i = this.renderContext;
    if (r === "") {
      if (this.strict)
        throw ie("AUR0811");
      return t.body;
    }
    if (wt(r)) {
      let s = t;
      wt(i) && (i = t.querySelector(i)), i instanceof e.Node && (s = i), r = s.querySelector(r);
    }
    if (r instanceof e.Node)
      return r;
    if (r == null) {
      if (this.strict)
        throw ie("AUR0812");
      return t.body;
    }
    return r;
  }
  xi(e, t) {
    const r = this.pi, i = r.$start, s = e.parentNode, a = [i, r];
    switch (t) {
      case "beforeend":
        ql(e, null, a);
        break;
      case "afterbegin":
        ql(e, e.firstChild, a);
        break;
      case "beforebegin":
        ql(s, e, a);
        break;
      case "afterend":
        ql(s, e.nextSibling, a);
        break;
      default:
        throw new Error("Invalid portal insertion position");
    }
  }
  dispose() {
    this.view.dispose(), this.view = void 0, this.callbackContext = null;
  }
  accept(e) {
    if (this.view?.accept(e) === !0)
      return !0;
  }
}
$r.inject = [nr, Mn, Pn];
X([$e({
  primary: !0
})], $r.prototype, "target", void 0);
X([$e()], $r.prototype, "position", void 0);
X([$e({
  callback: "targetChanged"
})], $r.prototype, "renderContext", void 0);
X([$e()], $r.prototype, "strict", void 0);
X([$e()], $r.prototype, "deactivating", void 0);
X([$e()], $r.prototype, "activating", void 0);
X([$e()], $r.prototype, "deactivated", void 0);
X([$e()], $r.prototype, "activated", void 0);
X([$e()], $r.prototype, "callbackContext", void 0);
gr("portal")($r);
class vo {
  constructor(e, t) {
    this.elseFactory = void 0, this.elseView = void 0, this.ifView = void 0, this.view = void 0, this.value = !1, this.cache = !0, this.pending = void 0, this.Bi = !1, this.Ri = 0, this.Si = e, this.l = t;
  }
  attaching(e, t, r) {
    let i;
    const s = this.$controller, a = this.Ri++, o = () => !this.Bi && this.Ri === a + 1;
    return Me(this.pending, () => {
      !o() || (this.pending = void 0, this.value ? i = this.view = this.ifView = this.cache && this.ifView != null ? this.ifView : this.Si.create() : i = this.view = this.elseView = this.cache && this.elseView != null ? this.elseView : this.elseFactory?.create(), i != null && (i.setLocation(this.l), this.pending = Me(i.activate(e, s, r, s.scope), () => {
        o() && (this.pending = void 0);
      })));
    });
  }
  detaching(e, t, r) {
    return this.Bi = !0, Me(this.pending, () => {
      this.Bi = !1, this.pending = void 0, this.view?.deactivate(e, this.$controller, r);
    });
  }
  valueChanged(e, t, r) {
    if (!this.$controller.isActive || (e = !!e, t = !!t, e === t))
      return;
    const i = this.view, s = this.$controller, a = this.Ri++, o = () => !this.Bi && this.Ri === a + 1;
    let u;
    return Me(this.pending, () => this.pending = Me(i?.deactivate(i, s, r), () => {
      if (!!o() && (e ? u = this.view = this.ifView = this.cache && this.ifView != null ? this.ifView : this.Si.create() : u = this.view = this.elseView = this.cache && this.elseView != null ? this.elseView : this.elseFactory?.create(), u != null))
        return u.setLocation(this.l), Me(u.activate(u, s, r, s.scope), () => {
          o() && (this.pending = void 0);
        });
    }));
  }
  dispose() {
    this.ifView?.dispose(), this.elseView?.dispose(), this.ifView = this.elseView = this.view = void 0;
  }
  accept(e) {
    if (this.view?.accept(e) === !0)
      return !0;
  }
}
vo.inject = [nr, Mn];
X([$e], vo.prototype, "value", void 0);
X([$e({
  set: (n) => n === "" || !!n && n !== "false"
})], vo.prototype, "cache", void 0);
gr("if")(vo);
class Wx {
  constructor(e) {
    this.f = e;
  }
  link(e, t, r, i) {
    const s = e.children, a = s[s.length - 1];
    if (a instanceof vo)
      a.elseFactory = this.f;
    else if (a.viewModel instanceof vo)
      a.viewModel.elseFactory = this.f;
    else
      throw ie("AUR0810");
  }
}
Wx.inject = [nr];
gr({
  name: "else"
})(Wx);
function s4(n) {
  n.dispose();
}
const a4 = [18, 17];
class U0 {
  constructor(e, t, r, i, s) {
    this.views = [], this.key = null, this.Ii = /* @__PURE__ */ new Map(), this.Ti = /* @__PURE__ */ new Map(), this.Pi = void 0, this.Ei = !1, this.Li = !1, this.Di = null, this.Ui = void 0, this.$i = !1;
    const a = e.props[0].props[0];
    if (a !== void 0) {
      const { to: o, value: u, command: l } = a;
      if (o === "key")
        if (l === null)
          this.key = u;
        else if (l === "bind")
          this.key = t.parse(u, 16);
        else
          throw ie(`AUR775:${l}`);
      else
        throw ie(`AUR776:${o}`);
    }
    this.l = r, this._i = i, this.f = s;
  }
  binding(e, t, r) {
    const i = this._i.bindings, s = i.length;
    let a, o, u = 0;
    for (; s > u; ++u)
      if (a = i[u], a.target === this && a.targetProperty === "items") {
        o = this.forOf = a.ast, this.qi = a;
        let c = o.iterable;
        for (; c != null && a4.includes(c.$kind); )
          c = c.expression, this.Ei = !0;
        this.Di = c;
        break;
      }
    this.Mi();
    const l = o.declaration;
    (this.$i = l.$kind === 24 || l.$kind === 25) || (this.local = G(l, this.$controller.scope, a, null));
  }
  attaching(e, t, r) {
    return this.Fi(), this.Oi(e);
  }
  detaching(e, t, r) {
    return this.Mi(), this.Vi(e);
  }
  unbinding(e, t, r) {
    this.Ti.clear(), this.Ii.clear();
  }
  itemsChanged() {
    !this.$controller.isActive || (this.Mi(), this.Fi(), this.Ni(this.items, void 0));
  }
  handleCollectionChange(e, t) {
    const r = this.$controller;
    if (!!r.isActive) {
      if (this.Ei) {
        if (this.Li)
          return;
        this.Li = !0, this.items = G(this.forOf.iterable, r.scope, this.qi, null), this.Li = !1;
        return;
      }
      this.Fi(), this.Ni(e, t);
    }
  }
  Ni(e, t) {
    const r = this.views, i = r.length, s = this.key, a = s !== null;
    if (a || t === void 0) {
      const o = this.local, u = this.Ui, l = u.length, c = this.forOf, p = c.declaration, b = this.qi, A = this.$i;
      t = pa(l);
      let g = 0;
      if (i === 0)
        for (; g < l; ++g)
          t[g] = -2;
      else if (l === 0)
        if (A)
          for (g = 0; g < i; ++g)
            t.deletedIndices.push(g), t.deletedItems.push(G(p, r[g].scope, b, null));
        else
          for (g = 0; g < i; ++g)
            t.deletedIndices.push(g), t.deletedItems.push(r[g].scope.bindingContext[o]);
      else {
        const w = Array(i);
        if (A)
          for (g = 0; g < i; ++g)
            w[g] = G(p, r[g].scope, b, null);
        else
          for (g = 0; g < i; ++g)
            w[g] = r[g].scope.bindingContext[o];
        let T, _, I, N, B = 0;
        const D = i - 1, $ = l - 1, H = /* @__PURE__ */ new Map(), j = /* @__PURE__ */ new Map(), Q = this.Ii, oe = this.Ti, J = this.$controller.scope;
        g = 0;
        e: {
          for (; ; ) {
            if (T = w[g], _ = u[g], I = a ? za(Q, s, T, ra(oe, w[g], c, J, b, o, A), b) : T, N = a ? za(Q, s, _, ra(oe, u[g], c, J, b, o, A), b) : _, I !== N) {
              Q.set(T, I), Q.set(_, N);
              break;
            }
            if (++g, g > D || g > $)
              break e;
          }
          if (D !== $)
            break e;
          for (B = $; ; ) {
            if (T = w[B], _ = u[B], I = a ? za(Q, s, T, ra(oe, T, c, J, b, o, A), b) : T, N = a ? za(Q, s, _, ra(oe, _, c, J, b, o, A), b) : _, I !== N) {
              Q.set(T, I), Q.set(_, N);
              break;
            }
            if (--B, g > B)
              break e;
          }
        }
        const ue = g, E = g;
        for (g = E; g <= $; ++g)
          Q.has(_ = u[g]) ? N = Q.get(_) : (N = a ? za(Q, s, _, ra(oe, _, c, J, b, o, A), b) : _, Q.set(_, N)), j.set(N, g);
        for (g = ue; g <= D; ++g)
          Q.has(T = w[g]) ? I = Q.get(T) : I = a ? za(Q, s, T, r[g].scope, b) : T, H.set(I, g), j.has(I) ? t[j.get(I)] = g : (t.deletedIndices.push(g), t.deletedItems.push(T));
        for (g = E; g <= $; ++g)
          H.has(Q.get(u[g])) || (t[g] = -2);
        H.clear(), j.clear();
      }
    }
    if (t === void 0) {
      const o = Me(this.Vi(null), () => this.Oi(null));
      nn(o) && o.catch(Wc);
    } else {
      const o = EA(t);
      if (o.deletedIndices.length > 0) {
        const u = Me(this.ji(o), () => this.Hi(i, o));
        nn(u) && u.catch(Wc);
      } else
        this.Hi(i, o);
    }
  }
  Mi() {
    const e = this.$controller.scope;
    let t = this.Wi, r = this.Ei, i;
    r && (t = this.Wi = G(this.Di, e, this.qi, null) ?? null, r = this.Ei = !gl(this.items, t));
    const s = this.Pi;
    this.$controller.isActive ? (i = this.Pi = sS(r ? t : this.items), s !== i && (s?.unsubscribe(this), i?.subscribe(this))) : (s?.unsubscribe(this), this.Pi = void 0);
  }
  Fi() {
    const { items: e } = this;
    if (Nr(e)) {
      this.Ui = e;
      return;
    }
    const t = [];
    mg(e, (r, i) => {
      t[i] = r;
    }), this.Ui = t;
  }
  Oi(e) {
    let t, r, i, s;
    const { $controller: a, f: o, local: u, l, items: c, Ti: p, qi: b, forOf: A, $i: g } = this, w = a.scope, T = l4(c), _ = this.views = Array(T);
    if (mg(c, (I, N) => {
      i = _[N] = o.create().setLocation(l), i.nodes.unlink(), s = ra(p, I, A, w, b, u, g), Yl(s.overrideContext, N, T), r = i.activate(e ?? i, a, 0, s), nn(r) && (t ?? (t = [])).push(r);
    }), t !== void 0)
      return t.length === 1 ? t[0] : Promise.all(t);
  }
  Vi(e) {
    let t, r, i, s = 0;
    const { views: a, $controller: o } = this, u = a.length;
    for (; u > s; ++s)
      i = a[s], i.release(), r = i.deactivate(e ?? i, o, 0), nn(r) && (t ?? (t = [])).push(r);
    if (t !== void 0)
      return t.length === 1 ? t[0] : Promise.all(t);
  }
  ji(e) {
    let t, r, i;
    const { $controller: s, views: a } = this, o = e.deletedIndices, u = o.length;
    let l = 0;
    for (; u > l; ++l)
      i = a[o[l]], i.release(), r = i.deactivate(i, s, 0), nn(r) && (t ?? (t = [])).push(r);
    l = 0;
    let c = 0;
    for (; u > l; ++l)
      c = o[l] - l, a.splice(c, 1);
    if (t !== void 0)
      return t.length === 1 ? t[0] : Promise.all(t);
  }
  Hi(e, t) {
    let r, i, s, a, o = 0;
    const { $controller: u, f: l, local: c, Ui: p, l: b, views: A, $i: g, qi: w, Ti: T, forOf: _ } = this, I = t.length;
    for (; I > o; ++o)
      t[o] === -2 && (s = l.create(), A.splice(o, 0, s));
    if (A.length !== I)
      throw u4(A.length, I);
    const N = u.scope, B = t.length;
    _A(A, t);
    const D = o4(t), $ = D.length, H = _.declaration;
    let j, Q = $ - 1;
    for (o = B - 1; o >= 0; --o)
      s = A[o], j = A[o + 1], s.nodes.link(j?.nodes ?? b), t[o] === -2 ? (a = ra(T, p[o], _, N, w, c, g), Yl(a.overrideContext, o, B), s.setLocation(b), i = s.activate(s, u, 0, a), nn(i) && (r ?? (r = [])).push(i)) : Q < 0 || $ === 1 || o !== D[Q] ? (g ? cn(H, s.scope, w, p[o]) : s.scope.bindingContext[c] = p[o], Yl(s.scope.overrideContext, o, B), s.nodes.insertBefore(s.location)) : (g ? cn(H, s.scope, w, p[o]) : s.scope.bindingContext[c] = p[o], e !== B && Yl(s.scope.overrideContext, o, B), --Q);
    if (r !== void 0)
      return r.length === 1 ? r[0] : Promise.all(r);
  }
  dispose() {
    this.views.forEach(s4), this.views = void 0;
  }
  accept(e) {
    const { views: t } = this;
    if (t !== void 0) {
      for (let r = 0, i = t.length; r < i; ++r)
        if (t[r].accept(e) === !0)
          return !0;
    }
  }
}
U0.inject = [Vo, i0, Mn, Hd, nr];
X([$e], U0.prototype, "items", void 0);
gr("repeat")(U0);
let Jc = 16, pi = new Int32Array(Jc), Jl = new Int32Array(Jc);
function o4(n) {
  const e = n.length;
  e > Jc && (Jc = e, pi = new Int32Array(e), Jl = new Int32Array(e));
  let t = 0, r = 0, i = 0, s = 0, a = 0, o = 0, u = 0, l = 0;
  for (; s < e; s++)
    if (r = n[s], r !== -2) {
      if (a = pi[t], i = n[a], i !== -2 && i < r) {
        Jl[s] = a, pi[++t] = s;
        continue;
      }
      for (o = 0, u = t; o < u; )
        l = o + u >> 1, i = n[pi[l]], i !== -2 && i < r ? o = l + 1 : u = l;
      i = n[pi[o]], (r < i || i === -2) && (o > 0 && (Jl[s] = pi[o - 1]), pi[o] = s);
    }
  s = ++t;
  const c = new Int32Array(s);
  for (r = pi[t - 1]; t-- > 0; )
    c[t] = r, r = Jl[r];
  for (; s-- > 0; )
    pi[s] = 0;
  return c;
}
const u4 = (n, e) => ie(`AUR0814:${n}!=${e}`), Yl = (n, e, t) => {
  const r = e === 0, i = e === t - 1, s = e % 2 === 0;
  n.$index = e, n.$first = r, n.$last = i, n.$middle = !r && !i, n.$even = s, n.$odd = !s, n.$length = t;
}, Yc = b0.toString, l4 = (n) => {
  switch (Yc.call(n)) {
    case "[object Array]":
      return n.length;
    case "[object Map]":
      return n.size;
    case "[object Set]":
      return n.size;
    case "[object Number]":
      return n;
    case "[object Null]":
      return 0;
    case "[object Undefined]":
      return 0;
    default:
      throw ie(`Cannot count ${Yc.call(n)}`);
  }
}, mg = (n, e) => {
  switch (Yc.call(n)) {
    case "[object Array]":
      return c4(n, e);
    case "[object Map]":
      return d4(n, e);
    case "[object Set]":
      return f4(n, e);
    case "[object Number]":
      return p4(n, e);
    case "[object Null]":
      return;
    case "[object Undefined]":
      return;
    default:
      throw ie(`Cannot iterate over ${Yc.call(n)}`);
  }
}, c4 = (n, e) => {
  const t = n.length;
  let r = 0;
  for (; r < t; ++r)
    e(n[r], r, n);
}, d4 = (n, e) => {
  let t = -0, r;
  for (r of n.entries())
    e(r, t++, n);
}, f4 = (n, e) => {
  let t = 0, r;
  for (r of n.keys())
    e(r, t++, n);
}, p4 = (n, e) => {
  let t = 0;
  for (; t < n; ++t)
    e(t, t, n);
}, za = (n, e, t, r, i) => {
  let s = n.get(t);
  return s === void 0 && (typeof e == "string" ? s = t[e] : s = G(e, r, i, null), n.set(t, s)), s;
}, ra = (n, e, t, r, i, s, a) => {
  let o = n.get(e);
  return o === void 0 && (a ? cn(t.declaration, o = sn.fromParent(r, new ym()), i, e) : o = sn.fromParent(r, new ym(s, e)), n.set(e, o)), o;
};
class V0 {
  constructor(e, t) {
    this.view = e.create().setLocation(t);
  }
  valueChanged(e, t, r) {
    const i = this.$controller, s = this.view.bindings;
    let a, o = 0, u = 0;
    if (i.isActive && s != null)
      for (a = sn.fromParent(i.scope, e === void 0 ? {} : e), u = s.length; u > o; ++o)
        s[o].bind(a);
  }
  attaching(e, t, r) {
    const { $controller: i, value: s } = this, a = sn.fromParent(i.scope, s === void 0 ? {} : s);
    return this.view.activate(e, i, r, a);
  }
  detaching(e, t, r) {
    return this.view.deactivate(e, this.$controller, r);
  }
  dispose() {
    this.view.dispose(), this.view = void 0;
  }
  accept(e) {
    if (this.view?.accept(e) === !0)
      return !0;
  }
}
V0.inject = [nr, Mn];
X([$e], V0.prototype, "value", void 0);
gr("with")(V0);
let Xc = class {
  constructor(e, t) {
    this.f = e, this.l = t, this.cases = [], this.activeCases = [], this.promise = void 0;
  }
  link(e, t, r, i) {
    this.view = this.f.create(this.$controller).setLocation(this.l);
  }
  attaching(e, t, r) {
    const i = this.view, s = this.$controller;
    return this.queue(() => i.activate(e, s, r, s.scope)), this.queue(() => this.swap(e, this.value)), this.promise;
  }
  detaching(e, t, r) {
    return this.queue(() => this.view.deactivate(e, this.$controller, r)), this.promise;
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
  valueChanged(e, t) {
    !this.$controller.isActive || this.queue(() => this.swap(null, this.value));
  }
  caseChanged(e) {
    this.queue(() => this.zi(e));
  }
  zi(e) {
    const t = e.isMatch(this.value), r = this.activeCases, i = r.length;
    if (!t)
      return i > 0 && r[0].id === e.id ? this.Gi(null) : void 0;
    if (i > 0 && r[0].id < e.id)
      return;
    const s = [];
    let a = e.fallThrough;
    if (!a)
      s.push(e);
    else {
      const o = this.cases, u = o.indexOf(e);
      for (let l = u, c = o.length; l < c && a; l++) {
        const p = o[l];
        s.push(p), a = p.fallThrough;
      }
    }
    return Me(this.Gi(null, s), () => (this.activeCases = s, this.Xi(null)));
  }
  swap(e, t) {
    const r = [];
    let i = !1;
    for (const a of this.cases)
      if ((i || a.isMatch(t)) && (r.push(a), i = a.fallThrough), r.length > 0 && !i)
        break;
    const s = this.defaultCase;
    return r.length === 0 && s !== void 0 && r.push(s), Me(this.activeCases.length > 0 ? this.Gi(e, r) : void 0, () => {
      if (this.activeCases = r, r.length !== 0)
        return this.Xi(e);
    });
  }
  Xi(e) {
    const t = this.$controller;
    if (!t.isActive)
      return;
    const r = this.activeCases, i = r.length;
    if (i === 0)
      return;
    const s = t.scope;
    return i === 1 ? r[0].activate(e, 0, s) : qt(...r.map((a) => a.activate(e, 0, s)));
  }
  Gi(e, t = []) {
    const r = this.activeCases, i = r.length;
    if (i !== 0) {
      if (i === 1) {
        const s = r[0];
        return t.includes(s) ? void 0 : (r.length = 0, s.deactivate(e, 0));
      }
      return Me(qt(...r.reduce((s, a) => (t.includes(a) || s.push(a.deactivate(e, 0)), s), [])), () => {
        r.length = 0;
      });
    }
  }
  queue(e) {
    const t = this.promise;
    let r;
    r = this.promise = Me(Me(t, e), () => {
      this.promise === r && (this.promise = void 0);
    });
  }
  accept(e) {
    if (this.$controller.accept(e) === !0 || this.activeCases.some((t) => t.accept(e)))
      return !0;
  }
};
X([$e], Xc.prototype, "value", void 0);
Xc = X([gr("switch"), gn(0, nr), gn(1, Mn)], Xc);
let h4 = 0, xo = class {
  constructor(e, t, r, i) {
    this.f = e, this.Ki = t, this.l = r, this.id = ++h4, this.fallThrough = !1, this.view = void 0, this.Qi = i.config.level <= 1, this.Oe = i.scopeTo(`${this.constructor.name}-#${this.id}`);
  }
  link(e, t, r, i) {
    const a = e.parent?.viewModel;
    if (a instanceof Xc)
      this.$switch = a, this.linkToSwitch(a);
    else
      throw ie("AUR0815");
  }
  detaching(e, t, r) {
    return this.deactivate(e, r);
  }
  isMatch(e) {
    this.Oe.debug("isMatch()");
    const t = this.value;
    return Nr(t) ? (this.Pi === void 0 && (this.Pi = this.Yi(t)), t.includes(e)) : t === e;
  }
  valueChanged(e, t) {
    Nr(e) ? (this.Pi?.unsubscribe(this), this.Pi = this.Yi(e)) : this.Pi !== void 0 && this.Pi.unsubscribe(this), this.$switch.caseChanged(this);
  }
  handleCollectionChange() {
    this.$switch.caseChanged(this);
  }
  activate(e, t, r) {
    let i = this.view;
    if (i === void 0 && (i = this.view = this.f.create().setLocation(this.l)), !i.isActive)
      return i.activate(e ?? i, this.$controller, t, r);
  }
  deactivate(e, t) {
    const r = this.view;
    if (!(r === void 0 || !r.isActive))
      return r.deactivate(e ?? r, this.$controller, t);
  }
  dispose() {
    this.Pi?.unsubscribe(this), this.view?.dispose(), this.view = void 0;
  }
  linkToSwitch(e) {
    e.cases.push(this);
  }
  Yi(e) {
    const t = this.Ki.getArrayObserver(e);
    return t.subscribe(this), t;
  }
  accept(e) {
    return this.$controller.accept(e) === !0 ? !0 : this.view?.accept(e);
  }
};
xo.inject = [nr, Pa, Mn, Ra];
X([$e], xo.prototype, "value", void 0);
X([$e({
  set: (n) => {
    switch (n) {
      case "true":
        return !0;
      case "false":
        return !1;
      default:
        return !!n;
    }
  },
  mode: 1
})], xo.prototype, "fallThrough", void 0);
xo = X([gr("case")], xo);
let bg = class extends xo {
  linkToSwitch(e) {
    if (e.defaultCase !== void 0)
      throw ie("AUR0816");
    e.defaultCase = this;
  }
};
bg = X([gr("default-case")], bg);
let Zc = class {
  constructor(e, t, r, i) {
    this.f = e, this.l = t, this.p = r, this.preSettledTask = null, this.postSettledTask = null, this.logger = i.scopeTo("promise.resolve");
  }
  link(e, t, r, i) {
    this.view = this.f.create(this.$controller).setLocation(this.l);
  }
  attaching(e, t, r) {
    const i = this.view, s = this.$controller;
    return Me(i.activate(e, s, r, this.viewScope = sn.fromParent(s.scope, {})), () => this.swap(e, r));
  }
  valueChanged(e, t, r) {
    !this.$controller.isActive || this.swap(null, r);
  }
  swap(e, t) {
    const r = this.value;
    if (!nn(r)) {
      this.logger.warn(`The value '${String(r)}' is not a promise. No change will be done.`);
      return;
    }
    const i = this.p.domWriteQueue, s = this.fulfilled, a = this.rejected, o = this.pending, u = this.viewScope;
    let l;
    const c = {
      reusable: !1
    }, p = () => {
      qt(l = (this.preSettledTask = i.queueTask(() => qt(s?.deactivate(e, t), a?.deactivate(e, t), o?.activate(e, t, u)), c)).result.catch((b) => {
        if (!(b instanceof lS))
          throw b;
      }), r.then((b) => {
        if (this.value !== r)
          return;
        const A = () => {
          this.postSettlePromise = (this.postSettledTask = i.queueTask(() => qt(o?.deactivate(e, t), a?.deactivate(e, t), s?.activate(e, t, u, b)), c)).result;
        };
        this.preSettledTask.status === 1 ? l.then(A) : (this.preSettledTask.cancel(), A());
      }, (b) => {
        if (this.value !== r)
          return;
        const A = () => {
          this.postSettlePromise = (this.postSettledTask = i.queueTask(() => qt(o?.deactivate(e, t), s?.deactivate(e, t), a?.activate(e, t, u, b)), c)).result;
        };
        this.preSettledTask.status === 1 ? l.then(A) : (this.preSettledTask.cancel(), A());
      }));
    };
    this.postSettledTask?.status === 1 ? this.postSettlePromise.then(p) : (this.postSettledTask?.cancel(), p());
  }
  detaching(e, t, r) {
    return this.preSettledTask?.cancel(), this.postSettledTask?.cancel(), this.preSettledTask = this.postSettledTask = null, this.view.deactivate(e, this.$controller, r);
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
};
X([$e], Zc.prototype, "value", void 0);
Zc = X([gr("promise"), gn(0, nr), gn(1, Mn), gn(2, Pn), gn(3, Ra)], Zc);
let sh = class {
  constructor(e, t) {
    this.f = e, this.l = t, this.view = void 0;
  }
  link(e, t, r, i) {
    j0(e).pending = this;
  }
  activate(e, t, r) {
    let i = this.view;
    if (i === void 0 && (i = this.view = this.f.create().setLocation(this.l)), !i.isActive)
      return i.activate(i, this.$controller, t, r);
  }
  deactivate(e, t) {
    const r = this.view;
    if (!(r === void 0 || !r.isActive))
      return r.deactivate(r, this.$controller, t);
  }
  detaching(e, t, r) {
    return this.deactivate(e, r);
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
};
X([$e({
  mode: 2
})], sh.prototype, "value", void 0);
sh = X([gr("pending"), gn(0, nr), gn(1, Mn)], sh);
let ah = class {
  constructor(e, t) {
    this.f = e, this.l = t, this.view = void 0;
  }
  link(e, t, r, i) {
    j0(e).fulfilled = this;
  }
  activate(e, t, r, i) {
    this.value = i;
    let s = this.view;
    if (s === void 0 && (s = this.view = this.f.create().setLocation(this.l)), !s.isActive)
      return s.activate(s, this.$controller, t, r);
  }
  deactivate(e, t) {
    const r = this.view;
    if (!(r === void 0 || !r.isActive))
      return r.deactivate(r, this.$controller, t);
  }
  detaching(e, t, r) {
    return this.deactivate(e, r);
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
};
X([$e({
  mode: 4
})], ah.prototype, "value", void 0);
ah = X([gr("then"), gn(0, nr), gn(1, Mn)], ah);
let oh = class {
  constructor(e, t) {
    this.f = e, this.l = t, this.view = void 0;
  }
  link(e, t, r, i) {
    j0(e).rejected = this;
  }
  activate(e, t, r, i) {
    this.value = i;
    let s = this.view;
    if (s === void 0 && (s = this.view = this.f.create().setLocation(this.l)), !s.isActive)
      return s.activate(s, this.$controller, t, r);
  }
  deactivate(e, t) {
    const r = this.view;
    if (!(r === void 0 || !r.isActive))
      return r.deactivate(r, this.$controller, t);
  }
  detaching(e, t, r) {
    return this.deactivate(e, r);
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
};
X([$e({
  mode: 4
})], oh.prototype, "value", void 0);
oh = X([gr("catch"), gn(0, nr), gn(1, Mn)], oh);
function j0(n) {
  const t = n.parent?.viewModel;
  if (t instanceof Zc)
    return t;
  throw ie("AUR0813");
}
let gg = class {
  "promise.resolve"(e, t, r) {
    return new mr(e, t, "promise", "bind");
  }
};
gg = X([Ui({
  pattern: "promise.resolve",
  symbols: ""
})], gg);
let vg = class {
  then(e, t, r) {
    return new mr(e, t, "then", "from-view");
  }
};
vg = X([Ui({
  pattern: "then",
  symbols: ""
})], vg);
let xg = class {
  catch(e, t, r) {
    return new mr(e, t, "catch", "from-view");
  }
};
xg = X([Ui({
  pattern: "catch",
  symbols: ""
})], xg);
class Ml {
  constructor(e, t, r, i, s, a, o) {
    this.c = e, this.parent = t, this.host = r, this.l = i, this.p = s, this.scopeBehavior = "auto", this.Zi = void 0, this.r = e.get(Da), this.Ji = a, this.ts = o;
  }
  static get inject() {
    return [ko, Hd, go, Mn, Pn, Vo, ov(m4)];
  }
  get pending() {
    return this.es;
  }
  get composition() {
    return this.Zi;
  }
  attaching(e, t, r) {
    return this.es = Me(this.queue(new wg(this.view, this.viewModel, this.model, void 0), e), (i) => {
      this.ts.isCurrent(i) && (this.es = void 0);
    });
  }
  detaching(e) {
    const t = this.Zi, r = this.es;
    return this.ts.invalidate(), this.Zi = this.es = void 0, Me(r, () => t?.deactivate(e));
  }
  propertyChanged(e) {
    if (e === "model" && this.Zi != null) {
      this.Zi.update(this.model);
      return;
    }
    this.es = Me(this.es, () => Me(this.queue(new wg(this.view, this.viewModel, this.model, e), void 0), (t) => {
      this.ts.isCurrent(t) && (this.es = void 0);
    }));
  }
  queue(e, t) {
    const r = this.ts, i = this.Zi;
    return Me(r.create(e), (s) => r.isCurrent(s) ? Me(this.compose(s), (a) => r.isCurrent(s) ? Me(a.activate(t), () => r.isCurrent(s) ? (this.Zi = a, Me(i?.deactivate(t), () => s)) : Me(a.controller.deactivate(a.controller, this.$controller, 2), () => (a.controller.dispose(), s))) : (a.controller.dispose(), s)) : s);
  }
  compose(e) {
    let t, r, i;
    const { view: s, viewModel: a, model: o } = e.change, { c: u, host: l, $controller: c, l: p } = this, b = this.getDef(a), A = u.createChild(), g = p == null ? l.parentNode : p.parentNode;
    if (b !== null) {
      if (b.containerless)
        throw ie("AUR0806");
      p == null ? (r = l, i = () => {
      }) : (r = g.insertBefore(this.p.document.createElement(b.name), p), i = () => {
        r.remove();
      }), t = this.getVm(A, a, r);
    } else
      r = p ?? l, t = this.getVm(A, a, r);
    const w = () => {
      if (b !== null) {
        const T = dr.$el(A, t, r, {
          projections: this.Ji.projections
        }, b);
        return new Ag(T, (_) => T.activate(_ ?? T, c, 1, c.scope.parent), (_) => Me(T.deactivate(_ ?? T, c, 2), i), (_) => t.activate?.(_), e);
      } else {
        const T = Hr.create({
          name: lo.generateName(),
          template: s
        }), _ = this.r.getViewFactory(T, A), I = dr.$view(_, c), N = this.scopeBehavior === "auto" ? sn.fromParent(this.parent.scope, t) : sn.create(t);
        return Qc(r) ? I.setLocation(r) : I.setHost(r), new Ag(I, (B) => I.activate(B ?? I, c, 1, N), (B) => I.deactivate(B ?? I, c, 2), (B) => t.activate?.(B), e);
      }
    };
    return "activate" in t ? Me(t.activate(o), () => w()) : w();
  }
  getVm(e, t, r) {
    if (t == null)
      return new y4();
    if (typeof t == "object")
      return t;
    const i = this.p, s = Qc(r);
    St(e, i.Element, St(e, go, new yn("ElementResolver", s ? null : r))), St(e, Mn, new yn("IRenderLocation", s ? r : null));
    const a = e.invoke(t);
    return St(e, t, new yn("au-compose.viewModel", a)), a;
  }
  getDef(e) {
    const t = $n(e) ? e : e?.constructor;
    return lo.isType(t) ? lo.getDefinition(t) : null;
  }
}
X([$e], Ml.prototype, "view", void 0);
X([$e], Ml.prototype, "viewModel", void 0);
X([$e], Ml.prototype, "model", void 0);
X([$e({
  set: (n) => {
    if (n === "scoped" || n === "auto")
      return n;
    throw ie("AUR0805");
  }
})], Ml.prototype, "scopeBehavior", void 0);
bx("au-compose")(Ml);
class y4 {
}
class m4 {
  constructor() {
    this.id = 0;
  }
  isCurrent(e) {
    return e.id === this.id;
  }
  create(e) {
    return Me(e.load(), (t) => new b4(++this.id, t));
  }
  invalidate() {
    this.id++;
  }
}
class wg {
  constructor(e, t, r, i) {
    this.view = e, this.viewModel = t, this.model = r, this.src = i;
  }
  load() {
    return nn(this.view) || nn(this.viewModel) ? Promise.all([this.view, this.viewModel]).then(([e, t]) => new Tg(e, t, this.model, this.src)) : new Tg(this.view, this.viewModel, this.model, this.src);
  }
}
class Tg {
  constructor(e, t, r, i) {
    this.view = e, this.viewModel = t, this.model = r, this.src = i;
  }
}
class b4 {
  constructor(e, t) {
    this.id = e, this.change = t;
  }
}
class Ag {
  constructor(e, t, r, i, s) {
    this.controller = e, this.start = t, this.stop = r, this.update = i, this.context = s, this.state = 0;
  }
  activate(e) {
    if (this.state !== 0)
      throw ie(`AUR0807:${this.controller.name}`);
    return this.state = 1, this.start(e);
  }
  deactivate(e) {
    switch (this.state) {
      case 1:
        return this.state = -1, this.stop(e);
      case -1:
        throw ie("AUR0808");
      default:
        this.state = -1;
    }
  }
}
let uh = class {
  constructor(e, t, r, i) {
    this.ss = null, this.rs = null;
    let s;
    const a = t.auSlot, o = r.instruction?.projections?.[a.name];
    o == null ? (s = i.getViewFactory(a.fallback, r.controller.container), this.os = !1) : (s = i.getViewFactory(o, r.parent.controller.container), this.os = !0), this.ls = r, this.view = s.create().setLocation(e);
  }
  static get inject() {
    return [Mn, Vo, Kc, Da];
  }
  binding(e, t, r) {
    this.ss = this.$controller.scope.parent;
    let i;
    this.os && (i = this.ls.controller.scope.parent, (this.rs = sn.fromParent(i, i.bindingContext)).overrideContext.$host = this.expose ?? this.ss.bindingContext);
  }
  attaching(e, t, r) {
    return this.view.activate(e, this.$controller, r, this.os ? this.rs : this.ss);
  }
  detaching(e, t, r) {
    return this.view.deactivate(e, this.$controller, r);
  }
  exposeChanged(e) {
    this.os && this.rs != null && (this.rs.overrideContext.$host = e);
  }
  dispose() {
    this.view.dispose(), this.view = void 0;
  }
  accept(e) {
    if (this.view?.accept(e) === !0)
      return !0;
  }
};
X([$e], uh.prototype, "expose", void 0);
uh = X([bx({
  name: "au-slot",
  template: null,
  containerless: !0
})], uh);
const g4 = Oe("ISanitizer", (n) => n.singleton(class {
  sanitize() {
    throw ie('"sanitize" method not implemented');
  }
}));
let lh = class {
  constructor(e) {
    this.cs = e;
  }
  toView(e) {
    return e == null ? null : this.cs.sanitize(e);
  }
};
lh = X([gn(0, g4)], lh);
wl("sanitize")(lh);
Oe("IAurelia");
var Cg;
(function(n) {
  n[n.oneTime = 1] = "oneTime", n[n.toView = 2] = "toView", n[n.fromView = 4] = "fromView", n[n.twoWay = 6] = "twoWay", n[n.default = 8] = "default";
})(Cg || (Cg = {}));
var Sg;
(function(n) {
  n[n.Element = 1] = "Element", n[n.Attribute = 2] = "Attribute";
})(Sg || (Sg = {}));
function bs(n) {
  return bs = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, bs(n);
}
function v4(n, e, t) {
  return e in n ? Object.defineProperty(n, e, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : n[e] = t, n;
}
function Fn(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? Object(arguments[e]) : {}, r = Object.keys(t);
    typeof Object.getOwnPropertySymbols == "function" && r.push.apply(r, Object.getOwnPropertySymbols(t).filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), r.forEach(function(i) {
      v4(n, i, t[i]);
    });
  }
  return n;
}
function Gi(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function Eg(n, e) {
  for (var t = 0; t < e.length; t++) {
    var r = e[t];
    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(n, r.key, r);
  }
}
function Wi(n, e, t) {
  return e && Eg(n.prototype, e), t && Eg(n, t), Object.defineProperty(n, "prototype", {
    writable: !1
  }), n;
}
function ma(n) {
  if (n === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return n;
}
function zu(n, e) {
  if (e && (bs(e) === "object" || typeof e == "function"))
    return e;
  if (e !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return ma(n);
}
function wo(n) {
  return wo = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, wo(n);
}
function ch(n, e) {
  return ch = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(r, i) {
    return r.__proto__ = i, r;
  }, ch(n, e);
}
function Qd(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  n.prototype = Object.create(e && e.prototype, {
    constructor: {
      value: n,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(n, "prototype", {
    writable: !1
  }), e && ch(n, e);
}
function dh(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, r = new Array(e); t < e; t++)
    r[t] = n[t];
  return r;
}
function x4(n) {
  if (Array.isArray(n))
    return dh(n);
}
function w4(n) {
  if (typeof Symbol < "u" && n[Symbol.iterator] != null || n["@@iterator"] != null)
    return Array.from(n);
}
function zx(n, e) {
  if (!!n) {
    if (typeof n == "string")
      return dh(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (t === "Object" && n.constructor && (t = n.constructor.name), t === "Map" || t === "Set")
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return dh(n, e);
  }
}
function T4() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function A4(n) {
  return x4(n) || w4(n) || zx(n) || T4();
}
function C4(n) {
  if (Array.isArray(n))
    return n;
}
function S4(n, e) {
  var t = n == null ? null : typeof Symbol < "u" && n[Symbol.iterator] || n["@@iterator"];
  if (t != null) {
    var r = [], i = !0, s = !1, a, o;
    try {
      for (t = t.call(n); !(i = (a = t.next()).done) && (r.push(a.value), !(e && r.length === e)); i = !0)
        ;
    } catch (u) {
      s = !0, o = u;
    } finally {
      try {
        !i && t.return != null && t.return();
      } finally {
        if (s)
          throw o;
      }
    }
    return r;
  }
}
function E4() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _g(n, e) {
  return C4(n) || S4(n, e) || zx(n, e) || E4();
}
var _4 = {
  type: "logger",
  log: function(e) {
    this.output("log", e);
  },
  warn: function(e) {
    this.output("warn", e);
  },
  error: function(e) {
    this.output("error", e);
  },
  output: function(e, t) {
    var r;
    console && console[e] && (r = console)[e].apply(r, A4(t));
  }
}, M4 = /* @__PURE__ */ function() {
  function n(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    Gi(this, n), this.init(e, t);
  }
  return Wi(n, [{
    key: "init",
    value: function(t) {
      var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      this.prefix = r.prefix || "i18next:", this.logger = t || _4, this.options = r, this.debug = r.debug;
    }
  }, {
    key: "setDebug",
    value: function(t) {
      this.debug = t;
    }
  }, {
    key: "log",
    value: function() {
      for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++)
        r[i] = arguments[i];
      return this.forward(r, "log", "", !0);
    }
  }, {
    key: "warn",
    value: function() {
      for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++)
        r[i] = arguments[i];
      return this.forward(r, "warn", "", !0);
    }
  }, {
    key: "error",
    value: function() {
      for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++)
        r[i] = arguments[i];
      return this.forward(r, "error", "");
    }
  }, {
    key: "deprecate",
    value: function() {
      for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++)
        r[i] = arguments[i];
      return this.forward(r, "warn", "WARNING DEPRECATED: ", !0);
    }
  }, {
    key: "forward",
    value: function(t, r, i, s) {
      return s && !this.debug ? null : (typeof t[0] == "string" && (t[0] = "".concat(i).concat(this.prefix, " ").concat(t[0])), this.logger[r](t));
    }
  }, {
    key: "create",
    value: function(t) {
      return new n(this.logger, Fn({}, {
        prefix: "".concat(this.prefix, ":").concat(t, ":")
      }, this.options));
    }
  }]), n;
}(), Ai = new M4(), As = /* @__PURE__ */ function() {
  function n() {
    Gi(this, n), this.observers = {};
  }
  return Wi(n, [{
    key: "on",
    value: function(t, r) {
      var i = this;
      return t.split(" ").forEach(function(s) {
        i.observers[s] = i.observers[s] || [], i.observers[s].push(r);
      }), this;
    }
  }, {
    key: "off",
    value: function(t, r) {
      if (!!this.observers[t]) {
        if (!r) {
          delete this.observers[t];
          return;
        }
        this.observers[t] = this.observers[t].filter(function(i) {
          return i !== r;
        });
      }
    }
  }, {
    key: "emit",
    value: function(t) {
      for (var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
        i[s - 1] = arguments[s];
      if (this.observers[t]) {
        var a = [].concat(this.observers[t]);
        a.forEach(function(u) {
          u.apply(void 0, i);
        });
      }
      if (this.observers["*"]) {
        var o = [].concat(this.observers["*"]);
        o.forEach(function(u) {
          u.apply(u, [t].concat(i));
        });
      }
    }
  }]), n;
}();
function tu() {
  var n, e, t = new Promise(function(r, i) {
    n = r, e = i;
  });
  return t.resolve = n, t.reject = e, t;
}
function op(n) {
  return n == null ? "" : "" + n;
}
function R4(n, e, t) {
  n.forEach(function(r) {
    e[r] && (t[r] = e[r]);
  });
}
function G0(n, e, t) {
  function r(o) {
    return o && o.indexOf("###") > -1 ? o.replace(/###/g, ".") : o;
  }
  function i() {
    return !n || typeof n == "string";
  }
  for (var s = typeof e != "string" ? [].concat(e) : e.split("."); s.length > 1; ) {
    if (i())
      return {};
    var a = r(s.shift());
    !n[a] && t && (n[a] = new t()), n = n[a];
  }
  return i() ? {} : {
    obj: n,
    k: r(s.shift())
  };
}
function Mg(n, e, t) {
  var r = G0(n, e, Object), i = r.obj, s = r.k;
  i[s] = t;
}
function P4(n, e, t, r) {
  var i = G0(n, e, Object), s = i.obj, a = i.k;
  s[a] = s[a] || [], r && (s[a] = s[a].concat(t)), r || s[a].push(t);
}
function ed(n, e) {
  var t = G0(n, e), r = t.obj, i = t.k;
  if (!!r)
    return r[i];
}
function Rg(n, e, t) {
  var r = ed(n, t);
  return r !== void 0 ? r : ed(e, t);
}
function Hx(n, e, t) {
  for (var r in e)
    r in n ? typeof n[r] == "string" || n[r] instanceof String || typeof e[r] == "string" || e[r] instanceof String ? t && (n[r] = e[r]) : Hx(n[r], e[r], t) : n[r] = e[r];
  return n;
}
function Ha(n) {
  return n.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
var O4 = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;"
};
function I4(n) {
  return typeof n == "string" ? n.replace(/[&<>"'\/]/g, function(e) {
    return O4[e];
  }) : n;
}
var k4 = /* @__PURE__ */ function(n) {
  Qd(e, n);
  function e(t) {
    var r, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      ns: ["translation"],
      defaultNS: "translation"
    };
    return Gi(this, e), r = zu(this, wo(e).call(this)), As.call(ma(r)), r.data = t || {}, r.options = i, r.options.keySeparator === void 0 && (r.options.keySeparator = "."), r;
  }
  return Wi(e, [{
    key: "addNamespaces",
    value: function(r) {
      this.options.ns.indexOf(r) < 0 && this.options.ns.push(r);
    }
  }, {
    key: "removeNamespaces",
    value: function(r) {
      var i = this.options.ns.indexOf(r);
      i > -1 && this.options.ns.splice(i, 1);
    }
  }, {
    key: "getResource",
    value: function(r, i, s) {
      var a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, o = a.keySeparator !== void 0 ? a.keySeparator : this.options.keySeparator, u = [r, i];
      return s && typeof s != "string" && (u = u.concat(s)), s && typeof s == "string" && (u = u.concat(o ? s.split(o) : s)), r.indexOf(".") > -1 && (u = r.split(".")), ed(this.data, u);
    }
  }, {
    key: "addResource",
    value: function(r, i, s, a) {
      var o = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
        silent: !1
      }, u = this.options.keySeparator;
      u === void 0 && (u = ".");
      var l = [r, i];
      s && (l = l.concat(u ? s.split(u) : s)), r.indexOf(".") > -1 && (l = r.split("."), a = i, i = l[1]), this.addNamespaces(i), Mg(this.data, l, a), o.silent || this.emit("added", r, i, s, a);
    }
  }, {
    key: "addResources",
    value: function(r, i, s) {
      var a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
        silent: !1
      };
      for (var o in s)
        (typeof s[o] == "string" || Object.prototype.toString.apply(s[o]) === "[object Array]") && this.addResource(r, i, o, s[o], {
          silent: !0
        });
      a.silent || this.emit("added", r, i, s);
    }
  }, {
    key: "addResourceBundle",
    value: function(r, i, s, a, o) {
      var u = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
        silent: !1
      }, l = [r, i];
      r.indexOf(".") > -1 && (l = r.split("."), a = s, s = i, i = l[1]), this.addNamespaces(i);
      var c = ed(this.data, l) || {};
      a ? Hx(c, s, o) : c = Fn({}, c, s), Mg(this.data, l, c), u.silent || this.emit("added", r, i, s);
    }
  }, {
    key: "removeResourceBundle",
    value: function(r, i) {
      this.hasResourceBundle(r, i) && delete this.data[r][i], this.removeNamespaces(i), this.emit("removed", r, i);
    }
  }, {
    key: "hasResourceBundle",
    value: function(r, i) {
      return this.getResource(r, i) !== void 0;
    }
  }, {
    key: "getResourceBundle",
    value: function(r, i) {
      return i || (i = this.options.defaultNS), this.options.compatibilityAPI === "v1" ? Fn({}, {}, this.getResource(r, i)) : this.getResource(r, i);
    }
  }, {
    key: "getDataByLanguage",
    value: function(r) {
      return this.data[r];
    }
  }, {
    key: "toJSON",
    value: function() {
      return this.data;
    }
  }]), e;
}(As), Kx = {
  processors: {},
  addPostProcessor: function(e) {
    this.processors[e.name] = e;
  },
  handle: function(e, t, r, i, s) {
    var a = this;
    return e.forEach(function(o) {
      a.processors[o] && (t = a.processors[o].process(t, r, i, s));
    }), t;
  }
}, Pg = /* @__PURE__ */ function(n) {
  Qd(e, n);
  function e(t) {
    var r, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return Gi(this, e), r = zu(this, wo(e).call(this)), As.call(ma(r)), R4(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], t, ma(r)), r.options = i, r.options.keySeparator === void 0 && (r.options.keySeparator = "."), r.logger = Ai.create("translator"), r;
  }
  return Wi(e, [{
    key: "changeLanguage",
    value: function(r) {
      r && (this.language = r);
    }
  }, {
    key: "exists",
    value: function(r) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
        interpolation: {}
      }, s = this.resolve(r, i);
      return s && s.res !== void 0;
    }
  }, {
    key: "extractFromKey",
    value: function(r, i) {
      var s = i.nsSeparator || this.options.nsSeparator;
      s === void 0 && (s = ":");
      var a = i.keySeparator !== void 0 ? i.keySeparator : this.options.keySeparator, o = i.ns || this.options.defaultNS;
      if (s && r.indexOf(s) > -1) {
        var u = r.split(s);
        (s !== a || s === a && this.options.ns.indexOf(u[0]) > -1) && (o = u.shift()), r = u.join(a);
      }
      return typeof o == "string" && (o = [o]), {
        key: r,
        namespaces: o
      };
    }
  }, {
    key: "translate",
    value: function(r, i) {
      var s = this;
      if (bs(i) !== "object" && this.options.overloadTranslationOptionHandler && (i = this.options.overloadTranslationOptionHandler(arguments)), i || (i = {}), r == null)
        return "";
      Array.isArray(r) || (r = [String(r)]);
      var a = i.keySeparator !== void 0 ? i.keySeparator : this.options.keySeparator, o = this.extractFromKey(r[r.length - 1], i), u = o.key, l = o.namespaces, c = l[l.length - 1], p = i.lng || this.language, b = i.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
      if (p && p.toLowerCase() === "cimode") {
        if (b) {
          var A = i.nsSeparator || this.options.nsSeparator;
          return c + A + u;
        }
        return u;
      }
      var g = this.resolve(r, i), w = g && g.res, T = g && g.usedKey || u, _ = g && g.exactUsedKey || u, I = Object.prototype.toString.apply(w), N = ["[object Number]", "[object Function]", "[object RegExp]"], B = i.joinArrays !== void 0 ? i.joinArrays : this.options.joinArrays, D = !this.i18nFormat || this.i18nFormat.handleAsObject, $ = typeof w != "string" && typeof w != "boolean" && typeof w != "number";
      if (D && w && $ && N.indexOf(I) < 0 && !(typeof B == "string" && I === "[object Array]")) {
        if (!i.returnObjects && !this.options.returnObjects)
          return this.logger.warn("accessing an object - but returnObjects options is not enabled!"), this.options.returnedObjectHandler ? this.options.returnedObjectHandler(T, w, i) : "key '".concat(u, " (").concat(this.language, ")' returned an object instead of string.");
        if (a) {
          var H = I === "[object Array]", j = H ? [] : {}, Q = H ? _ : T;
          for (var oe in w)
            if (Object.prototype.hasOwnProperty.call(w, oe)) {
              var J = "".concat(Q).concat(a).concat(oe);
              j[oe] = this.translate(J, Fn({}, i, {
                joinArrays: !1,
                ns: l
              })), j[oe] === J && (j[oe] = w[oe]);
            }
          w = j;
        }
      } else if (D && typeof B == "string" && I === "[object Array]")
        w = w.join(B), w && (w = this.extendTranslation(w, r, i));
      else {
        var ue = !1, E = !1;
        if (!this.isValidLookup(w) && i.defaultValue !== void 0) {
          if (ue = !0, i.count !== void 0) {
            var d = this.pluralResolver.getSuffix(p, i.count);
            w = i["defaultValue".concat(d)];
          }
          w || (w = i.defaultValue);
        }
        this.isValidLookup(w) || (E = !0, w = u);
        var y = i.defaultValue && i.defaultValue !== w && this.options.updateMissing;
        if (E || ue || y) {
          this.logger.log(y ? "updateKey" : "missingKey", p, c, u, y ? i.defaultValue : w);
          var x = [], S = this.languageUtils.getFallbackCodes(this.options.fallbackLng, i.lng || this.language);
          if (this.options.saveMissingTo === "fallback" && S && S[0])
            for (var C = 0; C < S.length; C++)
              x.push(S[C]);
          else
            this.options.saveMissingTo === "all" ? x = this.languageUtils.toResolveHierarchy(i.lng || this.language) : x.push(i.lng || this.language);
          var M = function(f, v) {
            s.options.missingKeyHandler ? s.options.missingKeyHandler(f, c, v, y ? i.defaultValue : w, y, i) : s.backendConnector && s.backendConnector.saveMissing && s.backendConnector.saveMissing(f, c, v, y ? i.defaultValue : w, y, i), s.emit("missingKey", f, c, v, w);
          };
          if (this.options.saveMissing) {
            var P = i.count !== void 0 && typeof i.count != "string";
            this.options.saveMissingPlurals && P ? x.forEach(function(m) {
              var f = s.pluralResolver.getPluralFormsOfKey(m, u);
              f.forEach(function(v) {
                return M([m], v);
              });
            }) : M(x, u);
          }
        }
        w = this.extendTranslation(w, r, i, g), E && w === u && this.options.appendNamespaceToMissingKey && (w = "".concat(c, ":").concat(u)), E && this.options.parseMissingKeyHandler && (w = this.options.parseMissingKeyHandler(w));
      }
      return w;
    }
  }, {
    key: "extendTranslation",
    value: function(r, i, s, a) {
      var o = this;
      if (this.i18nFormat && this.i18nFormat.parse)
        r = this.i18nFormat.parse(r, s, a.usedLng, a.usedNS, a.usedKey, {
          resolved: a
        });
      else if (!s.skipInterpolation) {
        s.interpolation && this.interpolator.init(Fn({}, s, {
          interpolation: Fn({}, this.options.interpolation, s.interpolation)
        }));
        var u = s.replace && typeof s.replace != "string" ? s.replace : s;
        this.options.interpolation.defaultVariables && (u = Fn({}, this.options.interpolation.defaultVariables, u)), r = this.interpolator.interpolate(r, u, s.lng || this.language, s), s.nest !== !1 && (r = this.interpolator.nest(r, function() {
          return o.translate.apply(o, arguments);
        }, s)), s.interpolation && this.interpolator.reset();
      }
      var l = s.postProcess || this.options.postProcess, c = typeof l == "string" ? [l] : l;
      return r != null && c && c.length && s.applyPostProcessor !== !1 && (r = Kx.handle(c, r, i, this.options && this.options.postProcessPassResolved ? Fn({
        i18nResolved: a
      }, s) : s, this)), r;
    }
  }, {
    key: "resolve",
    value: function(r) {
      var i = this, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, a, o, u, l, c;
      return typeof r == "string" && (r = [r]), r.forEach(function(p) {
        if (!i.isValidLookup(a)) {
          var b = i.extractFromKey(p, s), A = b.key;
          o = A;
          var g = b.namespaces;
          i.options.fallbackNS && (g = g.concat(i.options.fallbackNS));
          var w = s.count !== void 0 && typeof s.count != "string", T = s.context !== void 0 && typeof s.context == "string" && s.context !== "", _ = s.lngs ? s.lngs : i.languageUtils.toResolveHierarchy(s.lng || i.language, s.fallbackLng);
          g.forEach(function(I) {
            i.isValidLookup(a) || (c = I, i.utils && i.utils.hasLoadedNamespace && !i.utils.hasLoadedNamespace(c) && i.logger.warn('key "'.concat(o, '" for namespace "').concat(c, `" won't get resolved as namespace was not yet loaded`), "This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"), _.forEach(function(N) {
              if (!i.isValidLookup(a)) {
                l = N;
                var B = A, D = [B];
                if (i.i18nFormat && i.i18nFormat.addLookupKeys)
                  i.i18nFormat.addLookupKeys(D, A, N, I, s);
                else {
                  var $;
                  w && ($ = i.pluralResolver.getSuffix(N, s.count)), w && T && D.push(B + $), T && D.push(B += "".concat(i.options.contextSeparator).concat(s.context)), w && D.push(B += $);
                }
                for (var H; H = D.pop(); )
                  i.isValidLookup(a) || (u = H, a = i.getResource(N, I, H, s));
              }
            }));
          });
        }
      }), {
        res: a,
        usedKey: o,
        exactUsedKey: u,
        usedLng: l,
        usedNS: c
      };
    }
  }, {
    key: "isValidLookup",
    value: function(r) {
      return r !== void 0 && !(!this.options.returnNull && r === null) && !(!this.options.returnEmptyString && r === "");
    }
  }, {
    key: "getResource",
    value: function(r, i, s) {
      var a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
      return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(r, i, s, a) : this.resourceStore.getResource(r, i, s, a);
    }
  }]), e;
}(As);
function up(n) {
  return n.charAt(0).toUpperCase() + n.slice(1);
}
var D4 = /* @__PURE__ */ function() {
  function n(e) {
    Gi(this, n), this.options = e, this.whitelist = this.options.whitelist || !1, this.logger = Ai.create("languageUtils");
  }
  return Wi(n, [{
    key: "getScriptPartFromCode",
    value: function(t) {
      if (!t || t.indexOf("-") < 0)
        return null;
      var r = t.split("-");
      return r.length === 2 ? null : (r.pop(), this.formatLanguageCode(r.join("-")));
    }
  }, {
    key: "getLanguagePartFromCode",
    value: function(t) {
      if (!t || t.indexOf("-") < 0)
        return t;
      var r = t.split("-");
      return this.formatLanguageCode(r[0]);
    }
  }, {
    key: "formatLanguageCode",
    value: function(t) {
      if (typeof t == "string" && t.indexOf("-") > -1) {
        var r = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"], i = t.split("-");
        return this.options.lowerCaseLng ? i = i.map(function(s) {
          return s.toLowerCase();
        }) : i.length === 2 ? (i[0] = i[0].toLowerCase(), i[1] = i[1].toUpperCase(), r.indexOf(i[1].toLowerCase()) > -1 && (i[1] = up(i[1].toLowerCase()))) : i.length === 3 && (i[0] = i[0].toLowerCase(), i[1].length === 2 && (i[1] = i[1].toUpperCase()), i[0] !== "sgn" && i[2].length === 2 && (i[2] = i[2].toUpperCase()), r.indexOf(i[1].toLowerCase()) > -1 && (i[1] = up(i[1].toLowerCase())), r.indexOf(i[2].toLowerCase()) > -1 && (i[2] = up(i[2].toLowerCase()))), i.join("-");
      }
      return this.options.cleanCode || this.options.lowerCaseLng ? t.toLowerCase() : t;
    }
  }, {
    key: "isWhitelisted",
    value: function(t) {
      return (this.options.load === "languageOnly" || this.options.nonExplicitWhitelist) && (t = this.getLanguagePartFromCode(t)), !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(t) > -1;
    }
  }, {
    key: "getFallbackCodes",
    value: function(t, r) {
      if (!t)
        return [];
      if (typeof t == "string" && (t = [t]), Object.prototype.toString.apply(t) === "[object Array]")
        return t;
      if (!r)
        return t.default || [];
      var i = t[r];
      return i || (i = t[this.getScriptPartFromCode(r)]), i || (i = t[this.formatLanguageCode(r)]), i || (i = t.default), i || [];
    }
  }, {
    key: "toResolveHierarchy",
    value: function(t, r) {
      var i = this, s = this.getFallbackCodes(r || this.options.fallbackLng || [], t), a = [], o = function(l) {
        !l || (i.isWhitelisted(l) ? a.push(l) : i.logger.warn("rejecting non-whitelisted language code: ".concat(l)));
      };
      return typeof t == "string" && t.indexOf("-") > -1 ? (this.options.load !== "languageOnly" && o(this.formatLanguageCode(t)), this.options.load !== "languageOnly" && this.options.load !== "currentOnly" && o(this.getScriptPartFromCode(t)), this.options.load !== "currentOnly" && o(this.getLanguagePartFromCode(t))) : typeof t == "string" && o(this.formatLanguageCode(t)), s.forEach(function(u) {
        a.indexOf(u) < 0 && o(i.formatLanguageCode(u));
      }), a;
    }
  }]), n;
}(), B4 = [{
  lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "ti", "tr", "uz", "wa"],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ["ay", "bo", "cgg", "fa", "id", "ja", "jbo", "ka", "kk", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
  nr: [1],
  fc: 3
}, {
  lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ["ar"],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ["cs", "sk"],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ["csb", "pl"],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ["cy"],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ["fr"],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ["ga"],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ["gd"],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ["is"],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ["jv"],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ["kw"],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ["lt"],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ["lv"],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ["mk"],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ["mnk"],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ["mt"],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ["or"],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ["ro"],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ["sl"],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ["he"],
  nr: [1, 2, 20, 21],
  fc: 22
}], N4 = {
  1: function(e) {
    return Number(e > 1);
  },
  2: function(e) {
    return Number(e != 1);
  },
  3: function(e) {
    return 0;
  },
  4: function(e) {
    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2);
  },
  5: function(e) {
    return Number(e === 0 ? 0 : e == 1 ? 1 : e == 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5);
  },
  6: function(e) {
    return Number(e == 1 ? 0 : e >= 2 && e <= 4 ? 1 : 2);
  },
  7: function(e) {
    return Number(e == 1 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2);
  },
  8: function(e) {
    return Number(e == 1 ? 0 : e == 2 ? 1 : e != 8 && e != 11 ? 2 : 3);
  },
  9: function(e) {
    return Number(e >= 2);
  },
  10: function(e) {
    return Number(e == 1 ? 0 : e == 2 ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4);
  },
  11: function(e) {
    return Number(e == 1 || e == 11 ? 0 : e == 2 || e == 12 ? 1 : e > 2 && e < 20 ? 2 : 3);
  },
  12: function(e) {
    return Number(e % 10 != 1 || e % 100 == 11);
  },
  13: function(e) {
    return Number(e !== 0);
  },
  14: function(e) {
    return Number(e == 1 ? 0 : e == 2 ? 1 : e == 3 ? 2 : 3);
  },
  15: function(e) {
    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2);
  },
  16: function(e) {
    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e !== 0 ? 1 : 2);
  },
  17: function(e) {
    return Number(e == 1 || e % 10 == 1 ? 0 : 1);
  },
  18: function(e) {
    return Number(e == 0 ? 0 : e == 1 ? 1 : 2);
  },
  19: function(e) {
    return Number(e == 1 ? 0 : e === 0 || e % 100 > 1 && e % 100 < 11 ? 1 : e % 100 > 10 && e % 100 < 20 ? 2 : 3);
  },
  20: function(e) {
    return Number(e == 1 ? 0 : e === 0 || e % 100 > 0 && e % 100 < 20 ? 1 : 2);
  },
  21: function(e) {
    return Number(e % 100 == 1 ? 1 : e % 100 == 2 ? 2 : e % 100 == 3 || e % 100 == 4 ? 3 : 0);
  },
  22: function(e) {
    return Number(e === 1 ? 0 : e === 2 ? 1 : (e < 0 || e > 10) && e % 10 == 0 ? 2 : 3);
  }
};
function F4() {
  var n = {};
  return B4.forEach(function(e) {
    e.lngs.forEach(function(t) {
      n[t] = {
        numbers: e.nr,
        plurals: N4[e.fc]
      };
    });
  }), n;
}
var L4 = /* @__PURE__ */ function() {
  function n(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    Gi(this, n), this.languageUtils = e, this.options = t, this.logger = Ai.create("pluralResolver"), this.rules = F4();
  }
  return Wi(n, [{
    key: "addRule",
    value: function(t, r) {
      this.rules[t] = r;
    }
  }, {
    key: "getRule",
    value: function(t) {
      return this.rules[t] || this.rules[this.languageUtils.getLanguagePartFromCode(t)];
    }
  }, {
    key: "needsPlural",
    value: function(t) {
      var r = this.getRule(t);
      return r && r.numbers.length > 1;
    }
  }, {
    key: "getPluralFormsOfKey",
    value: function(t, r) {
      var i = this, s = [], a = this.getRule(t);
      return a && a.numbers.forEach(function(o) {
        var u = i.getSuffix(t, o);
        s.push("".concat(r).concat(u));
      }), s;
    }
  }, {
    key: "getSuffix",
    value: function(t, r) {
      var i = this, s = this.getRule(t);
      if (s) {
        var a = s.noAbs ? s.plurals(r) : s.plurals(Math.abs(r)), o = s.numbers[a];
        this.options.simplifyPluralSuffix && s.numbers.length === 2 && s.numbers[0] === 1 && (o === 2 ? o = "plural" : o === 1 && (o = ""));
        var u = function() {
          return i.options.prepend && o.toString() ? i.options.prepend + o.toString() : o.toString();
        };
        return this.options.compatibilityJSON === "v1" ? o === 1 ? "" : typeof o == "number" ? "_plural_".concat(o.toString()) : u() : this.options.compatibilityJSON === "v2" || this.options.simplifyPluralSuffix && s.numbers.length === 2 && s.numbers[0] === 1 ? u() : this.options.prepend && a.toString() ? this.options.prepend + a.toString() : a.toString();
      }
      return this.logger.warn("no plural rule found for: ".concat(t)), "";
    }
  }]), n;
}(), $4 = /* @__PURE__ */ function() {
  function n() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    Gi(this, n), this.logger = Ai.create("interpolator"), this.options = e, this.format = e.interpolation && e.interpolation.format || function(t) {
      return t;
    }, this.init(e);
  }
  return Wi(n, [{
    key: "init",
    value: function() {
      var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      t.interpolation || (t.interpolation = {
        escapeValue: !0
      });
      var r = t.interpolation;
      this.escape = r.escape !== void 0 ? r.escape : I4, this.escapeValue = r.escapeValue !== void 0 ? r.escapeValue : !0, this.useRawValueToEscape = r.useRawValueToEscape !== void 0 ? r.useRawValueToEscape : !1, this.prefix = r.prefix ? Ha(r.prefix) : r.prefixEscaped || "{{", this.suffix = r.suffix ? Ha(r.suffix) : r.suffixEscaped || "}}", this.formatSeparator = r.formatSeparator ? r.formatSeparator : r.formatSeparator || ",", this.unescapePrefix = r.unescapeSuffix ? "" : r.unescapePrefix || "-", this.unescapeSuffix = this.unescapePrefix ? "" : r.unescapeSuffix || "", this.nestingPrefix = r.nestingPrefix ? Ha(r.nestingPrefix) : r.nestingPrefixEscaped || Ha("$t("), this.nestingSuffix = r.nestingSuffix ? Ha(r.nestingSuffix) : r.nestingSuffixEscaped || Ha(")"), this.maxReplaces = r.maxReplaces ? r.maxReplaces : 1e3, this.resetRegExp();
    }
  }, {
    key: "reset",
    value: function() {
      this.options && this.init(this.options);
    }
  }, {
    key: "resetRegExp",
    value: function() {
      var t = "".concat(this.prefix, "(.+?)").concat(this.suffix);
      this.regexp = new RegExp(t, "g");
      var r = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
      this.regexpUnescape = new RegExp(r, "g");
      var i = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
      this.nestingRegexp = new RegExp(i, "g");
    }
  }, {
    key: "interpolate",
    value: function(t, r, i, s) {
      var a = this, o, u, l, c = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
      function p(T) {
        return T.replace(/\$/g, "$$$$");
      }
      var b = function(_) {
        if (_.indexOf(a.formatSeparator) < 0)
          return Rg(r, c, _);
        var I = _.split(a.formatSeparator), N = I.shift().trim(), B = I.join(a.formatSeparator).trim();
        return a.format(Rg(r, c, N), B, i);
      };
      this.resetRegExp();
      var A = s && s.missingInterpolationHandler || this.options.missingInterpolationHandler;
      for (l = 0; o = this.regexpUnescape.exec(t); ) {
        if (u = b(o[1].trim()), u === void 0)
          if (typeof A == "function") {
            var g = A(t, o, s);
            u = typeof g == "string" ? g : "";
          } else
            this.logger.warn("missed to pass in variable ".concat(o[1], " for interpolating ").concat(t)), u = "";
        else
          typeof u != "string" && !this.useRawValueToEscape && (u = op(u));
        if (t = t.replace(o[0], p(u)), this.regexpUnescape.lastIndex = 0, l++, l >= this.maxReplaces)
          break;
      }
      for (l = 0; o = this.regexp.exec(t); ) {
        if (u = b(o[1].trim()), u === void 0)
          if (typeof A == "function") {
            var w = A(t, o, s);
            u = typeof w == "string" ? w : "";
          } else
            this.logger.warn("missed to pass in variable ".concat(o[1], " for interpolating ").concat(t)), u = "";
        else
          typeof u != "string" && !this.useRawValueToEscape && (u = op(u));
        if (u = this.escapeValue ? p(this.escape(u)) : p(u), t = t.replace(o[0], u), this.regexp.lastIndex = 0, l++, l >= this.maxReplaces)
          break;
      }
      return t;
    }
  }, {
    key: "nest",
    value: function(t, r) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, s, a, o = Fn({}, i);
      o.applyPostProcessor = !1, delete o.defaultValue;
      function u(l, c) {
        if (l.indexOf(",") < 0)
          return l;
        var p = l.split(",");
        l = p.shift();
        var b = p.join(",");
        b = this.interpolate(b, o), b = b.replace(/'/g, '"');
        try {
          o = JSON.parse(b), c && (o = Fn({}, c, o));
        } catch (A) {
          this.logger.error("failed parsing options string in nesting for key ".concat(l), A);
        }
        return delete o.defaultValue, l;
      }
      for (; s = this.nestingRegexp.exec(t); ) {
        if (a = r(u.call(this, s[1].trim(), o), o), a && s[0] === t && typeof a != "string")
          return a;
        typeof a != "string" && (a = op(a)), a || (this.logger.warn("missed to resolve ".concat(s[1], " for nesting ").concat(t)), a = ""), t = t.replace(s[0], a), this.regexp.lastIndex = 0;
      }
      return t;
    }
  }]), n;
}();
function U4(n, e) {
  for (var t = n.indexOf(e); t !== -1; )
    n.splice(t, 1), t = n.indexOf(e);
}
var V4 = /* @__PURE__ */ function(n) {
  Qd(e, n);
  function e(t, r, i) {
    var s, a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    return Gi(this, e), s = zu(this, wo(e).call(this)), As.call(ma(s)), s.backend = t, s.store = r, s.services = i, s.languageUtils = i.languageUtils, s.options = a, s.logger = Ai.create("backendConnector"), s.state = {}, s.queue = [], s.backend && s.backend.init && s.backend.init(i, a.backend, a), s;
  }
  return Wi(e, [{
    key: "queueLoad",
    value: function(r, i, s, a) {
      var o = this, u = [], l = [], c = [], p = [];
      return r.forEach(function(b) {
        var A = !0;
        i.forEach(function(g) {
          var w = "".concat(b, "|").concat(g);
          !s.reload && o.store.hasResourceBundle(b, g) ? o.state[w] = 2 : o.state[w] < 0 || (o.state[w] === 1 ? l.indexOf(w) < 0 && l.push(w) : (o.state[w] = 1, A = !1, l.indexOf(w) < 0 && l.push(w), u.indexOf(w) < 0 && u.push(w), p.indexOf(g) < 0 && p.push(g)));
        }), A || c.push(b);
      }), (u.length || l.length) && this.queue.push({
        pending: l,
        loaded: {},
        errors: [],
        callback: a
      }), {
        toLoad: u,
        pending: l,
        toLoadLanguages: c,
        toLoadNamespaces: p
      };
    }
  }, {
    key: "loaded",
    value: function(r, i, s) {
      var a = r.split("|"), o = _g(a, 2), u = o[0], l = o[1];
      i && this.emit("failedLoading", u, l, i), s && this.store.addResourceBundle(u, l, s), this.state[r] = i ? -1 : 2;
      var c = {};
      this.queue.forEach(function(p) {
        P4(p.loaded, [u], l), U4(p.pending, r), i && p.errors.push(i), p.pending.length === 0 && !p.done && (Object.keys(p.loaded).forEach(function(b) {
          c[b] || (c[b] = []), p.loaded[b].length && p.loaded[b].forEach(function(A) {
            c[b].indexOf(A) < 0 && c[b].push(A);
          });
        }), p.done = !0, p.errors.length ? p.callback(p.errors) : p.callback());
      }), this.emit("loaded", c), this.queue = this.queue.filter(function(p) {
        return !p.done;
      });
    }
  }, {
    key: "read",
    value: function(r, i, s) {
      var a = this, o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, u = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 250, l = arguments.length > 5 ? arguments[5] : void 0;
      return r.length ? this.backend[s](r, i, function(c, p) {
        if (c && p && o < 5) {
          setTimeout(function() {
            a.read.call(a, r, i, s, o + 1, u * 2, l);
          }, u);
          return;
        }
        l(c, p);
      }) : l(null, {});
    }
  }, {
    key: "prepareLoading",
    value: function(r, i) {
      var s = this, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, o = arguments.length > 3 ? arguments[3] : void 0;
      if (!this.backend)
        return this.logger.warn("No backend was added via i18next.use. Will not load resources."), o && o();
      typeof r == "string" && (r = this.languageUtils.toResolveHierarchy(r)), typeof i == "string" && (i = [i]);
      var u = this.queueLoad(r, i, a, o);
      if (!u.toLoad.length)
        return u.pending.length || o(), null;
      u.toLoad.forEach(function(l) {
        s.loadOne(l);
      });
    }
  }, {
    key: "load",
    value: function(r, i, s) {
      this.prepareLoading(r, i, {}, s);
    }
  }, {
    key: "reload",
    value: function(r, i, s) {
      this.prepareLoading(r, i, {
        reload: !0
      }, s);
    }
  }, {
    key: "loadOne",
    value: function(r) {
      var i = this, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", a = r.split("|"), o = _g(a, 2), u = o[0], l = o[1];
      this.read(u, l, "read", null, null, function(c, p) {
        c && i.logger.warn("".concat(s, "loading namespace ").concat(l, " for language ").concat(u, " failed"), c), !c && p && i.logger.log("".concat(s, "loaded namespace ").concat(l, " for language ").concat(u), p), i.loaded(r, c, p);
      });
    }
  }, {
    key: "saveMissing",
    value: function(r, i, s, a, o) {
      var u = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(i)) {
        this.logger.warn('did not save key "'.concat(s, '" for namespace "').concat(i, '" as the namespace was not yet loaded'), "This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
        return;
      }
      this.backend && this.backend.create && this.backend.create(
        r,
        i,
        s,
        a,
        null,
        Fn({}, u, {
          isUpdate: o
        })
      ), !(!r || !r[0]) && this.store.addResource(r[0], i, s, a);
    }
  }]), e;
}(As);
function j4() {
  return {
    debug: !1,
    initImmediate: !0,
    ns: ["translation"],
    defaultNS: ["translation"],
    fallbackLng: ["dev"],
    fallbackNS: !1,
    whitelist: !1,
    nonExplicitWhitelist: !1,
    load: "all",
    preload: !1,
    simplifyPluralSuffix: !0,
    keySeparator: ".",
    nsSeparator: ":",
    pluralSeparator: "_",
    contextSeparator: "_",
    partialBundledLanguages: !1,
    saveMissing: !1,
    updateMissing: !1,
    saveMissingTo: "fallback",
    saveMissingPlurals: !0,
    missingKeyHandler: !1,
    missingInterpolationHandler: !1,
    postProcess: !1,
    postProcessPassResolved: !1,
    returnNull: !0,
    returnEmptyString: !0,
    returnObjects: !1,
    joinArrays: !1,
    returnedObjectHandler: !1,
    parseMissingKeyHandler: !1,
    appendNamespaceToMissingKey: !1,
    appendNamespaceToCIMode: !1,
    overloadTranslationOptionHandler: function(e) {
      var t = {};
      if (bs(e[1]) === "object" && (t = e[1]), typeof e[1] == "string" && (t.defaultValue = e[1]), typeof e[2] == "string" && (t.tDescription = e[2]), bs(e[2]) === "object" || bs(e[3]) === "object") {
        var r = e[3] || e[2];
        Object.keys(r).forEach(function(i) {
          t[i] = r[i];
        });
      }
      return t;
    },
    interpolation: {
      escapeValue: !0,
      format: function(e, t, r) {
        return e;
      },
      prefix: "{{",
      suffix: "}}",
      formatSeparator: ",",
      unescapePrefix: "-",
      nestingPrefix: "$t(",
      nestingSuffix: ")",
      maxReplaces: 1e3
    }
  };
}
function Og(n) {
  return typeof n.ns == "string" && (n.ns = [n.ns]), typeof n.fallbackLng == "string" && (n.fallbackLng = [n.fallbackLng]), typeof n.fallbackNS == "string" && (n.fallbackNS = [n.fallbackNS]), n.whitelist && n.whitelist.indexOf("cimode") < 0 && (n.whitelist = n.whitelist.concat(["cimode"])), n;
}
function Xl() {
}
var G4 = /* @__PURE__ */ function(n) {
  Qd(e, n);
  function e() {
    var t, r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0;
    if (Gi(this, e), t = zu(this, wo(e).call(this)), As.call(ma(t)), t.options = Og(r), t.services = {}, t.logger = Ai, t.modules = {
      external: []
    }, i && !t.isInitialized && !r.isClone) {
      if (!t.options.initImmediate)
        return t.init(r, i), zu(t, ma(t));
      setTimeout(function() {
        t.init(r, i);
      }, 0);
    }
    return t;
  }
  return Wi(e, [{
    key: "init",
    value: function() {
      var r = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, s = arguments.length > 1 ? arguments[1] : void 0;
      typeof i == "function" && (s = i, i = {}), this.options = Fn({}, j4(), this.options, Og(i)), this.format = this.options.interpolation.format, s || (s = Xl);
      function a(b) {
        return b ? typeof b == "function" ? new b() : b : null;
      }
      if (!this.options.isClone) {
        this.modules.logger ? Ai.init(a(this.modules.logger), this.options) : Ai.init(null, this.options);
        var o = new D4(this.options);
        this.store = new k4(this.options.resources, this.options);
        var u = this.services;
        u.logger = Ai, u.resourceStore = this.store, u.languageUtils = o, u.pluralResolver = new L4(o, {
          prepend: this.options.pluralSeparator,
          compatibilityJSON: this.options.compatibilityJSON,
          simplifyPluralSuffix: this.options.simplifyPluralSuffix
        }), u.interpolator = new $4(this.options), u.utils = {
          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
        }, u.backendConnector = new V4(a(this.modules.backend), u.resourceStore, u, this.options), u.backendConnector.on("*", function(b) {
          for (var A = arguments.length, g = new Array(A > 1 ? A - 1 : 0), w = 1; w < A; w++)
            g[w - 1] = arguments[w];
          r.emit.apply(r, [b].concat(g));
        }), this.modules.languageDetector && (u.languageDetector = a(this.modules.languageDetector), u.languageDetector.init(u, this.options.detection, this.options)), this.modules.i18nFormat && (u.i18nFormat = a(this.modules.i18nFormat), u.i18nFormat.init && u.i18nFormat.init(this)), this.translator = new Pg(this.services, this.options), this.translator.on("*", function(b) {
          for (var A = arguments.length, g = new Array(A > 1 ? A - 1 : 0), w = 1; w < A; w++)
            g[w - 1] = arguments[w];
          r.emit.apply(r, [b].concat(g));
        }), this.modules.external.forEach(function(b) {
          b.init && b.init(r);
        });
      }
      var l = ["getResource", "addResource", "addResources", "addResourceBundle", "removeResourceBundle", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"];
      l.forEach(function(b) {
        r[b] = function() {
          var A;
          return (A = r.store)[b].apply(A, arguments);
        };
      });
      var c = tu(), p = function() {
        r.changeLanguage(r.options.lng, function(A, g) {
          r.isInitialized = !0, r.logger.log("initialized", r.options), r.emit("initialized", r.options), c.resolve(g), s(A, g);
        });
      };
      return this.options.resources || !this.options.initImmediate ? p() : setTimeout(p, 0), c;
    }
  }, {
    key: "loadResources",
    value: function() {
      var r = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Xl;
      if (!this.options.resources || this.options.partialBundledLanguages) {
        if (this.language && this.language.toLowerCase() === "cimode")
          return i();
        var s = [], a = function(l) {
          if (!!l) {
            var c = r.services.languageUtils.toResolveHierarchy(l);
            c.forEach(function(p) {
              s.indexOf(p) < 0 && s.push(p);
            });
          }
        };
        if (this.language)
          a(this.language);
        else {
          var o = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
          o.forEach(function(u) {
            return a(u);
          });
        }
        this.options.preload && this.options.preload.forEach(function(u) {
          return a(u);
        }), this.services.backendConnector.load(s, this.options.ns, i);
      } else
        i(null);
    }
  }, {
    key: "reloadResources",
    value: function(r, i, s) {
      var a = tu();
      return r || (r = this.languages), i || (i = this.options.ns), s || (s = Xl), this.services.backendConnector.reload(r, i, function(o) {
        a.resolve(), s(o);
      }), a;
    }
  }, {
    key: "use",
    value: function(r) {
      return r.type === "backend" && (this.modules.backend = r), (r.type === "logger" || r.log && r.warn && r.error) && (this.modules.logger = r), r.type === "languageDetector" && (this.modules.languageDetector = r), r.type === "i18nFormat" && (this.modules.i18nFormat = r), r.type === "postProcessor" && Kx.addPostProcessor(r), r.type === "3rdParty" && this.modules.external.push(r), this;
    }
  }, {
    key: "changeLanguage",
    value: function(r, i) {
      var s = this, a = tu();
      this.emit("languageChanging", r);
      var o = function(c, p) {
        s.translator.changeLanguage(p), p && (s.emit("languageChanged", p), s.logger.log("languageChanged", p)), a.resolve(function() {
          return s.t.apply(s, arguments);
        }), i && i(c, function() {
          return s.t.apply(s, arguments);
        });
      }, u = function(c) {
        c && (s.language = c, s.languages = s.services.languageUtils.toResolveHierarchy(c), s.translator.language || s.translator.changeLanguage(c), s.services.languageDetector && s.services.languageDetector.cacheUserLanguage(c)), s.loadResources(function(p) {
          o(p, c);
        });
      };
      return !r && this.services.languageDetector && !this.services.languageDetector.async ? u(this.services.languageDetector.detect()) : !r && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect(u) : u(r), a;
    }
  }, {
    key: "getFixedT",
    value: function(r, i) {
      var s = this, a = function o(u, l) {
        var c;
        if (bs(l) !== "object") {
          for (var p = arguments.length, b = new Array(p > 2 ? p - 2 : 0), A = 2; A < p; A++)
            b[A - 2] = arguments[A];
          c = s.options.overloadTranslationOptionHandler([u, l].concat(b));
        } else
          c = Fn({}, l);
        return c.lng = c.lng || o.lng, c.lngs = c.lngs || o.lngs, c.ns = c.ns || o.ns, s.t(u, c);
      };
      return typeof r == "string" ? a.lng = r : a.lngs = r, a.ns = i, a;
    }
  }, {
    key: "t",
    value: function() {
      var r;
      return this.translator && (r = this.translator).translate.apply(r, arguments);
    }
  }, {
    key: "exists",
    value: function() {
      var r;
      return this.translator && (r = this.translator).exists.apply(r, arguments);
    }
  }, {
    key: "setDefaultNamespace",
    value: function(r) {
      this.options.defaultNS = r;
    }
  }, {
    key: "hasLoadedNamespace",
    value: function(r) {
      var i = this;
      if (!this.isInitialized)
        return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1;
      if (!this.languages || !this.languages.length)
        return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1;
      var s = this.languages[0], a = this.options ? this.options.fallbackLng : !1, o = this.languages[this.languages.length - 1];
      if (s.toLowerCase() === "cimode")
        return !0;
      var u = function(c, p) {
        var b = i.services.backendConnector.state["".concat(c, "|").concat(p)];
        return b === -1 || b === 2;
      };
      return !!(this.hasResourceBundle(s, r) || !this.services.backendConnector.backend || u(s, r) && (!a || u(o, r)));
    }
  }, {
    key: "loadNamespaces",
    value: function(r, i) {
      var s = this, a = tu();
      return this.options.ns ? (typeof r == "string" && (r = [r]), r.forEach(function(o) {
        s.options.ns.indexOf(o) < 0 && s.options.ns.push(o);
      }), this.loadResources(function(o) {
        a.resolve(), i && i(o);
      }), a) : (i && i(), Promise.resolve());
    }
  }, {
    key: "loadLanguages",
    value: function(r, i) {
      var s = tu();
      typeof r == "string" && (r = [r]);
      var a = this.options.preload || [], o = r.filter(function(u) {
        return a.indexOf(u) < 0;
      });
      return o.length ? (this.options.preload = a.concat(o), this.loadResources(function(u) {
        s.resolve(), i && i(u);
      }), s) : (i && i(), Promise.resolve());
    }
  }, {
    key: "dir",
    value: function(r) {
      if (r || (r = this.languages && this.languages.length > 0 ? this.languages[0] : this.language), !r)
        return "rtl";
      var i = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam"];
      return i.indexOf(this.services.languageUtils.getLanguagePartFromCode(r)) >= 0 ? "rtl" : "ltr";
    }
  }, {
    key: "createInstance",
    value: function() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0;
      return new e(r, i);
    }
  }, {
    key: "cloneInstance",
    value: function() {
      var r = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Xl, a = Fn({}, this.options, i, {
        isClone: !0
      }), o = new e(a), u = ["store", "services", "language"];
      return u.forEach(function(l) {
        o[l] = r[l];
      }), o.translator = new Pg(o.services, o.options), o.translator.on("*", function(l) {
        for (var c = arguments.length, p = new Array(c > 1 ? c - 1 : 0), b = 1; b < c; b++)
          p[b - 1] = arguments[b];
        o.emit.apply(o, [l].concat(p));
      }), o.init(a, s), o.translator.options = o.options, o;
    }
  }]), e;
}(As);
new G4();
function Hn(n, e, t, r) {
  var i = arguments.length, s = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, a;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    s = Reflect.decorate(n, e, t, r);
  else
    for (var o = n.length - 1; o >= 0; o--)
      (a = n[o]) && (s = (i < 3 ? a(s) : i > 3 ? a(e, t, s) : a(e, t)) || s);
  return i > 3 && s && Object.defineProperty(e, t, s), s;
}
function ds(n, e) {
  return function(t, r) {
    e(t, r, n);
  };
}
var Ig;
(function(n) {
  n.I18N_EA_CHANNEL = "i18n:locale:changed", n.I18N_SIGNAL = "aurelia-translation-signal", n.RT_SIGNAL = "aurelia-relativetime-signal";
})(Ig || (Ig = {}));
var kg;
(function(n) {
  n.translationValueConverterName = "t", n.dateFormatValueConverterName = "df", n.numberFormatValueConverterName = "nf", n.relativeTimeValueConverterName = "rt";
})(kg || (kg = {}));
function W0(n, e) {
  const t = e.ast.expression;
  if (!(t instanceof Lu)) {
    const r = new Lu(t, n, e.ast.args);
    e.ast.expression = r;
  }
}
let Dg = class {
  bind(e, t) {
    W0("df", t);
  }
};
Dg = Hn([Wn("df")], Dg);
const W4 = he.createInterface("I18nInitOptions"), z4 = he.createInterface("I18nextWrapper");
var Bg;
(function(n) {
  n[n.Second = 1e3] = "Second", n[n.Minute = 6e4] = "Minute", n[n.Hour = 36e5] = "Hour", n[n.Day = 864e5] = "Day", n[n.Week = 6048e5] = "Week", n[n.Month = 2592e6] = "Month", n[n.Year = 31536e6] = "Year";
})(Bg || (Bg = {}));
class H4 {
  constructor(e) {
    this.value = void 0;
    const t = /\[([a-z\-, ]*)\]/gi;
    this.attributes = [];
    const r = t.exec(e);
    r && (e = e.replace(r[0], ""), this.attributes = r[1].split(",")), this.key = e;
  }
}
const Ba = he.createInterface("I18N");
let Ng = class {
  constructor(e, t, r, i) {
    this.ea = r, this.i = /* @__PURE__ */ new Set(), this.i18next = e.i18next, this.initPromise = this.h(t), this.u = i;
  }
  evaluate(e, t) {
    const r = e.split(";"), i = [];
    for (const s of r) {
      const a = new H4(s), o = a.key, u = this.tr(o, t);
      this.options.skipTranslationOnMissingKey && u === o ? console.warn(`Couldn't find translation for key: ${o}`) : (a.value = u, i.push(a));
    }
    return i;
  }
  tr(e, t) {
    return this.i18next.t(e, t);
  }
  getLocale() {
    return this.i18next.language;
  }
  async setLocale(e) {
    const r = {
      oldLocale: this.getLocale(),
      newLocale: e
    };
    await this.i18next.changeLanguage(e), this.ea.publish("i18n:locale:changed", r), this.i.forEach((i) => i.handleLocaleChange(r)), this.u.dispatchSignal("aurelia-translation-signal");
  }
  createNumberFormat(e, t) {
    return Intl.NumberFormat(t || this.getLocale(), e);
  }
  nf(e, t, r) {
    return this.createNumberFormat(t, r).format(e);
  }
  createDateTimeFormat(e, t) {
    return Intl.DateTimeFormat(t || this.getLocale(), e);
  }
  df(e, t, r) {
    return this.createDateTimeFormat(t, r).format(e);
  }
  uf(e, t) {
    const r = this.nf(3333.3333333333335, void 0, t);
    let i = r[1];
    const s = r[5];
    i === "." && (i = "\\.");
    const a = e.replace(new RegExp(i, "g"), "").replace(/[^\d.,-]/g, "").replace(s, ".");
    return Number(a);
  }
  createRelativeTimeFormat(e, t) {
    return new Intl.RelativeTimeFormat(t || this.getLocale(), e);
  }
  rt(e, t, r) {
    let i = e.getTime() - this.now();
    const s = this.options.rtEpsilon * (i > 0 ? 1 : 0), a = this.createRelativeTimeFormat(t, r);
    let o = i / 31536e6;
    return Math.abs(o + s) >= 1 ? a.format(Math.round(o), "year") : (o = i / 2592e6, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "month") : (o = i / 6048e5, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "week") : (o = i / 864e5, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "day") : (o = i / 36e5, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "hour") : (o = i / 6e4, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "minute") : (i = Math.abs(i) < 1e3 ? 1e3 : i, o = i / 1e3, a.format(Math.round(o), "second")))))));
  }
  subscribeLocaleChange(e) {
    this.i.add(e);
  }
  now() {
    return new Date().getTime();
  }
  async h(e) {
    const t = {
      lng: "en",
      fallbackLng: ["en"],
      debug: !1,
      plugins: [],
      rtEpsilon: 0.01,
      skipTranslationOnMissingKey: !1
    };
    this.options = {
      ...t,
      ...e
    };
    for (const r of this.options.plugins)
      this.i18next.use(r);
    await this.i18next.init(this.options);
  }
};
Ng = Hn([ds(0, z4), ds(1, W4), ds(2, Ud), ds(3, h0)], Ng);
let Fg = class {
  constructor(e) {
    this.i18n = e, this.signals = ["aurelia-translation-signal"];
  }
  toView(e, t, r) {
    if (!e && e !== 0 || typeof e == "string" && e.trim() === "")
      return e;
    if (typeof e == "string") {
      const i = Number(e), s = new Date(Number.isInteger(i) ? i : e);
      if (isNaN(s.getTime()))
        return e;
      e = s;
    }
    return this.i18n.df(e, t, r);
  }
};
Fg = Hn([wl("df"), ds(0, Ba)], Fg);
let Lg = class {
  bind(e, t) {
    W0("nf", t);
  }
};
Lg = Hn([Wn("nf")], Lg);
let $g = class {
  constructor(e) {
    this.i18n = e, this.signals = ["aurelia-translation-signal"];
  }
  toView(e, t, r) {
    return typeof e != "number" ? e : this.i18n.nf(e, t, r);
  }
};
$g = Hn([wl("nf"), ds(0, Ba)], $g);
let Ug = class {
  bind(e, t) {
    W0("rt", t);
  }
};
Ug = Hn([Wn("rt")], Ug);
let Vg = class {
  constructor(e) {
    this.i18n = e, this.signals = ["aurelia-translation-signal", "aurelia-relativetime-signal"];
  }
  toView(e, t, r) {
    return e instanceof Date ? this.i18n.rt(e, t, r) : e;
  }
};
Vg = Hn([wl("rt"), ds(0, Ba)], Vg);
let jg = class {
  bind(e, t) {
    const r = t.ast.expression;
    if (!(r instanceof Lu)) {
      const i = new Lu(r, "t", t.ast.args);
      t.ast.expression = i;
    }
  }
};
jg = Hn([Wn("t")], jg);
const K4 = ["textContent", "innerHTML", "prepend", "append"], q4 = /* @__PURE__ */ new Map([["text", "textContent"], ["html", "innerHTML"]]), Q4 = {
  optional: !0
}, J4 = {
  reusable: !1,
  preempt: !0
};
class ki {
  constructor(e, t, r, i, s) {
    this.isBound = !1, this.T = K4, this.B = null, this.parameter = null, this.boundFn = !1, this.l = t, this.C = e, this.target = s, this.i18n = t.get(Ba), this.p = i, this.I = /* @__PURE__ */ new Set(), this.oL = r, this.i18n.subscribeLocaleChange(this), this.P = i.domWriteQueue;
  }
  static create({ parser: e, observerLocator: t, context: r, controller: i, target: s, instruction: a, platform: o, isParameterContext: u }) {
    const l = this.M({
      observerLocator: t,
      context: r,
      controller: i,
      target: s,
      platform: o
    }), c = typeof a.from == "string" ? e.parse(a.from, 16) : a.from;
    if (u)
      l.useParameter(c);
    else {
      const p = c instanceof n0 ? e.parse(c.value, 1) : void 0;
      l.ast = p || c;
    }
  }
  static M({ observerLocator: e, context: t, controller: r, target: i, platform: s }) {
    let a = r.bindings && r.bindings.find((o) => o instanceof ki && o.target === i);
    return a || (a = new ki(r, t, e, s, i), r.addBinding(a)), a;
  }
  bind(e) {
    if (!this.isBound) {
      if (!this.ast)
        throw new Error("key expression is missing");
      this.s = e, this.A = this.ast instanceof mv, this.L = G(this.ast, e, this, this), this.R(), this.parameter?.bind(e), this.updateTranslations(), this.isBound = !0;
    }
  }
  unbind() {
    !this.isBound || (fr(this.ast, this.s, this), this.parameter?.unbind(), this.I.clear(), this.B !== null && (this.B.cancel(), this.B = null), this.s = void 0, this.obs.clearAll());
  }
  handleChange(e, t) {
    this.obs.version++, this.L = this.A ? G(this.ast, this.s, this, this) : e, this.obs.clear(), this.R(), this.updateTranslations();
  }
  handleLocaleChange() {
    this.updateTranslations();
  }
  useParameter(e) {
    if (this.parameter != null)
      throw new Error("This translation parameter has already been specified.");
    this.parameter = new z0(this, e, () => this.updateTranslations());
  }
  updateTranslations() {
    const e = this.i18n.evaluate(this.L, this.parameter?.value), t = /* @__PURE__ */ Object.create(null), r = [], i = this.B;
    this.I.clear();
    for (const a of e) {
      const o = a.value, u = this.N(a.attributes);
      for (const l of u)
        if (this.O(l))
          t[l] = o;
        else {
          const c = lo.for(this.target, Q4), p = c?.viewModel ? this.oL.getAccessor(c.viewModel, l) : this.oL.getAccessor(this.target, l);
          this.C.state !== 1 && (4 & p.type) > 0 ? r.push(new Y4(p, o, this.target, l)) : p.setValue(o, this.target, l), this.I.add(p);
        }
    }
    let s = !1;
    Object.keys(t).length > 0 && (s = this.C.state !== 1, s || this.V(t)), (r.length > 0 || s) && (this.B = this.P.queueTask(() => {
      this.B = null;
      for (const a of r)
        a.run();
      s && this.V(t);
    }, J4)), i?.cancel();
  }
  N(e) {
    e.length === 0 && (e = this.target.tagName === "IMG" ? ["src"] : ["textContent"]);
    for (const [t, r] of q4) {
      const i = e.findIndex((s) => s === t);
      i > -1 && e.splice(i, 1, r);
    }
    return e;
  }
  O(e) {
    return this.T.includes(e);
  }
  V(e) {
    const t = Uf(this.target.childNodes), r = [], i = "au-i18n";
    for (const a of t)
      Reflect.get(a, i) || r.push(a);
    const s = this._(e, i, r);
    this.target.innerHTML = "";
    for (const a of Uf(s.content.childNodes))
      this.target.appendChild(a);
  }
  _(e, t, r) {
    const i = this.p.document.createElement("template");
    if (this.F(i, e.prepend, t), !this.F(i, e.innerHTML ?? e.textContent, t))
      for (const s of r)
        i.content.append(s);
    return this.F(i, e.append, t), i;
  }
  F(e, t, r) {
    if (t != null) {
      const i = this.p.document.createElement("div");
      i.innerHTML = t;
      for (const s of Uf(i.childNodes))
        Reflect.set(s, r, !0), e.content.append(s);
      return !0;
    }
    return !1;
  }
  R() {
    const e = this.L ?? (this.L = ""), t = typeof e;
    if (t !== "string")
      throw new Error(`Expected the i18n key to be a string, but got ${e} of type ${t}`);
  }
}
Lr(ki);
li(!0)(ki);
ka(ki, () => "updateTranslations");
class Y4 {
  constructor(e, t, r, i) {
    this.accessor = e, this.v = t, this.el = r, this.attr = i;
  }
  run() {
    this.accessor.setValue(this.v, this.el, this.attr);
  }
}
class z0 {
  constructor(e, t, r) {
    this.owner = e, this.ast = t, this.updater = r, this.isBound = !1, this.boundFn = !1, this.oL = e.oL, this.l = e.l;
  }
  handleChange(e, t) {
    !this.isBound || (this.obs.version++, this.value = G(this.ast, this.s, this, this), this.obs.clear(), this.updater());
  }
  bind(e) {
    this.isBound || (this.s = e, Dr(this.ast, e, this), this.value = G(this.ast, e, this, this), this.isBound = !0);
  }
  unbind() {
    !this.isBound || (fr(this.ast, this.s, this), this.s = void 0, this.obs.clearAll());
  }
}
Lr(z0);
li(!0)(z0);
const qx = "tpt", Hu = "t-params.bind";
let Gg = class {
  [Hu](e, t, r) {
    return new mr(e, t, "", Hu);
  }
};
Gg = Hn([Ui({
  pattern: Hu,
  symbols: ""
})], Gg);
class X4 {
  constructor(e, t) {
    this.from = e, this.to = t, this.type = qx, this.mode = 2;
  }
}
let Wg = class {
  constructor() {
    this.type = 0;
  }
  get name() {
    return Hu;
  }
  build(e, t, r) {
    const i = e.attr;
    let s = i.target;
    return e.bindable == null ? s = r.map(e.node, s) ?? Zn(s) : s = e.bindable.property, new X4(t.parse(i.rawValue, 16), s);
  }
};
Wg = Hn([zn(Hu)], Wg);
let zg = class {
  render(e, t, r, i, s, a) {
    ki.create({
      parser: s,
      observerLocator: a,
      context: e.container,
      controller: e,
      target: t,
      instruction: r,
      isParameterContext: !0,
      platform: i
    });
  }
};
zg = Hn([Vt(qx)], zg);
const Z4 = "tt";
let Hg = class {
  render(e, t, r, i, s, a) {
    ki.create({
      parser: s,
      observerLocator: a,
      context: e.container,
      controller: e,
      target: t,
      instruction: r,
      platform: i
    });
  }
};
Hg = Hn([Vt(Z4)], Hg);
const e8 = "tbt";
let Kg = class {
  render(e, t, r, i, s, a) {
    ki.create({
      parser: s,
      observerLocator: a,
      context: e.container,
      controller: e,
      target: t,
      instruction: r,
      platform: i
    });
  }
};
Kg = Hn([Vt(e8)], Kg);
let qg = class {
  constructor(e) {
    this.i18n = e, this.signals = ["aurelia-translation-signal"];
  }
  toView(e, t) {
    return this.i18n.tr(e, t);
  }
};
qg = Hn([wl("t"), ds(0, Ba)], qg);
Array.prototype.sum = function() {
  return this.reduce((n, e) => n + e, 0);
};
const Rl = he.createInterface("CacheService");
class Jd {
  cache = /* @__PURE__ */ new Map();
  setItem(e, t) {
    this.cache.set(e, t);
  }
  getItem(e) {
    return this.cache.get(e);
  }
  static register(e) {
    pe.singleton(Rl, Jd).register(e);
  }
}
const lp = (n, e) => {
  const t = n[e];
  return t ? typeof t == "function" ? t() : Promise.resolve(t) : new Promise((r, i) => {
    (typeof queueMicrotask == "function" ? queueMicrotask : setTimeout)(i.bind(null, new Error("Unknown variable dynamic import: " + e)));
  });
}, Yd = he.createInterface(), t8 = "https://primedao.mypinata.cloud//", Qg = Number({ KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_CHAIN_ID ?? 42220), Jg = { KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_CHAIN_URL ?? "https://forno.celo.org", Yg = { KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_CHAIN ?? "Celo", n8 = { KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_SCAN_LINK ?? "https://explorer.celo.org/{type}/{address}", r8 = Boolean({ KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_TESTING ?? !0);
var os = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Ot(n) {
  var e = n.default;
  if (typeof e == "function") {
    var t = function() {
      return e.apply(this, arguments);
    };
    t.prototype = e.prototype;
  } else
    t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(n).forEach(function(r) {
    var i = Object.getOwnPropertyDescriptor(n, r);
    Object.defineProperty(t, r, i.get ? i : {
      enumerable: !0,
      get: function() {
        return n[r];
      }
    });
  }), t;
}
var Qx = { exports: {} };
const i8 = new Proxy({}, {
  get(n, e) {
    throw new Error(`Module "" has been externalized for browser compatibility. Cannot access ".${e}" in client code.`);
  }
}), s8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: i8
}, Symbol.toStringTag, { value: "Module" })), a8 = /* @__PURE__ */ Ot(s8);
(function(n) {
  (function(e, t) {
    function r(E, d) {
      if (!E)
        throw new Error(d || "Assertion failed");
    }
    function i(E, d) {
      E.super_ = d;
      var y = function() {
      };
      y.prototype = d.prototype, E.prototype = new y(), E.prototype.constructor = E;
    }
    function s(E, d, y) {
      if (s.isBN(E))
        return E;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, E !== null && ((d === "le" || d === "be") && (y = d, d = 10), this._init(E || 0, d || 10, y || "be"));
    }
    typeof e == "object" ? e.exports = s : t.BN = s, s.BN = s, s.wordSize = 26;
    var a;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? a = window.Buffer : a = a8.Buffer;
    } catch {
    }
    s.isBN = function(d) {
      return d instanceof s ? !0 : d !== null && typeof d == "object" && d.constructor.wordSize === s.wordSize && Array.isArray(d.words);
    }, s.max = function(d, y) {
      return d.cmp(y) > 0 ? d : y;
    }, s.min = function(d, y) {
      return d.cmp(y) < 0 ? d : y;
    }, s.prototype._init = function(d, y, x) {
      if (typeof d == "number")
        return this._initNumber(d, y, x);
      if (typeof d == "object")
        return this._initArray(d, y, x);
      y === "hex" && (y = 16), r(y === (y | 0) && y >= 2 && y <= 36), d = d.toString().replace(/\s+/g, "");
      var S = 0;
      d[0] === "-" && (S++, this.negative = 1), S < d.length && (y === 16 ? this._parseHex(d, S, x) : (this._parseBase(d, y, S), x === "le" && this._initArray(this.toArray(), y, x)));
    }, s.prototype._initNumber = function(d, y, x) {
      d < 0 && (this.negative = 1, d = -d), d < 67108864 ? (this.words = [d & 67108863], this.length = 1) : d < 4503599627370496 ? (this.words = [
        d & 67108863,
        d / 67108864 & 67108863
      ], this.length = 2) : (r(d < 9007199254740992), this.words = [
        d & 67108863,
        d / 67108864 & 67108863,
        1
      ], this.length = 3), x === "le" && this._initArray(this.toArray(), y, x);
    }, s.prototype._initArray = function(d, y, x) {
      if (r(typeof d.length == "number"), d.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(d.length / 3), this.words = new Array(this.length);
      for (var S = 0; S < this.length; S++)
        this.words[S] = 0;
      var C, M, P = 0;
      if (x === "be")
        for (S = d.length - 1, C = 0; S >= 0; S -= 3)
          M = d[S] | d[S - 1] << 8 | d[S - 2] << 16, this.words[C] |= M << P & 67108863, this.words[C + 1] = M >>> 26 - P & 67108863, P += 24, P >= 26 && (P -= 26, C++);
      else if (x === "le")
        for (S = 0, C = 0; S < d.length; S += 3)
          M = d[S] | d[S + 1] << 8 | d[S + 2] << 16, this.words[C] |= M << P & 67108863, this.words[C + 1] = M >>> 26 - P & 67108863, P += 24, P >= 26 && (P -= 26, C++);
      return this._strip();
    };
    function o(E, d) {
      var y = E.charCodeAt(d);
      if (y >= 48 && y <= 57)
        return y - 48;
      if (y >= 65 && y <= 70)
        return y - 55;
      if (y >= 97 && y <= 102)
        return y - 87;
      r(!1, "Invalid character in " + E);
    }
    function u(E, d, y) {
      var x = o(E, y);
      return y - 1 >= d && (x |= o(E, y - 1) << 4), x;
    }
    s.prototype._parseHex = function(d, y, x) {
      this.length = Math.ceil((d.length - y) / 6), this.words = new Array(this.length);
      for (var S = 0; S < this.length; S++)
        this.words[S] = 0;
      var C = 0, M = 0, P;
      if (x === "be")
        for (S = d.length - 1; S >= y; S -= 2)
          P = u(d, y, S) << C, this.words[M] |= P & 67108863, C >= 18 ? (C -= 18, M += 1, this.words[M] |= P >>> 26) : C += 8;
      else {
        var m = d.length - y;
        for (S = m % 2 === 0 ? y + 1 : y; S < d.length; S += 2)
          P = u(d, y, S) << C, this.words[M] |= P & 67108863, C >= 18 ? (C -= 18, M += 1, this.words[M] |= P >>> 26) : C += 8;
      }
      this._strip();
    };
    function l(E, d, y, x) {
      for (var S = 0, C = 0, M = Math.min(E.length, y), P = d; P < M; P++) {
        var m = E.charCodeAt(P) - 48;
        S *= x, m >= 49 ? C = m - 49 + 10 : m >= 17 ? C = m - 17 + 10 : C = m, r(m >= 0 && C < x, "Invalid character"), S += C;
      }
      return S;
    }
    s.prototype._parseBase = function(d, y, x) {
      this.words = [0], this.length = 1;
      for (var S = 0, C = 1; C <= 67108863; C *= y)
        S++;
      S--, C = C / y | 0;
      for (var M = d.length - x, P = M % S, m = Math.min(M, M - P) + x, f = 0, v = x; v < m; v += S)
        f = l(d, v, v + S, y), this.imuln(C), this.words[0] + f < 67108864 ? this.words[0] += f : this._iaddn(f);
      if (P !== 0) {
        var k = 1;
        for (f = l(d, v, d.length, y), v = 0; v < P; v++)
          k *= y;
        this.imuln(k), this.words[0] + f < 67108864 ? this.words[0] += f : this._iaddn(f);
      }
      this._strip();
    }, s.prototype.copy = function(d) {
      d.words = new Array(this.length);
      for (var y = 0; y < this.length; y++)
        d.words[y] = this.words[y];
      d.length = this.length, d.negative = this.negative, d.red = this.red;
    };
    function c(E, d) {
      E.words = d.words, E.length = d.length, E.negative = d.negative, E.red = d.red;
    }
    if (s.prototype._move = function(d) {
      c(d, this);
    }, s.prototype.clone = function() {
      var d = new s(null);
      return this.copy(d), d;
    }, s.prototype._expand = function(d) {
      for (; this.length < d; )
        this.words[this.length++] = 0;
      return this;
    }, s.prototype._strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, s.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function")
      try {
        s.prototype[Symbol.for("nodejs.util.inspect.custom")] = p;
      } catch {
        s.prototype.inspect = p;
      }
    else
      s.prototype.inspect = p;
    function p() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var b = [
      "",
      "0",
      "00",
      "000",
      "0000",
      "00000",
      "000000",
      "0000000",
      "00000000",
      "000000000",
      "0000000000",
      "00000000000",
      "000000000000",
      "0000000000000",
      "00000000000000",
      "000000000000000",
      "0000000000000000",
      "00000000000000000",
      "000000000000000000",
      "0000000000000000000",
      "00000000000000000000",
      "000000000000000000000",
      "0000000000000000000000",
      "00000000000000000000000",
      "000000000000000000000000",
      "0000000000000000000000000"
    ], A = [
      0,
      0,
      25,
      16,
      12,
      11,
      10,
      9,
      8,
      8,
      7,
      7,
      7,
      7,
      6,
      6,
      6,
      6,
      6,
      6,
      6,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ], g = [
      0,
      0,
      33554432,
      43046721,
      16777216,
      48828125,
      60466176,
      40353607,
      16777216,
      43046721,
      1e7,
      19487171,
      35831808,
      62748517,
      7529536,
      11390625,
      16777216,
      24137569,
      34012224,
      47045881,
      64e6,
      4084101,
      5153632,
      6436343,
      7962624,
      9765625,
      11881376,
      14348907,
      17210368,
      20511149,
      243e5,
      28629151,
      33554432,
      39135393,
      45435424,
      52521875,
      60466176
    ];
    s.prototype.toString = function(d, y) {
      d = d || 10, y = y | 0 || 1;
      var x;
      if (d === 16 || d === "hex") {
        x = "";
        for (var S = 0, C = 0, M = 0; M < this.length; M++) {
          var P = this.words[M], m = ((P << S | C) & 16777215).toString(16);
          C = P >>> 24 - S & 16777215, S += 2, S >= 26 && (S -= 26, M--), C !== 0 || M !== this.length - 1 ? x = b[6 - m.length] + m + x : x = m + x;
        }
        for (C !== 0 && (x = C.toString(16) + x); x.length % y !== 0; )
          x = "0" + x;
        return this.negative !== 0 && (x = "-" + x), x;
      }
      if (d === (d | 0) && d >= 2 && d <= 36) {
        var f = A[d], v = g[d];
        x = "";
        var k = this.clone();
        for (k.negative = 0; !k.isZero(); ) {
          var h = k.modrn(v).toString(d);
          k = k.idivn(v), k.isZero() ? x = h + x : x = b[f - h.length] + h + x;
        }
        for (this.isZero() && (x = "0" + x); x.length % y !== 0; )
          x = "0" + x;
        return this.negative !== 0 && (x = "-" + x), x;
      }
      r(!1, "Base should be between 2 and 36");
    }, s.prototype.toNumber = function() {
      var d = this.words[0];
      return this.length === 2 ? d += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? d += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(!1, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -d : d;
    }, s.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, a && (s.prototype.toBuffer = function(d, y) {
      return this.toArrayLike(a, d, y);
    }), s.prototype.toArray = function(d, y) {
      return this.toArrayLike(Array, d, y);
    };
    var w = function(d, y) {
      return d.allocUnsafe ? d.allocUnsafe(y) : new d(y);
    };
    s.prototype.toArrayLike = function(d, y, x) {
      this._strip();
      var S = this.byteLength(), C = x || Math.max(1, S);
      r(S <= C, "byte array longer than desired length"), r(C > 0, "Requested array length <= 0");
      var M = w(d, C), P = y === "le" ? "LE" : "BE";
      return this["_toArrayLike" + P](M, S), M;
    }, s.prototype._toArrayLikeLE = function(d, y) {
      for (var x = 0, S = 0, C = 0, M = 0; C < this.length; C++) {
        var P = this.words[C] << M | S;
        d[x++] = P & 255, x < d.length && (d[x++] = P >> 8 & 255), x < d.length && (d[x++] = P >> 16 & 255), M === 6 ? (x < d.length && (d[x++] = P >> 24 & 255), S = 0, M = 0) : (S = P >>> 24, M += 2);
      }
      if (x < d.length)
        for (d[x++] = S; x < d.length; )
          d[x++] = 0;
    }, s.prototype._toArrayLikeBE = function(d, y) {
      for (var x = d.length - 1, S = 0, C = 0, M = 0; C < this.length; C++) {
        var P = this.words[C] << M | S;
        d[x--] = P & 255, x >= 0 && (d[x--] = P >> 8 & 255), x >= 0 && (d[x--] = P >> 16 & 255), M === 6 ? (x >= 0 && (d[x--] = P >> 24 & 255), S = 0, M = 0) : (S = P >>> 24, M += 2);
      }
      if (x >= 0)
        for (d[x--] = S; x >= 0; )
          d[x--] = 0;
    }, Math.clz32 ? s.prototype._countBits = function(d) {
      return 32 - Math.clz32(d);
    } : s.prototype._countBits = function(d) {
      var y = d, x = 0;
      return y >= 4096 && (x += 13, y >>>= 13), y >= 64 && (x += 7, y >>>= 7), y >= 8 && (x += 4, y >>>= 4), y >= 2 && (x += 2, y >>>= 2), x + y;
    }, s.prototype._zeroBits = function(d) {
      if (d === 0)
        return 26;
      var y = d, x = 0;
      return (y & 8191) === 0 && (x += 13, y >>>= 13), (y & 127) === 0 && (x += 7, y >>>= 7), (y & 15) === 0 && (x += 4, y >>>= 4), (y & 3) === 0 && (x += 2, y >>>= 2), (y & 1) === 0 && x++, x;
    }, s.prototype.bitLength = function() {
      var d = this.words[this.length - 1], y = this._countBits(d);
      return (this.length - 1) * 26 + y;
    };
    function T(E) {
      for (var d = new Array(E.bitLength()), y = 0; y < d.length; y++) {
        var x = y / 26 | 0, S = y % 26;
        d[y] = E.words[x] >>> S & 1;
      }
      return d;
    }
    s.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var d = 0, y = 0; y < this.length; y++) {
        var x = this._zeroBits(this.words[y]);
        if (d += x, x !== 26)
          break;
      }
      return d;
    }, s.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, s.prototype.toTwos = function(d) {
      return this.negative !== 0 ? this.abs().inotn(d).iaddn(1) : this.clone();
    }, s.prototype.fromTwos = function(d) {
      return this.testn(d - 1) ? this.notn(d).iaddn(1).ineg() : this.clone();
    }, s.prototype.isNeg = function() {
      return this.negative !== 0;
    }, s.prototype.neg = function() {
      return this.clone().ineg();
    }, s.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, s.prototype.iuor = function(d) {
      for (; this.length < d.length; )
        this.words[this.length++] = 0;
      for (var y = 0; y < d.length; y++)
        this.words[y] = this.words[y] | d.words[y];
      return this._strip();
    }, s.prototype.ior = function(d) {
      return r((this.negative | d.negative) === 0), this.iuor(d);
    }, s.prototype.or = function(d) {
      return this.length > d.length ? this.clone().ior(d) : d.clone().ior(this);
    }, s.prototype.uor = function(d) {
      return this.length > d.length ? this.clone().iuor(d) : d.clone().iuor(this);
    }, s.prototype.iuand = function(d) {
      var y;
      this.length > d.length ? y = d : y = this;
      for (var x = 0; x < y.length; x++)
        this.words[x] = this.words[x] & d.words[x];
      return this.length = y.length, this._strip();
    }, s.prototype.iand = function(d) {
      return r((this.negative | d.negative) === 0), this.iuand(d);
    }, s.prototype.and = function(d) {
      return this.length > d.length ? this.clone().iand(d) : d.clone().iand(this);
    }, s.prototype.uand = function(d) {
      return this.length > d.length ? this.clone().iuand(d) : d.clone().iuand(this);
    }, s.prototype.iuxor = function(d) {
      var y, x;
      this.length > d.length ? (y = this, x = d) : (y = d, x = this);
      for (var S = 0; S < x.length; S++)
        this.words[S] = y.words[S] ^ x.words[S];
      if (this !== y)
        for (; S < y.length; S++)
          this.words[S] = y.words[S];
      return this.length = y.length, this._strip();
    }, s.prototype.ixor = function(d) {
      return r((this.negative | d.negative) === 0), this.iuxor(d);
    }, s.prototype.xor = function(d) {
      return this.length > d.length ? this.clone().ixor(d) : d.clone().ixor(this);
    }, s.prototype.uxor = function(d) {
      return this.length > d.length ? this.clone().iuxor(d) : d.clone().iuxor(this);
    }, s.prototype.inotn = function(d) {
      r(typeof d == "number" && d >= 0);
      var y = Math.ceil(d / 26) | 0, x = d % 26;
      this._expand(y), x > 0 && y--;
      for (var S = 0; S < y; S++)
        this.words[S] = ~this.words[S] & 67108863;
      return x > 0 && (this.words[S] = ~this.words[S] & 67108863 >> 26 - x), this._strip();
    }, s.prototype.notn = function(d) {
      return this.clone().inotn(d);
    }, s.prototype.setn = function(d, y) {
      r(typeof d == "number" && d >= 0);
      var x = d / 26 | 0, S = d % 26;
      return this._expand(x + 1), y ? this.words[x] = this.words[x] | 1 << S : this.words[x] = this.words[x] & ~(1 << S), this._strip();
    }, s.prototype.iadd = function(d) {
      var y;
      if (this.negative !== 0 && d.negative === 0)
        return this.negative = 0, y = this.isub(d), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && d.negative !== 0)
        return d.negative = 0, y = this.isub(d), d.negative = 1, y._normSign();
      var x, S;
      this.length > d.length ? (x = this, S = d) : (x = d, S = this);
      for (var C = 0, M = 0; M < S.length; M++)
        y = (x.words[M] | 0) + (S.words[M] | 0) + C, this.words[M] = y & 67108863, C = y >>> 26;
      for (; C !== 0 && M < x.length; M++)
        y = (x.words[M] | 0) + C, this.words[M] = y & 67108863, C = y >>> 26;
      if (this.length = x.length, C !== 0)
        this.words[this.length] = C, this.length++;
      else if (x !== this)
        for (; M < x.length; M++)
          this.words[M] = x.words[M];
      return this;
    }, s.prototype.add = function(d) {
      var y;
      return d.negative !== 0 && this.negative === 0 ? (d.negative = 0, y = this.sub(d), d.negative ^= 1, y) : d.negative === 0 && this.negative !== 0 ? (this.negative = 0, y = d.sub(this), this.negative = 1, y) : this.length > d.length ? this.clone().iadd(d) : d.clone().iadd(this);
    }, s.prototype.isub = function(d) {
      if (d.negative !== 0) {
        d.negative = 0;
        var y = this.iadd(d);
        return d.negative = 1, y._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(d), this.negative = 1, this._normSign();
      var x = this.cmp(d);
      if (x === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var S, C;
      x > 0 ? (S = this, C = d) : (S = d, C = this);
      for (var M = 0, P = 0; P < C.length; P++)
        y = (S.words[P] | 0) - (C.words[P] | 0) + M, M = y >> 26, this.words[P] = y & 67108863;
      for (; M !== 0 && P < S.length; P++)
        y = (S.words[P] | 0) + M, M = y >> 26, this.words[P] = y & 67108863;
      if (M === 0 && P < S.length && S !== this)
        for (; P < S.length; P++)
          this.words[P] = S.words[P];
      return this.length = Math.max(this.length, P), S !== this && (this.negative = 1), this._strip();
    }, s.prototype.sub = function(d) {
      return this.clone().isub(d);
    };
    function _(E, d, y) {
      y.negative = d.negative ^ E.negative;
      var x = E.length + d.length | 0;
      y.length = x, x = x - 1 | 0;
      var S = E.words[0] | 0, C = d.words[0] | 0, M = S * C, P = M & 67108863, m = M / 67108864 | 0;
      y.words[0] = P;
      for (var f = 1; f < x; f++) {
        for (var v = m >>> 26, k = m & 67108863, h = Math.min(f, d.length - 1), R = Math.max(0, f - E.length + 1); R <= h; R++) {
          var L = f - R | 0;
          S = E.words[L] | 0, C = d.words[R] | 0, M = S * C + k, v += M / 67108864 | 0, k = M & 67108863;
        }
        y.words[f] = k | 0, m = v | 0;
      }
      return m !== 0 ? y.words[f] = m | 0 : y.length--, y._strip();
    }
    var I = function(d, y, x) {
      var S = d.words, C = y.words, M = x.words, P = 0, m, f, v, k = S[0] | 0, h = k & 8191, R = k >>> 13, L = S[1] | 0, F = L & 8191, U = L >>> 13, te = S[2] | 0, q = te & 8191, Y = te >>> 13, Tt = S[3] | 0, ne = Tt & 8191, de = Tt >>> 13, Ns = S[4] | 0, je = Ns & 8191, Ge = Ns >>> 13, Fs = S[5] | 0, We = Fs & 8191, ze = Fs >>> 13, Ls = S[6] | 0, He = Ls & 8191, Ke = Ls >>> 13, $s = S[7] | 0, qe = $s & 8191, Qe = $s >>> 13, Us = S[8] | 0, Je = Us & 8191, Ye = Us >>> 13, Vs = S[9] | 0, Xe = Vs & 8191, Ze = Vs >>> 13, js = C[0] | 0, et = js & 8191, tt = js >>> 13, Gs = C[1] | 0, nt = Gs & 8191, rt = Gs >>> 13, Ws = C[2] | 0, it = Ws & 8191, st = Ws >>> 13, zs = C[3] | 0, at = zs & 8191, ot = zs >>> 13, Hs = C[4] | 0, ut = Hs & 8191, lt = Hs >>> 13, Ks = C[5] | 0, ct = Ks & 8191, dt = Ks >>> 13, qs = C[6] | 0, ft = qs & 8191, pt = qs >>> 13, Qs = C[7] | 0, ht = Qs & 8191, yt = Qs >>> 13, Js = C[8] | 0, mt = Js & 8191, bt = Js >>> 13, Ys = C[9] | 0, gt = Ys & 8191, vt = Ys >>> 13;
      x.negative = d.negative ^ y.negative, x.length = 19, m = Math.imul(h, et), f = Math.imul(h, tt), f = f + Math.imul(R, et) | 0, v = Math.imul(R, tt);
      var qi = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (qi >>> 26) | 0, qi &= 67108863, m = Math.imul(F, et), f = Math.imul(F, tt), f = f + Math.imul(U, et) | 0, v = Math.imul(U, tt), m = m + Math.imul(h, nt) | 0, f = f + Math.imul(h, rt) | 0, f = f + Math.imul(R, nt) | 0, v = v + Math.imul(R, rt) | 0;
      var Qi = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Qi >>> 26) | 0, Qi &= 67108863, m = Math.imul(q, et), f = Math.imul(q, tt), f = f + Math.imul(Y, et) | 0, v = Math.imul(Y, tt), m = m + Math.imul(F, nt) | 0, f = f + Math.imul(F, rt) | 0, f = f + Math.imul(U, nt) | 0, v = v + Math.imul(U, rt) | 0, m = m + Math.imul(h, it) | 0, f = f + Math.imul(h, st) | 0, f = f + Math.imul(R, it) | 0, v = v + Math.imul(R, st) | 0;
      var Ji = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Ji >>> 26) | 0, Ji &= 67108863, m = Math.imul(ne, et), f = Math.imul(ne, tt), f = f + Math.imul(de, et) | 0, v = Math.imul(de, tt), m = m + Math.imul(q, nt) | 0, f = f + Math.imul(q, rt) | 0, f = f + Math.imul(Y, nt) | 0, v = v + Math.imul(Y, rt) | 0, m = m + Math.imul(F, it) | 0, f = f + Math.imul(F, st) | 0, f = f + Math.imul(U, it) | 0, v = v + Math.imul(U, st) | 0, m = m + Math.imul(h, at) | 0, f = f + Math.imul(h, ot) | 0, f = f + Math.imul(R, at) | 0, v = v + Math.imul(R, ot) | 0;
      var Yi = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Yi >>> 26) | 0, Yi &= 67108863, m = Math.imul(je, et), f = Math.imul(je, tt), f = f + Math.imul(Ge, et) | 0, v = Math.imul(Ge, tt), m = m + Math.imul(ne, nt) | 0, f = f + Math.imul(ne, rt) | 0, f = f + Math.imul(de, nt) | 0, v = v + Math.imul(de, rt) | 0, m = m + Math.imul(q, it) | 0, f = f + Math.imul(q, st) | 0, f = f + Math.imul(Y, it) | 0, v = v + Math.imul(Y, st) | 0, m = m + Math.imul(F, at) | 0, f = f + Math.imul(F, ot) | 0, f = f + Math.imul(U, at) | 0, v = v + Math.imul(U, ot) | 0, m = m + Math.imul(h, ut) | 0, f = f + Math.imul(h, lt) | 0, f = f + Math.imul(R, ut) | 0, v = v + Math.imul(R, lt) | 0;
      var Xi = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Xi >>> 26) | 0, Xi &= 67108863, m = Math.imul(We, et), f = Math.imul(We, tt), f = f + Math.imul(ze, et) | 0, v = Math.imul(ze, tt), m = m + Math.imul(je, nt) | 0, f = f + Math.imul(je, rt) | 0, f = f + Math.imul(Ge, nt) | 0, v = v + Math.imul(Ge, rt) | 0, m = m + Math.imul(ne, it) | 0, f = f + Math.imul(ne, st) | 0, f = f + Math.imul(de, it) | 0, v = v + Math.imul(de, st) | 0, m = m + Math.imul(q, at) | 0, f = f + Math.imul(q, ot) | 0, f = f + Math.imul(Y, at) | 0, v = v + Math.imul(Y, ot) | 0, m = m + Math.imul(F, ut) | 0, f = f + Math.imul(F, lt) | 0, f = f + Math.imul(U, ut) | 0, v = v + Math.imul(U, lt) | 0, m = m + Math.imul(h, ct) | 0, f = f + Math.imul(h, dt) | 0, f = f + Math.imul(R, ct) | 0, v = v + Math.imul(R, dt) | 0;
      var Ef = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Ef >>> 26) | 0, Ef &= 67108863, m = Math.imul(He, et), f = Math.imul(He, tt), f = f + Math.imul(Ke, et) | 0, v = Math.imul(Ke, tt), m = m + Math.imul(We, nt) | 0, f = f + Math.imul(We, rt) | 0, f = f + Math.imul(ze, nt) | 0, v = v + Math.imul(ze, rt) | 0, m = m + Math.imul(je, it) | 0, f = f + Math.imul(je, st) | 0, f = f + Math.imul(Ge, it) | 0, v = v + Math.imul(Ge, st) | 0, m = m + Math.imul(ne, at) | 0, f = f + Math.imul(ne, ot) | 0, f = f + Math.imul(de, at) | 0, v = v + Math.imul(de, ot) | 0, m = m + Math.imul(q, ut) | 0, f = f + Math.imul(q, lt) | 0, f = f + Math.imul(Y, ut) | 0, v = v + Math.imul(Y, lt) | 0, m = m + Math.imul(F, ct) | 0, f = f + Math.imul(F, dt) | 0, f = f + Math.imul(U, ct) | 0, v = v + Math.imul(U, dt) | 0, m = m + Math.imul(h, ft) | 0, f = f + Math.imul(h, pt) | 0, f = f + Math.imul(R, ft) | 0, v = v + Math.imul(R, pt) | 0;
      var _f = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (_f >>> 26) | 0, _f &= 67108863, m = Math.imul(qe, et), f = Math.imul(qe, tt), f = f + Math.imul(Qe, et) | 0, v = Math.imul(Qe, tt), m = m + Math.imul(He, nt) | 0, f = f + Math.imul(He, rt) | 0, f = f + Math.imul(Ke, nt) | 0, v = v + Math.imul(Ke, rt) | 0, m = m + Math.imul(We, it) | 0, f = f + Math.imul(We, st) | 0, f = f + Math.imul(ze, it) | 0, v = v + Math.imul(ze, st) | 0, m = m + Math.imul(je, at) | 0, f = f + Math.imul(je, ot) | 0, f = f + Math.imul(Ge, at) | 0, v = v + Math.imul(Ge, ot) | 0, m = m + Math.imul(ne, ut) | 0, f = f + Math.imul(ne, lt) | 0, f = f + Math.imul(de, ut) | 0, v = v + Math.imul(de, lt) | 0, m = m + Math.imul(q, ct) | 0, f = f + Math.imul(q, dt) | 0, f = f + Math.imul(Y, ct) | 0, v = v + Math.imul(Y, dt) | 0, m = m + Math.imul(F, ft) | 0, f = f + Math.imul(F, pt) | 0, f = f + Math.imul(U, ft) | 0, v = v + Math.imul(U, pt) | 0, m = m + Math.imul(h, ht) | 0, f = f + Math.imul(h, yt) | 0, f = f + Math.imul(R, ht) | 0, v = v + Math.imul(R, yt) | 0;
      var Mf = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Mf >>> 26) | 0, Mf &= 67108863, m = Math.imul(Je, et), f = Math.imul(Je, tt), f = f + Math.imul(Ye, et) | 0, v = Math.imul(Ye, tt), m = m + Math.imul(qe, nt) | 0, f = f + Math.imul(qe, rt) | 0, f = f + Math.imul(Qe, nt) | 0, v = v + Math.imul(Qe, rt) | 0, m = m + Math.imul(He, it) | 0, f = f + Math.imul(He, st) | 0, f = f + Math.imul(Ke, it) | 0, v = v + Math.imul(Ke, st) | 0, m = m + Math.imul(We, at) | 0, f = f + Math.imul(We, ot) | 0, f = f + Math.imul(ze, at) | 0, v = v + Math.imul(ze, ot) | 0, m = m + Math.imul(je, ut) | 0, f = f + Math.imul(je, lt) | 0, f = f + Math.imul(Ge, ut) | 0, v = v + Math.imul(Ge, lt) | 0, m = m + Math.imul(ne, ct) | 0, f = f + Math.imul(ne, dt) | 0, f = f + Math.imul(de, ct) | 0, v = v + Math.imul(de, dt) | 0, m = m + Math.imul(q, ft) | 0, f = f + Math.imul(q, pt) | 0, f = f + Math.imul(Y, ft) | 0, v = v + Math.imul(Y, pt) | 0, m = m + Math.imul(F, ht) | 0, f = f + Math.imul(F, yt) | 0, f = f + Math.imul(U, ht) | 0, v = v + Math.imul(U, yt) | 0, m = m + Math.imul(h, mt) | 0, f = f + Math.imul(h, bt) | 0, f = f + Math.imul(R, mt) | 0, v = v + Math.imul(R, bt) | 0;
      var Rf = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Rf >>> 26) | 0, Rf &= 67108863, m = Math.imul(Xe, et), f = Math.imul(Xe, tt), f = f + Math.imul(Ze, et) | 0, v = Math.imul(Ze, tt), m = m + Math.imul(Je, nt) | 0, f = f + Math.imul(Je, rt) | 0, f = f + Math.imul(Ye, nt) | 0, v = v + Math.imul(Ye, rt) | 0, m = m + Math.imul(qe, it) | 0, f = f + Math.imul(qe, st) | 0, f = f + Math.imul(Qe, it) | 0, v = v + Math.imul(Qe, st) | 0, m = m + Math.imul(He, at) | 0, f = f + Math.imul(He, ot) | 0, f = f + Math.imul(Ke, at) | 0, v = v + Math.imul(Ke, ot) | 0, m = m + Math.imul(We, ut) | 0, f = f + Math.imul(We, lt) | 0, f = f + Math.imul(ze, ut) | 0, v = v + Math.imul(ze, lt) | 0, m = m + Math.imul(je, ct) | 0, f = f + Math.imul(je, dt) | 0, f = f + Math.imul(Ge, ct) | 0, v = v + Math.imul(Ge, dt) | 0, m = m + Math.imul(ne, ft) | 0, f = f + Math.imul(ne, pt) | 0, f = f + Math.imul(de, ft) | 0, v = v + Math.imul(de, pt) | 0, m = m + Math.imul(q, ht) | 0, f = f + Math.imul(q, yt) | 0, f = f + Math.imul(Y, ht) | 0, v = v + Math.imul(Y, yt) | 0, m = m + Math.imul(F, mt) | 0, f = f + Math.imul(F, bt) | 0, f = f + Math.imul(U, mt) | 0, v = v + Math.imul(U, bt) | 0, m = m + Math.imul(h, gt) | 0, f = f + Math.imul(h, vt) | 0, f = f + Math.imul(R, gt) | 0, v = v + Math.imul(R, vt) | 0;
      var Pf = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Pf >>> 26) | 0, Pf &= 67108863, m = Math.imul(Xe, nt), f = Math.imul(Xe, rt), f = f + Math.imul(Ze, nt) | 0, v = Math.imul(Ze, rt), m = m + Math.imul(Je, it) | 0, f = f + Math.imul(Je, st) | 0, f = f + Math.imul(Ye, it) | 0, v = v + Math.imul(Ye, st) | 0, m = m + Math.imul(qe, at) | 0, f = f + Math.imul(qe, ot) | 0, f = f + Math.imul(Qe, at) | 0, v = v + Math.imul(Qe, ot) | 0, m = m + Math.imul(He, ut) | 0, f = f + Math.imul(He, lt) | 0, f = f + Math.imul(Ke, ut) | 0, v = v + Math.imul(Ke, lt) | 0, m = m + Math.imul(We, ct) | 0, f = f + Math.imul(We, dt) | 0, f = f + Math.imul(ze, ct) | 0, v = v + Math.imul(ze, dt) | 0, m = m + Math.imul(je, ft) | 0, f = f + Math.imul(je, pt) | 0, f = f + Math.imul(Ge, ft) | 0, v = v + Math.imul(Ge, pt) | 0, m = m + Math.imul(ne, ht) | 0, f = f + Math.imul(ne, yt) | 0, f = f + Math.imul(de, ht) | 0, v = v + Math.imul(de, yt) | 0, m = m + Math.imul(q, mt) | 0, f = f + Math.imul(q, bt) | 0, f = f + Math.imul(Y, mt) | 0, v = v + Math.imul(Y, bt) | 0, m = m + Math.imul(F, gt) | 0, f = f + Math.imul(F, vt) | 0, f = f + Math.imul(U, gt) | 0, v = v + Math.imul(U, vt) | 0;
      var Of = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Of >>> 26) | 0, Of &= 67108863, m = Math.imul(Xe, it), f = Math.imul(Xe, st), f = f + Math.imul(Ze, it) | 0, v = Math.imul(Ze, st), m = m + Math.imul(Je, at) | 0, f = f + Math.imul(Je, ot) | 0, f = f + Math.imul(Ye, at) | 0, v = v + Math.imul(Ye, ot) | 0, m = m + Math.imul(qe, ut) | 0, f = f + Math.imul(qe, lt) | 0, f = f + Math.imul(Qe, ut) | 0, v = v + Math.imul(Qe, lt) | 0, m = m + Math.imul(He, ct) | 0, f = f + Math.imul(He, dt) | 0, f = f + Math.imul(Ke, ct) | 0, v = v + Math.imul(Ke, dt) | 0, m = m + Math.imul(We, ft) | 0, f = f + Math.imul(We, pt) | 0, f = f + Math.imul(ze, ft) | 0, v = v + Math.imul(ze, pt) | 0, m = m + Math.imul(je, ht) | 0, f = f + Math.imul(je, yt) | 0, f = f + Math.imul(Ge, ht) | 0, v = v + Math.imul(Ge, yt) | 0, m = m + Math.imul(ne, mt) | 0, f = f + Math.imul(ne, bt) | 0, f = f + Math.imul(de, mt) | 0, v = v + Math.imul(de, bt) | 0, m = m + Math.imul(q, gt) | 0, f = f + Math.imul(q, vt) | 0, f = f + Math.imul(Y, gt) | 0, v = v + Math.imul(Y, vt) | 0;
      var If = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (If >>> 26) | 0, If &= 67108863, m = Math.imul(Xe, at), f = Math.imul(Xe, ot), f = f + Math.imul(Ze, at) | 0, v = Math.imul(Ze, ot), m = m + Math.imul(Je, ut) | 0, f = f + Math.imul(Je, lt) | 0, f = f + Math.imul(Ye, ut) | 0, v = v + Math.imul(Ye, lt) | 0, m = m + Math.imul(qe, ct) | 0, f = f + Math.imul(qe, dt) | 0, f = f + Math.imul(Qe, ct) | 0, v = v + Math.imul(Qe, dt) | 0, m = m + Math.imul(He, ft) | 0, f = f + Math.imul(He, pt) | 0, f = f + Math.imul(Ke, ft) | 0, v = v + Math.imul(Ke, pt) | 0, m = m + Math.imul(We, ht) | 0, f = f + Math.imul(We, yt) | 0, f = f + Math.imul(ze, ht) | 0, v = v + Math.imul(ze, yt) | 0, m = m + Math.imul(je, mt) | 0, f = f + Math.imul(je, bt) | 0, f = f + Math.imul(Ge, mt) | 0, v = v + Math.imul(Ge, bt) | 0, m = m + Math.imul(ne, gt) | 0, f = f + Math.imul(ne, vt) | 0, f = f + Math.imul(de, gt) | 0, v = v + Math.imul(de, vt) | 0;
      var kf = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (kf >>> 26) | 0, kf &= 67108863, m = Math.imul(Xe, ut), f = Math.imul(Xe, lt), f = f + Math.imul(Ze, ut) | 0, v = Math.imul(Ze, lt), m = m + Math.imul(Je, ct) | 0, f = f + Math.imul(Je, dt) | 0, f = f + Math.imul(Ye, ct) | 0, v = v + Math.imul(Ye, dt) | 0, m = m + Math.imul(qe, ft) | 0, f = f + Math.imul(qe, pt) | 0, f = f + Math.imul(Qe, ft) | 0, v = v + Math.imul(Qe, pt) | 0, m = m + Math.imul(He, ht) | 0, f = f + Math.imul(He, yt) | 0, f = f + Math.imul(Ke, ht) | 0, v = v + Math.imul(Ke, yt) | 0, m = m + Math.imul(We, mt) | 0, f = f + Math.imul(We, bt) | 0, f = f + Math.imul(ze, mt) | 0, v = v + Math.imul(ze, bt) | 0, m = m + Math.imul(je, gt) | 0, f = f + Math.imul(je, vt) | 0, f = f + Math.imul(Ge, gt) | 0, v = v + Math.imul(Ge, vt) | 0;
      var Df = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Df >>> 26) | 0, Df &= 67108863, m = Math.imul(Xe, ct), f = Math.imul(Xe, dt), f = f + Math.imul(Ze, ct) | 0, v = Math.imul(Ze, dt), m = m + Math.imul(Je, ft) | 0, f = f + Math.imul(Je, pt) | 0, f = f + Math.imul(Ye, ft) | 0, v = v + Math.imul(Ye, pt) | 0, m = m + Math.imul(qe, ht) | 0, f = f + Math.imul(qe, yt) | 0, f = f + Math.imul(Qe, ht) | 0, v = v + Math.imul(Qe, yt) | 0, m = m + Math.imul(He, mt) | 0, f = f + Math.imul(He, bt) | 0, f = f + Math.imul(Ke, mt) | 0, v = v + Math.imul(Ke, bt) | 0, m = m + Math.imul(We, gt) | 0, f = f + Math.imul(We, vt) | 0, f = f + Math.imul(ze, gt) | 0, v = v + Math.imul(ze, vt) | 0;
      var Bf = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Bf >>> 26) | 0, Bf &= 67108863, m = Math.imul(Xe, ft), f = Math.imul(Xe, pt), f = f + Math.imul(Ze, ft) | 0, v = Math.imul(Ze, pt), m = m + Math.imul(Je, ht) | 0, f = f + Math.imul(Je, yt) | 0, f = f + Math.imul(Ye, ht) | 0, v = v + Math.imul(Ye, yt) | 0, m = m + Math.imul(qe, mt) | 0, f = f + Math.imul(qe, bt) | 0, f = f + Math.imul(Qe, mt) | 0, v = v + Math.imul(Qe, bt) | 0, m = m + Math.imul(He, gt) | 0, f = f + Math.imul(He, vt) | 0, f = f + Math.imul(Ke, gt) | 0, v = v + Math.imul(Ke, vt) | 0;
      var Nf = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Nf >>> 26) | 0, Nf &= 67108863, m = Math.imul(Xe, ht), f = Math.imul(Xe, yt), f = f + Math.imul(Ze, ht) | 0, v = Math.imul(Ze, yt), m = m + Math.imul(Je, mt) | 0, f = f + Math.imul(Je, bt) | 0, f = f + Math.imul(Ye, mt) | 0, v = v + Math.imul(Ye, bt) | 0, m = m + Math.imul(qe, gt) | 0, f = f + Math.imul(qe, vt) | 0, f = f + Math.imul(Qe, gt) | 0, v = v + Math.imul(Qe, vt) | 0;
      var Ff = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Ff >>> 26) | 0, Ff &= 67108863, m = Math.imul(Xe, mt), f = Math.imul(Xe, bt), f = f + Math.imul(Ze, mt) | 0, v = Math.imul(Ze, bt), m = m + Math.imul(Je, gt) | 0, f = f + Math.imul(Je, vt) | 0, f = f + Math.imul(Ye, gt) | 0, v = v + Math.imul(Ye, vt) | 0;
      var Lf = (P + m | 0) + ((f & 8191) << 13) | 0;
      P = (v + (f >>> 13) | 0) + (Lf >>> 26) | 0, Lf &= 67108863, m = Math.imul(Xe, gt), f = Math.imul(Xe, vt), f = f + Math.imul(Ze, gt) | 0, v = Math.imul(Ze, vt);
      var $f = (P + m | 0) + ((f & 8191) << 13) | 0;
      return P = (v + (f >>> 13) | 0) + ($f >>> 26) | 0, $f &= 67108863, M[0] = qi, M[1] = Qi, M[2] = Ji, M[3] = Yi, M[4] = Xi, M[5] = Ef, M[6] = _f, M[7] = Mf, M[8] = Rf, M[9] = Pf, M[10] = Of, M[11] = If, M[12] = kf, M[13] = Df, M[14] = Bf, M[15] = Nf, M[16] = Ff, M[17] = Lf, M[18] = $f, P !== 0 && (M[19] = P, x.length++), x;
    };
    Math.imul || (I = _);
    function N(E, d, y) {
      y.negative = d.negative ^ E.negative, y.length = E.length + d.length;
      for (var x = 0, S = 0, C = 0; C < y.length - 1; C++) {
        var M = S;
        S = 0;
        for (var P = x & 67108863, m = Math.min(C, d.length - 1), f = Math.max(0, C - E.length + 1); f <= m; f++) {
          var v = C - f, k = E.words[v] | 0, h = d.words[f] | 0, R = k * h, L = R & 67108863;
          M = M + (R / 67108864 | 0) | 0, L = L + P | 0, P = L & 67108863, M = M + (L >>> 26) | 0, S += M >>> 26, M &= 67108863;
        }
        y.words[C] = P, x = M, M = S;
      }
      return x !== 0 ? y.words[C] = x : y.length--, y._strip();
    }
    function B(E, d, y) {
      return N(E, d, y);
    }
    s.prototype.mulTo = function(d, y) {
      var x, S = this.length + d.length;
      return this.length === 10 && d.length === 10 ? x = I(this, d, y) : S < 63 ? x = _(this, d, y) : S < 1024 ? x = N(this, d, y) : x = B(this, d, y), x;
    }, s.prototype.mul = function(d) {
      var y = new s(null);
      return y.words = new Array(this.length + d.length), this.mulTo(d, y);
    }, s.prototype.mulf = function(d) {
      var y = new s(null);
      return y.words = new Array(this.length + d.length), B(this, d, y);
    }, s.prototype.imul = function(d) {
      return this.clone().mulTo(d, this);
    }, s.prototype.imuln = function(d) {
      var y = d < 0;
      y && (d = -d), r(typeof d == "number"), r(d < 67108864);
      for (var x = 0, S = 0; S < this.length; S++) {
        var C = (this.words[S] | 0) * d, M = (C & 67108863) + (x & 67108863);
        x >>= 26, x += C / 67108864 | 0, x += M >>> 26, this.words[S] = M & 67108863;
      }
      return x !== 0 && (this.words[S] = x, this.length++), y ? this.ineg() : this;
    }, s.prototype.muln = function(d) {
      return this.clone().imuln(d);
    }, s.prototype.sqr = function() {
      return this.mul(this);
    }, s.prototype.isqr = function() {
      return this.imul(this.clone());
    }, s.prototype.pow = function(d) {
      var y = T(d);
      if (y.length === 0)
        return new s(1);
      for (var x = this, S = 0; S < y.length && y[S] === 0; S++, x = x.sqr())
        ;
      if (++S < y.length)
        for (var C = x.sqr(); S < y.length; S++, C = C.sqr())
          y[S] !== 0 && (x = x.mul(C));
      return x;
    }, s.prototype.iushln = function(d) {
      r(typeof d == "number" && d >= 0);
      var y = d % 26, x = (d - y) / 26, S = 67108863 >>> 26 - y << 26 - y, C;
      if (y !== 0) {
        var M = 0;
        for (C = 0; C < this.length; C++) {
          var P = this.words[C] & S, m = (this.words[C] | 0) - P << y;
          this.words[C] = m | M, M = P >>> 26 - y;
        }
        M && (this.words[C] = M, this.length++);
      }
      if (x !== 0) {
        for (C = this.length - 1; C >= 0; C--)
          this.words[C + x] = this.words[C];
        for (C = 0; C < x; C++)
          this.words[C] = 0;
        this.length += x;
      }
      return this._strip();
    }, s.prototype.ishln = function(d) {
      return r(this.negative === 0), this.iushln(d);
    }, s.prototype.iushrn = function(d, y, x) {
      r(typeof d == "number" && d >= 0);
      var S;
      y ? S = (y - y % 26) / 26 : S = 0;
      var C = d % 26, M = Math.min((d - C) / 26, this.length), P = 67108863 ^ 67108863 >>> C << C, m = x;
      if (S -= M, S = Math.max(0, S), m) {
        for (var f = 0; f < M; f++)
          m.words[f] = this.words[f];
        m.length = M;
      }
      if (M !== 0)
        if (this.length > M)
          for (this.length -= M, f = 0; f < this.length; f++)
            this.words[f] = this.words[f + M];
        else
          this.words[0] = 0, this.length = 1;
      var v = 0;
      for (f = this.length - 1; f >= 0 && (v !== 0 || f >= S); f--) {
        var k = this.words[f] | 0;
        this.words[f] = v << 26 - C | k >>> C, v = k & P;
      }
      return m && v !== 0 && (m.words[m.length++] = v), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, s.prototype.ishrn = function(d, y, x) {
      return r(this.negative === 0), this.iushrn(d, y, x);
    }, s.prototype.shln = function(d) {
      return this.clone().ishln(d);
    }, s.prototype.ushln = function(d) {
      return this.clone().iushln(d);
    }, s.prototype.shrn = function(d) {
      return this.clone().ishrn(d);
    }, s.prototype.ushrn = function(d) {
      return this.clone().iushrn(d);
    }, s.prototype.testn = function(d) {
      r(typeof d == "number" && d >= 0);
      var y = d % 26, x = (d - y) / 26, S = 1 << y;
      if (this.length <= x)
        return !1;
      var C = this.words[x];
      return !!(C & S);
    }, s.prototype.imaskn = function(d) {
      r(typeof d == "number" && d >= 0);
      var y = d % 26, x = (d - y) / 26;
      if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= x)
        return this;
      if (y !== 0 && x++, this.length = Math.min(x, this.length), y !== 0) {
        var S = 67108863 ^ 67108863 >>> y << y;
        this.words[this.length - 1] &= S;
      }
      return this._strip();
    }, s.prototype.maskn = function(d) {
      return this.clone().imaskn(d);
    }, s.prototype.iaddn = function(d) {
      return r(typeof d == "number"), r(d < 67108864), d < 0 ? this.isubn(-d) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= d ? (this.words[0] = d - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(d), this.negative = 1, this) : this._iaddn(d);
    }, s.prototype._iaddn = function(d) {
      this.words[0] += d;
      for (var y = 0; y < this.length && this.words[y] >= 67108864; y++)
        this.words[y] -= 67108864, y === this.length - 1 ? this.words[y + 1] = 1 : this.words[y + 1]++;
      return this.length = Math.max(this.length, y + 1), this;
    }, s.prototype.isubn = function(d) {
      if (r(typeof d == "number"), r(d < 67108864), d < 0)
        return this.iaddn(-d);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(d), this.negative = 1, this;
      if (this.words[0] -= d, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var y = 0; y < this.length && this.words[y] < 0; y++)
          this.words[y] += 67108864, this.words[y + 1] -= 1;
      return this._strip();
    }, s.prototype.addn = function(d) {
      return this.clone().iaddn(d);
    }, s.prototype.subn = function(d) {
      return this.clone().isubn(d);
    }, s.prototype.iabs = function() {
      return this.negative = 0, this;
    }, s.prototype.abs = function() {
      return this.clone().iabs();
    }, s.prototype._ishlnsubmul = function(d, y, x) {
      var S = d.length + x, C;
      this._expand(S);
      var M, P = 0;
      for (C = 0; C < d.length; C++) {
        M = (this.words[C + x] | 0) + P;
        var m = (d.words[C] | 0) * y;
        M -= m & 67108863, P = (M >> 26) - (m / 67108864 | 0), this.words[C + x] = M & 67108863;
      }
      for (; C < this.length - x; C++)
        M = (this.words[C + x] | 0) + P, P = M >> 26, this.words[C + x] = M & 67108863;
      if (P === 0)
        return this._strip();
      for (r(P === -1), P = 0, C = 0; C < this.length; C++)
        M = -(this.words[C] | 0) + P, P = M >> 26, this.words[C] = M & 67108863;
      return this.negative = 1, this._strip();
    }, s.prototype._wordDiv = function(d, y) {
      var x = this.length - d.length, S = this.clone(), C = d, M = C.words[C.length - 1] | 0, P = this._countBits(M);
      x = 26 - P, x !== 0 && (C = C.ushln(x), S.iushln(x), M = C.words[C.length - 1] | 0);
      var m = S.length - C.length, f;
      if (y !== "mod") {
        f = new s(null), f.length = m + 1, f.words = new Array(f.length);
        for (var v = 0; v < f.length; v++)
          f.words[v] = 0;
      }
      var k = S.clone()._ishlnsubmul(C, 1, m);
      k.negative === 0 && (S = k, f && (f.words[m] = 1));
      for (var h = m - 1; h >= 0; h--) {
        var R = (S.words[C.length + h] | 0) * 67108864 + (S.words[C.length + h - 1] | 0);
        for (R = Math.min(R / M | 0, 67108863), S._ishlnsubmul(C, R, h); S.negative !== 0; )
          R--, S.negative = 0, S._ishlnsubmul(C, 1, h), S.isZero() || (S.negative ^= 1);
        f && (f.words[h] = R);
      }
      return f && f._strip(), S._strip(), y !== "div" && x !== 0 && S.iushrn(x), {
        div: f || null,
        mod: S
      };
    }, s.prototype.divmod = function(d, y, x) {
      if (r(!d.isZero()), this.isZero())
        return {
          div: new s(0),
          mod: new s(0)
        };
      var S, C, M;
      return this.negative !== 0 && d.negative === 0 ? (M = this.neg().divmod(d, y), y !== "mod" && (S = M.div.neg()), y !== "div" && (C = M.mod.neg(), x && C.negative !== 0 && C.iadd(d)), {
        div: S,
        mod: C
      }) : this.negative === 0 && d.negative !== 0 ? (M = this.divmod(d.neg(), y), y !== "mod" && (S = M.div.neg()), {
        div: S,
        mod: M.mod
      }) : (this.negative & d.negative) !== 0 ? (M = this.neg().divmod(d.neg(), y), y !== "div" && (C = M.mod.neg(), x && C.negative !== 0 && C.isub(d)), {
        div: M.div,
        mod: C
      }) : d.length > this.length || this.cmp(d) < 0 ? {
        div: new s(0),
        mod: this
      } : d.length === 1 ? y === "div" ? {
        div: this.divn(d.words[0]),
        mod: null
      } : y === "mod" ? {
        div: null,
        mod: new s(this.modrn(d.words[0]))
      } : {
        div: this.divn(d.words[0]),
        mod: new s(this.modrn(d.words[0]))
      } : this._wordDiv(d, y);
    }, s.prototype.div = function(d) {
      return this.divmod(d, "div", !1).div;
    }, s.prototype.mod = function(d) {
      return this.divmod(d, "mod", !1).mod;
    }, s.prototype.umod = function(d) {
      return this.divmod(d, "mod", !0).mod;
    }, s.prototype.divRound = function(d) {
      var y = this.divmod(d);
      if (y.mod.isZero())
        return y.div;
      var x = y.div.negative !== 0 ? y.mod.isub(d) : y.mod, S = d.ushrn(1), C = d.andln(1), M = x.cmp(S);
      return M < 0 || C === 1 && M === 0 ? y.div : y.div.negative !== 0 ? y.div.isubn(1) : y.div.iaddn(1);
    }, s.prototype.modrn = function(d) {
      var y = d < 0;
      y && (d = -d), r(d <= 67108863);
      for (var x = (1 << 26) % d, S = 0, C = this.length - 1; C >= 0; C--)
        S = (x * S + (this.words[C] | 0)) % d;
      return y ? -S : S;
    }, s.prototype.modn = function(d) {
      return this.modrn(d);
    }, s.prototype.idivn = function(d) {
      var y = d < 0;
      y && (d = -d), r(d <= 67108863);
      for (var x = 0, S = this.length - 1; S >= 0; S--) {
        var C = (this.words[S] | 0) + x * 67108864;
        this.words[S] = C / d | 0, x = C % d;
      }
      return this._strip(), y ? this.ineg() : this;
    }, s.prototype.divn = function(d) {
      return this.clone().idivn(d);
    }, s.prototype.egcd = function(d) {
      r(d.negative === 0), r(!d.isZero());
      var y = this, x = d.clone();
      y.negative !== 0 ? y = y.umod(d) : y = y.clone();
      for (var S = new s(1), C = new s(0), M = new s(0), P = new s(1), m = 0; y.isEven() && x.isEven(); )
        y.iushrn(1), x.iushrn(1), ++m;
      for (var f = x.clone(), v = y.clone(); !y.isZero(); ) {
        for (var k = 0, h = 1; (y.words[0] & h) === 0 && k < 26; ++k, h <<= 1)
          ;
        if (k > 0)
          for (y.iushrn(k); k-- > 0; )
            (S.isOdd() || C.isOdd()) && (S.iadd(f), C.isub(v)), S.iushrn(1), C.iushrn(1);
        for (var R = 0, L = 1; (x.words[0] & L) === 0 && R < 26; ++R, L <<= 1)
          ;
        if (R > 0)
          for (x.iushrn(R); R-- > 0; )
            (M.isOdd() || P.isOdd()) && (M.iadd(f), P.isub(v)), M.iushrn(1), P.iushrn(1);
        y.cmp(x) >= 0 ? (y.isub(x), S.isub(M), C.isub(P)) : (x.isub(y), M.isub(S), P.isub(C));
      }
      return {
        a: M,
        b: P,
        gcd: x.iushln(m)
      };
    }, s.prototype._invmp = function(d) {
      r(d.negative === 0), r(!d.isZero());
      var y = this, x = d.clone();
      y.negative !== 0 ? y = y.umod(d) : y = y.clone();
      for (var S = new s(1), C = new s(0), M = x.clone(); y.cmpn(1) > 0 && x.cmpn(1) > 0; ) {
        for (var P = 0, m = 1; (y.words[0] & m) === 0 && P < 26; ++P, m <<= 1)
          ;
        if (P > 0)
          for (y.iushrn(P); P-- > 0; )
            S.isOdd() && S.iadd(M), S.iushrn(1);
        for (var f = 0, v = 1; (x.words[0] & v) === 0 && f < 26; ++f, v <<= 1)
          ;
        if (f > 0)
          for (x.iushrn(f); f-- > 0; )
            C.isOdd() && C.iadd(M), C.iushrn(1);
        y.cmp(x) >= 0 ? (y.isub(x), S.isub(C)) : (x.isub(y), C.isub(S));
      }
      var k;
      return y.cmpn(1) === 0 ? k = S : k = C, k.cmpn(0) < 0 && k.iadd(d), k;
    }, s.prototype.gcd = function(d) {
      if (this.isZero())
        return d.abs();
      if (d.isZero())
        return this.abs();
      var y = this.clone(), x = d.clone();
      y.negative = 0, x.negative = 0;
      for (var S = 0; y.isEven() && x.isEven(); S++)
        y.iushrn(1), x.iushrn(1);
      do {
        for (; y.isEven(); )
          y.iushrn(1);
        for (; x.isEven(); )
          x.iushrn(1);
        var C = y.cmp(x);
        if (C < 0) {
          var M = y;
          y = x, x = M;
        } else if (C === 0 || x.cmpn(1) === 0)
          break;
        y.isub(x);
      } while (!0);
      return x.iushln(S);
    }, s.prototype.invm = function(d) {
      return this.egcd(d).a.umod(d);
    }, s.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, s.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, s.prototype.andln = function(d) {
      return this.words[0] & d;
    }, s.prototype.bincn = function(d) {
      r(typeof d == "number");
      var y = d % 26, x = (d - y) / 26, S = 1 << y;
      if (this.length <= x)
        return this._expand(x + 1), this.words[x] |= S, this;
      for (var C = S, M = x; C !== 0 && M < this.length; M++) {
        var P = this.words[M] | 0;
        P += C, C = P >>> 26, P &= 67108863, this.words[M] = P;
      }
      return C !== 0 && (this.words[M] = C, this.length++), this;
    }, s.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, s.prototype.cmpn = function(d) {
      var y = d < 0;
      if (this.negative !== 0 && !y)
        return -1;
      if (this.negative === 0 && y)
        return 1;
      this._strip();
      var x;
      if (this.length > 1)
        x = 1;
      else {
        y && (d = -d), r(d <= 67108863, "Number is too big");
        var S = this.words[0] | 0;
        x = S === d ? 0 : S < d ? -1 : 1;
      }
      return this.negative !== 0 ? -x | 0 : x;
    }, s.prototype.cmp = function(d) {
      if (this.negative !== 0 && d.negative === 0)
        return -1;
      if (this.negative === 0 && d.negative !== 0)
        return 1;
      var y = this.ucmp(d);
      return this.negative !== 0 ? -y | 0 : y;
    }, s.prototype.ucmp = function(d) {
      if (this.length > d.length)
        return 1;
      if (this.length < d.length)
        return -1;
      for (var y = 0, x = this.length - 1; x >= 0; x--) {
        var S = this.words[x] | 0, C = d.words[x] | 0;
        if (S !== C) {
          S < C ? y = -1 : S > C && (y = 1);
          break;
        }
      }
      return y;
    }, s.prototype.gtn = function(d) {
      return this.cmpn(d) === 1;
    }, s.prototype.gt = function(d) {
      return this.cmp(d) === 1;
    }, s.prototype.gten = function(d) {
      return this.cmpn(d) >= 0;
    }, s.prototype.gte = function(d) {
      return this.cmp(d) >= 0;
    }, s.prototype.ltn = function(d) {
      return this.cmpn(d) === -1;
    }, s.prototype.lt = function(d) {
      return this.cmp(d) === -1;
    }, s.prototype.lten = function(d) {
      return this.cmpn(d) <= 0;
    }, s.prototype.lte = function(d) {
      return this.cmp(d) <= 0;
    }, s.prototype.eqn = function(d) {
      return this.cmpn(d) === 0;
    }, s.prototype.eq = function(d) {
      return this.cmp(d) === 0;
    }, s.red = function(d) {
      return new J(d);
    }, s.prototype.toRed = function(d) {
      return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), d.convertTo(this)._forceRed(d);
    }, s.prototype.fromRed = function() {
      return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, s.prototype._forceRed = function(d) {
      return this.red = d, this;
    }, s.prototype.forceRed = function(d) {
      return r(!this.red, "Already a number in reduction context"), this._forceRed(d);
    }, s.prototype.redAdd = function(d) {
      return r(this.red, "redAdd works only with red numbers"), this.red.add(this, d);
    }, s.prototype.redIAdd = function(d) {
      return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, d);
    }, s.prototype.redSub = function(d) {
      return r(this.red, "redSub works only with red numbers"), this.red.sub(this, d);
    }, s.prototype.redISub = function(d) {
      return r(this.red, "redISub works only with red numbers"), this.red.isub(this, d);
    }, s.prototype.redShl = function(d) {
      return r(this.red, "redShl works only with red numbers"), this.red.shl(this, d);
    }, s.prototype.redMul = function(d) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, d), this.red.mul(this, d);
    }, s.prototype.redIMul = function(d) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, d), this.red.imul(this, d);
    }, s.prototype.redSqr = function() {
      return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, s.prototype.redISqr = function() {
      return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, s.prototype.redSqrt = function() {
      return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, s.prototype.redInvm = function() {
      return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, s.prototype.redNeg = function() {
      return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, s.prototype.redPow = function(d) {
      return r(this.red && !d.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, d);
    };
    var D = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };
    function $(E, d) {
      this.name = E, this.p = new s(d, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    $.prototype._tmp = function() {
      var d = new s(null);
      return d.words = new Array(Math.ceil(this.n / 13)), d;
    }, $.prototype.ireduce = function(d) {
      var y = d, x;
      do
        this.split(y, this.tmp), y = this.imulK(y), y = y.iadd(this.tmp), x = y.bitLength();
      while (x > this.n);
      var S = x < this.n ? -1 : y.ucmp(this.p);
      return S === 0 ? (y.words[0] = 0, y.length = 1) : S > 0 ? y.isub(this.p) : y.strip !== void 0 ? y.strip() : y._strip(), y;
    }, $.prototype.split = function(d, y) {
      d.iushrn(this.n, 0, y);
    }, $.prototype.imulK = function(d) {
      return d.imul(this.k);
    };
    function H() {
      $.call(
        this,
        "k256",
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
      );
    }
    i(H, $), H.prototype.split = function(d, y) {
      for (var x = 4194303, S = Math.min(d.length, 9), C = 0; C < S; C++)
        y.words[C] = d.words[C];
      if (y.length = S, d.length <= 9) {
        d.words[0] = 0, d.length = 1;
        return;
      }
      var M = d.words[9];
      for (y.words[y.length++] = M & x, C = 10; C < d.length; C++) {
        var P = d.words[C] | 0;
        d.words[C - 10] = (P & x) << 4 | M >>> 22, M = P;
      }
      M >>>= 22, d.words[C - 10] = M, M === 0 && d.length > 10 ? d.length -= 10 : d.length -= 9;
    }, H.prototype.imulK = function(d) {
      d.words[d.length] = 0, d.words[d.length + 1] = 0, d.length += 2;
      for (var y = 0, x = 0; x < d.length; x++) {
        var S = d.words[x] | 0;
        y += S * 977, d.words[x] = y & 67108863, y = S * 64 + (y / 67108864 | 0);
      }
      return d.words[d.length - 1] === 0 && (d.length--, d.words[d.length - 1] === 0 && d.length--), d;
    };
    function j() {
      $.call(
        this,
        "p224",
        "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
      );
    }
    i(j, $);
    function Q() {
      $.call(
        this,
        "p192",
        "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
      );
    }
    i(Q, $);
    function oe() {
      $.call(
        this,
        "25519",
        "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
      );
    }
    i(oe, $), oe.prototype.imulK = function(d) {
      for (var y = 0, x = 0; x < d.length; x++) {
        var S = (d.words[x] | 0) * 19 + y, C = S & 67108863;
        S >>>= 26, d.words[x] = C, y = S;
      }
      return y !== 0 && (d.words[d.length++] = y), d;
    }, s._prime = function(d) {
      if (D[d])
        return D[d];
      var y;
      if (d === "k256")
        y = new H();
      else if (d === "p224")
        y = new j();
      else if (d === "p192")
        y = new Q();
      else if (d === "p25519")
        y = new oe();
      else
        throw new Error("Unknown prime " + d);
      return D[d] = y, y;
    };
    function J(E) {
      if (typeof E == "string") {
        var d = s._prime(E);
        this.m = d.p, this.prime = d;
      } else
        r(E.gtn(1), "modulus must be greater than 1"), this.m = E, this.prime = null;
    }
    J.prototype._verify1 = function(d) {
      r(d.negative === 0, "red works only with positives"), r(d.red, "red works only with red numbers");
    }, J.prototype._verify2 = function(d, y) {
      r((d.negative | y.negative) === 0, "red works only with positives"), r(
        d.red && d.red === y.red,
        "red works only with red numbers"
      );
    }, J.prototype.imod = function(d) {
      return this.prime ? this.prime.ireduce(d)._forceRed(this) : (c(d, d.umod(this.m)._forceRed(this)), d);
    }, J.prototype.neg = function(d) {
      return d.isZero() ? d.clone() : this.m.sub(d)._forceRed(this);
    }, J.prototype.add = function(d, y) {
      this._verify2(d, y);
      var x = d.add(y);
      return x.cmp(this.m) >= 0 && x.isub(this.m), x._forceRed(this);
    }, J.prototype.iadd = function(d, y) {
      this._verify2(d, y);
      var x = d.iadd(y);
      return x.cmp(this.m) >= 0 && x.isub(this.m), x;
    }, J.prototype.sub = function(d, y) {
      this._verify2(d, y);
      var x = d.sub(y);
      return x.cmpn(0) < 0 && x.iadd(this.m), x._forceRed(this);
    }, J.prototype.isub = function(d, y) {
      this._verify2(d, y);
      var x = d.isub(y);
      return x.cmpn(0) < 0 && x.iadd(this.m), x;
    }, J.prototype.shl = function(d, y) {
      return this._verify1(d), this.imod(d.ushln(y));
    }, J.prototype.imul = function(d, y) {
      return this._verify2(d, y), this.imod(d.imul(y));
    }, J.prototype.mul = function(d, y) {
      return this._verify2(d, y), this.imod(d.mul(y));
    }, J.prototype.isqr = function(d) {
      return this.imul(d, d.clone());
    }, J.prototype.sqr = function(d) {
      return this.mul(d, d);
    }, J.prototype.sqrt = function(d) {
      if (d.isZero())
        return d.clone();
      var y = this.m.andln(3);
      if (r(y % 2 === 1), y === 3) {
        var x = this.m.add(new s(1)).iushrn(2);
        return this.pow(d, x);
      }
      for (var S = this.m.subn(1), C = 0; !S.isZero() && S.andln(1) === 0; )
        C++, S.iushrn(1);
      r(!S.isZero());
      var M = new s(1).toRed(this), P = M.redNeg(), m = this.m.subn(1).iushrn(1), f = this.m.bitLength();
      for (f = new s(2 * f * f).toRed(this); this.pow(f, m).cmp(P) !== 0; )
        f.redIAdd(P);
      for (var v = this.pow(f, S), k = this.pow(d, S.addn(1).iushrn(1)), h = this.pow(d, S), R = C; h.cmp(M) !== 0; ) {
        for (var L = h, F = 0; L.cmp(M) !== 0; F++)
          L = L.redSqr();
        r(F < R);
        var U = this.pow(v, new s(1).iushln(R - F - 1));
        k = k.redMul(U), v = U.redSqr(), h = h.redMul(v), R = F;
      }
      return k;
    }, J.prototype.invm = function(d) {
      var y = d._invmp(this.m);
      return y.negative !== 0 ? (y.negative = 0, this.imod(y).redNeg()) : this.imod(y);
    }, J.prototype.pow = function(d, y) {
      if (y.isZero())
        return new s(1).toRed(this);
      if (y.cmpn(1) === 0)
        return d.clone();
      var x = 4, S = new Array(1 << x);
      S[0] = new s(1).toRed(this), S[1] = d;
      for (var C = 2; C < S.length; C++)
        S[C] = this.mul(S[C - 1], d);
      var M = S[0], P = 0, m = 0, f = y.bitLength() % 26;
      for (f === 0 && (f = 26), C = y.length - 1; C >= 0; C--) {
        for (var v = y.words[C], k = f - 1; k >= 0; k--) {
          var h = v >> k & 1;
          if (M !== S[0] && (M = this.sqr(M)), h === 0 && P === 0) {
            m = 0;
            continue;
          }
          P <<= 1, P |= h, m++, !(m !== x && (C !== 0 || k !== 0)) && (M = this.mul(M, S[P]), m = 0, P = 0);
        }
        f = 26;
      }
      return M;
    }, J.prototype.convertTo = function(d) {
      var y = d.umod(this.m);
      return y === d ? y.clone() : y;
    }, J.prototype.convertFrom = function(d) {
      var y = d.clone();
      return y.red = null, y;
    }, s.mont = function(d) {
      return new ue(d);
    };
    function ue(E) {
      J.call(this, E), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    i(ue, J), ue.prototype.convertTo = function(d) {
      return this.imod(d.ushln(this.shift));
    }, ue.prototype.convertFrom = function(d) {
      var y = this.imod(d.mul(this.rinv));
      return y.red = null, y;
    }, ue.prototype.imul = function(d, y) {
      if (d.isZero() || y.isZero())
        return d.words[0] = 0, d.length = 1, d;
      var x = d.imul(y), S = x.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), C = x.isub(S).iushrn(this.shift), M = C;
      return C.cmp(this.m) >= 0 ? M = C.isub(this.m) : C.cmpn(0) < 0 && (M = C.iadd(this.m)), M._forceRed(this);
    }, ue.prototype.mul = function(d, y) {
      if (d.isZero() || y.isZero())
        return new s(0)._forceRed(this);
      var x = d.mul(y), S = x.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), C = x.isub(S).iushrn(this.shift), M = C;
      return C.cmp(this.m) >= 0 ? M = C.isub(this.m) : C.cmpn(0) < 0 && (M = C.iadd(this.m)), M._forceRed(this);
    }, ue.prototype.invm = function(d) {
      var y = this.imod(d._invmp(this.m).mul(this.r2));
      return y._forceRed(this);
    };
  })(n, os);
})(Qx);
const fe = Qx.exports, o8 = "logger/5.7.0";
let Xg = !1, Zg = !1;
const Tc = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
let e2 = Tc.default, cp = null;
function u8() {
  try {
    const n = [];
    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((e) => {
      try {
        if ("test".normalize(e) !== "test")
          throw new Error("bad normalize");
      } catch {
        n.push(e);
      }
    }), n.length)
      throw new Error("missing " + n.join(", "));
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769))
      throw new Error("broken implementation");
  } catch (n) {
    return n.message;
  }
  return null;
}
const t2 = u8();
var td;
(function(n) {
  n.DEBUG = "DEBUG", n.INFO = "INFO", n.WARNING = "WARNING", n.ERROR = "ERROR", n.OFF = "OFF";
})(td || (td = {}));
var lr;
(function(n) {
  n.UNKNOWN_ERROR = "UNKNOWN_ERROR", n.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", n.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", n.NETWORK_ERROR = "NETWORK_ERROR", n.SERVER_ERROR = "SERVER_ERROR", n.TIMEOUT = "TIMEOUT", n.BUFFER_OVERRUN = "BUFFER_OVERRUN", n.NUMERIC_FAULT = "NUMERIC_FAULT", n.MISSING_NEW = "MISSING_NEW", n.INVALID_ARGUMENT = "INVALID_ARGUMENT", n.MISSING_ARGUMENT = "MISSING_ARGUMENT", n.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", n.CALL_EXCEPTION = "CALL_EXCEPTION", n.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", n.NONCE_EXPIRED = "NONCE_EXPIRED", n.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", n.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", n.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", n.ACTION_REJECTED = "ACTION_REJECTED";
})(lr || (lr = {}));
const n2 = "0123456789abcdef";
class O {
  constructor(e) {
    Object.defineProperty(this, "version", {
      enumerable: !0,
      value: e,
      writable: !1
    });
  }
  _log(e, t) {
    const r = e.toLowerCase();
    Tc[r] == null && this.throwArgumentError("invalid log level name", "logLevel", e), !(e2 > Tc[r]) && console.log.apply(console, t);
  }
  debug(...e) {
    this._log(O.levels.DEBUG, e);
  }
  info(...e) {
    this._log(O.levels.INFO, e);
  }
  warn(...e) {
    this._log(O.levels.WARNING, e);
  }
  makeError(e, t, r) {
    if (Zg)
      return this.makeError("censored error", t, {});
    t || (t = O.errors.UNKNOWN_ERROR), r || (r = {});
    const i = [];
    Object.keys(r).forEach((u) => {
      const l = r[u];
      try {
        if (l instanceof Uint8Array) {
          let c = "";
          for (let p = 0; p < l.length; p++)
            c += n2[l[p] >> 4], c += n2[l[p] & 15];
          i.push(u + "=Uint8Array(0x" + c + ")");
        } else
          i.push(u + "=" + JSON.stringify(l));
      } catch {
        i.push(u + "=" + JSON.stringify(r[u].toString()));
      }
    }), i.push(`code=${t}`), i.push(`version=${this.version}`);
    const s = e;
    let a = "";
    switch (t) {
      case lr.NUMERIC_FAULT: {
        a = "NUMERIC_FAULT";
        const u = e;
        switch (u) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            a += "-" + u;
            break;
          case "negative-power":
          case "negative-width":
            a += "-unsupported";
            break;
          case "unbound-bitwise-result":
            a += "-unbound-result";
            break;
        }
        break;
      }
      case lr.CALL_EXCEPTION:
      case lr.INSUFFICIENT_FUNDS:
      case lr.MISSING_NEW:
      case lr.NONCE_EXPIRED:
      case lr.REPLACEMENT_UNDERPRICED:
      case lr.TRANSACTION_REPLACED:
      case lr.UNPREDICTABLE_GAS_LIMIT:
        a = t;
        break;
    }
    a && (e += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (e += " (" + i.join(", ") + ")");
    const o = new Error(e);
    return o.reason = s, o.code = t, Object.keys(r).forEach(function(u) {
      o[u] = r[u];
    }), o;
  }
  throwError(e, t, r) {
    throw this.makeError(e, t, r);
  }
  throwArgumentError(e, t, r) {
    return this.throwError(e, O.errors.INVALID_ARGUMENT, {
      argument: t,
      value: r
    });
  }
  assert(e, t, r, i) {
    e || this.throwError(t, r, i);
  }
  assertArgument(e, t, r, i) {
    e || this.throwArgumentError(t, r, i);
  }
  checkNormalize(e) {
    t2 && this.throwError("platform missing String.prototype.normalize", O.errors.UNSUPPORTED_OPERATION, {
      operation: "String.prototype.normalize",
      form: t2
    });
  }
  checkSafeUint53(e, t) {
    typeof e == "number" && (t == null && (t = "value not safe"), (e < 0 || e >= 9007199254740991) && this.throwError(t, O.errors.NUMERIC_FAULT, {
      operation: "checkSafeInteger",
      fault: "out-of-safe-range",
      value: e
    }), e % 1 && this.throwError(t, O.errors.NUMERIC_FAULT, {
      operation: "checkSafeInteger",
      fault: "non-integer",
      value: e
    }));
  }
  checkArgumentCount(e, t, r) {
    r ? r = ": " + r : r = "", e < t && this.throwError("missing argument" + r, O.errors.MISSING_ARGUMENT, {
      count: e,
      expectedCount: t
    }), e > t && this.throwError("too many arguments" + r, O.errors.UNEXPECTED_ARGUMENT, {
      count: e,
      expectedCount: t
    });
  }
  checkNew(e, t) {
    (e === Object || e == null) && this.throwError("missing new", O.errors.MISSING_NEW, { name: t.name });
  }
  checkAbstract(e, t) {
    e === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", O.errors.UNSUPPORTED_OPERATION, { name: e.name, operation: "new" }) : (e === Object || e == null) && this.throwError("missing new", O.errors.MISSING_NEW, { name: t.name });
  }
  static globalLogger() {
    return cp || (cp = new O(o8)), cp;
  }
  static setCensorship(e, t) {
    if (!e && t && this.globalLogger().throwError("cannot permanently disable censorship", O.errors.UNSUPPORTED_OPERATION, {
      operation: "setCensorship"
    }), Xg) {
      if (!e)
        return;
      this.globalLogger().throwError("error censorship permanent", O.errors.UNSUPPORTED_OPERATION, {
        operation: "setCensorship"
      });
    }
    Zg = !!e, Xg = !!t;
  }
  static setLogLevel(e) {
    const t = Tc[e.toLowerCase()];
    if (t == null) {
      O.globalLogger().warn("invalid log level - " + e);
      return;
    }
    e2 = t;
  }
  static from(e) {
    return new O(e);
  }
}
O.errors = lr;
O.levels = td;
const l8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get LogLevel() {
    return td;
  },
  get ErrorCode() {
    return lr;
  },
  Logger: O
}, Symbol.toStringTag, { value: "Module" })), c8 = "bytes/5.7.0", Mt = new O(c8);
function Jx(n) {
  return !!n.toHexString;
}
function co(n) {
  return n.slice || (n.slice = function() {
    const e = Array.prototype.slice.call(arguments);
    return co(new Uint8Array(Array.prototype.slice.apply(n, e)));
  }), n;
}
function Pl(n) {
  return Ae(n) && !(n.length % 2) || Na(n);
}
function r2(n) {
  return typeof n == "number" && n == n && n % 1 === 0;
}
function Na(n) {
  if (n == null)
    return !1;
  if (n.constructor === Uint8Array)
    return !0;
  if (typeof n == "string" || !r2(n.length) || n.length < 0)
    return !1;
  for (let e = 0; e < n.length; e++) {
    const t = n[e];
    if (!r2(t) || t < 0 || t >= 256)
      return !1;
  }
  return !0;
}
function z(n, e) {
  if (e || (e = {}), typeof n == "number") {
    Mt.checkSafeUint53(n, "invalid arrayify value");
    const t = [];
    for (; n; )
      t.unshift(n & 255), n = parseInt(String(n / 256));
    return t.length === 0 && t.push(0), co(new Uint8Array(t));
  }
  if (e.allowMissingPrefix && typeof n == "string" && n.substring(0, 2) !== "0x" && (n = "0x" + n), Jx(n) && (n = n.toHexString()), Ae(n)) {
    let t = n.substring(2);
    t.length % 2 && (e.hexPad === "left" ? t = "0" + t : e.hexPad === "right" ? t += "0" : Mt.throwArgumentError("hex data is odd-length", "value", n));
    const r = [];
    for (let i = 0; i < t.length; i += 2)
      r.push(parseInt(t.substring(i, i + 2), 16));
    return co(new Uint8Array(r));
  }
  return Na(n) ? co(new Uint8Array(n)) : Mt.throwArgumentError("invalid arrayify value", "value", n);
}
function Ve(n) {
  const e = n.map((i) => z(i)), t = e.reduce((i, s) => i + s.length, 0), r = new Uint8Array(t);
  return e.reduce((i, s) => (r.set(s, i), i + s.length), 0), co(r);
}
function Yr(n) {
  let e = z(n);
  if (e.length === 0)
    return e;
  let t = 0;
  for (; t < e.length && e[t] === 0; )
    t++;
  return t && (e = e.slice(t)), e;
}
function Su(n, e) {
  n = z(n), n.length > e && Mt.throwArgumentError("value out of range", "value", arguments[0]);
  const t = new Uint8Array(e);
  return t.set(n, e - n.length), co(t);
}
function Ae(n, e) {
  return !(typeof n != "string" || !n.match(/^0x[0-9A-Fa-f]*$/) || e && n.length !== 2 + 2 * e);
}
const dp = "0123456789abcdef";
function K(n, e) {
  if (e || (e = {}), typeof n == "number") {
    Mt.checkSafeUint53(n, "invalid hexlify value");
    let t = "";
    for (; n; )
      t = dp[n & 15] + t, n = Math.floor(n / 16);
    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00";
  }
  if (typeof n == "bigint")
    return n = n.toString(16), n.length % 2 ? "0x0" + n : "0x" + n;
  if (e.allowMissingPrefix && typeof n == "string" && n.substring(0, 2) !== "0x" && (n = "0x" + n), Jx(n))
    return n.toHexString();
  if (Ae(n))
    return n.length % 2 && (e.hexPad === "left" ? n = "0x0" + n.substring(2) : e.hexPad === "right" ? n += "0" : Mt.throwArgumentError("hex data is odd-length", "value", n)), n.toLowerCase();
  if (Na(n)) {
    let t = "0x";
    for (let r = 0; r < n.length; r++) {
      let i = n[r];
      t += dp[(i & 240) >> 4] + dp[i & 15];
    }
    return t;
  }
  return Mt.throwArgumentError("invalid hexlify value", "value", n);
}
function ni(n) {
  if (typeof n != "string")
    n = K(n);
  else if (!Ae(n) || n.length % 2)
    return null;
  return (n.length - 2) / 2;
}
function Dt(n, e, t) {
  return typeof n != "string" ? n = K(n) : (!Ae(n) || n.length % 2) && Mt.throwArgumentError("invalid hexData", "value", n), e = 2 + 2 * e, t != null ? "0x" + n.substring(e, 2 + 2 * t) : "0x" + n.substring(e);
}
function Sn(n) {
  let e = "0x";
  return n.forEach((t) => {
    e += K(t).substring(2);
  }), e;
}
function Xd(n) {
  const e = Yx(K(n, { hexPad: "left" }));
  return e === "0x" ? "0x0" : e;
}
function Yx(n) {
  typeof n != "string" && (n = K(n)), Ae(n) || Mt.throwArgumentError("invalid hex string", "value", n), n = n.substring(2);
  let e = 0;
  for (; e < n.length && n[e] === "0"; )
    e++;
  return "0x" + n.substring(e);
}
function Be(n, e) {
  for (typeof n != "string" ? n = K(n) : Ae(n) || Mt.throwArgumentError("invalid hex string", "value", n), n.length > 2 * e + 2 && Mt.throwArgumentError("value out of range", "value", arguments[1]); n.length < 2 * e + 2; )
    n = "0x0" + n.substring(2);
  return n;
}
function Fa(n) {
  const e = {
    r: "0x",
    s: "0x",
    _vs: "0x",
    recoveryParam: 0,
    v: 0,
    yParityAndS: "0x",
    compact: "0x"
  };
  if (Pl(n)) {
    let t = z(n);
    t.length === 64 ? (e.v = 27 + (t[32] >> 7), t[32] &= 127, e.r = K(t.slice(0, 32)), e.s = K(t.slice(32, 64))) : t.length === 65 ? (e.r = K(t.slice(0, 32)), e.s = K(t.slice(32, 64)), e.v = t[64]) : Mt.throwArgumentError("invalid signature string", "signature", n), e.v < 27 && (e.v === 0 || e.v === 1 ? e.v += 27 : Mt.throwArgumentError("signature invalid v byte", "signature", n)), e.recoveryParam = 1 - e.v % 2, e.recoveryParam && (t[32] |= 128), e._vs = K(t.slice(32, 64));
  } else {
    if (e.r = n.r, e.s = n.s, e.v = n.v, e.recoveryParam = n.recoveryParam, e._vs = n._vs, e._vs != null) {
      const i = Su(z(e._vs), 32);
      e._vs = K(i);
      const s = i[0] >= 128 ? 1 : 0;
      e.recoveryParam == null ? e.recoveryParam = s : e.recoveryParam !== s && Mt.throwArgumentError("signature recoveryParam mismatch _vs", "signature", n), i[0] &= 127;
      const a = K(i);
      e.s == null ? e.s = a : e.s !== a && Mt.throwArgumentError("signature v mismatch _vs", "signature", n);
    }
    if (e.recoveryParam == null)
      e.v == null ? Mt.throwArgumentError("signature missing v and recoveryParam", "signature", n) : e.v === 0 || e.v === 1 ? e.recoveryParam = e.v : e.recoveryParam = 1 - e.v % 2;
    else if (e.v == null)
      e.v = 27 + e.recoveryParam;
    else {
      const i = e.v === 0 || e.v === 1 ? e.v : 1 - e.v % 2;
      e.recoveryParam !== i && Mt.throwArgumentError("signature recoveryParam mismatch v", "signature", n);
    }
    e.r == null || !Ae(e.r) ? Mt.throwArgumentError("signature missing or invalid r", "signature", n) : e.r = Be(e.r, 32), e.s == null || !Ae(e.s) ? Mt.throwArgumentError("signature missing or invalid s", "signature", n) : e.s = Be(e.s, 32);
    const t = z(e.s);
    t[0] >= 128 && Mt.throwArgumentError("signature s out of range", "signature", n), e.recoveryParam && (t[0] |= 128);
    const r = K(t);
    e._vs && (Ae(e._vs) || Mt.throwArgumentError("signature invalid _vs", "signature", n), e._vs = Be(e._vs, 32)), e._vs == null ? e._vs = r : e._vs !== r && Mt.throwArgumentError("signature _vs mismatch v and s", "signature", n);
  }
  return e.yParityAndS = e._vs, e.compact = e.r + e.yParityAndS.substring(2), e;
}
function fh(n) {
  return n = Fa(n), K(Ve([
    n.r,
    n.s,
    n.recoveryParam ? "0x1c" : "0x1b"
  ]));
}
const d8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  isBytesLike: Pl,
  isBytes: Na,
  arrayify: z,
  concat: Ve,
  stripZeros: Yr,
  zeroPad: Su,
  isHexString: Ae,
  hexlify: K,
  hexDataLength: ni,
  hexDataSlice: Dt,
  hexConcat: Sn,
  hexValue: Xd,
  hexStripZeros: Yx,
  hexZeroPad: Be,
  splitSignature: Fa,
  joinSignature: fh
}, Symbol.toStringTag, { value: "Module" })), Xx = "bignumber/5.7.0";
var Ku = fe.BN;
const bi = new O(Xx), fp = {}, i2 = 9007199254740991;
function f8(n) {
  return n != null && (W.isBigNumber(n) || typeof n == "number" && n % 1 === 0 || typeof n == "string" && !!n.match(/^-?[0-9]+$/) || Ae(n) || typeof n == "bigint" || Na(n));
}
let s2 = !1;
class W {
  constructor(e, t) {
    e !== fp && bi.throwError("cannot call constructor directly; use BigNumber.from", O.errors.UNSUPPORTED_OPERATION, {
      operation: "new (BigNumber)"
    }), this._hex = t, this._isBigNumber = !0, Object.freeze(this);
  }
  fromTwos(e) {
    return In(ge(this).fromTwos(e));
  }
  toTwos(e) {
    return In(ge(this).toTwos(e));
  }
  abs() {
    return this._hex[0] === "-" ? W.from(this._hex.substring(1)) : this;
  }
  add(e) {
    return In(ge(this).add(ge(e)));
  }
  sub(e) {
    return In(ge(this).sub(ge(e)));
  }
  div(e) {
    return W.from(e).isZero() && ar("division-by-zero", "div"), In(ge(this).div(ge(e)));
  }
  mul(e) {
    return In(ge(this).mul(ge(e)));
  }
  mod(e) {
    const t = ge(e);
    return t.isNeg() && ar("division-by-zero", "mod"), In(ge(this).umod(t));
  }
  pow(e) {
    const t = ge(e);
    return t.isNeg() && ar("negative-power", "pow"), In(ge(this).pow(t));
  }
  and(e) {
    const t = ge(e);
    return (this.isNegative() || t.isNeg()) && ar("unbound-bitwise-result", "and"), In(ge(this).and(t));
  }
  or(e) {
    const t = ge(e);
    return (this.isNegative() || t.isNeg()) && ar("unbound-bitwise-result", "or"), In(ge(this).or(t));
  }
  xor(e) {
    const t = ge(e);
    return (this.isNegative() || t.isNeg()) && ar("unbound-bitwise-result", "xor"), In(ge(this).xor(t));
  }
  mask(e) {
    return (this.isNegative() || e < 0) && ar("negative-width", "mask"), In(ge(this).maskn(e));
  }
  shl(e) {
    return (this.isNegative() || e < 0) && ar("negative-width", "shl"), In(ge(this).shln(e));
  }
  shr(e) {
    return (this.isNegative() || e < 0) && ar("negative-width", "shr"), In(ge(this).shrn(e));
  }
  eq(e) {
    return ge(this).eq(ge(e));
  }
  lt(e) {
    return ge(this).lt(ge(e));
  }
  lte(e) {
    return ge(this).lte(ge(e));
  }
  gt(e) {
    return ge(this).gt(ge(e));
  }
  gte(e) {
    return ge(this).gte(ge(e));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return ge(this).isZero();
  }
  toNumber() {
    try {
      return ge(this).toNumber();
    } catch {
      ar("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch {
    }
    return bi.throwError("this platform does not support BigInt", O.errors.UNSUPPORTED_OPERATION, {
      value: this.toString()
    });
  }
  toString() {
    return arguments.length > 0 && (arguments[0] === 10 ? s2 || (s2 = !0, bi.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : arguments[0] === 16 ? bi.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", O.errors.UNEXPECTED_ARGUMENT, {}) : bi.throwError("BigNumber.toString does not accept parameters", O.errors.UNEXPECTED_ARGUMENT, {})), ge(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(e) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(e) {
    if (e instanceof W)
      return e;
    if (typeof e == "string")
      return e.match(/^-?0x[0-9a-f]+$/i) ? new W(fp, qu(e)) : e.match(/^-?[0-9]+$/) ? new W(fp, qu(new Ku(e))) : bi.throwArgumentError("invalid BigNumber string", "value", e);
    if (typeof e == "number")
      return e % 1 && ar("underflow", "BigNumber.from", e), (e >= i2 || e <= -i2) && ar("overflow", "BigNumber.from", e), W.from(String(e));
    const t = e;
    if (typeof t == "bigint")
      return W.from(t.toString());
    if (Na(t))
      return W.from(K(t));
    if (t)
      if (t.toHexString) {
        const r = t.toHexString();
        if (typeof r == "string")
          return W.from(r);
      } else {
        let r = t._hex;
        if (r == null && t.type === "BigNumber" && (r = t.hex), typeof r == "string" && (Ae(r) || r[0] === "-" && Ae(r.substring(1))))
          return W.from(r);
      }
    return bi.throwArgumentError("invalid BigNumber value", "value", e);
  }
  static isBigNumber(e) {
    return !!(e && e._isBigNumber);
  }
}
function qu(n) {
  if (typeof n != "string")
    return qu(n.toString(16));
  if (n[0] === "-")
    return n = n.substring(1), n[0] === "-" && bi.throwArgumentError("invalid hex", "value", n), n = qu(n), n === "0x00" ? n : "-" + n;
  if (n.substring(0, 2) !== "0x" && (n = "0x" + n), n === "0x")
    return "0x00";
  for (n.length % 2 && (n = "0x0" + n.substring(2)); n.length > 4 && n.substring(0, 4) === "0x00"; )
    n = "0x" + n.substring(4);
  return n;
}
function In(n) {
  return W.from(qu(n));
}
function ge(n) {
  const e = W.from(n).toHexString();
  return e[0] === "-" ? new Ku("-" + e.substring(3), 16) : new Ku(e.substring(2), 16);
}
function ar(n, e, t) {
  const r = { fault: n, operation: e };
  return t != null && (r.value = t), bi.throwError(n, O.errors.NUMERIC_FAULT, r);
}
function p8(n) {
  return new Ku(n, 36).toString(16);
}
function h8(n) {
  return new Ku(n, 16).toString(36);
}
const En = new O(Xx), Eu = {}, Zx = W.from(0), ew = W.from(-1);
function tw(n, e, t, r) {
  const i = { fault: e, operation: t };
  return r !== void 0 && (i.value = r), En.throwError(n, O.errors.NUMERIC_FAULT, i);
}
let _u = "0";
for (; _u.length < 256; )
  _u += _u;
function H0(n) {
  if (typeof n != "number")
    try {
      n = W.from(n).toNumber();
    } catch {
    }
  return typeof n == "number" && n >= 0 && n <= 256 && !(n % 1) ? "1" + _u.substring(0, n) : En.throwArgumentError("invalid decimal size", "decimals", n);
}
function Ac(n, e) {
  e == null && (e = 0);
  const t = H0(e);
  n = W.from(n);
  const r = n.lt(Zx);
  r && (n = n.mul(ew));
  let i = n.mod(t).toString();
  for (; i.length < t.length - 1; )
    i = "0" + i;
  i = i.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  const s = n.div(t).toString();
  return t.length === 1 ? n = s : n = s + "." + i, r && (n = "-" + n), n;
}
function Vr(n, e) {
  e == null && (e = 0);
  const t = H0(e);
  (typeof n != "string" || !n.match(/^-?[0-9.]+$/)) && En.throwArgumentError("invalid decimal value", "value", n);
  const r = n.substring(0, 1) === "-";
  r && (n = n.substring(1)), n === "." && En.throwArgumentError("missing value", "value", n);
  const i = n.split(".");
  i.length > 2 && En.throwArgumentError("too many decimal points", "value", n);
  let s = i[0], a = i[1];
  for (s || (s = "0"), a || (a = "0"); a[a.length - 1] === "0"; )
    a = a.substring(0, a.length - 1);
  for (a.length > t.length - 1 && tw("fractional component exceeds decimals", "underflow", "parseFixed"), a === "" && (a = "0"); a.length < t.length - 1; )
    a += "0";
  const o = W.from(s), u = W.from(a);
  let l = o.mul(t).add(u);
  return r && (l = l.mul(ew)), l;
}
class fo {
  constructor(e, t, r, i) {
    e !== Eu && En.throwError("cannot use FixedFormat constructor; use FixedFormat.from", O.errors.UNSUPPORTED_OPERATION, {
      operation: "new FixedFormat"
    }), this.signed = t, this.width = r, this.decimals = i, this.name = (t ? "" : "u") + "fixed" + String(r) + "x" + String(i), this._multiplier = H0(i), Object.freeze(this);
  }
  static from(e) {
    if (e instanceof fo)
      return e;
    typeof e == "number" && (e = `fixed128x${e}`);
    let t = !0, r = 128, i = 18;
    if (typeof e == "string") {
      if (e !== "fixed")
        if (e === "ufixed")
          t = !1;
        else {
          const s = e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
          s || En.throwArgumentError("invalid fixed format", "format", e), t = s[1] !== "u", r = parseInt(s[2]), i = parseInt(s[3]);
        }
    } else if (e) {
      const s = (a, o, u) => e[a] == null ? u : (typeof e[a] !== o && En.throwArgumentError("invalid fixed format (" + a + " not " + o + ")", "format." + a, e[a]), e[a]);
      t = s("signed", "boolean", t), r = s("width", "number", r), i = s("decimals", "number", i);
    }
    return r % 8 && En.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", r), i > 80 && En.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", i), new fo(Eu, t, r, i);
  }
}
class Zt {
  constructor(e, t, r, i) {
    e !== Eu && En.throwError("cannot use FixedNumber constructor; use FixedNumber.from", O.errors.UNSUPPORTED_OPERATION, {
      operation: "new FixedFormat"
    }), this.format = i, this._hex = t, this._value = r, this._isFixedNumber = !0, Object.freeze(this);
  }
  _checkFormat(e) {
    this.format.name !== e.format.name && En.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", e);
  }
  addUnsafe(e) {
    this._checkFormat(e);
    const t = Vr(this._value, this.format.decimals), r = Vr(e._value, e.format.decimals);
    return Zt.fromValue(t.add(r), this.format.decimals, this.format);
  }
  subUnsafe(e) {
    this._checkFormat(e);
    const t = Vr(this._value, this.format.decimals), r = Vr(e._value, e.format.decimals);
    return Zt.fromValue(t.sub(r), this.format.decimals, this.format);
  }
  mulUnsafe(e) {
    this._checkFormat(e);
    const t = Vr(this._value, this.format.decimals), r = Vr(e._value, e.format.decimals);
    return Zt.fromValue(t.mul(r).div(this.format._multiplier), this.format.decimals, this.format);
  }
  divUnsafe(e) {
    this._checkFormat(e);
    const t = Vr(this._value, this.format.decimals), r = Vr(e._value, e.format.decimals);
    return Zt.fromValue(t.mul(this.format._multiplier).div(r), this.format.decimals, this.format);
  }
  floor() {
    const e = this.toString().split(".");
    e.length === 1 && e.push("0");
    let t = Zt.from(e[0], this.format);
    const r = !e[1].match(/^(0*)$/);
    return this.isNegative() && r && (t = t.subUnsafe(a2.toFormat(t.format))), t;
  }
  ceiling() {
    const e = this.toString().split(".");
    e.length === 1 && e.push("0");
    let t = Zt.from(e[0], this.format);
    const r = !e[1].match(/^(0*)$/);
    return !this.isNegative() && r && (t = t.addUnsafe(a2.toFormat(t.format))), t;
  }
  round(e) {
    e == null && (e = 0);
    const t = this.toString().split(".");
    if (t.length === 1 && t.push("0"), (e < 0 || e > 80 || e % 1) && En.throwArgumentError("invalid decimal count", "decimals", e), t[1].length <= e)
      return this;
    const r = Zt.from("1" + _u.substring(0, e), this.format), i = y8.toFormat(this.format);
    return this.mulUnsafe(r).addUnsafe(i).floor().divUnsafe(r);
  }
  isZero() {
    return this._value === "0.0" || this._value === "0";
  }
  isNegative() {
    return this._value[0] === "-";
  }
  toString() {
    return this._value;
  }
  toHexString(e) {
    if (e == null)
      return this._hex;
    e % 8 && En.throwArgumentError("invalid byte width", "width", e);
    const t = W.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();
    return Be(t, e / 8);
  }
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  toFormat(e) {
    return Zt.fromString(this._value, e);
  }
  static fromValue(e, t, r) {
    return r == null && t != null && !f8(t) && (r = t, t = null), t == null && (t = 0), r == null && (r = "fixed"), Zt.fromString(Ac(e, t), fo.from(r));
  }
  static fromString(e, t) {
    t == null && (t = "fixed");
    const r = fo.from(t), i = Vr(e, r.decimals);
    !r.signed && i.lt(Zx) && tw("unsigned value cannot be negative", "overflow", "value", e);
    let s = null;
    r.signed ? s = i.toTwos(r.width).toHexString() : (s = i.toHexString(), s = Be(s, r.width / 8));
    const a = Ac(i, r.decimals);
    return new Zt(Eu, s, a, r);
  }
  static fromBytes(e, t) {
    t == null && (t = "fixed");
    const r = fo.from(t);
    if (z(e).length > r.width / 8)
      throw new Error("overflow");
    let i = W.from(e);
    r.signed && (i = i.fromTwos(r.width));
    const s = i.toTwos((r.signed ? 0 : 1) + r.width).toHexString(), a = Ac(i, r.decimals);
    return new Zt(Eu, s, a, r);
  }
  static from(e, t) {
    if (typeof e == "string")
      return Zt.fromString(e, t);
    if (Na(e))
      return Zt.fromBytes(e, t);
    try {
      return Zt.fromValue(e, 0, t);
    } catch (r) {
      if (r.code !== O.errors.INVALID_ARGUMENT)
        throw r;
    }
    return En.throwArgumentError("invalid FixedNumber value", "value", e);
  }
  static isFixedNumber(e) {
    return !!(e && e._isFixedNumber);
  }
}
const a2 = Zt.from(1), y8 = Zt.from("0.5"), m8 = "properties/5.7.0";
var b8 = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const nd = new O(m8);
function V(n, e, t) {
  Object.defineProperty(n, e, {
    enumerable: !0,
    value: t,
    writable: !1
  });
}
function Ir(n, e) {
  for (let t = 0; t < 32; t++) {
    if (n[e])
      return n[e];
    if (!n.prototype || typeof n.prototype != "object")
      break;
    n = Object.getPrototypeOf(n.prototype).constructor;
  }
  return null;
}
function Rt(n) {
  return b8(this, void 0, void 0, function* () {
    const e = Object.keys(n).map((r) => {
      const i = n[r];
      return Promise.resolve(i).then((s) => ({ key: r, value: s }));
    });
    return (yield Promise.all(e)).reduce((r, i) => (r[i.key] = i.value, r), {});
  });
}
function K0(n, e) {
  (!n || typeof n != "object") && nd.throwArgumentError("invalid object", "object", n), Object.keys(n).forEach((t) => {
    e[t] || nd.throwArgumentError("invalid object key - " + t, "transaction:" + t, n);
  });
}
function $t(n) {
  const e = {};
  for (const t in n)
    e[t] = n[t];
  return e;
}
const g8 = { bigint: !0, boolean: !0, function: !0, number: !0, string: !0 };
function nw(n) {
  if (n == null || g8[typeof n])
    return !0;
  if (Array.isArray(n) || typeof n == "object") {
    if (!Object.isFrozen(n))
      return !1;
    const e = Object.keys(n);
    for (let t = 0; t < e.length; t++) {
      let r = null;
      try {
        r = n[e[t]];
      } catch {
        continue;
      }
      if (!nw(r))
        return !1;
    }
    return !0;
  }
  return nd.throwArgumentError(`Cannot deepCopy ${typeof n}`, "object", n);
}
function v8(n) {
  if (nw(n))
    return n;
  if (Array.isArray(n))
    return Object.freeze(n.map((e) => Cs(e)));
  if (typeof n == "object") {
    const e = {};
    for (const t in n) {
      const r = n[t];
      r !== void 0 && V(e, t, Cs(r));
    }
    return e;
  }
  return nd.throwArgumentError(`Cannot deepCopy ${typeof n}`, "object", n);
}
function Cs(n) {
  return v8(n);
}
class Os {
  constructor(e) {
    for (const t in e)
      this[t] = Cs(e[t]);
  }
}
const x8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  defineReadOnly: V,
  getStatic: Ir,
  resolveProperties: Rt,
  checkProperties: K0,
  shallowCopy: $t,
  deepCopy: Cs,
  Description: Os
}, Symbol.toStringTag, { value: "Module" })), Ol = "abi/5.7.0", we = new O(Ol), ba = {};
let o2 = { calldata: !0, memory: !0, storage: !0 }, w8 = { calldata: !0, memory: !0 };
function Zl(n, e) {
  if (n === "bytes" || n === "string") {
    if (o2[e])
      return !0;
  } else if (n === "address") {
    if (e === "payable")
      return !0;
  } else if ((n.indexOf("[") >= 0 || n === "tuple") && w8[e])
    return !0;
  return (o2[e] || e === "payable") && we.throwArgumentError("invalid modifier", "name", e), !1;
}
function T8(n, e) {
  let t = n;
  function r(o) {
    we.throwArgumentError(`unexpected character at position ${o}`, "param", n);
  }
  n = n.replace(/\s/g, " ");
  function i(o) {
    let u = { type: "", name: "", parent: o, state: { allowType: !0 } };
    return e && (u.indexed = !1), u;
  }
  let s = { type: "", name: "", state: { allowType: !0 } }, a = s;
  for (let o = 0; o < n.length; o++) {
    let u = n[o];
    switch (u) {
      case "(":
        a.state.allowType && a.type === "" ? a.type = "tuple" : a.state.allowParams || r(o), a.state.allowType = !1, a.type = Za(a.type), a.components = [i(a)], a = a.components[0];
        break;
      case ")":
        delete a.state, a.name === "indexed" && (e || r(o), a.indexed = !0, a.name = ""), Zl(a.type, a.name) && (a.name = ""), a.type = Za(a.type);
        let l = a;
        a = a.parent, a || r(o), delete l.parent, a.state.allowParams = !1, a.state.allowName = !0, a.state.allowArray = !0;
        break;
      case ",":
        delete a.state, a.name === "indexed" && (e || r(o), a.indexed = !0, a.name = ""), Zl(a.type, a.name) && (a.name = ""), a.type = Za(a.type);
        let c = i(a.parent);
        a.parent.components.push(c), delete a.parent, a = c;
        break;
      case " ":
        a.state.allowType && a.type !== "" && (a.type = Za(a.type), delete a.state.allowType, a.state.allowName = !0, a.state.allowParams = !0), a.state.allowName && a.name !== "" && (a.name === "indexed" ? (e || r(o), a.indexed && r(o), a.indexed = !0, a.name = "") : Zl(a.type, a.name) ? a.name = "" : a.state.allowName = !1);
        break;
      case "[":
        a.state.allowArray || r(o), a.type += u, a.state.allowArray = !1, a.state.allowName = !1, a.state.readArray = !0;
        break;
      case "]":
        a.state.readArray || r(o), a.type += u, a.state.readArray = !1, a.state.allowArray = !0, a.state.allowName = !0;
        break;
      default:
        a.state.allowType ? (a.type += u, a.state.allowParams = !0, a.state.allowArray = !0) : a.state.allowName ? (a.name += u, delete a.state.allowArray) : a.state.readArray ? a.type += u : r(o);
    }
  }
  return a.parent && we.throwArgumentError("unexpected eof", "param", n), delete s.state, a.name === "indexed" ? (e || r(t.length - 7), a.indexed && r(t.length - 7), a.indexed = !0, a.name = "") : Zl(a.type, a.name) && (a.name = ""), s.type = Za(s.type), s;
}
function Cc(n, e) {
  for (let t in e)
    V(n, t, e[t]);
}
const Ee = Object.freeze({
  sighash: "sighash",
  minimal: "minimal",
  full: "full",
  json: "json"
}), A8 = new RegExp(/^(.*)\[([0-9]*)\]$/);
class Gt {
  constructor(e, t) {
    e !== ba && we.throwError("use fromString", O.errors.UNSUPPORTED_OPERATION, {
      operation: "new ParamType()"
    }), Cc(this, t);
    let r = this.type.match(A8);
    r ? Cc(this, {
      arrayLength: parseInt(r[2] || "-1"),
      arrayChildren: Gt.fromObject({
        type: r[1],
        components: this.components
      }),
      baseType: "array"
    }) : Cc(this, {
      arrayLength: null,
      arrayChildren: null,
      baseType: this.components != null ? "tuple" : this.type
    }), this._isParamType = !0, Object.freeze(this);
  }
  format(e) {
    if (e || (e = Ee.sighash), Ee[e] || we.throwArgumentError("invalid format type", "format", e), e === Ee.json) {
      let r = {
        type: this.baseType === "tuple" ? "tuple" : this.type,
        name: this.name || void 0
      };
      return typeof this.indexed == "boolean" && (r.indexed = this.indexed), this.components && (r.components = this.components.map((i) => JSON.parse(i.format(e)))), JSON.stringify(r);
    }
    let t = "";
    return this.baseType === "array" ? (t += this.arrayChildren.format(e), t += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]") : this.baseType === "tuple" ? (e !== Ee.sighash && (t += this.type), t += "(" + this.components.map((r) => r.format(e)).join(e === Ee.full ? ", " : ",") + ")") : t += this.type, e !== Ee.sighash && (this.indexed === !0 && (t += " indexed"), e === Ee.full && this.name && (t += " " + this.name)), t;
  }
  static from(e, t) {
    return typeof e == "string" ? Gt.fromString(e, t) : Gt.fromObject(e);
  }
  static fromObject(e) {
    return Gt.isParamType(e) ? e : new Gt(ba, {
      name: e.name || null,
      type: Za(e.type),
      indexed: e.indexed == null ? null : !!e.indexed,
      components: e.components ? e.components.map(Gt.fromObject) : null
    });
  }
  static fromString(e, t) {
    function r(i) {
      return Gt.fromObject({
        name: i.name,
        type: i.type,
        indexed: i.indexed,
        components: i.components
      });
    }
    return r(T8(e, !!t));
  }
  static isParamType(e) {
    return !!(e != null && e._isParamType);
  }
}
function Qu(n, e) {
  return S8(n).map((t) => Gt.fromString(t, e));
}
class qr {
  constructor(e, t) {
    e !== ba && we.throwError("use a static from method", O.errors.UNSUPPORTED_OPERATION, {
      operation: "new Fragment()"
    }), Cc(this, t), this._isFragment = !0, Object.freeze(this);
  }
  static from(e) {
    return qr.isFragment(e) ? e : typeof e == "string" ? qr.fromString(e) : qr.fromObject(e);
  }
  static fromObject(e) {
    if (qr.isFragment(e))
      return e;
    switch (e.type) {
      case "function":
        return Mr.fromObject(e);
      case "event":
        return Kr.fromObject(e);
      case "constructor":
        return _r.fromObject(e);
      case "error":
        return Ti.fromObject(e);
      case "fallback":
      case "receive":
        return null;
    }
    return we.throwArgumentError("invalid fragment object", "value", e);
  }
  static fromString(e) {
    return e = e.replace(/\s/g, " "), e = e.replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " "), e = e.trim(), e.split(" ")[0] === "event" ? Kr.fromString(e.substring(5).trim()) : e.split(" ")[0] === "function" ? Mr.fromString(e.substring(8).trim()) : e.split("(")[0].trim() === "constructor" ? _r.fromString(e.trim()) : e.split(" ")[0] === "error" ? Ti.fromString(e.substring(5).trim()) : we.throwArgumentError("unsupported fragment", "value", e);
  }
  static isFragment(e) {
    return !!(e && e._isFragment);
  }
}
class Kr extends qr {
  format(e) {
    if (e || (e = Ee.sighash), Ee[e] || we.throwArgumentError("invalid format type", "format", e), e === Ee.json)
      return JSON.stringify({
        type: "event",
        anonymous: this.anonymous,
        name: this.name,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e)))
      });
    let t = "";
    return e !== Ee.sighash && (t += "event "), t += this.name + "(" + this.inputs.map((r) => r.format(e)).join(e === Ee.full ? ", " : ",") + ") ", e !== Ee.sighash && this.anonymous && (t += "anonymous "), t.trim();
  }
  static from(e) {
    return typeof e == "string" ? Kr.fromString(e) : Kr.fromObject(e);
  }
  static fromObject(e) {
    if (Kr.isEventFragment(e))
      return e;
    e.type !== "event" && we.throwArgumentError("invalid event object", "value", e);
    const t = {
      name: Ju(e.name),
      anonymous: e.anonymous,
      inputs: e.inputs ? e.inputs.map(Gt.fromObject) : [],
      type: "event"
    };
    return new Kr(ba, t);
  }
  static fromString(e) {
    let t = e.match(Yu);
    t || we.throwArgumentError("invalid event string", "value", e);
    let r = !1;
    return t[3].split(" ").forEach((i) => {
      switch (i.trim()) {
        case "anonymous":
          r = !0;
          break;
        case "":
          break;
        default:
          we.warn("unknown modifier: " + i);
      }
    }), Kr.fromObject({
      name: t[1].trim(),
      anonymous: r,
      inputs: Qu(t[2], !0),
      type: "event"
    });
  }
  static isEventFragment(e) {
    return e && e._isFragment && e.type === "event";
  }
}
function rw(n, e) {
  e.gas = null;
  let t = n.split("@");
  return t.length !== 1 ? (t.length > 2 && we.throwArgumentError("invalid human-readable ABI signature", "value", n), t[1].match(/^[0-9]+$/) || we.throwArgumentError("invalid human-readable ABI signature gas", "value", n), e.gas = W.from(t[1]), t[0]) : n;
}
function iw(n, e) {
  e.constant = !1, e.payable = !1, e.stateMutability = "nonpayable", n.split(" ").forEach((t) => {
    switch (t.trim()) {
      case "constant":
        e.constant = !0;
        break;
      case "payable":
        e.payable = !0, e.stateMutability = "payable";
        break;
      case "nonpayable":
        e.payable = !1, e.stateMutability = "nonpayable";
        break;
      case "pure":
        e.constant = !0, e.stateMutability = "pure";
        break;
      case "view":
        e.constant = !0, e.stateMutability = "view";
        break;
      case "external":
      case "public":
      case "":
        break;
      default:
        console.log("unknown modifier: " + t);
    }
  });
}
function sw(n) {
  let e = {
    constant: !1,
    payable: !0,
    stateMutability: "payable"
  };
  return n.stateMutability != null ? (e.stateMutability = n.stateMutability, e.constant = e.stateMutability === "view" || e.stateMutability === "pure", n.constant != null && !!n.constant !== e.constant && we.throwArgumentError("cannot have constant function with mutability " + e.stateMutability, "value", n), e.payable = e.stateMutability === "payable", n.payable != null && !!n.payable !== e.payable && we.throwArgumentError("cannot have payable function with mutability " + e.stateMutability, "value", n)) : n.payable != null ? (e.payable = !!n.payable, n.constant == null && !e.payable && n.type !== "constructor" && we.throwArgumentError("unable to determine stateMutability", "value", n), e.constant = !!n.constant, e.constant ? e.stateMutability = "view" : e.stateMutability = e.payable ? "payable" : "nonpayable", e.payable && e.constant && we.throwArgumentError("cannot have constant payable function", "value", n)) : n.constant != null ? (e.constant = !!n.constant, e.payable = !e.constant, e.stateMutability = e.constant ? "view" : "payable") : n.type !== "constructor" && we.throwArgumentError("unable to determine stateMutability", "value", n), e;
}
class _r extends qr {
  format(e) {
    if (e || (e = Ee.sighash), Ee[e] || we.throwArgumentError("invalid format type", "format", e), e === Ee.json)
      return JSON.stringify({
        type: "constructor",
        stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : void 0,
        payable: this.payable,
        gas: this.gas ? this.gas.toNumber() : void 0,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e)))
      });
    e === Ee.sighash && we.throwError("cannot format a constructor for sighash", O.errors.UNSUPPORTED_OPERATION, {
      operation: "format(sighash)"
    });
    let t = "constructor(" + this.inputs.map((r) => r.format(e)).join(e === Ee.full ? ", " : ",") + ") ";
    return this.stateMutability && this.stateMutability !== "nonpayable" && (t += this.stateMutability + " "), t.trim();
  }
  static from(e) {
    return typeof e == "string" ? _r.fromString(e) : _r.fromObject(e);
  }
  static fromObject(e) {
    if (_r.isConstructorFragment(e))
      return e;
    e.type !== "constructor" && we.throwArgumentError("invalid constructor object", "value", e);
    let t = sw(e);
    t.constant && we.throwArgumentError("constructor cannot be constant", "value", e);
    const r = {
      name: null,
      type: e.type,
      inputs: e.inputs ? e.inputs.map(Gt.fromObject) : [],
      payable: t.payable,
      stateMutability: t.stateMutability,
      gas: e.gas ? W.from(e.gas) : null
    };
    return new _r(ba, r);
  }
  static fromString(e) {
    let t = { type: "constructor" };
    e = rw(e, t);
    let r = e.match(Yu);
    return (!r || r[1].trim() !== "constructor") && we.throwArgumentError("invalid constructor string", "value", e), t.inputs = Qu(r[2].trim(), !1), iw(r[3].trim(), t), _r.fromObject(t);
  }
  static isConstructorFragment(e) {
    return e && e._isFragment && e.type === "constructor";
  }
}
class Mr extends _r {
  format(e) {
    if (e || (e = Ee.sighash), Ee[e] || we.throwArgumentError("invalid format type", "format", e), e === Ee.json)
      return JSON.stringify({
        type: "function",
        name: this.name,
        constant: this.constant,
        stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : void 0,
        payable: this.payable,
        gas: this.gas ? this.gas.toNumber() : void 0,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e))),
        outputs: this.outputs.map((r) => JSON.parse(r.format(e)))
      });
    let t = "";
    return e !== Ee.sighash && (t += "function "), t += this.name + "(" + this.inputs.map((r) => r.format(e)).join(e === Ee.full ? ", " : ",") + ") ", e !== Ee.sighash && (this.stateMutability ? this.stateMutability !== "nonpayable" && (t += this.stateMutability + " ") : this.constant && (t += "view "), this.outputs && this.outputs.length && (t += "returns (" + this.outputs.map((r) => r.format(e)).join(", ") + ") "), this.gas != null && (t += "@" + this.gas.toString() + " ")), t.trim();
  }
  static from(e) {
    return typeof e == "string" ? Mr.fromString(e) : Mr.fromObject(e);
  }
  static fromObject(e) {
    if (Mr.isFunctionFragment(e))
      return e;
    e.type !== "function" && we.throwArgumentError("invalid function object", "value", e);
    let t = sw(e);
    const r = {
      type: e.type,
      name: Ju(e.name),
      constant: t.constant,
      inputs: e.inputs ? e.inputs.map(Gt.fromObject) : [],
      outputs: e.outputs ? e.outputs.map(Gt.fromObject) : [],
      payable: t.payable,
      stateMutability: t.stateMutability,
      gas: e.gas ? W.from(e.gas) : null
    };
    return new Mr(ba, r);
  }
  static fromString(e) {
    let t = { type: "function" };
    e = rw(e, t);
    let r = e.split(" returns ");
    r.length > 2 && we.throwArgumentError("invalid function string", "value", e);
    let i = r[0].match(Yu);
    if (i || we.throwArgumentError("invalid function signature", "value", e), t.name = i[1].trim(), t.name && Ju(t.name), t.inputs = Qu(i[2], !1), iw(i[3].trim(), t), r.length > 1) {
      let s = r[1].match(Yu);
      (s[1].trim() != "" || s[3].trim() != "") && we.throwArgumentError("unexpected tokens", "value", e), t.outputs = Qu(s[2], !1);
    } else
      t.outputs = [];
    return Mr.fromObject(t);
  }
  static isFunctionFragment(e) {
    return e && e._isFragment && e.type === "function";
  }
}
function u2(n) {
  const e = n.format();
  return (e === "Error(string)" || e === "Panic(uint256)") && we.throwArgumentError(`cannot specify user defined ${e} error`, "fragment", n), n;
}
class Ti extends qr {
  format(e) {
    if (e || (e = Ee.sighash), Ee[e] || we.throwArgumentError("invalid format type", "format", e), e === Ee.json)
      return JSON.stringify({
        type: "error",
        name: this.name,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e)))
      });
    let t = "";
    return e !== Ee.sighash && (t += "error "), t += this.name + "(" + this.inputs.map((r) => r.format(e)).join(e === Ee.full ? ", " : ",") + ") ", t.trim();
  }
  static from(e) {
    return typeof e == "string" ? Ti.fromString(e) : Ti.fromObject(e);
  }
  static fromObject(e) {
    if (Ti.isErrorFragment(e))
      return e;
    e.type !== "error" && we.throwArgumentError("invalid error object", "value", e);
    const t = {
      type: e.type,
      name: Ju(e.name),
      inputs: e.inputs ? e.inputs.map(Gt.fromObject) : []
    };
    return u2(new Ti(ba, t));
  }
  static fromString(e) {
    let t = { type: "error" }, r = e.match(Yu);
    return r || we.throwArgumentError("invalid error signature", "value", e), t.name = r[1].trim(), t.name && Ju(t.name), t.inputs = Qu(r[2], !1), u2(Ti.fromObject(t));
  }
  static isErrorFragment(e) {
    return e && e._isFragment && e.type === "error";
  }
}
function Za(n) {
  return n.match(/^uint($|[^1-9])/) ? n = "uint256" + n.substring(4) : n.match(/^int($|[^1-9])/) && (n = "int256" + n.substring(3)), n;
}
const C8 = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
function Ju(n) {
  return (!n || !n.match(C8)) && we.throwArgumentError(`invalid identifier "${n}"`, "value", n), n;
}
const Yu = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
function S8(n) {
  n = n.trim();
  let e = [], t = "", r = 0;
  for (let i = 0; i < n.length; i++) {
    let s = n[i];
    s === "," && r === 0 ? (e.push(t), t = "") : (t += s, s === "(" ? r++ : s === ")" && (r--, r === -1 && we.throwArgumentError("unbalanced parenthesis", "value", n)));
  }
  return t && e.push(t), e;
}
const q0 = new O(Ol);
function aw(n) {
  const e = [], t = function(r, i) {
    if (!!Array.isArray(i))
      for (let s in i) {
        const a = r.slice();
        a.push(s);
        try {
          t(a, i[s]);
        } catch (o) {
          e.push({ path: a, error: o });
        }
      }
  };
  return t([], n), e;
}
class zi {
  constructor(e, t, r, i) {
    this.name = e, this.type = t, this.localName = r, this.dynamic = i;
  }
  _throwError(e, t) {
    q0.throwArgumentError(e, this.localName, t);
  }
}
class ph {
  constructor(e) {
    V(this, "wordSize", e || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(e);
  }
  get data() {
    return Sn(this._data);
  }
  get length() {
    return this._dataLength;
  }
  _writeData(e) {
    return this._data.push(e), this._dataLength += e.length, e.length;
  }
  appendWriter(e) {
    return this._writeData(Ve(e._data));
  }
  writeBytes(e) {
    let t = z(e);
    const r = t.length % this.wordSize;
    return r && (t = Ve([t, this._padding.slice(r)])), this._writeData(t);
  }
  _getValue(e) {
    let t = z(W.from(e));
    return t.length > this.wordSize && q0.throwError("value out-of-bounds", O.errors.BUFFER_OVERRUN, {
      length: this.wordSize,
      offset: t.length
    }), t.length % this.wordSize && (t = Ve([this._padding.slice(t.length % this.wordSize), t])), t;
  }
  writeValue(e) {
    return this._writeData(this._getValue(e));
  }
  writeUpdatableValue() {
    const e = this._data.length;
    return this._data.push(this._padding), this._dataLength += this.wordSize, (t) => {
      this._data[e] = this._getValue(t);
    };
  }
}
class rd {
  constructor(e, t, r, i) {
    V(this, "_data", z(e)), V(this, "wordSize", t || 32), V(this, "_coerceFunc", r), V(this, "allowLoose", i), this._offset = 0;
  }
  get data() {
    return K(this._data);
  }
  get consumed() {
    return this._offset;
  }
  static coerce(e, t) {
    let r = e.match("^u?int([0-9]+)$");
    return r && parseInt(r[1]) <= 48 && (t = t.toNumber()), t;
  }
  coerce(e, t) {
    return this._coerceFunc ? this._coerceFunc(e, t) : rd.coerce(e, t);
  }
  _peekBytes(e, t, r) {
    let i = Math.ceil(t / this.wordSize) * this.wordSize;
    return this._offset + i > this._data.length && (this.allowLoose && r && this._offset + t <= this._data.length ? i = t : q0.throwError("data out-of-bounds", O.errors.BUFFER_OVERRUN, {
      length: this._data.length,
      offset: this._offset + i
    })), this._data.slice(this._offset, this._offset + i);
  }
  subReader(e) {
    return new rd(this._data.slice(this._offset + e), this.wordSize, this._coerceFunc, this.allowLoose);
  }
  readBytes(e, t) {
    let r = this._peekBytes(0, e, !!t);
    return this._offset += r.length, r.slice(0, e);
  }
  readValue() {
    return W.from(this.readBytes(this.wordSize));
  }
}
const ga = typeof global < "u" ? global : typeof self < "u" ? self : typeof window < "u" ? window : {};
function ow() {
  throw new Error("setTimeout has not been defined");
}
function uw() {
  throw new Error("clearTimeout has not been defined");
}
var is = ow, ss = uw;
typeof ga.setTimeout == "function" && (is = setTimeout);
typeof ga.clearTimeout == "function" && (ss = clearTimeout);
function lw(n) {
  if (is === setTimeout)
    return setTimeout(n, 0);
  if ((is === ow || !is) && setTimeout)
    return is = setTimeout, setTimeout(n, 0);
  try {
    return is(n, 0);
  } catch {
    try {
      return is.call(null, n, 0);
    } catch {
      return is.call(this, n, 0);
    }
  }
}
function E8(n) {
  if (ss === clearTimeout)
    return clearTimeout(n);
  if ((ss === uw || !ss) && clearTimeout)
    return ss = clearTimeout, clearTimeout(n);
  try {
    return ss(n);
  } catch {
    try {
      return ss.call(null, n);
    } catch {
      return ss.call(this, n);
    }
  }
}
var Ci = [], po = !1, oa, Sc = -1;
function _8() {
  !po || !oa || (po = !1, oa.length ? Ci = oa.concat(Ci) : Sc = -1, Ci.length && cw());
}
function cw() {
  if (!po) {
    var n = lw(_8);
    po = !0;
    for (var e = Ci.length; e; ) {
      for (oa = Ci, Ci = []; ++Sc < e; )
        oa && oa[Sc].run();
      Sc = -1, e = Ci.length;
    }
    oa = null, po = !1, E8(n);
  }
}
function M8(n) {
  var e = new Array(arguments.length - 1);
  if (arguments.length > 1)
    for (var t = 1; t < arguments.length; t++)
      e[t - 1] = arguments[t];
  Ci.push(new dw(n, e)), Ci.length === 1 && !po && lw(cw);
}
function dw(n, e) {
  this.fun = n, this.array = e;
}
dw.prototype.run = function() {
  this.fun.apply(null, this.array);
};
var R8 = "browser", P8 = "browser", O8 = !0, I8 = {}, k8 = [], D8 = "", B8 = {}, N8 = {}, F8 = {};
function La() {
}
var L8 = La, $8 = La, U8 = La, V8 = La, j8 = La, G8 = La, W8 = La;
function z8(n) {
  throw new Error("process.binding is not supported");
}
function H8() {
  return "/";
}
function K8(n) {
  throw new Error("process.chdir is not supported");
}
function q8() {
  return 0;
}
var eo = ga.performance || {}, Q8 = eo.now || eo.mozNow || eo.msNow || eo.oNow || eo.webkitNow || function() {
  return new Date().getTime();
};
function J8(n) {
  var e = Q8.call(eo) * 1e-3, t = Math.floor(e), r = Math.floor(e % 1 * 1e9);
  return n && (t = t - n[0], r = r - n[1], r < 0 && (t--, r += 1e9)), [t, r];
}
var Y8 = new Date();
function X8() {
  var n = new Date(), e = n - Y8;
  return e / 1e3;
}
var Ec = {
  nextTick: M8,
  title: R8,
  browser: O8,
  env: I8,
  argv: k8,
  version: D8,
  versions: B8,
  on: L8,
  addListener: $8,
  once: U8,
  off: V8,
  removeListener: j8,
  removeAllListeners: G8,
  emit: W8,
  binding: z8,
  cwd: H8,
  chdir: K8,
  umask: q8,
  hrtime: J8,
  platform: P8,
  release: N8,
  config: F8,
  uptime: X8
}, fw = { exports: {} };
(function(n) {
  (function() {
    var e = "input is invalid type", t = "finalize already called", r = typeof window == "object", i = r ? window : {};
    i.JS_SHA3_NO_WINDOW && (r = !1);
    var s = !r && typeof self == "object", a = !i.JS_SHA3_NO_NODE_JS && typeof Ec == "object" && Ec.versions && Ec.versions.node;
    a ? i = os : s && (i = self);
    var o = !i.JS_SHA3_NO_COMMON_JS && !0 && n.exports, u = !i.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", l = "0123456789abcdef".split(""), c = [31, 7936, 2031616, 520093696], p = [4, 1024, 262144, 67108864], b = [1, 256, 65536, 16777216], A = [6, 1536, 393216, 100663296], g = [0, 8, 16, 24], w = [
      1,
      0,
      32898,
      0,
      32906,
      2147483648,
      2147516416,
      2147483648,
      32907,
      0,
      2147483649,
      0,
      2147516545,
      2147483648,
      32777,
      2147483648,
      138,
      0,
      136,
      0,
      2147516425,
      0,
      2147483658,
      0,
      2147516555,
      0,
      139,
      2147483648,
      32905,
      2147483648,
      32771,
      2147483648,
      32770,
      2147483648,
      128,
      2147483648,
      32778,
      0,
      2147483658,
      2147483648,
      2147516545,
      2147483648,
      32896,
      2147483648,
      2147483649,
      0,
      2147516424,
      2147483648
    ], T = [224, 256, 384, 512], _ = [128, 256], I = ["hex", "buffer", "arrayBuffer", "array", "digest"], N = {
      128: 168,
      256: 136
    };
    (i.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(h) {
      return Object.prototype.toString.call(h) === "[object Array]";
    }), u && (i.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(h) {
      return typeof h == "object" && h.buffer && h.buffer.constructor === ArrayBuffer;
    });
    for (var B = function(h, R, L) {
      return function(F) {
        return new f(h, R, h).update(F)[L]();
      };
    }, D = function(h, R, L) {
      return function(F, U) {
        return new f(h, R, U).update(F)[L]();
      };
    }, $ = function(h, R, L) {
      return function(F, U, te, q) {
        return d["cshake" + h].update(F, U, te, q)[L]();
      };
    }, H = function(h, R, L) {
      return function(F, U, te, q) {
        return d["kmac" + h].update(F, U, te, q)[L]();
      };
    }, j = function(h, R, L, F) {
      for (var U = 0; U < I.length; ++U) {
        var te = I[U];
        h[te] = R(L, F, te);
      }
      return h;
    }, Q = function(h, R) {
      var L = B(h, R, "hex");
      return L.create = function() {
        return new f(h, R, h);
      }, L.update = function(F) {
        return L.create().update(F);
      }, j(L, B, h, R);
    }, oe = function(h, R) {
      var L = D(h, R, "hex");
      return L.create = function(F) {
        return new f(h, R, F);
      }, L.update = function(F, U) {
        return L.create(U).update(F);
      }, j(L, D, h, R);
    }, J = function(h, R) {
      var L = N[h], F = $(h, R, "hex");
      return F.create = function(U, te, q) {
        return !te && !q ? d["shake" + h].create(U) : new f(h, R, U).bytepad([te, q], L);
      }, F.update = function(U, te, q, Y) {
        return F.create(te, q, Y).update(U);
      }, j(F, $, h, R);
    }, ue = function(h, R) {
      var L = N[h], F = H(h, R, "hex");
      return F.create = function(U, te, q) {
        return new v(h, R, te).bytepad(["KMAC", q], L).bytepad([U], L);
      }, F.update = function(U, te, q, Y) {
        return F.create(U, q, Y).update(te);
      }, j(F, H, h, R);
    }, E = [
      { name: "keccak", padding: b, bits: T, createMethod: Q },
      { name: "sha3", padding: A, bits: T, createMethod: Q },
      { name: "shake", padding: c, bits: _, createMethod: oe },
      { name: "cshake", padding: p, bits: _, createMethod: J },
      { name: "kmac", padding: p, bits: _, createMethod: ue }
    ], d = {}, y = [], x = 0; x < E.length; ++x)
      for (var S = E[x], C = S.bits, M = 0; M < C.length; ++M) {
        var P = S.name + "_" + C[M];
        if (y.push(P), d[P] = S.createMethod(C[M], S.padding), S.name !== "sha3") {
          var m = S.name + C[M];
          y.push(m), d[m] = d[P];
        }
      }
    function f(h, R, L) {
      this.blocks = [], this.s = [], this.padding = R, this.outputBits = L, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (h << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = L >> 5, this.extraBytes = (L & 31) >> 3;
      for (var F = 0; F < 50; ++F)
        this.s[F] = 0;
    }
    f.prototype.update = function(h) {
      if (this.finalized)
        throw new Error(t);
      var R, L = typeof h;
      if (L !== "string") {
        if (L === "object") {
          if (h === null)
            throw new Error(e);
          if (u && h.constructor === ArrayBuffer)
            h = new Uint8Array(h);
          else if (!Array.isArray(h) && (!u || !ArrayBuffer.isView(h)))
            throw new Error(e);
        } else
          throw new Error(e);
        R = !0;
      }
      for (var F = this.blocks, U = this.byteCount, te = h.length, q = this.blockCount, Y = 0, Tt = this.s, ne, de; Y < te; ) {
        if (this.reset)
          for (this.reset = !1, F[0] = this.block, ne = 1; ne < q + 1; ++ne)
            F[ne] = 0;
        if (R)
          for (ne = this.start; Y < te && ne < U; ++Y)
            F[ne >> 2] |= h[Y] << g[ne++ & 3];
        else
          for (ne = this.start; Y < te && ne < U; ++Y)
            de = h.charCodeAt(Y), de < 128 ? F[ne >> 2] |= de << g[ne++ & 3] : de < 2048 ? (F[ne >> 2] |= (192 | de >> 6) << g[ne++ & 3], F[ne >> 2] |= (128 | de & 63) << g[ne++ & 3]) : de < 55296 || de >= 57344 ? (F[ne >> 2] |= (224 | de >> 12) << g[ne++ & 3], F[ne >> 2] |= (128 | de >> 6 & 63) << g[ne++ & 3], F[ne >> 2] |= (128 | de & 63) << g[ne++ & 3]) : (de = 65536 + ((de & 1023) << 10 | h.charCodeAt(++Y) & 1023), F[ne >> 2] |= (240 | de >> 18) << g[ne++ & 3], F[ne >> 2] |= (128 | de >> 12 & 63) << g[ne++ & 3], F[ne >> 2] |= (128 | de >> 6 & 63) << g[ne++ & 3], F[ne >> 2] |= (128 | de & 63) << g[ne++ & 3]);
        if (this.lastByteIndex = ne, ne >= U) {
          for (this.start = ne - U, this.block = F[q], ne = 0; ne < q; ++ne)
            Tt[ne] ^= F[ne];
          k(Tt), this.reset = !0;
        } else
          this.start = ne;
      }
      return this;
    }, f.prototype.encode = function(h, R) {
      var L = h & 255, F = 1, U = [L];
      for (h = h >> 8, L = h & 255; L > 0; )
        U.unshift(L), h = h >> 8, L = h & 255, ++F;
      return R ? U.push(F) : U.unshift(F), this.update(U), U.length;
    }, f.prototype.encodeString = function(h) {
      var R, L = typeof h;
      if (L !== "string") {
        if (L === "object") {
          if (h === null)
            throw new Error(e);
          if (u && h.constructor === ArrayBuffer)
            h = new Uint8Array(h);
          else if (!Array.isArray(h) && (!u || !ArrayBuffer.isView(h)))
            throw new Error(e);
        } else
          throw new Error(e);
        R = !0;
      }
      var F = 0, U = h.length;
      if (R)
        F = U;
      else
        for (var te = 0; te < h.length; ++te) {
          var q = h.charCodeAt(te);
          q < 128 ? F += 1 : q < 2048 ? F += 2 : q < 55296 || q >= 57344 ? F += 3 : (q = 65536 + ((q & 1023) << 10 | h.charCodeAt(++te) & 1023), F += 4);
        }
      return F += this.encode(F * 8), this.update(h), F;
    }, f.prototype.bytepad = function(h, R) {
      for (var L = this.encode(R), F = 0; F < h.length; ++F)
        L += this.encodeString(h[F]);
      var U = R - L % R, te = [];
      return te.length = U, this.update(te), this;
    }, f.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = !0;
        var h = this.blocks, R = this.lastByteIndex, L = this.blockCount, F = this.s;
        if (h[R >> 2] |= this.padding[R & 3], this.lastByteIndex === this.byteCount)
          for (h[0] = h[L], R = 1; R < L + 1; ++R)
            h[R] = 0;
        for (h[L - 1] |= 2147483648, R = 0; R < L; ++R)
          F[R] ^= h[R];
        k(F);
      }
    }, f.prototype.toString = f.prototype.hex = function() {
      this.finalize();
      for (var h = this.blockCount, R = this.s, L = this.outputBlocks, F = this.extraBytes, U = 0, te = 0, q = "", Y; te < L; ) {
        for (U = 0; U < h && te < L; ++U, ++te)
          Y = R[U], q += l[Y >> 4 & 15] + l[Y & 15] + l[Y >> 12 & 15] + l[Y >> 8 & 15] + l[Y >> 20 & 15] + l[Y >> 16 & 15] + l[Y >> 28 & 15] + l[Y >> 24 & 15];
        te % h === 0 && (k(R), U = 0);
      }
      return F && (Y = R[U], q += l[Y >> 4 & 15] + l[Y & 15], F > 1 && (q += l[Y >> 12 & 15] + l[Y >> 8 & 15]), F > 2 && (q += l[Y >> 20 & 15] + l[Y >> 16 & 15])), q;
    }, f.prototype.arrayBuffer = function() {
      this.finalize();
      var h = this.blockCount, R = this.s, L = this.outputBlocks, F = this.extraBytes, U = 0, te = 0, q = this.outputBits >> 3, Y;
      F ? Y = new ArrayBuffer(L + 1 << 2) : Y = new ArrayBuffer(q);
      for (var Tt = new Uint32Array(Y); te < L; ) {
        for (U = 0; U < h && te < L; ++U, ++te)
          Tt[te] = R[U];
        te % h === 0 && k(R);
      }
      return F && (Tt[U] = R[U], Y = Y.slice(0, q)), Y;
    }, f.prototype.buffer = f.prototype.arrayBuffer, f.prototype.digest = f.prototype.array = function() {
      this.finalize();
      for (var h = this.blockCount, R = this.s, L = this.outputBlocks, F = this.extraBytes, U = 0, te = 0, q = [], Y, Tt; te < L; ) {
        for (U = 0; U < h && te < L; ++U, ++te)
          Y = te << 2, Tt = R[U], q[Y] = Tt & 255, q[Y + 1] = Tt >> 8 & 255, q[Y + 2] = Tt >> 16 & 255, q[Y + 3] = Tt >> 24 & 255;
        te % h === 0 && k(R);
      }
      return F && (Y = te << 2, Tt = R[U], q[Y] = Tt & 255, F > 1 && (q[Y + 1] = Tt >> 8 & 255), F > 2 && (q[Y + 2] = Tt >> 16 & 255)), q;
    };
    function v(h, R, L) {
      f.call(this, h, R, L);
    }
    v.prototype = new f(), v.prototype.finalize = function() {
      return this.encode(this.outputBits, !0), f.prototype.finalize.call(this);
    };
    var k = function(h) {
      var R, L, F, U, te, q, Y, Tt, ne, de, Ns, je, Ge, Fs, We, ze, Ls, He, Ke, $s, qe, Qe, Us, Je, Ye, Vs, Xe, Ze, js, et, tt, Gs, nt, rt, Ws, it, st, zs, at, ot, Hs, ut, lt, Ks, ct, dt, qs, ft, pt, Qs, ht, yt, Js, mt, bt, Ys, gt, vt, qi, Qi, Ji, Yi, Xi;
      for (F = 0; F < 48; F += 2)
        U = h[0] ^ h[10] ^ h[20] ^ h[30] ^ h[40], te = h[1] ^ h[11] ^ h[21] ^ h[31] ^ h[41], q = h[2] ^ h[12] ^ h[22] ^ h[32] ^ h[42], Y = h[3] ^ h[13] ^ h[23] ^ h[33] ^ h[43], Tt = h[4] ^ h[14] ^ h[24] ^ h[34] ^ h[44], ne = h[5] ^ h[15] ^ h[25] ^ h[35] ^ h[45], de = h[6] ^ h[16] ^ h[26] ^ h[36] ^ h[46], Ns = h[7] ^ h[17] ^ h[27] ^ h[37] ^ h[47], je = h[8] ^ h[18] ^ h[28] ^ h[38] ^ h[48], Ge = h[9] ^ h[19] ^ h[29] ^ h[39] ^ h[49], R = je ^ (q << 1 | Y >>> 31), L = Ge ^ (Y << 1 | q >>> 31), h[0] ^= R, h[1] ^= L, h[10] ^= R, h[11] ^= L, h[20] ^= R, h[21] ^= L, h[30] ^= R, h[31] ^= L, h[40] ^= R, h[41] ^= L, R = U ^ (Tt << 1 | ne >>> 31), L = te ^ (ne << 1 | Tt >>> 31), h[2] ^= R, h[3] ^= L, h[12] ^= R, h[13] ^= L, h[22] ^= R, h[23] ^= L, h[32] ^= R, h[33] ^= L, h[42] ^= R, h[43] ^= L, R = q ^ (de << 1 | Ns >>> 31), L = Y ^ (Ns << 1 | de >>> 31), h[4] ^= R, h[5] ^= L, h[14] ^= R, h[15] ^= L, h[24] ^= R, h[25] ^= L, h[34] ^= R, h[35] ^= L, h[44] ^= R, h[45] ^= L, R = Tt ^ (je << 1 | Ge >>> 31), L = ne ^ (Ge << 1 | je >>> 31), h[6] ^= R, h[7] ^= L, h[16] ^= R, h[17] ^= L, h[26] ^= R, h[27] ^= L, h[36] ^= R, h[37] ^= L, h[46] ^= R, h[47] ^= L, R = de ^ (U << 1 | te >>> 31), L = Ns ^ (te << 1 | U >>> 31), h[8] ^= R, h[9] ^= L, h[18] ^= R, h[19] ^= L, h[28] ^= R, h[29] ^= L, h[38] ^= R, h[39] ^= L, h[48] ^= R, h[49] ^= L, Fs = h[0], We = h[1], dt = h[11] << 4 | h[10] >>> 28, qs = h[10] << 4 | h[11] >>> 28, Ze = h[20] << 3 | h[21] >>> 29, js = h[21] << 3 | h[20] >>> 29, Qi = h[31] << 9 | h[30] >>> 23, Ji = h[30] << 9 | h[31] >>> 23, ut = h[40] << 18 | h[41] >>> 14, lt = h[41] << 18 | h[40] >>> 14, rt = h[2] << 1 | h[3] >>> 31, Ws = h[3] << 1 | h[2] >>> 31, ze = h[13] << 12 | h[12] >>> 20, Ls = h[12] << 12 | h[13] >>> 20, ft = h[22] << 10 | h[23] >>> 22, pt = h[23] << 10 | h[22] >>> 22, et = h[33] << 13 | h[32] >>> 19, tt = h[32] << 13 | h[33] >>> 19, Yi = h[42] << 2 | h[43] >>> 30, Xi = h[43] << 2 | h[42] >>> 30, mt = h[5] << 30 | h[4] >>> 2, bt = h[4] << 30 | h[5] >>> 2, it = h[14] << 6 | h[15] >>> 26, st = h[15] << 6 | h[14] >>> 26, He = h[25] << 11 | h[24] >>> 21, Ke = h[24] << 11 | h[25] >>> 21, Qs = h[34] << 15 | h[35] >>> 17, ht = h[35] << 15 | h[34] >>> 17, Gs = h[45] << 29 | h[44] >>> 3, nt = h[44] << 29 | h[45] >>> 3, Je = h[6] << 28 | h[7] >>> 4, Ye = h[7] << 28 | h[6] >>> 4, Ys = h[17] << 23 | h[16] >>> 9, gt = h[16] << 23 | h[17] >>> 9, zs = h[26] << 25 | h[27] >>> 7, at = h[27] << 25 | h[26] >>> 7, $s = h[36] << 21 | h[37] >>> 11, qe = h[37] << 21 | h[36] >>> 11, yt = h[47] << 24 | h[46] >>> 8, Js = h[46] << 24 | h[47] >>> 8, Ks = h[8] << 27 | h[9] >>> 5, ct = h[9] << 27 | h[8] >>> 5, Vs = h[18] << 20 | h[19] >>> 12, Xe = h[19] << 20 | h[18] >>> 12, vt = h[29] << 7 | h[28] >>> 25, qi = h[28] << 7 | h[29] >>> 25, ot = h[38] << 8 | h[39] >>> 24, Hs = h[39] << 8 | h[38] >>> 24, Qe = h[48] << 14 | h[49] >>> 18, Us = h[49] << 14 | h[48] >>> 18, h[0] = Fs ^ ~ze & He, h[1] = We ^ ~Ls & Ke, h[10] = Je ^ ~Vs & Ze, h[11] = Ye ^ ~Xe & js, h[20] = rt ^ ~it & zs, h[21] = Ws ^ ~st & at, h[30] = Ks ^ ~dt & ft, h[31] = ct ^ ~qs & pt, h[40] = mt ^ ~Ys & vt, h[41] = bt ^ ~gt & qi, h[2] = ze ^ ~He & $s, h[3] = Ls ^ ~Ke & qe, h[12] = Vs ^ ~Ze & et, h[13] = Xe ^ ~js & tt, h[22] = it ^ ~zs & ot, h[23] = st ^ ~at & Hs, h[32] = dt ^ ~ft & Qs, h[33] = qs ^ ~pt & ht, h[42] = Ys ^ ~vt & Qi, h[43] = gt ^ ~qi & Ji, h[4] = He ^ ~$s & Qe, h[5] = Ke ^ ~qe & Us, h[14] = Ze ^ ~et & Gs, h[15] = js ^ ~tt & nt, h[24] = zs ^ ~ot & ut, h[25] = at ^ ~Hs & lt, h[34] = ft ^ ~Qs & yt, h[35] = pt ^ ~ht & Js, h[44] = vt ^ ~Qi & Yi, h[45] = qi ^ ~Ji & Xi, h[6] = $s ^ ~Qe & Fs, h[7] = qe ^ ~Us & We, h[16] = et ^ ~Gs & Je, h[17] = tt ^ ~nt & Ye, h[26] = ot ^ ~ut & rt, h[27] = Hs ^ ~lt & Ws, h[36] = Qs ^ ~yt & Ks, h[37] = ht ^ ~Js & ct, h[46] = Qi ^ ~Yi & mt, h[47] = Ji ^ ~Xi & bt, h[8] = Qe ^ ~Fs & ze, h[9] = Us ^ ~We & Ls, h[18] = Gs ^ ~Je & Vs, h[19] = nt ^ ~Ye & Xe, h[28] = ut ^ ~rt & it, h[29] = lt ^ ~Ws & st, h[38] = yt ^ ~Ks & dt, h[39] = Js ^ ~ct & qs, h[48] = Yi ^ ~mt & Ys, h[49] = Xi ^ ~bt & gt, h[0] ^= w[F], h[1] ^= w[F + 1];
    };
    if (o)
      n.exports = d;
    else
      for (x = 0; x < y.length; ++x)
        i[y[x]] = d[y[x]];
  })();
})(fw);
const Z8 = fw.exports;
function Ie(n) {
  return "0x" + Z8.keccak_256(z(n));
}
const e7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  keccak256: Ie
}, Symbol.toStringTag, { value: "Module" })), t7 = "rlp/5.7.0", jr = new O(t7);
function l2(n) {
  const e = [];
  for (; n; )
    e.unshift(n & 255), n >>= 8;
  return e;
}
function c2(n, e, t) {
  let r = 0;
  for (let i = 0; i < t; i++)
    r = r * 256 + n[e + i];
  return r;
}
function pw(n) {
  if (Array.isArray(n)) {
    let r = [];
    if (n.forEach(function(s) {
      r = r.concat(pw(s));
    }), r.length <= 55)
      return r.unshift(192 + r.length), r;
    const i = l2(r.length);
    return i.unshift(247 + i.length), i.concat(r);
  }
  Pl(n) || jr.throwArgumentError("RLP object must be BytesLike", "object", n);
  const e = Array.prototype.slice.call(z(n));
  if (e.length === 1 && e[0] <= 127)
    return e;
  if (e.length <= 55)
    return e.unshift(128 + e.length), e;
  const t = l2(e.length);
  return t.unshift(183 + t.length), t.concat(e);
}
function Ss(n) {
  return K(pw(n));
}
function d2(n, e, t, r) {
  const i = [];
  for (; t < e + 1 + r; ) {
    const s = hw(n, t);
    i.push(s.result), t += s.consumed, t > e + 1 + r && jr.throwError("child data too short", O.errors.BUFFER_OVERRUN, {});
  }
  return { consumed: 1 + r, result: i };
}
function hw(n, e) {
  if (n.length === 0 && jr.throwError("data too short", O.errors.BUFFER_OVERRUN, {}), n[e] >= 248) {
    const t = n[e] - 247;
    e + 1 + t > n.length && jr.throwError("data short segment too short", O.errors.BUFFER_OVERRUN, {});
    const r = c2(n, e + 1, t);
    return e + 1 + t + r > n.length && jr.throwError("data long segment too short", O.errors.BUFFER_OVERRUN, {}), d2(n, e, e + 1 + t, t + r);
  } else if (n[e] >= 192) {
    const t = n[e] - 192;
    return e + 1 + t > n.length && jr.throwError("data array too short", O.errors.BUFFER_OVERRUN, {}), d2(n, e, e + 1, t);
  } else if (n[e] >= 184) {
    const t = n[e] - 183;
    e + 1 + t > n.length && jr.throwError("data array too short", O.errors.BUFFER_OVERRUN, {});
    const r = c2(n, e + 1, t);
    e + 1 + t + r > n.length && jr.throwError("data array too short", O.errors.BUFFER_OVERRUN, {});
    const i = K(n.slice(e + 1 + t, e + 1 + t + r));
    return { consumed: 1 + t + r, result: i };
  } else if (n[e] >= 128) {
    const t = n[e] - 128;
    e + 1 + t > n.length && jr.throwError("data too short", O.errors.BUFFER_OVERRUN, {});
    const r = K(n.slice(e + 1, e + 1 + t));
    return { consumed: 1 + t, result: r };
  }
  return { consumed: 1, result: K(n[e]) };
}
function Il(n) {
  const e = z(n), t = hw(e, 0);
  return t.consumed !== e.length && jr.throwArgumentError("invalid rlp data", "data", n), t.result;
}
const n7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  encode: Ss,
  decode: Il
}, Symbol.toStringTag, { value: "Module" })), r7 = "address/5.7.0", fs = new O(r7);
function f2(n) {
  Ae(n, 20) || fs.throwArgumentError("invalid address", "address", n), n = n.toLowerCase();
  const e = n.substring(2).split(""), t = new Uint8Array(40);
  for (let i = 0; i < 40; i++)
    t[i] = e[i].charCodeAt(0);
  const r = z(Ie(t));
  for (let i = 0; i < 40; i += 2)
    r[i >> 1] >> 4 >= 8 && (e[i] = e[i].toUpperCase()), (r[i >> 1] & 15) >= 8 && (e[i + 1] = e[i + 1].toUpperCase());
  return "0x" + e.join("");
}
const i7 = 9007199254740991;
function s7(n) {
  return Math.log10 ? Math.log10(n) : Math.log(n) / Math.LN10;
}
const Q0 = {};
for (let n = 0; n < 10; n++)
  Q0[String(n)] = String(n);
for (let n = 0; n < 26; n++)
  Q0[String.fromCharCode(65 + n)] = String(10 + n);
const p2 = Math.floor(s7(i7));
function yw(n) {
  n = n.toUpperCase(), n = n.substring(4) + n.substring(0, 2) + "00";
  let e = n.split("").map((r) => Q0[r]).join("");
  for (; e.length >= p2; ) {
    let r = e.substring(0, p2);
    e = parseInt(r, 10) % 97 + e.substring(r.length);
  }
  let t = String(98 - parseInt(e, 10) % 97);
  for (; t.length < 2; )
    t = "0" + t;
  return t;
}
function De(n) {
  let e = null;
  if (typeof n != "string" && fs.throwArgumentError("invalid address", "address", n), n.match(/^(0x)?[0-9a-fA-F]{40}$/))
    n.substring(0, 2) !== "0x" && (n = "0x" + n), e = f2(n), n.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== n && fs.throwArgumentError("bad address checksum", "address", n);
  else if (n.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    for (n.substring(2, 4) !== yw(n) && fs.throwArgumentError("bad icap checksum", "address", n), e = p8(n.substring(4)); e.length < 40; )
      e = "0" + e;
    e = f2("0x" + e);
  } else
    fs.throwArgumentError("invalid address", "address", n);
  return e;
}
function a7(n) {
  try {
    return De(n), !0;
  } catch {
  }
  return !1;
}
function o7(n) {
  let e = h8(De(n).substring(2)).toUpperCase();
  for (; e.length < 30; )
    e = "0" + e;
  return "XE" + yw("XE00" + e) + e;
}
function J0(n) {
  let e = null;
  try {
    e = De(n.from);
  } catch {
    fs.throwArgumentError("missing from address", "transaction", n);
  }
  const t = Yr(z(W.from(n.nonce).toHexString()));
  return De(Dt(Ie(Ss([e, t])), 12));
}
function u7(n, e, t) {
  return ni(e) !== 32 && fs.throwArgumentError("salt must be 32 bytes", "salt", e), ni(t) !== 32 && fs.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", t), De(Dt(Ie(Ve(["0xff", De(n), e, t])), 12));
}
const l7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  getAddress: De,
  isAddress: a7,
  getIcapAddress: o7,
  getContractAddress: J0,
  getCreate2Address: u7
}, Symbol.toStringTag, { value: "Module" }));
class c7 extends zi {
  constructor(e) {
    super("address", "address", e, !1);
  }
  defaultValue() {
    return "0x0000000000000000000000000000000000000000";
  }
  encode(e, t) {
    try {
      t = De(t);
    } catch (r) {
      this._throwError(r.message, t);
    }
    return e.writeValue(t);
  }
  decode(e) {
    return De(Be(e.readValue().toHexString(), 20));
  }
}
class d7 extends zi {
  constructor(e) {
    super(e.name, e.type, void 0, e.dynamic), this.coder = e;
  }
  defaultValue() {
    return this.coder.defaultValue();
  }
  encode(e, t) {
    return this.coder.encode(e, t);
  }
  decode(e) {
    return this.coder.decode(e);
  }
}
const so = new O(Ol);
function mw(n, e, t) {
  let r = null;
  if (Array.isArray(t))
    r = t;
  else if (t && typeof t == "object") {
    let u = {};
    r = e.map((l) => {
      const c = l.localName;
      return c || so.throwError("cannot encode object for signature with missing names", O.errors.INVALID_ARGUMENT, {
        argument: "values",
        coder: l,
        value: t
      }), u[c] && so.throwError("cannot encode object for signature with duplicate names", O.errors.INVALID_ARGUMENT, {
        argument: "values",
        coder: l,
        value: t
      }), u[c] = !0, t[c];
    });
  } else
    so.throwArgumentError("invalid tuple value", "tuple", t);
  e.length !== r.length && so.throwArgumentError("types/value length mismatch", "tuple", t);
  let i = new ph(n.wordSize), s = new ph(n.wordSize), a = [];
  e.forEach((u, l) => {
    let c = r[l];
    if (u.dynamic) {
      let p = s.length;
      u.encode(s, c);
      let b = i.writeUpdatableValue();
      a.push((A) => {
        b(A + p);
      });
    } else
      u.encode(i, c);
  }), a.forEach((u) => {
    u(i.length);
  });
  let o = n.appendWriter(i);
  return o += n.appendWriter(s), o;
}
function bw(n, e) {
  let t = [], r = n.subReader(0);
  e.forEach((s) => {
    let a = null;
    if (s.dynamic) {
      let o = n.readValue(), u = r.subReader(o.toNumber());
      try {
        a = s.decode(u);
      } catch (l) {
        if (l.code === O.errors.BUFFER_OVERRUN)
          throw l;
        a = l, a.baseType = s.name, a.name = s.localName, a.type = s.type;
      }
    } else
      try {
        a = s.decode(n);
      } catch (o) {
        if (o.code === O.errors.BUFFER_OVERRUN)
          throw o;
        a = o, a.baseType = s.name, a.name = s.localName, a.type = s.type;
      }
    a != null && t.push(a);
  });
  const i = e.reduce((s, a) => {
    const o = a.localName;
    return o && (s[o] || (s[o] = 0), s[o]++), s;
  }, {});
  e.forEach((s, a) => {
    let o = s.localName;
    if (!o || i[o] !== 1 || (o === "length" && (o = "_length"), t[o] != null))
      return;
    const u = t[a];
    u instanceof Error ? Object.defineProperty(t, o, {
      enumerable: !0,
      get: () => {
        throw u;
      }
    }) : t[o] = u;
  });
  for (let s = 0; s < t.length; s++) {
    const a = t[s];
    a instanceof Error && Object.defineProperty(t, s, {
      enumerable: !0,
      get: () => {
        throw a;
      }
    });
  }
  return Object.freeze(t);
}
class f7 extends zi {
  constructor(e, t, r) {
    const i = e.type + "[" + (t >= 0 ? t : "") + "]", s = t === -1 || e.dynamic;
    super("array", i, r, s), this.coder = e, this.length = t;
  }
  defaultValue() {
    const e = this.coder.defaultValue(), t = [];
    for (let r = 0; r < this.length; r++)
      t.push(e);
    return t;
  }
  encode(e, t) {
    Array.isArray(t) || this._throwError("expected array value", t);
    let r = this.length;
    r === -1 && (r = t.length, e.writeValue(t.length)), so.checkArgumentCount(t.length, r, "coder array" + (this.localName ? " " + this.localName : ""));
    let i = [];
    for (let s = 0; s < t.length; s++)
      i.push(this.coder);
    return mw(e, i, t);
  }
  decode(e) {
    let t = this.length;
    t === -1 && (t = e.readValue().toNumber(), t * 32 > e._data.length && so.throwError("insufficient data length", O.errors.BUFFER_OVERRUN, {
      length: e._data.length,
      count: t
    }));
    let r = [];
    for (let i = 0; i < t; i++)
      r.push(new d7(this.coder));
    return e.coerce(this.name, bw(e, r));
  }
}
class p7 extends zi {
  constructor(e) {
    super("bool", "bool", e, !1);
  }
  defaultValue() {
    return !1;
  }
  encode(e, t) {
    return e.writeValue(t ? 1 : 0);
  }
  decode(e) {
    return e.coerce(this.type, !e.readValue().isZero());
  }
}
class gw extends zi {
  constructor(e, t) {
    super(e, e, t, !0);
  }
  defaultValue() {
    return "0x";
  }
  encode(e, t) {
    t = z(t);
    let r = e.writeValue(t.length);
    return r += e.writeBytes(t), r;
  }
  decode(e) {
    return e.readBytes(e.readValue().toNumber(), !0);
  }
}
class h7 extends gw {
  constructor(e) {
    super("bytes", e);
  }
  decode(e) {
    return e.coerce(this.name, K(super.decode(e)));
  }
}
class y7 extends zi {
  constructor(e, t) {
    let r = "bytes" + String(e);
    super(r, r, t, !1), this.size = e;
  }
  defaultValue() {
    return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + this.size * 2);
  }
  encode(e, t) {
    let r = z(t);
    return r.length !== this.size && this._throwError("incorrect data length", t), e.writeBytes(r);
  }
  decode(e) {
    return e.coerce(this.name, K(e.readBytes(this.size)));
  }
}
class m7 extends zi {
  constructor(e) {
    super("null", "", e, !1);
  }
  defaultValue() {
    return null;
  }
  encode(e, t) {
    return t != null && this._throwError("not null", t), e.writeBytes([]);
  }
  decode(e) {
    return e.readBytes(0), e.coerce(this.name, null);
  }
}
const b7 = "0x0000000000000000000000000000000000000000", g7 = /* @__PURE__ */ W.from(-1), Y0 = /* @__PURE__ */ W.from(0), v7 = /* @__PURE__ */ W.from(1), x7 = /* @__PURE__ */ W.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), vw = "0x0000000000000000000000000000000000000000000000000000000000000000";
class w7 extends zi {
  constructor(e, t, r) {
    const i = (t ? "int" : "uint") + e * 8;
    super(i, i, r, !1), this.size = e, this.signed = t;
  }
  defaultValue() {
    return 0;
  }
  encode(e, t) {
    let r = W.from(t), i = x7.mask(e.wordSize * 8);
    if (this.signed) {
      let s = i.mask(this.size * 8 - 1);
      (r.gt(s) || r.lt(s.add(v7).mul(g7))) && this._throwError("value out-of-bounds", t);
    } else
      (r.lt(Y0) || r.gt(i.mask(this.size * 8))) && this._throwError("value out-of-bounds", t);
    return r = r.toTwos(this.size * 8).mask(this.size * 8), this.signed && (r = r.fromTwos(this.size * 8).toTwos(8 * e.wordSize)), e.writeValue(r);
  }
  decode(e) {
    let t = e.readValue().mask(this.size * 8);
    return this.signed && (t = t.fromTwos(this.size * 8)), e.coerce(this.name, t);
  }
}
const T7 = "strings/5.7.0", xw = new O(T7);
var ri;
(function(n) {
  n.current = "", n.NFC = "NFC", n.NFD = "NFD", n.NFKC = "NFKC", n.NFKD = "NFKD";
})(ri || (ri = {}));
var Bn;
(function(n) {
  n.UNEXPECTED_CONTINUE = "unexpected continuation byte", n.BAD_PREFIX = "bad codepoint prefix", n.OVERRUN = "string overrun", n.MISSING_CONTINUE = "missing continuation byte", n.OUT_OF_RANGE = "out of UTF-8 range", n.UTF16_SURROGATE = "UTF-16 surrogate", n.OVERLONG = "overlong representation";
})(Bn || (Bn = {}));
function A7(n, e, t, r, i) {
  return xw.throwArgumentError(`invalid codepoint at offset ${e}; ${n}`, "bytes", t);
}
function ww(n, e, t, r, i) {
  if (n === Bn.BAD_PREFIX || n === Bn.UNEXPECTED_CONTINUE) {
    let s = 0;
    for (let a = e + 1; a < t.length && t[a] >> 6 === 2; a++)
      s++;
    return s;
  }
  return n === Bn.OVERRUN ? t.length - e - 1 : 0;
}
function C7(n, e, t, r, i) {
  return n === Bn.OVERLONG ? (r.push(i), 0) : (r.push(65533), ww(n, e, t));
}
const Tw = Object.freeze({
  error: A7,
  ignore: ww,
  replace: C7
});
function X0(n, e) {
  e == null && (e = Tw.error), n = z(n);
  const t = [];
  let r = 0;
  for (; r < n.length; ) {
    const i = n[r++];
    if (i >> 7 === 0) {
      t.push(i);
      continue;
    }
    let s = null, a = null;
    if ((i & 224) === 192)
      s = 1, a = 127;
    else if ((i & 240) === 224)
      s = 2, a = 2047;
    else if ((i & 248) === 240)
      s = 3, a = 65535;
    else {
      (i & 192) === 128 ? r += e(Bn.UNEXPECTED_CONTINUE, r - 1, n, t) : r += e(Bn.BAD_PREFIX, r - 1, n, t);
      continue;
    }
    if (r - 1 + s >= n.length) {
      r += e(Bn.OVERRUN, r - 1, n, t);
      continue;
    }
    let o = i & (1 << 8 - s - 1) - 1;
    for (let u = 0; u < s; u++) {
      let l = n[r];
      if ((l & 192) != 128) {
        r += e(Bn.MISSING_CONTINUE, r, n, t), o = null;
        break;
      }
      o = o << 6 | l & 63, r++;
    }
    if (o !== null) {
      if (o > 1114111) {
        r += e(Bn.OUT_OF_RANGE, r - 1 - s, n, t, o);
        continue;
      }
      if (o >= 55296 && o <= 57343) {
        r += e(Bn.UTF16_SURROGATE, r - 1 - s, n, t, o);
        continue;
      }
      if (o <= a) {
        r += e(Bn.OVERLONG, r - 1 - s, n, t, o);
        continue;
      }
      t.push(o);
    }
  }
  return t;
}
function Nt(n, e = ri.current) {
  e != ri.current && (xw.checkNormalize(), n = n.normalize(e));
  let t = [];
  for (let r = 0; r < n.length; r++) {
    const i = n.charCodeAt(r);
    if (i < 128)
      t.push(i);
    else if (i < 2048)
      t.push(i >> 6 | 192), t.push(i & 63 | 128);
    else if ((i & 64512) == 55296) {
      r++;
      const s = n.charCodeAt(r);
      if (r >= n.length || (s & 64512) !== 56320)
        throw new Error("invalid utf-8 string");
      const a = 65536 + ((i & 1023) << 10) + (s & 1023);
      t.push(a >> 18 | 240), t.push(a >> 12 & 63 | 128), t.push(a >> 6 & 63 | 128), t.push(a & 63 | 128);
    } else
      t.push(i >> 12 | 224), t.push(i >> 6 & 63 | 128), t.push(i & 63 | 128);
  }
  return z(t);
}
function pp(n) {
  const e = "0000" + n.toString(16);
  return "\\u" + e.substring(e.length - 4);
}
function S7(n, e) {
  return '"' + X0(n, e).map((t) => {
    if (t < 256) {
      switch (t) {
        case 8:
          return "\\b";
        case 9:
          return "\\t";
        case 10:
          return "\\n";
        case 13:
          return "\\r";
        case 34:
          return '\\"';
        case 92:
          return "\\\\";
      }
      if (t >= 32 && t < 127)
        return String.fromCharCode(t);
    }
    return t <= 65535 ? pp(t) : (t -= 65536, pp((t >> 10 & 1023) + 55296) + pp((t & 1023) + 56320));
  }).join("") + '"';
}
function hh(n) {
  return n.map((e) => e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode((e >> 10 & 1023) + 55296, (e & 1023) + 56320))).join("");
}
function Is(n, e) {
  return hh(X0(n, e));
}
function id(n, e = ri.current) {
  return X0(Nt(n, e));
}
function E7(n) {
  const e = Nt(n);
  if (e.length > 31)
    throw new Error("bytes32 string must be less than 32 bytes");
  return K(Ve([e, vw]).slice(0, 32));
}
function _7(n) {
  const e = z(n);
  if (e.length !== 32)
    throw new Error("invalid bytes32 - not 32 bytes long");
  if (e[31] !== 0)
    throw new Error("invalid bytes32 string - no null terminator");
  let t = 31;
  for (; e[t - 1] === 0; )
    t--;
  return Is(e.slice(0, t));
}
function M7(n) {
  if (n.length % 4 !== 0)
    throw new Error("bad data");
  let e = [];
  for (let t = 0; t < n.length; t += 4)
    e.push(parseInt(n.substring(t, t + 4), 16));
  return e;
}
function Z0(n, e) {
  e || (e = function(i) {
    return [parseInt(i, 16)];
  });
  let t = 0, r = {};
  return n.split(",").forEach((i) => {
    let s = i.split(":");
    t += parseInt(s[0], 16), r[t] = e(s[1]);
  }), r;
}
function Aw(n) {
  let e = 0;
  return n.split(",").map((t) => {
    let r = t.split("-");
    r.length === 1 ? r[1] = "0" : r[1] === "" && (r[1] = "1");
    let i = e + parseInt(r[0], 16);
    return e = parseInt(r[1], 16), { l: i, h: e };
  });
}
function ey(n, e) {
  let t = 0;
  for (let r = 0; r < e.length; r++) {
    let i = e[r];
    if (t += i.l, n >= t && n <= t + i.h && (n - t) % (i.d || 1) === 0) {
      if (i.e && i.e.indexOf(n - t) !== -1)
        continue;
      return i;
    }
  }
  return null;
}
const R7 = Aw("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), P7 = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((n) => parseInt(n, 16)), O7 = [
  { h: 25, s: 32, l: 65 },
  { h: 30, s: 32, e: [23], l: 127 },
  { h: 54, s: 1, e: [48], l: 64, d: 2 },
  { h: 14, s: 1, l: 57, d: 2 },
  { h: 44, s: 1, l: 17, d: 2 },
  { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },
  { h: 16, s: 1, l: 68, d: 2 },
  { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },
  { h: 26, s: 32, e: [17], l: 435 },
  { h: 22, s: 1, l: 71, d: 2 },
  { h: 15, s: 80, l: 40 },
  { h: 31, s: 32, l: 16 },
  { h: 32, s: 1, l: 80, d: 2 },
  { h: 52, s: 1, l: 42, d: 2 },
  { h: 12, s: 1, l: 55, d: 2 },
  { h: 40, s: 1, e: [38], l: 15, d: 2 },
  { h: 14, s: 1, l: 48, d: 2 },
  { h: 37, s: 48, l: 49 },
  { h: 148, s: 1, l: 6351, d: 2 },
  { h: 88, s: 1, l: 160, d: 2 },
  { h: 15, s: 16, l: 704 },
  { h: 25, s: 26, l: 854 },
  { h: 25, s: 32, l: 55915 },
  { h: 37, s: 40, l: 1247 },
  { h: 25, s: -119711, l: 53248 },
  { h: 25, s: -119763, l: 52 },
  { h: 25, s: -119815, l: 52 },
  { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },
  { h: 25, s: -119919, l: 52 },
  { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },
  { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },
  { h: 25, s: -120075, l: 52 },
  { h: 25, s: -120127, l: 52 },
  { h: 25, s: -120179, l: 52 },
  { h: 25, s: -120231, l: 52 },
  { h: 25, s: -120283, l: 52 },
  { h: 25, s: -120335, l: 52 },
  { h: 24, s: -119543, e: [17], l: 56 },
  { h: 24, s: -119601, e: [17], l: 58 },
  { h: 24, s: -119659, e: [17], l: 58 },
  { h: 24, s: -119717, e: [17], l: 58 },
  { h: 24, s: -119775, e: [17], l: 58 }
], I7 = Z0("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), k7 = Z0("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), D7 = Z0("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", M7), B7 = Aw("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
function N7(n) {
  return n.reduce((e, t) => (t.forEach((r) => {
    e.push(r);
  }), e), []);
}
function F7(n) {
  return !!ey(n, R7);
}
function L7(n) {
  let e = ey(n, O7);
  if (e)
    return [n + e.s];
  let t = I7[n];
  if (t)
    return t;
  let r = k7[n];
  if (r)
    return [n + r[0]];
  let i = D7[n];
  return i || null;
}
function $7(n) {
  return !!ey(n, B7);
}
function U7(n) {
  if (n.match(/^[a-z0-9-]*$/i) && n.length <= 59)
    return n.toLowerCase();
  let e = id(n);
  e = N7(e.map((r) => {
    if (P7.indexOf(r) >= 0)
      return [];
    if (r >= 65024 && r <= 65039)
      return [];
    let i = L7(r);
    return i || [r];
  })), e = id(hh(e), ri.NFKC), e.forEach((r) => {
    if ($7(r))
      throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
  }), e.forEach((r) => {
    if (F7(r))
      throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
  });
  let t = hh(e);
  if (t.substring(0, 1) === "-" || t.substring(2, 4) === "--" || t.substring(t.length - 1) === "-")
    throw new Error("invalid hyphen");
  return t;
}
const V7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  _toEscapedUtf8String: S7,
  toUtf8Bytes: Nt,
  toUtf8CodePoints: id,
  toUtf8String: Is,
  Utf8ErrorFuncs: Tw,
  get Utf8ErrorReason() {
    return Bn;
  },
  get UnicodeNormalizationForm() {
    return ri;
  },
  formatBytes32String: E7,
  parseBytes32String: _7,
  nameprep: U7
}, Symbol.toStringTag, { value: "Module" }));
class j7 extends gw {
  constructor(e) {
    super("string", e);
  }
  defaultValue() {
    return "";
  }
  encode(e, t) {
    return super.encode(e, Nt(t));
  }
  decode(e) {
    return Is(super.decode(e));
  }
}
class ec extends zi {
  constructor(e, t) {
    let r = !1;
    const i = [];
    e.forEach((a) => {
      a.dynamic && (r = !0), i.push(a.type);
    });
    const s = "tuple(" + i.join(",") + ")";
    super("tuple", s, t, r), this.coders = e;
  }
  defaultValue() {
    const e = [];
    this.coders.forEach((r) => {
      e.push(r.defaultValue());
    });
    const t = this.coders.reduce((r, i) => {
      const s = i.localName;
      return s && (r[s] || (r[s] = 0), r[s]++), r;
    }, {});
    return this.coders.forEach((r, i) => {
      let s = r.localName;
      !s || t[s] !== 1 || (s === "length" && (s = "_length"), e[s] == null && (e[s] = e[i]));
    }), Object.freeze(e);
  }
  encode(e, t) {
    return mw(e, this.coders, t);
  }
  decode(e) {
    return e.coerce(this.name, bw(e, this.coders));
  }
}
const tc = new O(Ol), G7 = new RegExp(/^bytes([0-9]*)$/), W7 = new RegExp(/^(u?int)([0-9]*)$/);
class Cw {
  constructor(e) {
    V(this, "coerceFunc", e || null);
  }
  _getCoder(e) {
    switch (e.baseType) {
      case "address":
        return new c7(e.name);
      case "bool":
        return new p7(e.name);
      case "string":
        return new j7(e.name);
      case "bytes":
        return new h7(e.name);
      case "array":
        return new f7(this._getCoder(e.arrayChildren), e.arrayLength, e.name);
      case "tuple":
        return new ec((e.components || []).map((r) => this._getCoder(r)), e.name);
      case "":
        return new m7(e.name);
    }
    let t = e.type.match(W7);
    if (t) {
      let r = parseInt(t[2] || "256");
      return (r === 0 || r > 256 || r % 8 !== 0) && tc.throwArgumentError("invalid " + t[1] + " bit length", "param", e), new w7(r / 8, t[1] === "int", e.name);
    }
    if (t = e.type.match(G7), t) {
      let r = parseInt(t[1]);
      return (r === 0 || r > 32) && tc.throwArgumentError("invalid bytes length", "param", e), new y7(r, e.name);
    }
    return tc.throwArgumentError("invalid type", "type", e.type);
  }
  _getWordSize() {
    return 32;
  }
  _getReader(e, t) {
    return new rd(e, this._getWordSize(), this.coerceFunc, t);
  }
  _getWriter() {
    return new ph(this._getWordSize());
  }
  getDefaultValue(e) {
    const t = e.map((i) => this._getCoder(Gt.from(i)));
    return new ec(t, "_").defaultValue();
  }
  encode(e, t) {
    e.length !== t.length && tc.throwError("types/values length mismatch", O.errors.INVALID_ARGUMENT, {
      count: { types: e.length, values: t.length },
      value: { types: e, values: t }
    });
    const r = e.map((a) => this._getCoder(Gt.from(a))), i = new ec(r, "_"), s = this._getWriter();
    return i.encode(s, t), s.data;
  }
  decode(e, t, r) {
    const i = e.map((a) => this._getCoder(Gt.from(a)));
    return new ec(i, "_").decode(this._getReader(z(t), r));
  }
}
const Sw = new Cw();
function ps(n) {
  return Ie(Nt(n));
}
const Ew = "hash/5.7.0";
function ty(n) {
  n = atob(n);
  const e = [];
  for (let t = 0; t < n.length; t++)
    e.push(n.charCodeAt(t));
  return z(e);
}
function ny(n) {
  n = z(n);
  let e = "";
  for (let t = 0; t < n.length; t++)
    e += String.fromCharCode(n[t]);
  return btoa(e);
}
const z7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: ty,
  encode: ny
}, Symbol.toStringTag, { value: "Module" }));
function _w(n, e) {
  e == null && (e = 1);
  const t = [], r = t.forEach, i = function(s, a) {
    r.call(s, function(o) {
      a > 0 && Array.isArray(o) ? i(o, a - 1) : t.push(o);
    });
  };
  return i(n, e), t;
}
function H7(n) {
  const e = {};
  for (let t = 0; t < n.length; t++) {
    const r = n[t];
    e[r[0]] = r[1];
  }
  return e;
}
function K7(n) {
  let e = 0;
  function t() {
    return n[e++] << 8 | n[e++];
  }
  let r = t(), i = 1, s = [0, 1];
  for (let D = 1; D < r; D++)
    s.push(i += t());
  let a = t(), o = e;
  e += a;
  let u = 0, l = 0;
  function c() {
    return u == 0 && (l = l << 8 | n[e++], u = 8), l >> --u & 1;
  }
  const p = 31, b = Math.pow(2, p), A = b >>> 1, g = A >> 1, w = b - 1;
  let T = 0;
  for (let D = 0; D < p; D++)
    T = T << 1 | c();
  let _ = [], I = 0, N = b;
  for (; ; ) {
    let D = Math.floor(((T - I + 1) * i - 1) / N), $ = 0, H = r;
    for (; H - $ > 1; ) {
      let oe = $ + H >>> 1;
      D < s[oe] ? H = oe : $ = oe;
    }
    if ($ == 0)
      break;
    _.push($);
    let j = I + Math.floor(N * s[$] / i), Q = I + Math.floor(N * s[$ + 1] / i) - 1;
    for (; ((j ^ Q) & A) == 0; )
      T = T << 1 & w | c(), j = j << 1 & w, Q = Q << 1 & w | 1;
    for (; j & ~Q & g; )
      T = T & A | T << 1 & w >>> 1 | c(), j = j << 1 ^ A, Q = (Q ^ A) << 1 | A | 1;
    I = j, N = 1 + Q - j;
  }
  let B = r - 4;
  return _.map((D) => {
    switch (D - B) {
      case 3:
        return B + 65792 + (n[o++] << 16 | n[o++] << 8 | n[o++]);
      case 2:
        return B + 256 + (n[o++] << 8 | n[o++]);
      case 1:
        return B + n[o++];
      default:
        return D - 1;
    }
  });
}
function q7(n) {
  let e = 0;
  return () => n[e++];
}
function Q7(n) {
  return q7(K7(n));
}
function J7(n) {
  return n & 1 ? ~n >> 1 : n >> 1;
}
function Y7(n, e) {
  let t = Array(n);
  for (let r = 0; r < n; r++)
    t[r] = 1 + e();
  return t;
}
function h2(n, e) {
  let t = Array(n);
  for (let r = 0, i = -1; r < n; r++)
    t[r] = i += 1 + e();
  return t;
}
function X7(n, e) {
  let t = Array(n);
  for (let r = 0, i = 0; r < n; r++)
    t[r] = i += J7(e());
  return t;
}
function sd(n, e) {
  let t = h2(n(), n), r = n(), i = h2(r, n), s = Y7(r, n);
  for (let a = 0; a < r; a++)
    for (let o = 0; o < s[a]; o++)
      t.push(i[a] + o);
  return e ? t.map((a) => e[a]) : t;
}
function Z7(n) {
  let e = [];
  for (; ; ) {
    let t = n();
    if (t == 0)
      break;
    e.push(t_(t, n));
  }
  for (; ; ) {
    let t = n() - 1;
    if (t < 0)
      break;
    e.push(n_(t, n));
  }
  return H7(_w(e));
}
function e_(n) {
  let e = [];
  for (; ; ) {
    let t = n();
    if (t == 0)
      break;
    e.push(t);
  }
  return e;
}
function Mw(n, e, t) {
  let r = Array(n).fill(void 0).map(() => []);
  for (let i = 0; i < e; i++)
    X7(n, t).forEach((s, a) => r[a].push(s));
  return r;
}
function t_(n, e) {
  let t = 1 + e(), r = e(), i = e_(e), s = Mw(i.length, 1 + n, e);
  return _w(s.map((a, o) => {
    const u = a[0], l = a.slice(1);
    return Array(i[o]).fill(void 0).map((c, p) => {
      let b = p * r;
      return [u + p * t, l.map((A) => A + b)];
    });
  }));
}
function n_(n, e) {
  let t = 1 + e();
  return Mw(t, 1 + n, e).map((i) => [i[0], i.slice(1)]);
}
function r_(n) {
  let e = sd(n).sort((r, i) => r - i);
  return t();
  function t() {
    let r = [];
    for (; ; ) {
      let l = sd(n, e);
      if (l.length == 0)
        break;
      r.push({ set: new Set(l), node: t() });
    }
    r.sort((l, c) => c.set.size - l.set.size);
    let i = n(), s = i % 3;
    i = i / 3 | 0;
    let a = !!(i & 1);
    i >>= 1;
    let o = i == 1, u = i == 2;
    return { branches: r, valid: s, fe0f: a, save: o, check: u };
  }
}
function i_() {
  return Q7(ty(""));
}
const Zd = i_(), s_ = new Set(sd(Zd)), a_ = new Set(sd(Zd)), o_ = Z7(Zd), u_ = r_(Zd), y2 = 45, m2 = 95;
function Rw(n) {
  return id(n);
}
function l_(n) {
  return n.filter((e) => e != 65039);
}
function Pw(n) {
  for (let e of n.split(".")) {
    let t = Rw(e);
    try {
      for (let r = t.lastIndexOf(m2) - 1; r >= 0; r--)
        if (t[r] !== m2)
          throw new Error("underscore only allowed at start");
      if (t.length >= 4 && t.every((r) => r < 128) && t[2] === y2 && t[3] === y2)
        throw new Error("invalid label extension");
    } catch (r) {
      throw new Error(`Invalid label "${e}": ${r.message}`);
    }
  }
  return n;
}
function c_(n) {
  return Pw(d_(n, l_));
}
function d_(n, e) {
  let t = Rw(n).reverse(), r = [];
  for (; t.length; ) {
    let i = p_(t);
    if (i) {
      r.push(...e(i));
      continue;
    }
    let s = t.pop();
    if (s_.has(s)) {
      r.push(s);
      continue;
    }
    if (a_.has(s))
      continue;
    let a = o_[s];
    if (a) {
      r.push(...a);
      continue;
    }
    throw new Error(`Disallowed codepoint: 0x${s.toString(16).toUpperCase()}`);
  }
  return Pw(f_(String.fromCodePoint(...r)));
}
function f_(n) {
  return n.normalize("NFC");
}
function p_(n, e) {
  var t;
  let r = u_, i, s, a = [], o = n.length;
  for (e && (e.length = 0); o; ) {
    let u = n[--o];
    if (r = (t = r.branches.find((l) => l.set.has(u))) === null || t === void 0 ? void 0 : t.node, !r)
      break;
    if (r.save)
      s = u;
    else if (r.check && u === s)
      break;
    a.push(u), r.fe0f && (a.push(65039), o > 0 && n[o - 1] == 65039 && o--), r.valid && (i = a.slice(), r.valid == 2 && i.splice(1, 1), e && e.push(...n.slice(o).reverse()), n.length = o);
  }
  return i;
}
const h_ = new O(Ew), Ow = new Uint8Array(32);
Ow.fill(0);
function b2(n) {
  if (n.length === 0)
    throw new Error("invalid ENS name; empty component");
  return n;
}
function ef(n) {
  const e = Nt(c_(n)), t = [];
  if (n.length === 0)
    return t;
  let r = 0;
  for (let i = 0; i < e.length; i++)
    e[i] === 46 && (t.push(b2(e.slice(r, i))), r = i + 1);
  if (r >= e.length)
    throw new Error("invalid ENS name; empty component");
  return t.push(b2(e.slice(r))), t;
}
function y_(n) {
  return ef(n).map((e) => Is(e)).join(".");
}
function m_(n) {
  try {
    return ef(n).length !== 0;
  } catch {
  }
  return !1;
}
function Mu(n) {
  typeof n != "string" && h_.throwArgumentError("invalid ENS name; not a string", "name", n);
  let e = Ow;
  const t = ef(n);
  for (; t.length; )
    e = Ie(Ve([e, Ie(t.pop())]));
  return K(e);
}
function Iw(n) {
  return K(Ve(ef(n).map((e) => {
    if (e.length > 63)
      throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
    const t = new Uint8Array(e.length + 1);
    return t.set(e, 1), t[0] = t.length - 1, t;
  }))) + "00";
}
const kw = `Ethereum Signed Message:
`;
function ry(n) {
  return typeof n == "string" && (n = Nt(n)), Ie(Ve([
    Nt(kw),
    Nt(String(n.length)),
    n
  ]));
}
var b_ = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const Ct = new O(Ew), Dw = new Uint8Array(32);
Dw.fill(0);
const g_ = W.from(-1), Bw = W.from(0), Nw = W.from(1), v_ = W.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function x_(n) {
  const e = z(n), t = e.length % 32;
  return t ? Sn([e, Dw.slice(t)]) : K(e);
}
const w_ = Be(Nw.toHexString(), 32), T_ = Be(Bw.toHexString(), 32), g2 = {
  name: "string",
  version: "string",
  chainId: "uint256",
  verifyingContract: "address",
  salt: "bytes32"
}, hp = [
  "name",
  "version",
  "chainId",
  "verifyingContract",
  "salt"
];
function v2(n) {
  return function(e) {
    return typeof e != "string" && Ct.throwArgumentError(`invalid domain value for ${JSON.stringify(n)}`, `domain.${n}`, e), e;
  };
}
const A_ = {
  name: v2("name"),
  version: v2("version"),
  chainId: function(n) {
    try {
      return W.from(n).toString();
    } catch {
    }
    return Ct.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", n);
  },
  verifyingContract: function(n) {
    try {
      return De(n).toLowerCase();
    } catch {
    }
    return Ct.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", n);
  },
  salt: function(n) {
    try {
      const e = z(n);
      if (e.length !== 32)
        throw new Error("bad length");
      return K(e);
    } catch {
    }
    return Ct.throwArgumentError('invalid domain value "salt"', "domain.salt", n);
  }
};
function yp(n) {
  {
    const e = n.match(/^(u?)int(\d*)$/);
    if (e) {
      const t = e[1] === "", r = parseInt(e[2] || "256");
      (r % 8 !== 0 || r > 256 || e[2] && e[2] !== String(r)) && Ct.throwArgumentError("invalid numeric width", "type", n);
      const i = v_.mask(t ? r - 1 : r), s = t ? i.add(Nw).mul(g_) : Bw;
      return function(a) {
        const o = W.from(a);
        return (o.lt(s) || o.gt(i)) && Ct.throwArgumentError(`value out-of-bounds for ${n}`, "value", a), Be(o.toTwos(256).toHexString(), 32);
      };
    }
  }
  {
    const e = n.match(/^bytes(\d+)$/);
    if (e) {
      const t = parseInt(e[1]);
      return (t === 0 || t > 32 || e[1] !== String(t)) && Ct.throwArgumentError("invalid bytes width", "type", n), function(r) {
        return z(r).length !== t && Ct.throwArgumentError(`invalid length for ${n}`, "value", r), x_(r);
      };
    }
  }
  switch (n) {
    case "address":
      return function(e) {
        return Be(De(e), 32);
      };
    case "bool":
      return function(e) {
        return e ? w_ : T_;
      };
    case "bytes":
      return function(e) {
        return Ie(e);
      };
    case "string":
      return function(e) {
        return ps(e);
      };
  }
  return null;
}
function x2(n, e) {
  return `${n}(${e.map(({ name: t, type: r }) => r + " " + t).join(",")})`;
}
class en {
  constructor(e) {
    V(this, "types", Object.freeze(Cs(e))), V(this, "_encoderCache", {}), V(this, "_types", {});
    const t = {}, r = {}, i = {};
    Object.keys(e).forEach((o) => {
      t[o] = {}, r[o] = [], i[o] = {};
    });
    for (const o in e) {
      const u = {};
      e[o].forEach((l) => {
        u[l.name] && Ct.throwArgumentError(`duplicate variable name ${JSON.stringify(l.name)} in ${JSON.stringify(o)}`, "types", e), u[l.name] = !0;
        const c = l.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
        c === o && Ct.throwArgumentError(`circular type reference to ${JSON.stringify(c)}`, "types", e), !yp(c) && (r[c] || Ct.throwArgumentError(`unknown type ${JSON.stringify(c)}`, "types", e), r[c].push(o), t[o][c] = !0);
      });
    }
    const s = Object.keys(r).filter((o) => r[o].length === 0);
    s.length === 0 ? Ct.throwArgumentError("missing primary type", "types", e) : s.length > 1 && Ct.throwArgumentError(`ambiguous primary types or unused types: ${s.map((o) => JSON.stringify(o)).join(", ")}`, "types", e), V(this, "primaryType", s[0]);
    function a(o, u) {
      u[o] && Ct.throwArgumentError(`circular type reference to ${JSON.stringify(o)}`, "types", e), u[o] = !0, Object.keys(t[o]).forEach((l) => {
        !r[l] || (a(l, u), Object.keys(u).forEach((c) => {
          i[c][l] = !0;
        }));
      }), delete u[o];
    }
    a(this.primaryType, {});
    for (const o in i) {
      const u = Object.keys(i[o]);
      u.sort(), this._types[o] = x2(o, e[o]) + u.map((l) => x2(l, e[l])).join("");
    }
  }
  getEncoder(e) {
    let t = this._encoderCache[e];
    return t || (t = this._encoderCache[e] = this._getEncoder(e)), t;
  }
  _getEncoder(e) {
    {
      const i = yp(e);
      if (i)
        return i;
    }
    const t = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
    if (t) {
      const i = t[1], s = this.getEncoder(i), a = parseInt(t[3]);
      return (o) => {
        a >= 0 && o.length !== a && Ct.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", o);
        let u = o.map(s);
        return this._types[i] && (u = u.map(Ie)), Ie(Sn(u));
      };
    }
    const r = this.types[e];
    if (r) {
      const i = ps(this._types[e]);
      return (s) => {
        const a = r.map(({ name: o, type: u }) => {
          const l = this.getEncoder(u)(s[o]);
          return this._types[u] ? Ie(l) : l;
        });
        return a.unshift(i), Sn(a);
      };
    }
    return Ct.throwArgumentError(`unknown type: ${e}`, "type", e);
  }
  encodeType(e) {
    const t = this._types[e];
    return t || Ct.throwArgumentError(`unknown type: ${JSON.stringify(e)}`, "name", e), t;
  }
  encodeData(e, t) {
    return this.getEncoder(e)(t);
  }
  hashStruct(e, t) {
    return Ie(this.encodeData(e, t));
  }
  encode(e) {
    return this.encodeData(this.primaryType, e);
  }
  hash(e) {
    return this.hashStruct(this.primaryType, e);
  }
  _visit(e, t, r) {
    if (yp(e))
      return r(e, t);
    const i = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
    if (i) {
      const a = i[1], o = parseInt(i[3]);
      return o >= 0 && t.length !== o && Ct.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", t), t.map((u) => this._visit(a, u, r));
    }
    const s = this.types[e];
    return s ? s.reduce((a, { name: o, type: u }) => (a[o] = this._visit(u, t[o], r), a), {}) : Ct.throwArgumentError(`unknown type: ${e}`, "type", e);
  }
  visit(e, t) {
    return this._visit(this.primaryType, e, t);
  }
  static from(e) {
    return new en(e);
  }
  static getPrimaryType(e) {
    return en.from(e).primaryType;
  }
  static hashStruct(e, t, r) {
    return en.from(t).hashStruct(e, r);
  }
  static hashDomain(e) {
    const t = [];
    for (const r in e) {
      const i = g2[r];
      i || Ct.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(r)}`, "domain", e), t.push({ name: r, type: i });
    }
    return t.sort((r, i) => hp.indexOf(r.name) - hp.indexOf(i.name)), en.hashStruct("EIP712Domain", { EIP712Domain: t }, e);
  }
  static encode(e, t, r) {
    return Sn([
      "0x1901",
      en.hashDomain(e),
      en.from(t).hash(r)
    ]);
  }
  static hash(e, t, r) {
    return Ie(en.encode(e, t, r));
  }
  static resolveNames(e, t, r, i) {
    return b_(this, void 0, void 0, function* () {
      e = $t(e);
      const s = {};
      e.verifyingContract && !Ae(e.verifyingContract, 20) && (s[e.verifyingContract] = "0x");
      const a = en.from(t);
      a.visit(r, (o, u) => (o === "address" && !Ae(u, 20) && (s[u] = "0x"), u));
      for (const o in s)
        s[o] = yield i(o);
      return e.verifyingContract && s[e.verifyingContract] && (e.verifyingContract = s[e.verifyingContract]), r = a.visit(r, (o, u) => o === "address" && s[u] ? s[u] : u), { domain: e, value: r };
    });
  }
  static getPayload(e, t, r) {
    en.hashDomain(e);
    const i = {}, s = [];
    hp.forEach((u) => {
      const l = e[u];
      l != null && (i[u] = A_[u](l), s.push({ name: u, type: g2[u] }));
    });
    const a = en.from(t), o = $t(t);
    return o.EIP712Domain ? Ct.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", t) : o.EIP712Domain = s, a.encode(r), {
      types: o,
      domain: i,
      primaryType: a.primaryType,
      message: a.visit(r, (u, l) => {
        if (u.match(/^bytes(\d*)/))
          return K(z(l));
        if (u.match(/^u?int/))
          return W.from(l).toString();
        switch (u) {
          case "address":
            return l.toLowerCase();
          case "bool":
            return !!l;
          case "string":
            return typeof l != "string" && Ct.throwArgumentError("invalid string", "value", l), l;
        }
        return Ct.throwArgumentError("unsupported type", "type", u);
      })
    };
  }
}
const C_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  id: ps,
  dnsEncode: Iw,
  namehash: Mu,
  isValidName: m_,
  ensNormalize: y_,
  messagePrefix: kw,
  hashMessage: ry,
  _TypedDataEncoder: en
}, Symbol.toStringTag, { value: "Module" })), At = new O(Ol);
class Fw extends Os {
}
class Lw extends Os {
}
class S_ extends Os {
}
class ad extends Os {
  static isIndexed(e) {
    return !!(e && e._isIndexed);
  }
}
const E_ = {
  "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: !0 },
  "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] }
};
function w2(n, e) {
  const t = new Error(`deferred error during ABI decoding triggered accessing ${n}`);
  return t.error = e, t;
}
class yh {
  constructor(e) {
    let t = [];
    typeof e == "string" ? t = JSON.parse(e) : t = e, V(this, "fragments", t.map((r) => qr.from(r)).filter((r) => r != null)), V(this, "_abiCoder", Ir(new.target, "getAbiCoder")()), V(this, "functions", {}), V(this, "errors", {}), V(this, "events", {}), V(this, "structs", {}), this.fragments.forEach((r) => {
      let i = null;
      switch (r.type) {
        case "constructor":
          if (this.deploy) {
            At.warn("duplicate definition - constructor");
            return;
          }
          V(this, "deploy", r);
          return;
        case "function":
          i = this.functions;
          break;
        case "event":
          i = this.events;
          break;
        case "error":
          i = this.errors;
          break;
        default:
          return;
      }
      let s = r.format();
      if (i[s]) {
        At.warn("duplicate definition - " + s);
        return;
      }
      i[s] = r;
    }), this.deploy || V(this, "deploy", _r.from({
      payable: !1,
      type: "constructor"
    })), V(this, "_isInterface", !0);
  }
  format(e) {
    e || (e = Ee.full), e === Ee.sighash && At.throwArgumentError("interface does not support formatting sighash", "format", e);
    const t = this.fragments.map((r) => r.format(e));
    return e === Ee.json ? JSON.stringify(t.map((r) => JSON.parse(r))) : t;
  }
  static getAbiCoder() {
    return Sw;
  }
  static getAddress(e) {
    return De(e);
  }
  static getSighash(e) {
    return Dt(ps(e.format()), 0, 4);
  }
  static getEventTopic(e) {
    return ps(e.format());
  }
  getFunction(e) {
    if (Ae(e)) {
      for (const r in this.functions)
        if (e === this.getSighash(r))
          return this.functions[r];
      At.throwArgumentError("no matching function", "sighash", e);
    }
    if (e.indexOf("(") === -1) {
      const r = e.trim(), i = Object.keys(this.functions).filter((s) => s.split("(")[0] === r);
      return i.length === 0 ? At.throwArgumentError("no matching function", "name", r) : i.length > 1 && At.throwArgumentError("multiple matching functions", "name", r), this.functions[i[0]];
    }
    const t = this.functions[Mr.fromString(e).format()];
    return t || At.throwArgumentError("no matching function", "signature", e), t;
  }
  getEvent(e) {
    if (Ae(e)) {
      const r = e.toLowerCase();
      for (const i in this.events)
        if (r === this.getEventTopic(i))
          return this.events[i];
      At.throwArgumentError("no matching event", "topichash", r);
    }
    if (e.indexOf("(") === -1) {
      const r = e.trim(), i = Object.keys(this.events).filter((s) => s.split("(")[0] === r);
      return i.length === 0 ? At.throwArgumentError("no matching event", "name", r) : i.length > 1 && At.throwArgumentError("multiple matching events", "name", r), this.events[i[0]];
    }
    const t = this.events[Kr.fromString(e).format()];
    return t || At.throwArgumentError("no matching event", "signature", e), t;
  }
  getError(e) {
    if (Ae(e)) {
      const r = Ir(this.constructor, "getSighash");
      for (const i in this.errors) {
        const s = this.errors[i];
        if (e === r(s))
          return this.errors[i];
      }
      At.throwArgumentError("no matching error", "sighash", e);
    }
    if (e.indexOf("(") === -1) {
      const r = e.trim(), i = Object.keys(this.errors).filter((s) => s.split("(")[0] === r);
      return i.length === 0 ? At.throwArgumentError("no matching error", "name", r) : i.length > 1 && At.throwArgumentError("multiple matching errors", "name", r), this.errors[i[0]];
    }
    const t = this.errors[Mr.fromString(e).format()];
    return t || At.throwArgumentError("no matching error", "signature", e), t;
  }
  getSighash(e) {
    if (typeof e == "string")
      try {
        e = this.getFunction(e);
      } catch (t) {
        try {
          e = this.getError(e);
        } catch {
          throw t;
        }
      }
    return Ir(this.constructor, "getSighash")(e);
  }
  getEventTopic(e) {
    return typeof e == "string" && (e = this.getEvent(e)), Ir(this.constructor, "getEventTopic")(e);
  }
  _decodeParams(e, t) {
    return this._abiCoder.decode(e, t);
  }
  _encodeParams(e, t) {
    return this._abiCoder.encode(e, t);
  }
  encodeDeploy(e) {
    return this._encodeParams(this.deploy.inputs, e || []);
  }
  decodeErrorResult(e, t) {
    typeof e == "string" && (e = this.getError(e));
    const r = z(t);
    return K(r.slice(0, 4)) !== this.getSighash(e) && At.throwArgumentError(`data signature does not match error ${e.name}.`, "data", K(r)), this._decodeParams(e.inputs, r.slice(4));
  }
  encodeErrorResult(e, t) {
    return typeof e == "string" && (e = this.getError(e)), K(Ve([
      this.getSighash(e),
      this._encodeParams(e.inputs, t || [])
    ]));
  }
  decodeFunctionData(e, t) {
    typeof e == "string" && (e = this.getFunction(e));
    const r = z(t);
    return K(r.slice(0, 4)) !== this.getSighash(e) && At.throwArgumentError(`data signature does not match function ${e.name}.`, "data", K(r)), this._decodeParams(e.inputs, r.slice(4));
  }
  encodeFunctionData(e, t) {
    return typeof e == "string" && (e = this.getFunction(e)), K(Ve([
      this.getSighash(e),
      this._encodeParams(e.inputs, t || [])
    ]));
  }
  decodeFunctionResult(e, t) {
    typeof e == "string" && (e = this.getFunction(e));
    let r = z(t), i = null, s = "", a = null, o = null, u = null;
    switch (r.length % this._abiCoder._getWordSize()) {
      case 0:
        try {
          return this._abiCoder.decode(e.outputs, r);
        } catch {
        }
        break;
      case 4: {
        const l = K(r.slice(0, 4)), c = E_[l];
        if (c)
          a = this._abiCoder.decode(c.inputs, r.slice(4)), o = c.name, u = c.signature, c.reason && (i = a[0]), o === "Error" ? s = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(a[0])}` : o === "Panic" && (s = `; VM Exception while processing transaction: reverted with panic code ${a[0]}`);
        else
          try {
            const p = this.getError(l);
            a = this._abiCoder.decode(p.inputs, r.slice(4)), o = p.name, u = p.format();
          } catch {
          }
        break;
      }
    }
    return At.throwError("call revert exception" + s, O.errors.CALL_EXCEPTION, {
      method: e.format(),
      data: K(t),
      errorArgs: a,
      errorName: o,
      errorSignature: u,
      reason: i
    });
  }
  encodeFunctionResult(e, t) {
    return typeof e == "string" && (e = this.getFunction(e)), K(this._abiCoder.encode(e.outputs, t || []));
  }
  encodeFilterTopics(e, t) {
    typeof e == "string" && (e = this.getEvent(e)), t.length > e.inputs.length && At.throwError("too many arguments for " + e.format(), O.errors.UNEXPECTED_ARGUMENT, {
      argument: "values",
      value: t
    });
    let r = [];
    e.anonymous || r.push(this.getEventTopic(e));
    const i = (s, a) => s.type === "string" ? ps(a) : s.type === "bytes" ? Ie(K(a)) : (s.type === "bool" && typeof a == "boolean" && (a = a ? "0x01" : "0x00"), s.type.match(/^u?int/) && (a = W.from(a).toHexString()), s.type === "address" && this._abiCoder.encode(["address"], [a]), Be(K(a), 32));
    for (t.forEach((s, a) => {
      let o = e.inputs[a];
      if (!o.indexed) {
        s != null && At.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + o.name, s);
        return;
      }
      s == null ? r.push(null) : o.baseType === "array" || o.baseType === "tuple" ? At.throwArgumentError("filtering with tuples or arrays not supported", "contract." + o.name, s) : Array.isArray(s) ? r.push(s.map((u) => i(o, u))) : r.push(i(o, s));
    }); r.length && r[r.length - 1] === null; )
      r.pop();
    return r;
  }
  encodeEventLog(e, t) {
    typeof e == "string" && (e = this.getEvent(e));
    const r = [], i = [], s = [];
    return e.anonymous || r.push(this.getEventTopic(e)), t.length !== e.inputs.length && At.throwArgumentError("event arguments/values mismatch", "values", t), e.inputs.forEach((a, o) => {
      const u = t[o];
      if (a.indexed)
        if (a.type === "string")
          r.push(ps(u));
        else if (a.type === "bytes")
          r.push(Ie(u));
        else {
          if (a.baseType === "tuple" || a.baseType === "array")
            throw new Error("not implemented");
          r.push(this._abiCoder.encode([a.type], [u]));
        }
      else
        i.push(a), s.push(u);
    }), {
      data: this._abiCoder.encode(i, s),
      topics: r
    };
  }
  decodeEventLog(e, t, r) {
    if (typeof e == "string" && (e = this.getEvent(e)), r != null && !e.anonymous) {
      let b = this.getEventTopic(e);
      (!Ae(r[0], 32) || r[0].toLowerCase() !== b) && At.throwError("fragment/topic mismatch", O.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: b, value: r[0] }), r = r.slice(1);
    }
    let i = [], s = [], a = [];
    e.inputs.forEach((b, A) => {
      b.indexed ? b.type === "string" || b.type === "bytes" || b.baseType === "tuple" || b.baseType === "array" ? (i.push(Gt.fromObject({ type: "bytes32", name: b.name })), a.push(!0)) : (i.push(b), a.push(!1)) : (s.push(b), a.push(!1));
    });
    let o = r != null ? this._abiCoder.decode(i, Ve(r)) : null, u = this._abiCoder.decode(s, t, !0), l = [], c = 0, p = 0;
    e.inputs.forEach((b, A) => {
      if (b.indexed)
        if (o == null)
          l[A] = new ad({ _isIndexed: !0, hash: null });
        else if (a[A])
          l[A] = new ad({ _isIndexed: !0, hash: o[p++] });
        else
          try {
            l[A] = o[p++];
          } catch (g) {
            l[A] = g;
          }
      else
        try {
          l[A] = u[c++];
        } catch (g) {
          l[A] = g;
        }
      if (b.name && l[b.name] == null) {
        const g = l[A];
        g instanceof Error ? Object.defineProperty(l, b.name, {
          enumerable: !0,
          get: () => {
            throw w2(`property ${JSON.stringify(b.name)}`, g);
          }
        }) : l[b.name] = g;
      }
    });
    for (let b = 0; b < l.length; b++) {
      const A = l[b];
      A instanceof Error && Object.defineProperty(l, b, {
        enumerable: !0,
        get: () => {
          throw w2(`index ${b}`, A);
        }
      });
    }
    return Object.freeze(l);
  }
  parseTransaction(e) {
    let t = this.getFunction(e.data.substring(0, 10).toLowerCase());
    return t ? new Lw({
      args: this._abiCoder.decode(t.inputs, "0x" + e.data.substring(10)),
      functionFragment: t,
      name: t.name,
      signature: t.format(),
      sighash: this.getSighash(t),
      value: W.from(e.value || "0")
    }) : null;
  }
  parseLog(e) {
    let t = this.getEvent(e.topics[0]);
    return !t || t.anonymous ? null : new Fw({
      eventFragment: t,
      name: t.name,
      signature: t.format(),
      topic: this.getEventTopic(t),
      args: this.decodeEventLog(t, e.data, e.topics)
    });
  }
  parseError(e) {
    const t = K(e);
    let r = this.getError(t.substring(0, 10).toLowerCase());
    return r ? new S_({
      args: this._abiCoder.decode(r.inputs, "0x" + t.substring(10)),
      errorFragment: r,
      name: r.name,
      signature: r.format(),
      sighash: this.getSighash(r)
    }) : null;
  }
  static isInterface(e) {
    return !!(e && e._isInterface);
  }
}
const __ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ConstructorFragment: _r,
  ErrorFragment: Ti,
  EventFragment: Kr,
  Fragment: qr,
  FunctionFragment: Mr,
  ParamType: Gt,
  FormatTypes: Ee,
  AbiCoder: Cw,
  defaultAbiCoder: Sw,
  Interface: yh,
  Indexed: ad,
  checkResultErrors: aw,
  LogDescription: Fw,
  TransactionDescription: Lw
}, Symbol.toStringTag, { value: "Module" })), M_ = "abstract-provider/5.7.0";
var R_ = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const P_ = new O(M_);
class O_ extends Os {
  static isForkEvent(e) {
    return !!(e && e._isForkEvent);
  }
}
class kl {
  constructor() {
    P_.checkAbstract(new.target, kl), V(this, "_isProvider", !0);
  }
  getFeeData() {
    return R_(this, void 0, void 0, function* () {
      const { block: e, gasPrice: t } = yield Rt({
        block: this.getBlock("latest"),
        gasPrice: this.getGasPrice().catch((a) => null)
      });
      let r = null, i = null, s = null;
      return e && e.baseFeePerGas && (r = e.baseFeePerGas, s = W.from("1500000000"), i = e.baseFeePerGas.mul(2).add(s)), { lastBaseFeePerGas: r, maxFeePerGas: i, maxPriorityFeePerGas: s, gasPrice: t };
    });
  }
  addListener(e, t) {
    return this.on(e, t);
  }
  removeListener(e, t) {
    return this.off(e, t);
  }
  static isProvider(e) {
    return !!(e && e._isProvider);
  }
}
const I_ = "abstract-signer/5.7.0";
var Ar = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const ur = new O(I_), k_ = [
  "accessList",
  "ccipReadEnabled",
  "chainId",
  "customData",
  "data",
  "from",
  "gasLimit",
  "gasPrice",
  "maxFeePerGas",
  "maxPriorityFeePerGas",
  "nonce",
  "to",
  "type",
  "value"
], D_ = [
  O.errors.INSUFFICIENT_FUNDS,
  O.errors.NONCE_EXPIRED,
  O.errors.REPLACEMENT_UNDERPRICED
];
class $a {
  constructor() {
    ur.checkAbstract(new.target, $a), V(this, "_isSigner", !0);
  }
  getBalance(e) {
    return Ar(this, void 0, void 0, function* () {
      return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), e);
    });
  }
  getTransactionCount(e) {
    return Ar(this, void 0, void 0, function* () {
      return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), e);
    });
  }
  estimateGas(e) {
    return Ar(this, void 0, void 0, function* () {
      this._checkProvider("estimateGas");
      const t = yield Rt(this.checkTransaction(e));
      return yield this.provider.estimateGas(t);
    });
  }
  call(e, t) {
    return Ar(this, void 0, void 0, function* () {
      this._checkProvider("call");
      const r = yield Rt(this.checkTransaction(e));
      return yield this.provider.call(r, t);
    });
  }
  sendTransaction(e) {
    return Ar(this, void 0, void 0, function* () {
      this._checkProvider("sendTransaction");
      const t = yield this.populateTransaction(e), r = yield this.signTransaction(t);
      return yield this.provider.sendTransaction(r);
    });
  }
  getChainId() {
    return Ar(this, void 0, void 0, function* () {
      return this._checkProvider("getChainId"), (yield this.provider.getNetwork()).chainId;
    });
  }
  getGasPrice() {
    return Ar(this, void 0, void 0, function* () {
      return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice();
    });
  }
  getFeeData() {
    return Ar(this, void 0, void 0, function* () {
      return this._checkProvider("getFeeData"), yield this.provider.getFeeData();
    });
  }
  resolveName(e) {
    return Ar(this, void 0, void 0, function* () {
      return this._checkProvider("resolveName"), yield this.provider.resolveName(e);
    });
  }
  checkTransaction(e) {
    for (const r in e)
      k_.indexOf(r) === -1 && ur.throwArgumentError("invalid transaction key: " + r, "transaction", e);
    const t = $t(e);
    return t.from == null ? t.from = this.getAddress() : t.from = Promise.all([
      Promise.resolve(t.from),
      this.getAddress()
    ]).then((r) => (r[0].toLowerCase() !== r[1].toLowerCase() && ur.throwArgumentError("from address mismatch", "transaction", e), r[0])), t;
  }
  populateTransaction(e) {
    return Ar(this, void 0, void 0, function* () {
      const t = yield Rt(this.checkTransaction(e));
      t.to != null && (t.to = Promise.resolve(t.to).then((i) => Ar(this, void 0, void 0, function* () {
        if (i == null)
          return null;
        const s = yield this.resolveName(i);
        return s == null && ur.throwArgumentError("provided ENS name resolves to null", "tx.to", i), s;
      })), t.to.catch((i) => {
      }));
      const r = t.maxFeePerGas != null || t.maxPriorityFeePerGas != null;
      if (t.gasPrice != null && (t.type === 2 || r) ? ur.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", e) : (t.type === 0 || t.type === 1) && r && ur.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", e), (t.type === 2 || t.type == null) && t.maxFeePerGas != null && t.maxPriorityFeePerGas != null)
        t.type = 2;
      else if (t.type === 0 || t.type === 1)
        t.gasPrice == null && (t.gasPrice = this.getGasPrice());
      else {
        const i = yield this.getFeeData();
        if (t.type == null)
          if (i.maxFeePerGas != null && i.maxPriorityFeePerGas != null)
            if (t.type = 2, t.gasPrice != null) {
              const s = t.gasPrice;
              delete t.gasPrice, t.maxFeePerGas = s, t.maxPriorityFeePerGas = s;
            } else
              t.maxFeePerGas == null && (t.maxFeePerGas = i.maxFeePerGas), t.maxPriorityFeePerGas == null && (t.maxPriorityFeePerGas = i.maxPriorityFeePerGas);
          else
            i.gasPrice != null ? (r && ur.throwError("network does not support EIP-1559", O.errors.UNSUPPORTED_OPERATION, {
              operation: "populateTransaction"
            }), t.gasPrice == null && (t.gasPrice = i.gasPrice), t.type = 0) : ur.throwError("failed to get consistent fee data", O.errors.UNSUPPORTED_OPERATION, {
              operation: "signer.getFeeData"
            });
        else
          t.type === 2 && (t.maxFeePerGas == null && (t.maxFeePerGas = i.maxFeePerGas), t.maxPriorityFeePerGas == null && (t.maxPriorityFeePerGas = i.maxPriorityFeePerGas));
      }
      return t.nonce == null && (t.nonce = this.getTransactionCount("pending")), t.gasLimit == null && (t.gasLimit = this.estimateGas(t).catch((i) => {
        if (D_.indexOf(i.code) >= 0)
          throw i;
        return ur.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", O.errors.UNPREDICTABLE_GAS_LIMIT, {
          error: i,
          tx: t
        });
      })), t.chainId == null ? t.chainId = this.getChainId() : t.chainId = Promise.all([
        Promise.resolve(t.chainId),
        this.getChainId()
      ]).then((i) => (i[1] !== 0 && i[0] !== i[1] && ur.throwArgumentError("chainId address mismatch", "transaction", e), i[0])), yield Rt(t);
    });
  }
  _checkProvider(e) {
    this.provider || ur.throwError("missing provider", O.errors.UNSUPPORTED_OPERATION, {
      operation: e || "_checkProvider"
    });
  }
  static isSigner(e) {
    return !!(e && e._isSigner);
  }
}
class iy extends $a {
  constructor(e, t) {
    super(), V(this, "address", e), V(this, "provider", t || null);
  }
  getAddress() {
    return Promise.resolve(this.address);
  }
  _fail(e, t) {
    return Promise.resolve().then(() => {
      ur.throwError(e, O.errors.UNSUPPORTED_OPERATION, { operation: t });
    });
  }
  signMessage(e) {
    return this._fail("VoidSigner cannot sign messages", "signMessage");
  }
  signTransaction(e) {
    return this._fail("VoidSigner cannot sign transactions", "signTransaction");
  }
  _signTypedData(e, t, r) {
    return this._fail("VoidSigner cannot sign typed data", "signTypedData");
  }
  connect(e) {
    return new iy(this.address, e);
  }
}
var $w = {}, xe = {}, Dl = Uw;
function Uw(n, e) {
  if (!n)
    throw new Error(e || "Assertion failed");
}
Uw.equal = function(e, t, r) {
  if (e != t)
    throw new Error(r || "Assertion failed: " + e + " != " + t);
};
var mh = { exports: {} };
typeof Object.create == "function" ? mh.exports = function(e, t) {
  t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
    constructor: {
      value: e,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  }));
} : mh.exports = function(e, t) {
  if (t) {
    e.super_ = t;
    var r = function() {
    };
    r.prototype = t.prototype, e.prototype = new r(), e.prototype.constructor = e;
  }
};
var B_ = Dl, N_ = mh.exports;
xe.inherits = N_;
function F_(n, e) {
  return (n.charCodeAt(e) & 64512) !== 55296 || e < 0 || e + 1 >= n.length ? !1 : (n.charCodeAt(e + 1) & 64512) === 56320;
}
function L_(n, e) {
  if (Array.isArray(n))
    return n.slice();
  if (!n)
    return [];
  var t = [];
  if (typeof n == "string")
    if (e) {
      if (e === "hex")
        for (n = n.replace(/[^a-z0-9]+/ig, ""), n.length % 2 !== 0 && (n = "0" + n), i = 0; i < n.length; i += 2)
          t.push(parseInt(n[i] + n[i + 1], 16));
    } else
      for (var r = 0, i = 0; i < n.length; i++) {
        var s = n.charCodeAt(i);
        s < 128 ? t[r++] = s : s < 2048 ? (t[r++] = s >> 6 | 192, t[r++] = s & 63 | 128) : F_(n, i) ? (s = 65536 + ((s & 1023) << 10) + (n.charCodeAt(++i) & 1023), t[r++] = s >> 18 | 240, t[r++] = s >> 12 & 63 | 128, t[r++] = s >> 6 & 63 | 128, t[r++] = s & 63 | 128) : (t[r++] = s >> 12 | 224, t[r++] = s >> 6 & 63 | 128, t[r++] = s & 63 | 128);
      }
  else
    for (i = 0; i < n.length; i++)
      t[i] = n[i] | 0;
  return t;
}
xe.toArray = L_;
function $_(n) {
  for (var e = "", t = 0; t < n.length; t++)
    e += jw(n[t].toString(16));
  return e;
}
xe.toHex = $_;
function Vw(n) {
  var e = n >>> 24 | n >>> 8 & 65280 | n << 8 & 16711680 | (n & 255) << 24;
  return e >>> 0;
}
xe.htonl = Vw;
function U_(n, e) {
  for (var t = "", r = 0; r < n.length; r++) {
    var i = n[r];
    e === "little" && (i = Vw(i)), t += Gw(i.toString(16));
  }
  return t;
}
xe.toHex32 = U_;
function jw(n) {
  return n.length === 1 ? "0" + n : n;
}
xe.zero2 = jw;
function Gw(n) {
  return n.length === 7 ? "0" + n : n.length === 6 ? "00" + n : n.length === 5 ? "000" + n : n.length === 4 ? "0000" + n : n.length === 3 ? "00000" + n : n.length === 2 ? "000000" + n : n.length === 1 ? "0000000" + n : n;
}
xe.zero8 = Gw;
function V_(n, e, t, r) {
  var i = t - e;
  B_(i % 4 === 0);
  for (var s = new Array(i / 4), a = 0, o = e; a < s.length; a++, o += 4) {
    var u;
    r === "big" ? u = n[o] << 24 | n[o + 1] << 16 | n[o + 2] << 8 | n[o + 3] : u = n[o + 3] << 24 | n[o + 2] << 16 | n[o + 1] << 8 | n[o], s[a] = u >>> 0;
  }
  return s;
}
xe.join32 = V_;
function j_(n, e) {
  for (var t = new Array(n.length * 4), r = 0, i = 0; r < n.length; r++, i += 4) {
    var s = n[r];
    e === "big" ? (t[i] = s >>> 24, t[i + 1] = s >>> 16 & 255, t[i + 2] = s >>> 8 & 255, t[i + 3] = s & 255) : (t[i + 3] = s >>> 24, t[i + 2] = s >>> 16 & 255, t[i + 1] = s >>> 8 & 255, t[i] = s & 255);
  }
  return t;
}
xe.split32 = j_;
function G_(n, e) {
  return n >>> e | n << 32 - e;
}
xe.rotr32 = G_;
function W_(n, e) {
  return n << e | n >>> 32 - e;
}
xe.rotl32 = W_;
function z_(n, e) {
  return n + e >>> 0;
}
xe.sum32 = z_;
function H_(n, e, t) {
  return n + e + t >>> 0;
}
xe.sum32_3 = H_;
function K_(n, e, t, r) {
  return n + e + t + r >>> 0;
}
xe.sum32_4 = K_;
function q_(n, e, t, r, i) {
  return n + e + t + r + i >>> 0;
}
xe.sum32_5 = q_;
function Q_(n, e, t, r) {
  var i = n[e], s = n[e + 1], a = r + s >>> 0, o = (a < r ? 1 : 0) + t + i;
  n[e] = o >>> 0, n[e + 1] = a;
}
xe.sum64 = Q_;
function J_(n, e, t, r) {
  var i = e + r >>> 0, s = (i < e ? 1 : 0) + n + t;
  return s >>> 0;
}
xe.sum64_hi = J_;
function Y_(n, e, t, r) {
  var i = e + r;
  return i >>> 0;
}
xe.sum64_lo = Y_;
function X_(n, e, t, r, i, s, a, o) {
  var u = 0, l = e;
  l = l + r >>> 0, u += l < e ? 1 : 0, l = l + s >>> 0, u += l < s ? 1 : 0, l = l + o >>> 0, u += l < o ? 1 : 0;
  var c = n + t + i + a + u;
  return c >>> 0;
}
xe.sum64_4_hi = X_;
function Z_(n, e, t, r, i, s, a, o) {
  var u = e + r + s + o;
  return u >>> 0;
}
xe.sum64_4_lo = Z_;
function eM(n, e, t, r, i, s, a, o, u, l) {
  var c = 0, p = e;
  p = p + r >>> 0, c += p < e ? 1 : 0, p = p + s >>> 0, c += p < s ? 1 : 0, p = p + o >>> 0, c += p < o ? 1 : 0, p = p + l >>> 0, c += p < l ? 1 : 0;
  var b = n + t + i + a + u + c;
  return b >>> 0;
}
xe.sum64_5_hi = eM;
function tM(n, e, t, r, i, s, a, o, u, l) {
  var c = e + r + s + o + l;
  return c >>> 0;
}
xe.sum64_5_lo = tM;
function nM(n, e, t) {
  var r = e << 32 - t | n >>> t;
  return r >>> 0;
}
xe.rotr64_hi = nM;
function rM(n, e, t) {
  var r = n << 32 - t | e >>> t;
  return r >>> 0;
}
xe.rotr64_lo = rM;
function iM(n, e, t) {
  return n >>> t;
}
xe.shr64_hi = iM;
function sM(n, e, t) {
  var r = n << 32 - t | e >>> t;
  return r >>> 0;
}
xe.shr64_lo = sM;
var jo = {}, T2 = xe, aM = Dl;
function tf() {
  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
}
jo.BlockHash = tf;
tf.prototype.update = function(e, t) {
  if (e = T2.toArray(e, t), this.pending ? this.pending = this.pending.concat(e) : this.pending = e, this.pendingTotal += e.length, this.pending.length >= this._delta8) {
    e = this.pending;
    var r = e.length % this._delta8;
    this.pending = e.slice(e.length - r, e.length), this.pending.length === 0 && (this.pending = null), e = T2.join32(e, 0, e.length - r, this.endian);
    for (var i = 0; i < e.length; i += this._delta32)
      this._update(e, i, i + this._delta32);
  }
  return this;
};
tf.prototype.digest = function(e) {
  return this.update(this._pad()), aM(this.pending === null), this._digest(e);
};
tf.prototype._pad = function() {
  var e = this.pendingTotal, t = this._delta8, r = t - (e + this.padLength) % t, i = new Array(r + this.padLength);
  i[0] = 128;
  for (var s = 1; s < r; s++)
    i[s] = 0;
  if (e <<= 3, this.endian === "big") {
    for (var a = 8; a < this.padLength; a++)
      i[s++] = 0;
    i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = e >>> 24 & 255, i[s++] = e >>> 16 & 255, i[s++] = e >>> 8 & 255, i[s++] = e & 255;
  } else
    for (i[s++] = e & 255, i[s++] = e >>> 8 & 255, i[s++] = e >>> 16 & 255, i[s++] = e >>> 24 & 255, i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = 0, a = 8; a < this.padLength; a++)
      i[s++] = 0;
  return i;
};
var Go = {}, ci = {}, oM = xe, Xr = oM.rotr32;
function uM(n, e, t, r) {
  if (n === 0)
    return Ww(e, t, r);
  if (n === 1 || n === 3)
    return Hw(e, t, r);
  if (n === 2)
    return zw(e, t, r);
}
ci.ft_1 = uM;
function Ww(n, e, t) {
  return n & e ^ ~n & t;
}
ci.ch32 = Ww;
function zw(n, e, t) {
  return n & e ^ n & t ^ e & t;
}
ci.maj32 = zw;
function Hw(n, e, t) {
  return n ^ e ^ t;
}
ci.p32 = Hw;
function lM(n) {
  return Xr(n, 2) ^ Xr(n, 13) ^ Xr(n, 22);
}
ci.s0_256 = lM;
function cM(n) {
  return Xr(n, 6) ^ Xr(n, 11) ^ Xr(n, 25);
}
ci.s1_256 = cM;
function dM(n) {
  return Xr(n, 7) ^ Xr(n, 18) ^ n >>> 3;
}
ci.g0_256 = dM;
function fM(n) {
  return Xr(n, 17) ^ Xr(n, 19) ^ n >>> 10;
}
ci.g1_256 = fM;
var To = xe, pM = jo, hM = ci, mp = To.rotl32, nu = To.sum32, yM = To.sum32_5, mM = hM.ft_1, Kw = pM.BlockHash, bM = [
  1518500249,
  1859775393,
  2400959708,
  3395469782
];
function ii() {
  if (!(this instanceof ii))
    return new ii();
  Kw.call(this), this.h = [
    1732584193,
    4023233417,
    2562383102,
    271733878,
    3285377520
  ], this.W = new Array(80);
}
To.inherits(ii, Kw);
var gM = ii;
ii.blockSize = 512;
ii.outSize = 160;
ii.hmacStrength = 80;
ii.padLength = 64;
ii.prototype._update = function(e, t) {
  for (var r = this.W, i = 0; i < 16; i++)
    r[i] = e[t + i];
  for (; i < r.length; i++)
    r[i] = mp(r[i - 3] ^ r[i - 8] ^ r[i - 14] ^ r[i - 16], 1);
  var s = this.h[0], a = this.h[1], o = this.h[2], u = this.h[3], l = this.h[4];
  for (i = 0; i < r.length; i++) {
    var c = ~~(i / 20), p = yM(mp(s, 5), mM(c, a, o, u), l, r[i], bM[c]);
    l = u, u = o, o = mp(a, 30), a = s, s = p;
  }
  this.h[0] = nu(this.h[0], s), this.h[1] = nu(this.h[1], a), this.h[2] = nu(this.h[2], o), this.h[3] = nu(this.h[3], u), this.h[4] = nu(this.h[4], l);
};
ii.prototype._digest = function(e) {
  return e === "hex" ? To.toHex32(this.h, "big") : To.split32(this.h, "big");
};
var Ao = xe, vM = jo, Wo = ci, xM = Dl, Cr = Ao.sum32, wM = Ao.sum32_4, TM = Ao.sum32_5, AM = Wo.ch32, CM = Wo.maj32, SM = Wo.s0_256, EM = Wo.s1_256, _M = Wo.g0_256, MM = Wo.g1_256, qw = vM.BlockHash, RM = [
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
];
function si() {
  if (!(this instanceof si))
    return new si();
  qw.call(this), this.h = [
    1779033703,
    3144134277,
    1013904242,
    2773480762,
    1359893119,
    2600822924,
    528734635,
    1541459225
  ], this.k = RM, this.W = new Array(64);
}
Ao.inherits(si, qw);
var Qw = si;
si.blockSize = 512;
si.outSize = 256;
si.hmacStrength = 192;
si.padLength = 64;
si.prototype._update = function(e, t) {
  for (var r = this.W, i = 0; i < 16; i++)
    r[i] = e[t + i];
  for (; i < r.length; i++)
    r[i] = wM(MM(r[i - 2]), r[i - 7], _M(r[i - 15]), r[i - 16]);
  var s = this.h[0], a = this.h[1], o = this.h[2], u = this.h[3], l = this.h[4], c = this.h[5], p = this.h[6], b = this.h[7];
  for (xM(this.k.length === r.length), i = 0; i < r.length; i++) {
    var A = TM(b, EM(l), AM(l, c, p), this.k[i], r[i]), g = Cr(SM(s), CM(s, a, o));
    b = p, p = c, c = l, l = Cr(u, A), u = o, o = a, a = s, s = Cr(A, g);
  }
  this.h[0] = Cr(this.h[0], s), this.h[1] = Cr(this.h[1], a), this.h[2] = Cr(this.h[2], o), this.h[3] = Cr(this.h[3], u), this.h[4] = Cr(this.h[4], l), this.h[5] = Cr(this.h[5], c), this.h[6] = Cr(this.h[6], p), this.h[7] = Cr(this.h[7], b);
};
si.prototype._digest = function(e) {
  return e === "hex" ? Ao.toHex32(this.h, "big") : Ao.split32(this.h, "big");
};
var bh = xe, Jw = Qw;
function Di() {
  if (!(this instanceof Di))
    return new Di();
  Jw.call(this), this.h = [
    3238371032,
    914150663,
    812702999,
    4144912697,
    4290775857,
    1750603025,
    1694076839,
    3204075428
  ];
}
bh.inherits(Di, Jw);
var PM = Di;
Di.blockSize = 512;
Di.outSize = 224;
Di.hmacStrength = 192;
Di.padLength = 64;
Di.prototype._digest = function(e) {
  return e === "hex" ? bh.toHex32(this.h.slice(0, 7), "big") : bh.split32(this.h.slice(0, 7), "big");
};
var jn = xe, OM = jo, IM = Dl, Zr = jn.rotr64_hi, ei = jn.rotr64_lo, Yw = jn.shr64_hi, Xw = jn.shr64_lo, ts = jn.sum64, bp = jn.sum64_hi, gp = jn.sum64_lo, kM = jn.sum64_4_hi, DM = jn.sum64_4_lo, BM = jn.sum64_5_hi, NM = jn.sum64_5_lo, Zw = OM.BlockHash, FM = [
  1116352408,
  3609767458,
  1899447441,
  602891725,
  3049323471,
  3964484399,
  3921009573,
  2173295548,
  961987163,
  4081628472,
  1508970993,
  3053834265,
  2453635748,
  2937671579,
  2870763221,
  3664609560,
  3624381080,
  2734883394,
  310598401,
  1164996542,
  607225278,
  1323610764,
  1426881987,
  3590304994,
  1925078388,
  4068182383,
  2162078206,
  991336113,
  2614888103,
  633803317,
  3248222580,
  3479774868,
  3835390401,
  2666613458,
  4022224774,
  944711139,
  264347078,
  2341262773,
  604807628,
  2007800933,
  770255983,
  1495990901,
  1249150122,
  1856431235,
  1555081692,
  3175218132,
  1996064986,
  2198950837,
  2554220882,
  3999719339,
  2821834349,
  766784016,
  2952996808,
  2566594879,
  3210313671,
  3203337956,
  3336571891,
  1034457026,
  3584528711,
  2466948901,
  113926993,
  3758326383,
  338241895,
  168717936,
  666307205,
  1188179964,
  773529912,
  1546045734,
  1294757372,
  1522805485,
  1396182291,
  2643833823,
  1695183700,
  2343527390,
  1986661051,
  1014477480,
  2177026350,
  1206759142,
  2456956037,
  344077627,
  2730485921,
  1290863460,
  2820302411,
  3158454273,
  3259730800,
  3505952657,
  3345764771,
  106217008,
  3516065817,
  3606008344,
  3600352804,
  1432725776,
  4094571909,
  1467031594,
  275423344,
  851169720,
  430227734,
  3100823752,
  506948616,
  1363258195,
  659060556,
  3750685593,
  883997877,
  3785050280,
  958139571,
  3318307427,
  1322822218,
  3812723403,
  1537002063,
  2003034995,
  1747873779,
  3602036899,
  1955562222,
  1575990012,
  2024104815,
  1125592928,
  2227730452,
  2716904306,
  2361852424,
  442776044,
  2428436474,
  593698344,
  2756734187,
  3733110249,
  3204031479,
  2999351573,
  3329325298,
  3815920427,
  3391569614,
  3928383900,
  3515267271,
  566280711,
  3940187606,
  3454069534,
  4118630271,
  4000239992,
  116418474,
  1914138554,
  174292421,
  2731055270,
  289380356,
  3203993006,
  460393269,
  320620315,
  685471733,
  587496836,
  852142971,
  1086792851,
  1017036298,
  365543100,
  1126000580,
  2618297676,
  1288033470,
  3409855158,
  1501505948,
  4234509866,
  1607167915,
  987167468,
  1816402316,
  1246189591
];
function Fr() {
  if (!(this instanceof Fr))
    return new Fr();
  Zw.call(this), this.h = [
    1779033703,
    4089235720,
    3144134277,
    2227873595,
    1013904242,
    4271175723,
    2773480762,
    1595750129,
    1359893119,
    2917565137,
    2600822924,
    725511199,
    528734635,
    4215389547,
    1541459225,
    327033209
  ], this.k = FM, this.W = new Array(160);
}
jn.inherits(Fr, Zw);
var e6 = Fr;
Fr.blockSize = 1024;
Fr.outSize = 512;
Fr.hmacStrength = 192;
Fr.padLength = 128;
Fr.prototype._prepareBlock = function(e, t) {
  for (var r = this.W, i = 0; i < 32; i++)
    r[i] = e[t + i];
  for (; i < r.length; i += 2) {
    var s = qM(r[i - 4], r[i - 3]), a = QM(r[i - 4], r[i - 3]), o = r[i - 14], u = r[i - 13], l = HM(r[i - 30], r[i - 29]), c = KM(r[i - 30], r[i - 29]), p = r[i - 32], b = r[i - 31];
    r[i] = kM(
      s,
      a,
      o,
      u,
      l,
      c,
      p,
      b
    ), r[i + 1] = DM(
      s,
      a,
      o,
      u,
      l,
      c,
      p,
      b
    );
  }
};
Fr.prototype._update = function(e, t) {
  this._prepareBlock(e, t);
  var r = this.W, i = this.h[0], s = this.h[1], a = this.h[2], o = this.h[3], u = this.h[4], l = this.h[5], c = this.h[6], p = this.h[7], b = this.h[8], A = this.h[9], g = this.h[10], w = this.h[11], T = this.h[12], _ = this.h[13], I = this.h[14], N = this.h[15];
  IM(this.k.length === r.length);
  for (var B = 0; B < r.length; B += 2) {
    var D = I, $ = N, H = WM(b, A), j = zM(b, A), Q = LM(b, A, g, w, T), oe = $M(b, A, g, w, T, _), J = this.k[B], ue = this.k[B + 1], E = r[B], d = r[B + 1], y = BM(
      D,
      $,
      H,
      j,
      Q,
      oe,
      J,
      ue,
      E,
      d
    ), x = NM(
      D,
      $,
      H,
      j,
      Q,
      oe,
      J,
      ue,
      E,
      d
    );
    D = jM(i, s), $ = GM(i, s), H = UM(i, s, a, o, u), j = VM(i, s, a, o, u, l);
    var S = bp(D, $, H, j), C = gp(D, $, H, j);
    I = T, N = _, T = g, _ = w, g = b, w = A, b = bp(c, p, y, x), A = gp(p, p, y, x), c = u, p = l, u = a, l = o, a = i, o = s, i = bp(y, x, S, C), s = gp(y, x, S, C);
  }
  ts(this.h, 0, i, s), ts(this.h, 2, a, o), ts(this.h, 4, u, l), ts(this.h, 6, c, p), ts(this.h, 8, b, A), ts(this.h, 10, g, w), ts(this.h, 12, T, _), ts(this.h, 14, I, N);
};
Fr.prototype._digest = function(e) {
  return e === "hex" ? jn.toHex32(this.h, "big") : jn.split32(this.h, "big");
};
function LM(n, e, t, r, i) {
  var s = n & t ^ ~n & i;
  return s < 0 && (s += 4294967296), s;
}
function $M(n, e, t, r, i, s) {
  var a = e & r ^ ~e & s;
  return a < 0 && (a += 4294967296), a;
}
function UM(n, e, t, r, i) {
  var s = n & t ^ n & i ^ t & i;
  return s < 0 && (s += 4294967296), s;
}
function VM(n, e, t, r, i, s) {
  var a = e & r ^ e & s ^ r & s;
  return a < 0 && (a += 4294967296), a;
}
function jM(n, e) {
  var t = Zr(n, e, 28), r = Zr(e, n, 2), i = Zr(e, n, 7), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function GM(n, e) {
  var t = ei(n, e, 28), r = ei(e, n, 2), i = ei(e, n, 7), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function WM(n, e) {
  var t = Zr(n, e, 14), r = Zr(n, e, 18), i = Zr(e, n, 9), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function zM(n, e) {
  var t = ei(n, e, 14), r = ei(n, e, 18), i = ei(e, n, 9), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function HM(n, e) {
  var t = Zr(n, e, 1), r = Zr(n, e, 8), i = Yw(n, e, 7), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function KM(n, e) {
  var t = ei(n, e, 1), r = ei(n, e, 8), i = Xw(n, e, 7), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function qM(n, e) {
  var t = Zr(n, e, 19), r = Zr(e, n, 29), i = Yw(n, e, 6), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function QM(n, e) {
  var t = ei(n, e, 19), r = ei(e, n, 29), i = Xw(n, e, 6), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
var gh = xe, t6 = e6;
function Bi() {
  if (!(this instanceof Bi))
    return new Bi();
  t6.call(this), this.h = [
    3418070365,
    3238371032,
    1654270250,
    914150663,
    2438529370,
    812702999,
    355462360,
    4144912697,
    1731405415,
    4290775857,
    2394180231,
    1750603025,
    3675008525,
    1694076839,
    1203062813,
    3204075428
  ];
}
gh.inherits(Bi, t6);
var JM = Bi;
Bi.blockSize = 1024;
Bi.outSize = 384;
Bi.hmacStrength = 192;
Bi.padLength = 128;
Bi.prototype._digest = function(e) {
  return e === "hex" ? gh.toHex32(this.h.slice(0, 12), "big") : gh.split32(this.h.slice(0, 12), "big");
};
Go.sha1 = gM;
Go.sha224 = PM;
Go.sha256 = Qw;
Go.sha384 = JM;
Go.sha512 = e6;
var n6 = {}, va = xe, YM = jo, nc = va.rotl32, A2 = va.sum32, ru = va.sum32_3, C2 = va.sum32_4, r6 = YM.BlockHash;
function ai() {
  if (!(this instanceof ai))
    return new ai();
  r6.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
}
va.inherits(ai, r6);
n6.ripemd160 = ai;
ai.blockSize = 512;
ai.outSize = 160;
ai.hmacStrength = 192;
ai.padLength = 64;
ai.prototype._update = function(e, t) {
  for (var r = this.h[0], i = this.h[1], s = this.h[2], a = this.h[3], o = this.h[4], u = r, l = i, c = s, p = a, b = o, A = 0; A < 80; A++) {
    var g = A2(
      nc(
        C2(r, S2(A, i, s, a), e[eR[A] + t], XM(A)),
        nR[A]
      ),
      o
    );
    r = o, o = a, a = nc(s, 10), s = i, i = g, g = A2(
      nc(
        C2(u, S2(79 - A, l, c, p), e[tR[A] + t], ZM(A)),
        rR[A]
      ),
      b
    ), u = b, b = p, p = nc(c, 10), c = l, l = g;
  }
  g = ru(this.h[1], s, p), this.h[1] = ru(this.h[2], a, b), this.h[2] = ru(this.h[3], o, u), this.h[3] = ru(this.h[4], r, l), this.h[4] = ru(this.h[0], i, c), this.h[0] = g;
};
ai.prototype._digest = function(e) {
  return e === "hex" ? va.toHex32(this.h, "little") : va.split32(this.h, "little");
};
function S2(n, e, t, r) {
  return n <= 15 ? e ^ t ^ r : n <= 31 ? e & t | ~e & r : n <= 47 ? (e | ~t) ^ r : n <= 63 ? e & r | t & ~r : e ^ (t | ~r);
}
function XM(n) {
  return n <= 15 ? 0 : n <= 31 ? 1518500249 : n <= 47 ? 1859775393 : n <= 63 ? 2400959708 : 2840853838;
}
function ZM(n) {
  return n <= 15 ? 1352829926 : n <= 31 ? 1548603684 : n <= 47 ? 1836072691 : n <= 63 ? 2053994217 : 0;
}
var eR = [
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  7,
  4,
  13,
  1,
  10,
  6,
  15,
  3,
  12,
  0,
  9,
  5,
  2,
  14,
  11,
  8,
  3,
  10,
  14,
  4,
  9,
  15,
  8,
  1,
  2,
  7,
  0,
  6,
  13,
  11,
  5,
  12,
  1,
  9,
  11,
  10,
  0,
  8,
  12,
  4,
  13,
  3,
  7,
  15,
  14,
  5,
  6,
  2,
  4,
  0,
  5,
  9,
  7,
  12,
  2,
  10,
  14,
  1,
  3,
  8,
  11,
  6,
  15,
  13
], tR = [
  5,
  14,
  7,
  0,
  9,
  2,
  11,
  4,
  13,
  6,
  15,
  8,
  1,
  10,
  3,
  12,
  6,
  11,
  3,
  7,
  0,
  13,
  5,
  10,
  14,
  15,
  8,
  12,
  4,
  9,
  1,
  2,
  15,
  5,
  1,
  3,
  7,
  14,
  6,
  9,
  11,
  8,
  12,
  2,
  10,
  0,
  4,
  13,
  8,
  6,
  4,
  1,
  3,
  11,
  15,
  0,
  5,
  12,
  2,
  13,
  9,
  7,
  10,
  14,
  12,
  15,
  10,
  4,
  1,
  5,
  8,
  7,
  6,
  2,
  13,
  14,
  0,
  3,
  9,
  11
], nR = [
  11,
  14,
  15,
  12,
  5,
  8,
  7,
  9,
  11,
  13,
  14,
  15,
  6,
  7,
  9,
  8,
  7,
  6,
  8,
  13,
  11,
  9,
  7,
  15,
  7,
  12,
  15,
  9,
  11,
  7,
  13,
  12,
  11,
  13,
  6,
  7,
  14,
  9,
  13,
  15,
  14,
  8,
  13,
  6,
  5,
  12,
  7,
  5,
  11,
  12,
  14,
  15,
  14,
  15,
  9,
  8,
  9,
  14,
  5,
  6,
  8,
  6,
  5,
  12,
  9,
  15,
  5,
  11,
  6,
  8,
  13,
  12,
  5,
  12,
  13,
  14,
  11,
  8,
  5,
  6
], rR = [
  8,
  9,
  9,
  11,
  13,
  15,
  15,
  5,
  7,
  7,
  8,
  11,
  14,
  14,
  12,
  6,
  9,
  13,
  15,
  7,
  12,
  8,
  9,
  11,
  7,
  7,
  12,
  7,
  6,
  15,
  13,
  11,
  9,
  7,
  15,
  11,
  8,
  6,
  6,
  14,
  12,
  13,
  5,
  14,
  13,
  13,
  7,
  5,
  15,
  5,
  8,
  11,
  14,
  14,
  6,
  14,
  6,
  9,
  12,
  9,
  12,
  5,
  15,
  8,
  8,
  5,
  12,
  9,
  12,
  5,
  14,
  6,
  8,
  13,
  6,
  5,
  15,
  13,
  11,
  11
], iR = xe, sR = Dl;
function Co(n, e, t) {
  if (!(this instanceof Co))
    return new Co(n, e, t);
  this.Hash = n, this.blockSize = n.blockSize / 8, this.outSize = n.outSize / 8, this.inner = null, this.outer = null, this._init(iR.toArray(e, t));
}
var aR = Co;
Co.prototype._init = function(e) {
  e.length > this.blockSize && (e = new this.Hash().update(e).digest()), sR(e.length <= this.blockSize);
  for (var t = e.length; t < this.blockSize; t++)
    e.push(0);
  for (t = 0; t < e.length; t++)
    e[t] ^= 54;
  for (this.inner = new this.Hash().update(e), t = 0; t < e.length; t++)
    e[t] ^= 106;
  this.outer = new this.Hash().update(e);
};
Co.prototype.update = function(e, t) {
  return this.inner.update(e, t), this;
};
Co.prototype.digest = function(e) {
  return this.outer.update(this.inner.digest()), this.outer.digest(e);
};
(function(n) {
  var e = n;
  e.utils = xe, e.common = jo, e.sha = Go, e.ripemd = n6, e.hmac = aR, e.sha1 = e.sha.sha1, e.sha256 = e.sha.sha256, e.sha224 = e.sha.sha224, e.sha384 = e.sha.sha384, e.sha512 = e.sha.sha512, e.ripemd160 = e.ripemd.ripemd160;
})($w);
const kn = $w;
function zo(n, e, t) {
  return t = {
    path: e,
    exports: {},
    require: function(r, i) {
      return oR(r, i ?? t.path);
    }
  }, n(t, t.exports), t.exports;
}
function oR() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var sy = i6;
function i6(n, e) {
  if (!n)
    throw new Error(e || "Assertion failed");
}
i6.equal = function(e, t, r) {
  if (e != t)
    throw new Error(r || "Assertion failed: " + e + " != " + t);
};
var kr = zo(function(n, e) {
  var t = e;
  function r(a, o) {
    if (Array.isArray(a))
      return a.slice();
    if (!a)
      return [];
    var u = [];
    if (typeof a != "string") {
      for (var l = 0; l < a.length; l++)
        u[l] = a[l] | 0;
      return u;
    }
    if (o === "hex") {
      a = a.replace(/[^a-z0-9]+/ig, ""), a.length % 2 !== 0 && (a = "0" + a);
      for (var l = 0; l < a.length; l += 2)
        u.push(parseInt(a[l] + a[l + 1], 16));
    } else
      for (var l = 0; l < a.length; l++) {
        var c = a.charCodeAt(l), p = c >> 8, b = c & 255;
        p ? u.push(p, b) : u.push(b);
      }
    return u;
  }
  t.toArray = r;
  function i(a) {
    return a.length === 1 ? "0" + a : a;
  }
  t.zero2 = i;
  function s(a) {
    for (var o = "", u = 0; u < a.length; u++)
      o += i(a[u].toString(16));
    return o;
  }
  t.toHex = s, t.encode = function(o, u) {
    return u === "hex" ? s(o) : o;
  };
}), rr = zo(function(n, e) {
  var t = e;
  t.assert = sy, t.toArray = kr.toArray, t.zero2 = kr.zero2, t.toHex = kr.toHex, t.encode = kr.encode;
  function r(u, l, c) {
    var p = new Array(Math.max(u.bitLength(), c) + 1);
    p.fill(0);
    for (var b = 1 << l + 1, A = u.clone(), g = 0; g < p.length; g++) {
      var w, T = A.andln(b - 1);
      A.isOdd() ? (T > (b >> 1) - 1 ? w = (b >> 1) - T : w = T, A.isubn(w)) : w = 0, p[g] = w, A.iushrn(1);
    }
    return p;
  }
  t.getNAF = r;
  function i(u, l) {
    var c = [
      [],
      []
    ];
    u = u.clone(), l = l.clone();
    for (var p = 0, b = 0, A; u.cmpn(-p) > 0 || l.cmpn(-b) > 0; ) {
      var g = u.andln(3) + p & 3, w = l.andln(3) + b & 3;
      g === 3 && (g = -1), w === 3 && (w = -1);
      var T;
      (g & 1) === 0 ? T = 0 : (A = u.andln(7) + p & 7, (A === 3 || A === 5) && w === 2 ? T = -g : T = g), c[0].push(T);
      var _;
      (w & 1) === 0 ? _ = 0 : (A = l.andln(7) + b & 7, (A === 3 || A === 5) && g === 2 ? _ = -w : _ = w), c[1].push(_), 2 * p === T + 1 && (p = 1 - p), 2 * b === _ + 1 && (b = 1 - b), u.iushrn(1), l.iushrn(1);
    }
    return c;
  }
  t.getJSF = i;
  function s(u, l, c) {
    var p = "_" + l;
    u.prototype[l] = function() {
      return this[p] !== void 0 ? this[p] : this[p] = c.call(this);
    };
  }
  t.cachedProperty = s;
  function a(u) {
    return typeof u == "string" ? t.toArray(u, "hex") : u;
  }
  t.parseBytes = a;
  function o(u) {
    return new fe(u, "hex", "le");
  }
  t.intFromLE = o;
}), od = rr.getNAF, uR = rr.getJSF, ud = rr.assert;
function ks(n, e) {
  this.type = n, this.p = new fe(e.p, 16), this.red = e.prime ? fe.red(e.prime) : fe.mont(this.p), this.zero = new fe(0).toRed(this.red), this.one = new fe(1).toRed(this.red), this.two = new fe(2).toRed(this.red), this.n = e.n && new fe(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
  var t = this.n && this.p.div(this.n);
  !t || t.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
}
var Ua = ks;
ks.prototype.point = function() {
  throw new Error("Not implemented");
};
ks.prototype.validate = function() {
  throw new Error("Not implemented");
};
ks.prototype._fixedNafMul = function(e, t) {
  ud(e.precomputed);
  var r = e._getDoubles(), i = od(t, 1, this._bitLength), s = (1 << r.step + 1) - (r.step % 2 === 0 ? 2 : 1);
  s /= 3;
  var a = [], o, u;
  for (o = 0; o < i.length; o += r.step) {
    u = 0;
    for (var l = o + r.step - 1; l >= o; l--)
      u = (u << 1) + i[l];
    a.push(u);
  }
  for (var c = this.jpoint(null, null, null), p = this.jpoint(null, null, null), b = s; b > 0; b--) {
    for (o = 0; o < a.length; o++)
      u = a[o], u === b ? p = p.mixedAdd(r.points[o]) : u === -b && (p = p.mixedAdd(r.points[o].neg()));
    c = c.add(p);
  }
  return c.toP();
};
ks.prototype._wnafMul = function(e, t) {
  var r = 4, i = e._getNAFPoints(r);
  r = i.wnd;
  for (var s = i.points, a = od(t, r, this._bitLength), o = this.jpoint(null, null, null), u = a.length - 1; u >= 0; u--) {
    for (var l = 0; u >= 0 && a[u] === 0; u--)
      l++;
    if (u >= 0 && l++, o = o.dblp(l), u < 0)
      break;
    var c = a[u];
    ud(c !== 0), e.type === "affine" ? c > 0 ? o = o.mixedAdd(s[c - 1 >> 1]) : o = o.mixedAdd(s[-c - 1 >> 1].neg()) : c > 0 ? o = o.add(s[c - 1 >> 1]) : o = o.add(s[-c - 1 >> 1].neg());
  }
  return e.type === "affine" ? o.toP() : o;
};
ks.prototype._wnafMulAdd = function(e, t, r, i, s) {
  var a = this._wnafT1, o = this._wnafT2, u = this._wnafT3, l = 0, c, p, b;
  for (c = 0; c < i; c++) {
    b = t[c];
    var A = b._getNAFPoints(e);
    a[c] = A.wnd, o[c] = A.points;
  }
  for (c = i - 1; c >= 1; c -= 2) {
    var g = c - 1, w = c;
    if (a[g] !== 1 || a[w] !== 1) {
      u[g] = od(r[g], a[g], this._bitLength), u[w] = od(r[w], a[w], this._bitLength), l = Math.max(u[g].length, l), l = Math.max(u[w].length, l);
      continue;
    }
    var T = [
      t[g],
      null,
      null,
      t[w]
    ];
    t[g].y.cmp(t[w].y) === 0 ? (T[1] = t[g].add(t[w]), T[2] = t[g].toJ().mixedAdd(t[w].neg())) : t[g].y.cmp(t[w].y.redNeg()) === 0 ? (T[1] = t[g].toJ().mixedAdd(t[w]), T[2] = t[g].add(t[w].neg())) : (T[1] = t[g].toJ().mixedAdd(t[w]), T[2] = t[g].toJ().mixedAdd(t[w].neg()));
    var _ = [
      -3,
      -1,
      -5,
      -7,
      0,
      7,
      5,
      1,
      3
    ], I = uR(r[g], r[w]);
    for (l = Math.max(I[0].length, l), u[g] = new Array(l), u[w] = new Array(l), p = 0; p < l; p++) {
      var N = I[0][p] | 0, B = I[1][p] | 0;
      u[g][p] = _[(N + 1) * 3 + (B + 1)], u[w][p] = 0, o[g] = T;
    }
  }
  var D = this.jpoint(null, null, null), $ = this._wnafT4;
  for (c = l; c >= 0; c--) {
    for (var H = 0; c >= 0; ) {
      var j = !0;
      for (p = 0; p < i; p++)
        $[p] = u[p][c] | 0, $[p] !== 0 && (j = !1);
      if (!j)
        break;
      H++, c--;
    }
    if (c >= 0 && H++, D = D.dblp(H), c < 0)
      break;
    for (p = 0; p < i; p++) {
      var Q = $[p];
      Q !== 0 && (Q > 0 ? b = o[p][Q - 1 >> 1] : Q < 0 && (b = o[p][-Q - 1 >> 1].neg()), b.type === "affine" ? D = D.mixedAdd(b) : D = D.add(b));
    }
  }
  for (c = 0; c < i; c++)
    o[c] = null;
  return s ? D : D.toP();
};
function vr(n, e) {
  this.curve = n, this.type = e, this.precomputed = null;
}
ks.BasePoint = vr;
vr.prototype.eq = function() {
  throw new Error("Not implemented");
};
vr.prototype.validate = function() {
  return this.curve.validate(this);
};
ks.prototype.decodePoint = function(e, t) {
  e = rr.toArray(e, t);
  var r = this.p.byteLength();
  if ((e[0] === 4 || e[0] === 6 || e[0] === 7) && e.length - 1 === 2 * r) {
    e[0] === 6 ? ud(e[e.length - 1] % 2 === 0) : e[0] === 7 && ud(e[e.length - 1] % 2 === 1);
    var i = this.point(
      e.slice(1, 1 + r),
      e.slice(1 + r, 1 + 2 * r)
    );
    return i;
  } else if ((e[0] === 2 || e[0] === 3) && e.length - 1 === r)
    return this.pointFromX(e.slice(1, 1 + r), e[0] === 3);
  throw new Error("Unknown point format");
};
vr.prototype.encodeCompressed = function(e) {
  return this.encode(e, !0);
};
vr.prototype._encode = function(e) {
  var t = this.curve.p.byteLength(), r = this.getX().toArray("be", t);
  return e ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", t));
};
vr.prototype.encode = function(e, t) {
  return rr.encode(this._encode(t), e);
};
vr.prototype.precompute = function(e) {
  if (this.precomputed)
    return this;
  var t = {
    doubles: null,
    naf: null,
    beta: null
  };
  return t.naf = this._getNAFPoints(8), t.doubles = this._getDoubles(4, e), t.beta = this._getBeta(), this.precomputed = t, this;
};
vr.prototype._hasDoubles = function(e) {
  if (!this.precomputed)
    return !1;
  var t = this.precomputed.doubles;
  return t ? t.points.length >= Math.ceil((e.bitLength() + 1) / t.step) : !1;
};
vr.prototype._getDoubles = function(e, t) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;
  for (var r = [this], i = this, s = 0; s < t; s += e) {
    for (var a = 0; a < e; a++)
      i = i.dbl();
    r.push(i);
  }
  return {
    step: e,
    points: r
  };
};
vr.prototype._getNAFPoints = function(e) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;
  for (var t = [this], r = (1 << e) - 1, i = r === 1 ? null : this.dbl(), s = 1; s < r; s++)
    t[s] = t[s - 1].add(i);
  return {
    wnd: e,
    points: t
  };
};
vr.prototype._getBeta = function() {
  return null;
};
vr.prototype.dblp = function(e) {
  for (var t = this, r = 0; r < e; r++)
    t = t.dbl();
  return t;
};
var ay = zo(function(n) {
  typeof Object.create == "function" ? n.exports = function(t, r) {
    r && (t.super_ = r, t.prototype = Object.create(r.prototype, {
      constructor: {
        value: t,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }));
  } : n.exports = function(t, r) {
    if (r) {
      t.super_ = r;
      var i = function() {
      };
      i.prototype = r.prototype, t.prototype = new i(), t.prototype.constructor = t;
    }
  };
}), lR = rr.assert;
function xr(n) {
  Ua.call(this, "short", n), this.a = new fe(n.a, 16).toRed(this.red), this.b = new fe(n.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(n), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
}
ay(xr, Ua);
var cR = xr;
xr.prototype._getEndomorphism = function(e) {
  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
    var t, r;
    if (e.beta)
      t = new fe(e.beta, 16).toRed(this.red);
    else {
      var i = this._getEndoRoots(this.p);
      t = i[0].cmp(i[1]) < 0 ? i[0] : i[1], t = t.toRed(this.red);
    }
    if (e.lambda)
      r = new fe(e.lambda, 16);
    else {
      var s = this._getEndoRoots(this.n);
      this.g.mul(s[0]).x.cmp(this.g.x.redMul(t)) === 0 ? r = s[0] : (r = s[1], lR(this.g.mul(r).x.cmp(this.g.x.redMul(t)) === 0));
    }
    var a;
    return e.basis ? a = e.basis.map(function(o) {
      return {
        a: new fe(o.a, 16),
        b: new fe(o.b, 16)
      };
    }) : a = this._getEndoBasis(r), {
      beta: t,
      lambda: r,
      basis: a
    };
  }
};
xr.prototype._getEndoRoots = function(e) {
  var t = e === this.p ? this.red : fe.mont(e), r = new fe(2).toRed(t).redInvm(), i = r.redNeg(), s = new fe(3).toRed(t).redNeg().redSqrt().redMul(r), a = i.redAdd(s).fromRed(), o = i.redSub(s).fromRed();
  return [a, o];
};
xr.prototype._getEndoBasis = function(e) {
  for (var t = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), r = e, i = this.n.clone(), s = new fe(1), a = new fe(0), o = new fe(0), u = new fe(1), l, c, p, b, A, g, w, T = 0, _, I; r.cmpn(0) !== 0; ) {
    var N = i.div(r);
    _ = i.sub(N.mul(r)), I = o.sub(N.mul(s));
    var B = u.sub(N.mul(a));
    if (!p && _.cmp(t) < 0)
      l = w.neg(), c = s, p = _.neg(), b = I;
    else if (p && ++T === 2)
      break;
    w = _, i = r, r = _, o = s, s = I, u = a, a = B;
  }
  A = _.neg(), g = I;
  var D = p.sqr().add(b.sqr()), $ = A.sqr().add(g.sqr());
  return $.cmp(D) >= 0 && (A = l, g = c), p.negative && (p = p.neg(), b = b.neg()), A.negative && (A = A.neg(), g = g.neg()), [
    { a: p, b },
    { a: A, b: g }
  ];
};
xr.prototype._endoSplit = function(e) {
  var t = this.endo.basis, r = t[0], i = t[1], s = i.b.mul(e).divRound(this.n), a = r.b.neg().mul(e).divRound(this.n), o = s.mul(r.a), u = a.mul(i.a), l = s.mul(r.b), c = a.mul(i.b), p = e.sub(o).sub(u), b = l.add(c).neg();
  return { k1: p, k2: b };
};
xr.prototype.pointFromX = function(e, t) {
  e = new fe(e, 16), e.red || (e = e.toRed(this.red));
  var r = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b), i = r.redSqrt();
  if (i.redSqr().redSub(r).cmp(this.zero) !== 0)
    throw new Error("invalid point");
  var s = i.fromRed().isOdd();
  return (t && !s || !t && s) && (i = i.redNeg()), this.point(e, i);
};
xr.prototype.validate = function(e) {
  if (e.inf)
    return !0;
  var t = e.x, r = e.y, i = this.a.redMul(t), s = t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);
  return r.redSqr().redISub(s).cmpn(0) === 0;
};
xr.prototype._endoWnafMulAdd = function(e, t, r) {
  for (var i = this._endoWnafT1, s = this._endoWnafT2, a = 0; a < e.length; a++) {
    var o = this._endoSplit(t[a]), u = e[a], l = u._getBeta();
    o.k1.negative && (o.k1.ineg(), u = u.neg(!0)), o.k2.negative && (o.k2.ineg(), l = l.neg(!0)), i[a * 2] = u, i[a * 2 + 1] = l, s[a * 2] = o.k1, s[a * 2 + 1] = o.k2;
  }
  for (var c = this._wnafMulAdd(1, i, s, a * 2, r), p = 0; p < a * 2; p++)
    i[p] = null, s[p] = null;
  return c;
};
function Xt(n, e, t, r) {
  Ua.BasePoint.call(this, n, "affine"), e === null && t === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new fe(e, 16), this.y = new fe(t, 16), r && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
}
ay(Xt, Ua.BasePoint);
xr.prototype.point = function(e, t, r) {
  return new Xt(this, e, t, r);
};
xr.prototype.pointFromJSON = function(e, t) {
  return Xt.fromJSON(this, e, t);
};
Xt.prototype._getBeta = function() {
  if (!!this.curve.endo) {
    var e = this.precomputed;
    if (e && e.beta)
      return e.beta;
    var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (e) {
      var r = this.curve, i = function(s) {
        return r.point(s.x.redMul(r.endo.beta), s.y);
      };
      e.beta = t, t.precomputed = {
        beta: null,
        naf: e.naf && {
          wnd: e.naf.wnd,
          points: e.naf.points.map(i)
        },
        doubles: e.doubles && {
          step: e.doubles.step,
          points: e.doubles.points.map(i)
        }
      };
    }
    return t;
  }
};
Xt.prototype.toJSON = function() {
  return this.precomputed ? [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }] : [this.x, this.y];
};
Xt.fromJSON = function(e, t, r) {
  typeof t == "string" && (t = JSON.parse(t));
  var i = e.point(t[0], t[1], r);
  if (!t[2])
    return i;
  function s(o) {
    return e.point(o[0], o[1], r);
  }
  var a = t[2];
  return i.precomputed = {
    beta: null,
    doubles: a.doubles && {
      step: a.doubles.step,
      points: [i].concat(a.doubles.points.map(s))
    },
    naf: a.naf && {
      wnd: a.naf.wnd,
      points: [i].concat(a.naf.points.map(s))
    }
  }, i;
};
Xt.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
};
Xt.prototype.isInfinity = function() {
  return this.inf;
};
Xt.prototype.add = function(e) {
  if (this.inf)
    return e;
  if (e.inf)
    return this;
  if (this.eq(e))
    return this.dbl();
  if (this.neg().eq(e))
    return this.curve.point(null, null);
  if (this.x.cmp(e.x) === 0)
    return this.curve.point(null, null);
  var t = this.y.redSub(e.y);
  t.cmpn(0) !== 0 && (t = t.redMul(this.x.redSub(e.x).redInvm()));
  var r = t.redSqr().redISub(this.x).redISub(e.x), i = t.redMul(this.x.redSub(r)).redISub(this.y);
  return this.curve.point(r, i);
};
Xt.prototype.dbl = function() {
  if (this.inf)
    return this;
  var e = this.y.redAdd(this.y);
  if (e.cmpn(0) === 0)
    return this.curve.point(null, null);
  var t = this.curve.a, r = this.x.redSqr(), i = e.redInvm(), s = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(i), a = s.redSqr().redISub(this.x.redAdd(this.x)), o = s.redMul(this.x.redSub(a)).redISub(this.y);
  return this.curve.point(a, o);
};
Xt.prototype.getX = function() {
  return this.x.fromRed();
};
Xt.prototype.getY = function() {
  return this.y.fromRed();
};
Xt.prototype.mul = function(e) {
  return e = new fe(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e);
};
Xt.prototype.mulAdd = function(e, t, r) {
  var i = [this, t], s = [e, r];
  return this.curve.endo ? this.curve._endoWnafMulAdd(i, s) : this.curve._wnafMulAdd(1, i, s, 2);
};
Xt.prototype.jmulAdd = function(e, t, r) {
  var i = [this, t], s = [e, r];
  return this.curve.endo ? this.curve._endoWnafMulAdd(i, s, !0) : this.curve._wnafMulAdd(1, i, s, 2, !0);
};
Xt.prototype.eq = function(e) {
  return this === e || this.inf === e.inf && (this.inf || this.x.cmp(e.x) === 0 && this.y.cmp(e.y) === 0);
};
Xt.prototype.neg = function(e) {
  if (this.inf)
    return this;
  var t = this.curve.point(this.x, this.y.redNeg());
  if (e && this.precomputed) {
    var r = this.precomputed, i = function(s) {
      return s.neg();
    };
    t.precomputed = {
      naf: r.naf && {
        wnd: r.naf.wnd,
        points: r.naf.points.map(i)
      },
      doubles: r.doubles && {
        step: r.doubles.step,
        points: r.doubles.points.map(i)
      }
    };
  }
  return t;
};
Xt.prototype.toJ = function() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);
  var e = this.curve.jpoint(this.x, this.y, this.curve.one);
  return e;
};
function an(n, e, t, r) {
  Ua.BasePoint.call(this, n, "jacobian"), e === null && t === null && r === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new fe(0)) : (this.x = new fe(e, 16), this.y = new fe(t, 16), this.z = new fe(r, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
}
ay(an, Ua.BasePoint);
xr.prototype.jpoint = function(e, t, r) {
  return new an(this, e, t, r);
};
an.prototype.toP = function() {
  if (this.isInfinity())
    return this.curve.point(null, null);
  var e = this.z.redInvm(), t = e.redSqr(), r = this.x.redMul(t), i = this.y.redMul(t).redMul(e);
  return this.curve.point(r, i);
};
an.prototype.neg = function() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
an.prototype.add = function(e) {
  if (this.isInfinity())
    return e;
  if (e.isInfinity())
    return this;
  var t = e.z.redSqr(), r = this.z.redSqr(), i = this.x.redMul(t), s = e.x.redMul(r), a = this.y.redMul(t.redMul(e.z)), o = e.y.redMul(r.redMul(this.z)), u = i.redSub(s), l = a.redSub(o);
  if (u.cmpn(0) === 0)
    return l.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var c = u.redSqr(), p = c.redMul(u), b = i.redMul(c), A = l.redSqr().redIAdd(p).redISub(b).redISub(b), g = l.redMul(b.redISub(A)).redISub(a.redMul(p)), w = this.z.redMul(e.z).redMul(u);
  return this.curve.jpoint(A, g, w);
};
an.prototype.mixedAdd = function(e) {
  if (this.isInfinity())
    return e.toJ();
  if (e.isInfinity())
    return this;
  var t = this.z.redSqr(), r = this.x, i = e.x.redMul(t), s = this.y, a = e.y.redMul(t).redMul(this.z), o = r.redSub(i), u = s.redSub(a);
  if (o.cmpn(0) === 0)
    return u.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var l = o.redSqr(), c = l.redMul(o), p = r.redMul(l), b = u.redSqr().redIAdd(c).redISub(p).redISub(p), A = u.redMul(p.redISub(b)).redISub(s.redMul(c)), g = this.z.redMul(o);
  return this.curve.jpoint(b, A, g);
};
an.prototype.dblp = function(e) {
  if (e === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!e)
    return this.dbl();
  var t;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (t = 0; t < e; t++)
      r = r.dbl();
    return r;
  }
  var i = this.curve.a, s = this.curve.tinv, a = this.x, o = this.y, u = this.z, l = u.redSqr().redSqr(), c = o.redAdd(o);
  for (t = 0; t < e; t++) {
    var p = a.redSqr(), b = c.redSqr(), A = b.redSqr(), g = p.redAdd(p).redIAdd(p).redIAdd(i.redMul(l)), w = a.redMul(b), T = g.redSqr().redISub(w.redAdd(w)), _ = w.redISub(T), I = g.redMul(_);
    I = I.redIAdd(I).redISub(A);
    var N = c.redMul(u);
    t + 1 < e && (l = l.redMul(A)), a = T, u = N, c = I;
  }
  return this.curve.jpoint(a, c.redMul(s), u);
};
an.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
};
an.prototype._zeroDbl = function() {
  var e, t, r;
  if (this.zOne) {
    var i = this.x.redSqr(), s = this.y.redSqr(), a = s.redSqr(), o = this.x.redAdd(s).redSqr().redISub(i).redISub(a);
    o = o.redIAdd(o);
    var u = i.redAdd(i).redIAdd(i), l = u.redSqr().redISub(o).redISub(o), c = a.redIAdd(a);
    c = c.redIAdd(c), c = c.redIAdd(c), e = l, t = u.redMul(o.redISub(l)).redISub(c), r = this.y.redAdd(this.y);
  } else {
    var p = this.x.redSqr(), b = this.y.redSqr(), A = b.redSqr(), g = this.x.redAdd(b).redSqr().redISub(p).redISub(A);
    g = g.redIAdd(g);
    var w = p.redAdd(p).redIAdd(p), T = w.redSqr(), _ = A.redIAdd(A);
    _ = _.redIAdd(_), _ = _.redIAdd(_), e = T.redISub(g).redISub(g), t = w.redMul(g.redISub(e)).redISub(_), r = this.y.redMul(this.z), r = r.redIAdd(r);
  }
  return this.curve.jpoint(e, t, r);
};
an.prototype._threeDbl = function() {
  var e, t, r;
  if (this.zOne) {
    var i = this.x.redSqr(), s = this.y.redSqr(), a = s.redSqr(), o = this.x.redAdd(s).redSqr().redISub(i).redISub(a);
    o = o.redIAdd(o);
    var u = i.redAdd(i).redIAdd(i).redIAdd(this.curve.a), l = u.redSqr().redISub(o).redISub(o);
    e = l;
    var c = a.redIAdd(a);
    c = c.redIAdd(c), c = c.redIAdd(c), t = u.redMul(o.redISub(l)).redISub(c), r = this.y.redAdd(this.y);
  } else {
    var p = this.z.redSqr(), b = this.y.redSqr(), A = this.x.redMul(b), g = this.x.redSub(p).redMul(this.x.redAdd(p));
    g = g.redAdd(g).redIAdd(g);
    var w = A.redIAdd(A);
    w = w.redIAdd(w);
    var T = w.redAdd(w);
    e = g.redSqr().redISub(T), r = this.y.redAdd(this.z).redSqr().redISub(b).redISub(p);
    var _ = b.redSqr();
    _ = _.redIAdd(_), _ = _.redIAdd(_), _ = _.redIAdd(_), t = g.redMul(w.redISub(e)).redISub(_);
  }
  return this.curve.jpoint(e, t, r);
};
an.prototype._dbl = function() {
  var e = this.curve.a, t = this.x, r = this.y, i = this.z, s = i.redSqr().redSqr(), a = t.redSqr(), o = r.redSqr(), u = a.redAdd(a).redIAdd(a).redIAdd(e.redMul(s)), l = t.redAdd(t);
  l = l.redIAdd(l);
  var c = l.redMul(o), p = u.redSqr().redISub(c.redAdd(c)), b = c.redISub(p), A = o.redSqr();
  A = A.redIAdd(A), A = A.redIAdd(A), A = A.redIAdd(A);
  var g = u.redMul(b).redISub(A), w = r.redAdd(r).redMul(i);
  return this.curve.jpoint(p, g, w);
};
an.prototype.trpl = function() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);
  var e = this.x.redSqr(), t = this.y.redSqr(), r = this.z.redSqr(), i = t.redSqr(), s = e.redAdd(e).redIAdd(e), a = s.redSqr(), o = this.x.redAdd(t).redSqr().redISub(e).redISub(i);
  o = o.redIAdd(o), o = o.redAdd(o).redIAdd(o), o = o.redISub(a);
  var u = o.redSqr(), l = i.redIAdd(i);
  l = l.redIAdd(l), l = l.redIAdd(l), l = l.redIAdd(l);
  var c = s.redIAdd(o).redSqr().redISub(a).redISub(u).redISub(l), p = t.redMul(c);
  p = p.redIAdd(p), p = p.redIAdd(p);
  var b = this.x.redMul(u).redISub(p);
  b = b.redIAdd(b), b = b.redIAdd(b);
  var A = this.y.redMul(c.redMul(l.redISub(c)).redISub(o.redMul(u)));
  A = A.redIAdd(A), A = A.redIAdd(A), A = A.redIAdd(A);
  var g = this.z.redAdd(o).redSqr().redISub(r).redISub(u);
  return this.curve.jpoint(b, A, g);
};
an.prototype.mul = function(e, t) {
  return e = new fe(e, t), this.curve._wnafMul(this, e);
};
an.prototype.eq = function(e) {
  if (e.type === "affine")
    return this.eq(e.toJ());
  if (this === e)
    return !0;
  var t = this.z.redSqr(), r = e.z.redSqr();
  if (this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0) !== 0)
    return !1;
  var i = t.redMul(this.z), s = r.redMul(e.z);
  return this.y.redMul(s).redISub(e.y.redMul(i)).cmpn(0) === 0;
};
an.prototype.eqXToP = function(e) {
  var t = this.z.redSqr(), r = e.toRed(this.curve.red).redMul(t);
  if (this.x.cmp(r) === 0)
    return !0;
  for (var i = e.clone(), s = this.curve.redN.redMul(t); ; ) {
    if (i.iadd(this.curve.n), i.cmp(this.curve.p) >= 0)
      return !1;
    if (r.redIAdd(s), this.x.cmp(r) === 0)
      return !0;
  }
};
an.prototype.inspect = function() {
  return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
};
an.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
var _c = zo(function(n, e) {
  var t = e;
  t.base = Ua, t.short = cR, t.mont = null, t.edwards = null;
}), Mc = zo(function(n, e) {
  var t = e, r = rr.assert;
  function i(o) {
    o.type === "short" ? this.curve = new _c.short(o) : o.type === "edwards" ? this.curve = new _c.edwards(o) : this.curve = new _c.mont(o), this.g = this.curve.g, this.n = this.curve.n, this.hash = o.hash, r(this.g.validate(), "Invalid curve"), r(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  t.PresetCurve = i;
  function s(o, u) {
    Object.defineProperty(t, o, {
      configurable: !0,
      enumerable: !0,
      get: function() {
        var l = new i(u);
        return Object.defineProperty(t, o, {
          configurable: !0,
          enumerable: !0,
          value: l
        }), l;
      }
    });
  }
  s("p192", {
    type: "short",
    prime: "p192",
    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
    hash: kn.sha256,
    gRed: !1,
    g: [
      "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
      "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
    ]
  }), s("p224", {
    type: "short",
    prime: "p224",
    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
    hash: kn.sha256,
    gRed: !1,
    g: [
      "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
      "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
    ]
  }), s("p256", {
    type: "short",
    prime: null,
    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
    hash: kn.sha256,
    gRed: !1,
    g: [
      "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
      "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
    ]
  }), s("p384", {
    type: "short",
    prime: null,
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
    hash: kn.sha384,
    gRed: !1,
    g: [
      "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
      "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
    ]
  }), s("p521", {
    type: "short",
    prime: null,
    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
    hash: kn.sha512,
    gRed: !1,
    g: [
      "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
      "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
    ]
  }), s("curve25519", {
    type: "mont",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "76d06",
    b: "1",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: kn.sha256,
    gRed: !1,
    g: [
      "9"
    ]
  }), s("ed25519", {
    type: "edwards",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "-1",
    c: "1",
    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: kn.sha256,
    gRed: !1,
    g: [
      "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
      "6666666666666666666666666666666666666666666666666666666666666658"
    ]
  });
  var a;
  try {
    a = null.crash();
  } catch {
    a = void 0;
  }
  s("secp256k1", {
    type: "short",
    prime: "k256",
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
    a: "0",
    b: "7",
    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
    h: "1",
    hash: kn.sha256,
    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
    basis: [
      {
        a: "3086d221a7d46bcde86c90e49284eb15",
        b: "-e4437ed6010e88286f547fa90abfe4c3"
      },
      {
        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
        b: "3086d221a7d46bcde86c90e49284eb15"
      }
    ],
    gRed: !1,
    g: [
      "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
      "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
      a
    ]
  });
});
function Es(n) {
  if (!(this instanceof Es))
    return new Es(n);
  this.hash = n.hash, this.predResist = !!n.predResist, this.outLen = this.hash.outSize, this.minEntropy = n.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
  var e = kr.toArray(n.entropy, n.entropyEnc || "hex"), t = kr.toArray(n.nonce, n.nonceEnc || "hex"), r = kr.toArray(n.pers, n.persEnc || "hex");
  sy(
    e.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  ), this._init(e, t, r);
}
var s6 = Es;
Es.prototype._init = function(e, t, r) {
  var i = e.concat(t).concat(r);
  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
  for (var s = 0; s < this.V.length; s++)
    this.K[s] = 0, this.V[s] = 1;
  this._update(i), this._reseed = 1, this.reseedInterval = 281474976710656;
};
Es.prototype._hmac = function() {
  return new kn.hmac(this.hash, this.K);
};
Es.prototype._update = function(e) {
  var t = this._hmac().update(this.V).update([0]);
  e && (t = t.update(e)), this.K = t.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest());
};
Es.prototype.reseed = function(e, t, r, i) {
  typeof t != "string" && (i = r, r = t, t = null), e = kr.toArray(e, t), r = kr.toArray(r, i), sy(
    e.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  ), this._update(e.concat(r || [])), this._reseed = 1;
};
Es.prototype.generate = function(e, t, r, i) {
  if (this._reseed > this.reseedInterval)
    throw new Error("Reseed is required");
  typeof t != "string" && (i = r, r = t, t = null), r && (r = kr.toArray(r, i || "hex"), this._update(r));
  for (var s = []; s.length < e; )
    this.V = this._hmac().update(this.V).digest(), s = s.concat(this.V);
  var a = s.slice(0, e);
  return this._update(r), this._reseed++, kr.encode(a, t);
};
var vh = rr.assert;
function vn(n, e) {
  this.ec = n, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc);
}
var oy = vn;
vn.fromPublic = function(e, t, r) {
  return t instanceof vn ? t : new vn(e, {
    pub: t,
    pubEnc: r
  });
};
vn.fromPrivate = function(e, t, r) {
  return t instanceof vn ? t : new vn(e, {
    priv: t,
    privEnc: r
  });
};
vn.prototype.validate = function() {
  var e = this.getPublic();
  return e.isInfinity() ? { result: !1, reason: "Invalid public key" } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? { result: !0, reason: null } : { result: !1, reason: "Public key * N != O" } : { result: !1, reason: "Public key is not a point" };
};
vn.prototype.getPublic = function(e, t) {
  return typeof e == "string" && (t = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t ? this.pub.encode(t, e) : this.pub;
};
vn.prototype.getPrivate = function(e) {
  return e === "hex" ? this.priv.toString(16, 2) : this.priv;
};
vn.prototype._importPrivate = function(e, t) {
  this.priv = new fe(e, t || 16), this.priv = this.priv.umod(this.ec.curve.n);
};
vn.prototype._importPublic = function(e, t) {
  if (e.x || e.y) {
    this.ec.curve.type === "mont" ? vh(e.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && vh(e.x && e.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(e.x, e.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(e, t);
};
vn.prototype.derive = function(e) {
  return e.validate() || vh(e.validate(), "public point not validated"), e.mul(this.priv).getX();
};
vn.prototype.sign = function(e, t, r) {
  return this.ec.sign(e, this, t, r);
};
vn.prototype.verify = function(e, t) {
  return this.ec.verify(e, t, this);
};
vn.prototype.inspect = function() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var dR = rr.assert;
function nf(n, e) {
  if (n instanceof nf)
    return n;
  this._importDER(n, e) || (dR(n.r && n.s, "Signature without r or s"), this.r = new fe(n.r, 16), this.s = new fe(n.s, 16), n.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = n.recoveryParam);
}
var rf = nf;
function fR() {
  this.place = 0;
}
function vp(n, e) {
  var t = n[e.place++];
  if (!(t & 128))
    return t;
  var r = t & 15;
  if (r === 0 || r > 4)
    return !1;
  for (var i = 0, s = 0, a = e.place; s < r; s++, a++)
    i <<= 8, i |= n[a], i >>>= 0;
  return i <= 127 ? !1 : (e.place = a, i);
}
function E2(n) {
  for (var e = 0, t = n.length - 1; !n[e] && !(n[e + 1] & 128) && e < t; )
    e++;
  return e === 0 ? n : n.slice(e);
}
nf.prototype._importDER = function(e, t) {
  e = rr.toArray(e, t);
  var r = new fR();
  if (e[r.place++] !== 48)
    return !1;
  var i = vp(e, r);
  if (i === !1 || i + r.place !== e.length || e[r.place++] !== 2)
    return !1;
  var s = vp(e, r);
  if (s === !1)
    return !1;
  var a = e.slice(r.place, s + r.place);
  if (r.place += s, e[r.place++] !== 2)
    return !1;
  var o = vp(e, r);
  if (o === !1 || e.length !== o + r.place)
    return !1;
  var u = e.slice(r.place, o + r.place);
  if (a[0] === 0)
    if (a[1] & 128)
      a = a.slice(1);
    else
      return !1;
  if (u[0] === 0)
    if (u[1] & 128)
      u = u.slice(1);
    else
      return !1;
  return this.r = new fe(a), this.s = new fe(u), this.recoveryParam = null, !0;
};
function xp(n, e) {
  if (e < 128) {
    n.push(e);
    return;
  }
  var t = 1 + (Math.log(e) / Math.LN2 >>> 3);
  for (n.push(t | 128); --t; )
    n.push(e >>> (t << 3) & 255);
  n.push(e);
}
nf.prototype.toDER = function(e) {
  var t = this.r.toArray(), r = this.s.toArray();
  for (t[0] & 128 && (t = [0].concat(t)), r[0] & 128 && (r = [0].concat(r)), t = E2(t), r = E2(r); !r[0] && !(r[1] & 128); )
    r = r.slice(1);
  var i = [2];
  xp(i, t.length), i = i.concat(t), i.push(2), xp(i, r.length);
  var s = i.concat(r), a = [48];
  return xp(a, s.length), a = a.concat(s), rr.encode(a, e);
};
var pR = function() {
  throw new Error("unsupported");
}, a6 = rr.assert;
function br(n) {
  if (!(this instanceof br))
    return new br(n);
  typeof n == "string" && (a6(
    Object.prototype.hasOwnProperty.call(Mc, n),
    "Unknown curve " + n
  ), n = Mc[n]), n instanceof Mc.PresetCurve && (n = { curve: n }), this.curve = n.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = n.curve.g, this.g.precompute(n.curve.n.bitLength() + 1), this.hash = n.hash || n.curve.hash;
}
var hR = br;
br.prototype.keyPair = function(e) {
  return new oy(this, e);
};
br.prototype.keyFromPrivate = function(e, t) {
  return oy.fromPrivate(this, e, t);
};
br.prototype.keyFromPublic = function(e, t) {
  return oy.fromPublic(this, e, t);
};
br.prototype.genKeyPair = function(e) {
  e || (e = {});
  for (var t = new s6({
    hash: this.hash,
    pers: e.pers,
    persEnc: e.persEnc || "utf8",
    entropy: e.entropy || pR(this.hash.hmacStrength),
    entropyEnc: e.entropy && e.entropyEnc || "utf8",
    nonce: this.n.toArray()
  }), r = this.n.byteLength(), i = this.n.sub(new fe(2)); ; ) {
    var s = new fe(t.generate(r));
    if (!(s.cmp(i) > 0))
      return s.iaddn(1), this.keyFromPrivate(s);
  }
};
br.prototype._truncateToN = function(e, t) {
  var r = e.byteLength() * 8 - this.n.bitLength();
  return r > 0 && (e = e.ushrn(r)), !t && e.cmp(this.n) >= 0 ? e.sub(this.n) : e;
};
br.prototype.sign = function(e, t, r, i) {
  typeof r == "object" && (i = r, r = null), i || (i = {}), t = this.keyFromPrivate(t, r), e = this._truncateToN(new fe(e, 16));
  for (var s = this.n.byteLength(), a = t.getPrivate().toArray("be", s), o = e.toArray("be", s), u = new s6({
    hash: this.hash,
    entropy: a,
    nonce: o,
    pers: i.pers,
    persEnc: i.persEnc || "utf8"
  }), l = this.n.sub(new fe(1)), c = 0; ; c++) {
    var p = i.k ? i.k(c) : new fe(u.generate(this.n.byteLength()));
    if (p = this._truncateToN(p, !0), !(p.cmpn(1) <= 0 || p.cmp(l) >= 0)) {
      var b = this.g.mul(p);
      if (!b.isInfinity()) {
        var A = b.getX(), g = A.umod(this.n);
        if (g.cmpn(0) !== 0) {
          var w = p.invm(this.n).mul(g.mul(t.getPrivate()).iadd(e));
          if (w = w.umod(this.n), w.cmpn(0) !== 0) {
            var T = (b.getY().isOdd() ? 1 : 0) | (A.cmp(g) !== 0 ? 2 : 0);
            return i.canonical && w.cmp(this.nh) > 0 && (w = this.n.sub(w), T ^= 1), new rf({ r: g, s: w, recoveryParam: T });
          }
        }
      }
    }
  }
};
br.prototype.verify = function(e, t, r, i) {
  e = this._truncateToN(new fe(e, 16)), r = this.keyFromPublic(r, i), t = new rf(t, "hex");
  var s = t.r, a = t.s;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0 || a.cmpn(1) < 0 || a.cmp(this.n) >= 0)
    return !1;
  var o = a.invm(this.n), u = o.mul(e).umod(this.n), l = o.mul(s).umod(this.n), c;
  return this.curve._maxwellTrick ? (c = this.g.jmulAdd(u, r.getPublic(), l), c.isInfinity() ? !1 : c.eqXToP(s)) : (c = this.g.mulAdd(u, r.getPublic(), l), c.isInfinity() ? !1 : c.getX().umod(this.n).cmp(s) === 0);
};
br.prototype.recoverPubKey = function(n, e, t, r) {
  a6((3 & t) === t, "The recovery param is more than two bits"), e = new rf(e, r);
  var i = this.n, s = new fe(n), a = e.r, o = e.s, u = t & 1, l = t >> 1;
  if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l)
    throw new Error("Unable to find sencond key candinate");
  l ? a = this.curve.pointFromX(a.add(this.curve.n), u) : a = this.curve.pointFromX(a, u);
  var c = e.r.invm(i), p = i.sub(s).mul(c).umod(i), b = o.mul(c).umod(i);
  return this.g.mulAdd(p, a, b);
};
br.prototype.getKeyRecoveryParam = function(n, e, t, r) {
  if (e = new rf(e, r), e.recoveryParam !== null)
    return e.recoveryParam;
  for (var i = 0; i < 4; i++) {
    var s;
    try {
      s = this.recoverPubKey(n, e, i);
    } catch {
      continue;
    }
    if (s.eq(t))
      return i;
  }
  throw new Error("Unable to find valid recovery factor");
};
var yR = zo(function(n, e) {
  var t = e;
  t.version = "6.5.4", t.utils = rr, t.rand = function() {
    throw new Error("unsupported");
  }, t.curve = _c, t.curves = Mc, t.ec = hR, t.eddsa = null;
}), mR = yR.ec;
const bR = "signing-key/5.7.0", xh = new O(bR);
let wp = null;
function Gr() {
  return wp || (wp = new mR("secp256k1")), wp;
}
class da {
  constructor(e) {
    V(this, "curve", "secp256k1"), V(this, "privateKey", K(e)), ni(this.privateKey) !== 32 && xh.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
    const t = Gr().keyFromPrivate(z(this.privateKey));
    V(this, "publicKey", "0x" + t.getPublic(!1, "hex")), V(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), V(this, "_isSigningKey", !0);
  }
  _addPoint(e) {
    const t = Gr().keyFromPublic(z(this.publicKey)), r = Gr().keyFromPublic(z(e));
    return "0x" + t.pub.add(r.pub).encodeCompressed("hex");
  }
  signDigest(e) {
    const t = Gr().keyFromPrivate(z(this.privateKey)), r = z(e);
    r.length !== 32 && xh.throwArgumentError("bad digest length", "digest", e);
    const i = t.sign(r, { canonical: !0 });
    return Fa({
      recoveryParam: i.recoveryParam,
      r: Be("0x" + i.r.toString(16), 32),
      s: Be("0x" + i.s.toString(16), 32)
    });
  }
  computeSharedSecret(e) {
    const t = Gr().keyFromPrivate(z(this.privateKey)), r = Gr().keyFromPublic(z(uy(e)));
    return Be("0x" + t.derive(r.getPublic()).toString(16), 32);
  }
  static isSigningKey(e) {
    return !!(e && e._isSigningKey);
  }
}
function o6(n, e) {
  const t = Fa(e), r = { r: z(t.r), s: z(t.s) };
  return "0x" + Gr().recoverPubKey(z(n), r, t.recoveryParam).encode("hex", !1);
}
function uy(n, e) {
  const t = z(n);
  if (t.length === 32) {
    const r = new da(t);
    return e ? "0x" + Gr().keyFromPrivate(t).getPublic(!0, "hex") : r.publicKey;
  } else {
    if (t.length === 33)
      return e ? K(t) : "0x" + Gr().keyFromPublic(t).getPublic(!1, "hex");
    if (t.length === 65)
      return e ? "0x" + Gr().keyFromPublic(t).getPublic(!0, "hex") : K(t);
  }
  return xh.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}
const gR = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SigningKey: da,
  recoverPublicKey: o6,
  computePublicKey: uy
}, Symbol.toStringTag, { value: "Module" })), vR = "transactions/5.7.0", mn = new O(vR);
var wh;
(function(n) {
  n[n.legacy = 0] = "legacy", n[n.eip2930 = 1] = "eip2930", n[n.eip1559 = 2] = "eip1559";
})(wh || (wh = {}));
function ly(n) {
  return n === "0x" ? null : De(n);
}
function pn(n) {
  return n === "0x" ? Y0 : W.from(n);
}
const xR = [
  { name: "nonce", maxLength: 32, numeric: !0 },
  { name: "gasPrice", maxLength: 32, numeric: !0 },
  { name: "gasLimit", maxLength: 32, numeric: !0 },
  { name: "to", length: 20 },
  { name: "value", maxLength: 32, numeric: !0 },
  { name: "data" }
], wR = {
  chainId: !0,
  data: !0,
  gasLimit: !0,
  gasPrice: !0,
  nonce: !0,
  to: !0,
  type: !0,
  value: !0
};
function gs(n) {
  const e = uy(n);
  return De(Dt(Ie(Dt(e, 1)), 12));
}
function Ho(n, e) {
  return gs(o6(z(n), e));
}
function qn(n, e) {
  const t = Yr(W.from(n).toHexString());
  return t.length > 32 && mn.throwArgumentError("invalid length for " + e, "transaction:" + e, n), t;
}
function Tp(n, e) {
  return {
    address: De(n),
    storageKeys: (e || []).map((t, r) => (ni(t) !== 32 && mn.throwArgumentError("invalid access list storageKey", `accessList[${n}:${r}]`, t), t.toLowerCase()))
  };
}
function Va(n) {
  if (Array.isArray(n))
    return n.map((t, r) => Array.isArray(t) ? (t.length > 2 && mn.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${r}]`, t), Tp(t[0], t[1])) : Tp(t.address, t.storageKeys));
  const e = Object.keys(n).map((t) => {
    const r = n[t].reduce((i, s) => (i[s] = !0, i), {});
    return Tp(t, Object.keys(r).sort());
  });
  return e.sort((t, r) => t.address.localeCompare(r.address)), e;
}
function u6(n) {
  return Va(n).map((e) => [e.address, e.storageKeys]);
}
function l6(n, e) {
  if (n.gasPrice != null) {
    const r = W.from(n.gasPrice), i = W.from(n.maxFeePerGas || 0);
    r.eq(i) || mn.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
      gasPrice: r,
      maxFeePerGas: i
    });
  }
  const t = [
    qn(n.chainId || 0, "chainId"),
    qn(n.nonce || 0, "nonce"),
    qn(n.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
    qn(n.maxFeePerGas || 0, "maxFeePerGas"),
    qn(n.gasLimit || 0, "gasLimit"),
    n.to != null ? De(n.to) : "0x",
    qn(n.value || 0, "value"),
    n.data || "0x",
    u6(n.accessList || [])
  ];
  if (e) {
    const r = Fa(e);
    t.push(qn(r.recoveryParam, "recoveryParam")), t.push(Yr(r.r)), t.push(Yr(r.s));
  }
  return Sn(["0x02", Ss(t)]);
}
function c6(n, e) {
  const t = [
    qn(n.chainId || 0, "chainId"),
    qn(n.nonce || 0, "nonce"),
    qn(n.gasPrice || 0, "gasPrice"),
    qn(n.gasLimit || 0, "gasLimit"),
    n.to != null ? De(n.to) : "0x",
    qn(n.value || 0, "value"),
    n.data || "0x",
    u6(n.accessList || [])
  ];
  if (e) {
    const r = Fa(e);
    t.push(qn(r.recoveryParam, "recoveryParam")), t.push(Yr(r.r)), t.push(Yr(r.s));
  }
  return Sn(["0x01", Ss(t)]);
}
function TR(n, e) {
  K0(n, wR);
  const t = [];
  xR.forEach(function(a) {
    let o = n[a.name] || [];
    const u = {};
    a.numeric && (u.hexPad = "left"), o = z(K(o, u)), a.length && o.length !== a.length && o.length > 0 && mn.throwArgumentError("invalid length for " + a.name, "transaction:" + a.name, o), a.maxLength && (o = Yr(o), o.length > a.maxLength && mn.throwArgumentError("invalid length for " + a.name, "transaction:" + a.name, o)), t.push(K(o));
  });
  let r = 0;
  if (n.chainId != null ? (r = n.chainId, typeof r != "number" && mn.throwArgumentError("invalid transaction.chainId", "transaction", n)) : e && !Pl(e) && e.v > 28 && (r = Math.floor((e.v - 35) / 2)), r !== 0 && (t.push(K(r)), t.push("0x"), t.push("0x")), !e)
    return Ss(t);
  const i = Fa(e);
  let s = 27 + i.recoveryParam;
  return r !== 0 ? (t.pop(), t.pop(), t.pop(), s += r * 2 + 8, i.v > 28 && i.v !== s && mn.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e)) : i.v !== s && mn.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e), t.push(K(s)), t.push(Yr(z(i.r))), t.push(Yr(z(i.s))), Ss(t);
}
function Th(n, e) {
  if (n.type == null || n.type === 0)
    return n.accessList != null && mn.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", n), TR(n, e);
  switch (n.type) {
    case 1:
      return c6(n, e);
    case 2:
      return l6(n, e);
  }
  return mn.throwError(`unsupported transaction type: ${n.type}`, O.errors.UNSUPPORTED_OPERATION, {
    operation: "serializeTransaction",
    transactionType: n.type
  });
}
function d6(n, e, t) {
  try {
    const r = pn(e[0]).toNumber();
    if (r !== 0 && r !== 1)
      throw new Error("bad recid");
    n.v = r;
  } catch {
    mn.throwArgumentError("invalid v for transaction type: 1", "v", e[0]);
  }
  n.r = Be(e[1], 32), n.s = Be(e[2], 32);
  try {
    const r = Ie(t(n));
    n.from = Ho(r, { r: n.r, s: n.s, recoveryParam: n.v });
  } catch {
  }
}
function AR(n) {
  const e = Il(n.slice(1));
  e.length !== 9 && e.length !== 12 && mn.throwArgumentError("invalid component count for transaction type: 2", "payload", K(n));
  const t = pn(e[2]), r = pn(e[3]), i = {
    type: 2,
    chainId: pn(e[0]).toNumber(),
    nonce: pn(e[1]).toNumber(),
    maxPriorityFeePerGas: t,
    maxFeePerGas: r,
    gasPrice: null,
    gasLimit: pn(e[4]),
    to: ly(e[5]),
    value: pn(e[6]),
    data: e[7],
    accessList: Va(e[8])
  };
  return e.length === 9 || (i.hash = Ie(n), d6(i, e.slice(9), l6)), i;
}
function CR(n) {
  const e = Il(n.slice(1));
  e.length !== 8 && e.length !== 11 && mn.throwArgumentError("invalid component count for transaction type: 1", "payload", K(n));
  const t = {
    type: 1,
    chainId: pn(e[0]).toNumber(),
    nonce: pn(e[1]).toNumber(),
    gasPrice: pn(e[2]),
    gasLimit: pn(e[3]),
    to: ly(e[4]),
    value: pn(e[5]),
    data: e[6],
    accessList: Va(e[7])
  };
  return e.length === 8 || (t.hash = Ie(n), d6(t, e.slice(8), c6)), t;
}
function SR(n) {
  const e = Il(n);
  e.length !== 9 && e.length !== 6 && mn.throwArgumentError("invalid raw transaction", "rawTransaction", n);
  const t = {
    nonce: pn(e[0]).toNumber(),
    gasPrice: pn(e[1]),
    gasLimit: pn(e[2]),
    to: ly(e[3]),
    value: pn(e[4]),
    data: e[5],
    chainId: 0
  };
  if (e.length === 6)
    return t;
  try {
    t.v = W.from(e[6]).toNumber();
  } catch {
    return t;
  }
  if (t.r = Be(e[7], 32), t.s = Be(e[8], 32), W.from(t.r).isZero() && W.from(t.s).isZero())
    t.chainId = t.v, t.v = 0;
  else {
    t.chainId = Math.floor((t.v - 35) / 2), t.chainId < 0 && (t.chainId = 0);
    let r = t.v - 27;
    const i = e.slice(0, 6);
    t.chainId !== 0 && (i.push(K(t.chainId)), i.push("0x"), i.push("0x"), r -= t.chainId * 2 + 8);
    const s = Ie(Ss(i));
    try {
      t.from = Ho(s, { r: K(t.r), s: K(t.s), recoveryParam: r });
    } catch {
    }
    t.hash = Ie(n);
  }
  return t.type = null, t;
}
function f6(n) {
  const e = z(n);
  if (e[0] > 127)
    return SR(e);
  switch (e[0]) {
    case 1:
      return CR(e);
    case 2:
      return AR(e);
  }
  return mn.throwError(`unsupported transaction type: ${e[0]}`, O.errors.UNSUPPORTED_OPERATION, {
    operation: "parseTransaction",
    transactionType: e[0]
  });
}
const ER = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get TransactionTypes() {
    return wh;
  },
  computeAddress: gs,
  recoverAddress: Ho,
  accessListify: Va,
  serialize: Th,
  parse: f6
}, Symbol.toStringTag, { value: "Module" })), _R = "contracts/5.7.0";
var xa = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const It = new O(_R);
function ld(n, e) {
  return xa(this, void 0, void 0, function* () {
    const t = yield e;
    typeof t != "string" && It.throwArgumentError("invalid address or ENS name", "name", t);
    try {
      return De(t);
    } catch {
    }
    n || It.throwError("a provider or signer is needed to resolve ENS names", O.errors.UNSUPPORTED_OPERATION, {
      operation: "resolveName"
    });
    const r = yield n.resolveName(t);
    return r == null && It.throwArgumentError("resolver or addr is not configured for ENS name", "name", t), r;
  });
}
function Rc(n, e, t) {
  return xa(this, void 0, void 0, function* () {
    return Array.isArray(t) ? yield Promise.all(t.map((r, i) => Rc(n, Array.isArray(e) ? e[i] : e[r.name], r))) : t.type === "address" ? yield ld(n, e) : t.type === "tuple" ? yield Rc(n, e, t.components) : t.baseType === "array" ? Array.isArray(e) ? yield Promise.all(e.map((r) => Rc(n, r, t.arrayChildren))) : Promise.reject(It.makeError("invalid value for array", O.errors.INVALID_ARGUMENT, {
      argument: "value",
      value: e
    })) : e;
  });
}
function sf(n, e, t) {
  return xa(this, void 0, void 0, function* () {
    let r = {};
    t.length === e.inputs.length + 1 && typeof t[t.length - 1] == "object" && (r = $t(t.pop())), It.checkArgumentCount(t.length, e.inputs.length, "passed to contract"), n.signer ? r.from ? r.from = Rt({
      override: ld(n.signer, r.from),
      signer: n.signer.getAddress()
    }).then((l) => xa(this, void 0, void 0, function* () {
      return De(l.signer) !== l.override && It.throwError("Contract with a Signer cannot override from", O.errors.UNSUPPORTED_OPERATION, {
        operation: "overrides.from"
      }), l.override;
    })) : r.from = n.signer.getAddress() : r.from && (r.from = ld(n.provider, r.from));
    const i = yield Rt({
      args: Rc(n.signer || n.provider, t, e.inputs),
      address: n.resolvedAddress,
      overrides: Rt(r) || {}
    }), s = n.interface.encodeFunctionData(e, i.args), a = {
      data: s,
      to: i.address
    }, o = i.overrides;
    if (o.nonce != null && (a.nonce = W.from(o.nonce).toNumber()), o.gasLimit != null && (a.gasLimit = W.from(o.gasLimit)), o.gasPrice != null && (a.gasPrice = W.from(o.gasPrice)), o.maxFeePerGas != null && (a.maxFeePerGas = W.from(o.maxFeePerGas)), o.maxPriorityFeePerGas != null && (a.maxPriorityFeePerGas = W.from(o.maxPriorityFeePerGas)), o.from != null && (a.from = o.from), o.type != null && (a.type = o.type), o.accessList != null && (a.accessList = Va(o.accessList)), a.gasLimit == null && e.gas != null) {
      let l = 21e3;
      const c = z(s);
      for (let p = 0; p < c.length; p++)
        l += 4, c[p] && (l += 64);
      a.gasLimit = W.from(e.gas).add(l);
    }
    if (o.value) {
      const l = W.from(o.value);
      !l.isZero() && !e.payable && It.throwError("non-payable method cannot override value", O.errors.UNSUPPORTED_OPERATION, {
        operation: "overrides.value",
        value: r.value
      }), a.value = l;
    }
    o.customData && (a.customData = $t(o.customData)), o.ccipReadEnabled && (a.ccipReadEnabled = !!o.ccipReadEnabled), delete r.nonce, delete r.gasLimit, delete r.gasPrice, delete r.from, delete r.value, delete r.type, delete r.accessList, delete r.maxFeePerGas, delete r.maxPriorityFeePerGas, delete r.customData, delete r.ccipReadEnabled;
    const u = Object.keys(r).filter((l) => r[l] != null);
    return u.length && It.throwError(`cannot override ${u.map((l) => JSON.stringify(l)).join(",")}`, O.errors.UNSUPPORTED_OPERATION, {
      operation: "overrides",
      overrides: u
    }), a;
  });
}
function MR(n, e) {
  return function(...t) {
    return sf(n, e, t);
  };
}
function RR(n, e) {
  const t = n.signer || n.provider;
  return function(...r) {
    return xa(this, void 0, void 0, function* () {
      t || It.throwError("estimate require a provider or signer", O.errors.UNSUPPORTED_OPERATION, {
        operation: "estimateGas"
      });
      const i = yield sf(n, e, r);
      return yield t.estimateGas(i);
    });
  };
}
function PR(n, e) {
  const t = e.wait.bind(e);
  e.wait = (r) => t(r).then((i) => (i.events = i.logs.map((s) => {
    let a = Cs(s), o = null;
    try {
      o = n.interface.parseLog(s);
    } catch {
    }
    return o && (a.args = o.args, a.decode = (u, l) => n.interface.decodeEventLog(o.eventFragment, u, l), a.event = o.name, a.eventSignature = o.signature), a.removeListener = () => n.provider, a.getBlock = () => n.provider.getBlock(i.blockHash), a.getTransaction = () => n.provider.getTransaction(i.transactionHash), a.getTransactionReceipt = () => Promise.resolve(i), a;
  }), i));
}
function p6(n, e, t) {
  const r = n.signer || n.provider;
  return function(...i) {
    return xa(this, void 0, void 0, function* () {
      let s;
      if (i.length === e.inputs.length + 1 && typeof i[i.length - 1] == "object") {
        const u = $t(i.pop());
        u.blockTag != null && (s = yield u.blockTag), delete u.blockTag, i.push(u);
      }
      n.deployTransaction != null && (yield n._deployed(s));
      const a = yield sf(n, e, i), o = yield r.call(a, s);
      try {
        let u = n.interface.decodeFunctionResult(e, o);
        return t && e.outputs.length === 1 && (u = u[0]), u;
      } catch (u) {
        throw u.code === O.errors.CALL_EXCEPTION && (u.address = n.address, u.args = i, u.transaction = a), u;
      }
    });
  };
}
function OR(n, e) {
  return function(...t) {
    return xa(this, void 0, void 0, function* () {
      n.signer || It.throwError("sending a transaction requires a signer", O.errors.UNSUPPORTED_OPERATION, {
        operation: "sendTransaction"
      }), n.deployTransaction != null && (yield n._deployed());
      const r = yield sf(n, e, t), i = yield n.signer.sendTransaction(r);
      return PR(n, i), i;
    });
  };
}
function _2(n, e, t) {
  return e.constant ? p6(n, e, t) : OR(n, e);
}
function h6(n) {
  return n.address && (n.topics == null || n.topics.length === 0) ? "*" : (n.address || "*") + "@" + (n.topics ? n.topics.map((e) => Array.isArray(e) ? e.join("|") : e).join(":") : "");
}
class Xu {
  constructor(e, t) {
    V(this, "tag", e), V(this, "filter", t), this._listeners = [];
  }
  addListener(e, t) {
    this._listeners.push({ listener: e, once: t });
  }
  removeListener(e) {
    let t = !1;
    this._listeners = this._listeners.filter((r) => t || r.listener !== e ? !0 : (t = !0, !1));
  }
  removeAllListeners() {
    this._listeners = [];
  }
  listeners() {
    return this._listeners.map((e) => e.listener);
  }
  listenerCount() {
    return this._listeners.length;
  }
  run(e) {
    const t = this.listenerCount();
    return this._listeners = this._listeners.filter((r) => {
      const i = e.slice();
      return setTimeout(() => {
        r.listener.apply(this, i);
      }, 0), !r.once;
    }), t;
  }
  prepareEvent(e) {
  }
  getEmit(e) {
    return [e];
  }
}
class IR extends Xu {
  constructor() {
    super("error", null);
  }
}
class M2 extends Xu {
  constructor(e, t, r, i) {
    const s = {
      address: e
    };
    let a = t.getEventTopic(r);
    i ? (a !== i[0] && It.throwArgumentError("topic mismatch", "topics", i), s.topics = i.slice()) : s.topics = [a], super(h6(s), s), V(this, "address", e), V(this, "interface", t), V(this, "fragment", r);
  }
  prepareEvent(e) {
    super.prepareEvent(e), e.event = this.fragment.name, e.eventSignature = this.fragment.format(), e.decode = (t, r) => this.interface.decodeEventLog(this.fragment, t, r);
    try {
      e.args = this.interface.decodeEventLog(this.fragment, e.data, e.topics);
    } catch (t) {
      e.args = null, e.decodeError = t;
    }
  }
  getEmit(e) {
    const t = aw(e.args);
    if (t.length)
      throw t[0].error;
    const r = (e.args || []).slice();
    return r.push(e), r;
  }
}
class R2 extends Xu {
  constructor(e, t) {
    super("*", { address: e }), V(this, "address", e), V(this, "interface", t);
  }
  prepareEvent(e) {
    super.prepareEvent(e);
    try {
      const t = this.interface.parseLog(e);
      e.event = t.name, e.eventSignature = t.signature, e.decode = (r, i) => this.interface.decodeEventLog(t.eventFragment, r, i), e.args = t.args;
    } catch {
    }
  }
}
class kR {
  constructor(e, t, r) {
    V(this, "interface", Ir(new.target, "getInterface")(t)), r == null ? (V(this, "provider", null), V(this, "signer", null)) : $a.isSigner(r) ? (V(this, "provider", r.provider || null), V(this, "signer", r)) : kl.isProvider(r) ? (V(this, "provider", r), V(this, "signer", null)) : It.throwArgumentError("invalid signer or provider", "signerOrProvider", r), V(this, "callStatic", {}), V(this, "estimateGas", {}), V(this, "functions", {}), V(this, "populateTransaction", {}), V(this, "filters", {});
    {
      const a = {};
      Object.keys(this.interface.events).forEach((o) => {
        const u = this.interface.events[o];
        V(this.filters, o, (...l) => ({
          address: this.address,
          topics: this.interface.encodeFilterTopics(u, l)
        })), a[u.name] || (a[u.name] = []), a[u.name].push(o);
      }), Object.keys(a).forEach((o) => {
        const u = a[o];
        u.length === 1 ? V(this.filters, o, this.filters[u[0]]) : It.warn(`Duplicate definition of ${o} (${u.join(", ")})`);
      });
    }
    if (V(this, "_runningEvents", {}), V(this, "_wrappedEmits", {}), e == null && It.throwArgumentError("invalid contract address or ENS name", "addressOrName", e), V(this, "address", e), this.provider)
      V(this, "resolvedAddress", ld(this.provider, e));
    else
      try {
        V(this, "resolvedAddress", Promise.resolve(De(e)));
      } catch {
        It.throwError("provider is required to use ENS name as contract address", O.errors.UNSUPPORTED_OPERATION, {
          operation: "new Contract"
        });
      }
    this.resolvedAddress.catch((a) => {
    });
    const i = {}, s = {};
    Object.keys(this.interface.functions).forEach((a) => {
      const o = this.interface.functions[a];
      if (s[a]) {
        It.warn(`Duplicate ABI entry for ${JSON.stringify(a)}`);
        return;
      }
      s[a] = !0;
      {
        const u = o.name;
        i[`%${u}`] || (i[`%${u}`] = []), i[`%${u}`].push(a);
      }
      this[a] == null && V(this, a, _2(this, o, !0)), this.functions[a] == null && V(this.functions, a, _2(this, o, !1)), this.callStatic[a] == null && V(this.callStatic, a, p6(this, o, !0)), this.populateTransaction[a] == null && V(this.populateTransaction, a, MR(this, o)), this.estimateGas[a] == null && V(this.estimateGas, a, RR(this, o));
    }), Object.keys(i).forEach((a) => {
      const o = i[a];
      if (o.length > 1)
        return;
      a = a.substring(1);
      const u = o[0];
      try {
        this[a] == null && V(this, a, this[u]);
      } catch {
      }
      this.functions[a] == null && V(this.functions, a, this.functions[u]), this.callStatic[a] == null && V(this.callStatic, a, this.callStatic[u]), this.populateTransaction[a] == null && V(this.populateTransaction, a, this.populateTransaction[u]), this.estimateGas[a] == null && V(this.estimateGas, a, this.estimateGas[u]);
    });
  }
  static getContractAddress(e) {
    return J0(e);
  }
  static getInterface(e) {
    return yh.isInterface(e) ? e : new yh(e);
  }
  deployed() {
    return this._deployed();
  }
  _deployed(e) {
    return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then(() => this) : this._deployedPromise = this.provider.getCode(this.address, e).then((t) => (t === "0x" && It.throwError("contract not deployed", O.errors.UNSUPPORTED_OPERATION, {
      contractAddress: this.address,
      operation: "getDeployed"
    }), this))), this._deployedPromise;
  }
  fallback(e) {
    this.signer || It.throwError("sending a transactions require a signer", O.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction(fallback)" });
    const t = $t(e || {});
    return ["from", "to"].forEach(function(r) {
      t[r] != null && It.throwError("cannot override " + r, O.errors.UNSUPPORTED_OPERATION, { operation: r });
    }), t.to = this.resolvedAddress, this.deployed().then(() => this.signer.sendTransaction(t));
  }
  connect(e) {
    typeof e == "string" && (e = new iy(e, this.provider));
    const t = new this.constructor(this.address, this.interface, e);
    return this.deployTransaction && V(t, "deployTransaction", this.deployTransaction), t;
  }
  attach(e) {
    return new this.constructor(e, this.interface, this.signer || this.provider);
  }
  static isIndexed(e) {
    return ad.isIndexed(e);
  }
  _normalizeRunningEvent(e) {
    return this._runningEvents[e.tag] ? this._runningEvents[e.tag] : e;
  }
  _getRunningEvent(e) {
    if (typeof e == "string") {
      if (e === "error")
        return this._normalizeRunningEvent(new IR());
      if (e === "event")
        return this._normalizeRunningEvent(new Xu("event", null));
      if (e === "*")
        return this._normalizeRunningEvent(new R2(this.address, this.interface));
      const t = this.interface.getEvent(e);
      return this._normalizeRunningEvent(new M2(this.address, this.interface, t));
    }
    if (e.topics && e.topics.length > 0) {
      try {
        const r = e.topics[0];
        if (typeof r != "string")
          throw new Error("invalid topic");
        const i = this.interface.getEvent(r);
        return this._normalizeRunningEvent(new M2(this.address, this.interface, i, e.topics));
      } catch {
      }
      const t = {
        address: this.address,
        topics: e.topics
      };
      return this._normalizeRunningEvent(new Xu(h6(t), t));
    }
    return this._normalizeRunningEvent(new R2(this.address, this.interface));
  }
  _checkRunningEvents(e) {
    if (e.listenerCount() === 0) {
      delete this._runningEvents[e.tag];
      const t = this._wrappedEmits[e.tag];
      t && e.filter && (this.provider.off(e.filter, t), delete this._wrappedEmits[e.tag]);
    }
  }
  _wrapEvent(e, t, r) {
    const i = Cs(t);
    return i.removeListener = () => {
      !r || (e.removeListener(r), this._checkRunningEvents(e));
    }, i.getBlock = () => this.provider.getBlock(t.blockHash), i.getTransaction = () => this.provider.getTransaction(t.transactionHash), i.getTransactionReceipt = () => this.provider.getTransactionReceipt(t.transactionHash), e.prepareEvent(i), i;
  }
  _addEventListener(e, t, r) {
    if (this.provider || It.throwError("events require a provider or a signer with a provider", O.errors.UNSUPPORTED_OPERATION, { operation: "once" }), e.addListener(t, r), this._runningEvents[e.tag] = e, !this._wrappedEmits[e.tag]) {
      const i = (s) => {
        let a = this._wrapEvent(e, s, t);
        if (a.decodeError == null)
          try {
            const o = e.getEmit(a);
            this.emit(e.filter, ...o);
          } catch (o) {
            a.decodeError = o.error;
          }
        e.filter != null && this.emit("event", a), a.decodeError != null && this.emit("error", a.decodeError, a);
      };
      this._wrappedEmits[e.tag] = i, e.filter != null && this.provider.on(e.filter, i);
    }
  }
  queryFilter(e, t, r) {
    const i = this._getRunningEvent(e), s = $t(i.filter);
    return typeof t == "string" && Ae(t, 32) ? (r != null && It.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", r), s.blockHash = t) : (s.fromBlock = t ?? 0, s.toBlock = r ?? "latest"), this.provider.getLogs(s).then((a) => a.map((o) => this._wrapEvent(i, o, null)));
  }
  on(e, t) {
    return this._addEventListener(this._getRunningEvent(e), t, !1), this;
  }
  once(e, t) {
    return this._addEventListener(this._getRunningEvent(e), t, !0), this;
  }
  emit(e, ...t) {
    if (!this.provider)
      return !1;
    const r = this._getRunningEvent(e), i = r.run(t) > 0;
    return this._checkRunningEvents(r), i;
  }
  listenerCount(e) {
    return this.provider ? e == null ? Object.keys(this._runningEvents).reduce((t, r) => t + this._runningEvents[r].listenerCount(), 0) : this._getRunningEvent(e).listenerCount() : 0;
  }
  listeners(e) {
    if (!this.provider)
      return [];
    if (e == null) {
      const t = [];
      for (let r in this._runningEvents)
        this._runningEvents[r].listeners().forEach((i) => {
          t.push(i);
        });
      return t;
    }
    return this._getRunningEvent(e).listeners();
  }
  removeAllListeners(e) {
    if (!this.provider)
      return this;
    if (e == null) {
      for (const r in this._runningEvents) {
        const i = this._runningEvents[r];
        i.removeAllListeners(), this._checkRunningEvents(i);
      }
      return this;
    }
    const t = this._getRunningEvent(e);
    return t.removeAllListeners(), this._checkRunningEvents(t), this;
  }
  off(e, t) {
    if (!this.provider)
      return this;
    const r = this._getRunningEvent(e);
    return r.removeListener(t), this._checkRunningEvents(r), this;
  }
  removeListener(e, t) {
    return this.off(e, t);
  }
}
class y6 extends kR {
}
function m6(n) {
  return function(e, t, r) {
    const i = `${e.constructor.name}_${t}`, s = r.value;
    return r.value = function(...a) {
      const { storage: o } = n.call(this), u = `${i}_${JSON.stringify(a)}`;
      let l = o.getItem(u);
      return l || (l = s?.apply(this, a), o.setItem(u, l), l);
    }, r;
  };
}
var DR = Object.defineProperty, BR = Object.getOwnPropertyDescriptor, b6 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? BR(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && DR(e, t, i), i;
}, P2 = (n, e) => (t, r) => e(t, r, n);
const Ko = he.createInterface();
let So = class {
  constructor(n, e) {
    this.cacheService = n, this.readOnlyProvider = e;
  }
  static register(n) {
    pe.singleton(Ko, So).register(n);
  }
  callPopulateTransaction(n, e, ...t) {
    return n.populateTransaction[e].call(t);
  }
  async getContract(n, e, t, r) {
    const a = (r8 ? await lp(/* @__PURE__ */ Object.assign({ "../../contracts/governance/celo-test.json": () => Promise.resolve().then(() => cB), "../../contracts/monetary/celo-test.json": () => Promise.resolve().then(() => fB) }), `../../contracts/${n}/celo-test.json`) : await lp(/* @__PURE__ */ Object.assign({ "../../contracts/governance/celo.json": () => Promise.resolve().then(() => hB), "../../contracts/map/celo.json": () => Promise.resolve().then(() => mB), "../../contracts/monetary/celo.json": () => Promise.resolve().then(() => gB) }), `../../contracts/${n}/celo.json`)).contracts[e];
    let o = a.abi;
    if (typeof o == "string") {
      const u = o;
      o = await this.getSharedAbi(n, u);
    }
    if (t = t ?? a.address, !t)
      throw new Error(`ContractService: requested contract has no address: ${e}`);
    return new y6(t, o, r ?? this.readOnlyProvider);
  }
  async getSharedAbi(n, e) {
    return (await lp(/* @__PURE__ */ Object.assign({ "../../contracts/governance/sharedAbis.json": () => Promise.resolve().then(() => xB), "../../contracts/map/sharedAbis.json": () => Promise.resolve().then(() => TB), "../../contracts/monetary/sharedAbis.json": () => Promise.resolve().then(() => CB) }), `../../contracts/${n}/sharedAbis.json`))[e];
  }
};
b6([
  m6(function() {
    return { storage: this.cacheService };
  })
], So.prototype, "getContract", 1);
So = b6([
  P2(0, Rl),
  P2(1, Yd)
], So);
var NR = Object.defineProperty, FR = Object.getOwnPropertyDescriptor, LR = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? FR(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && NR(e, t, i), i;
}, $R = (n, e) => (t, r) => e(t, r, n);
const g6 = he.createInterface(), cy = he.createInterface();
let Zu = class {
  constructor(n) {
    this.container = n;
  }
  static register(n) {
    n.register(pe.singleton(cy, Zu));
  }
  fireStore;
  async connect() {
    const { getFirestore: n } = await Promise.resolve().then(() => M1);
    return this.fireStore ??= n(await this.container.get(g6)), this.fireStore;
  }
  async getDocs(n, e, t, r) {
    const { getDocs: i, query: s, collection: a, where: o, orderBy: u } = await Promise.resolve().then(() => M1);
    return (await i(
      s(a(await this.connect(), n), o(r.fieldPath, r.opStr, r.value), u(e, t))
    )).docs.map((c) => c.data());
  }
};
Zu = LR([
  $R(0, ko)
], Zu);
var UR = Object.defineProperty, VR = Object.getOwnPropertyDescriptor, jR = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? VR(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && UR(e, t, i), i;
}, GR = (n, e) => (t, r) => e(t, r, n);
const Bl = he.createInterface("NumberService");
let el = class {
  constructor(n) {
    this.i18n = n;
  }
  static register(n) {
    n.register(pe.singleton(Bl, el));
  }
  toString(n, e) {
    if (n === null || typeof n > "u" || typeof n == "string")
      return n;
    if (W.isBigNumber(n) && (n = n.toNumber()), Number.isNaN(n))
      return "NaN";
    const t = e?.useGrouping ?? !0, r = e?.isPercentage ?? !1, i = e?.isCurrency ?? !1;
    let s = this.fromString(e?.fractionDigits);
    isNaN(s) && (s = 2);
    const a = i ? { style: "currency", currency: "USD" } : r ? { style: "percent" } : { style: "decimal" };
    return this.i18n.nf(
      n,
      Object.assign(a, {
        useGrouping: t,
        minimumFractionDigits: s,
        maximumFractionDigits: s
      })
    );
  }
  fromString(n) {
    return n === null || typeof n > "u" ? NaN : typeof n == "number" ? n : this.i18n.uf(n);
  }
};
el = jR([
  GR(0, Ba)
], el);
const v6 = he.createInterface();
var WR = Object.defineProperty, zR = Object.getOwnPropertyDescriptor, x6 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? zR(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && WR(e, t, i), i;
}, Ap = (n, e) => (t, r) => e(t, r, n);
const dy = he.createInterface();
let Eo = class {
  constructor(n, e, t) {
    this.cacheService = n, this.contractService = e, this.readonlyProvider = t;
  }
  static register(n) {
    pe.singleton(dy, Eo).register(n);
  }
  async getTokenContract(n, e, t) {
    const r = e ? await this.contractService.getSharedAbi("monetary", "ERC721") : await this.contractService.getSharedAbi("monetary", "ERC20");
    return new y6(n, r, t ?? this.readonlyProvider);
  }
};
x6([
  m6(function() {
    return { storage: this.cacheService };
  })
], Eo.prototype, "getTokenContract", 1);
Eo = x6([
  Ap(0, Rl),
  Ap(1, Ko),
  Ap(2, Yd)
], Eo);
const HR = he.createInterface();
var KR = Object.defineProperty, qR = Object.getOwnPropertyDescriptor, QR = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? qR(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && KR(e, t, i), i;
}, JR = (n, e) => (t, r) => e(t, r, n);
const fy = he.createInterface();
let cd = class {
  constructor(n) {
    this.client = n;
  }
  static register(n) {
    n.register(pe.singleton(fy, cd));
  }
  async all(n) {
    const e = [];
    for await (const t of n)
      e.push(t);
    return e;
  }
  save(n, e = !0) {
    return typeof n == "string" ? this.client.add(
      { content: n },
      {
        pin: e
      }
    ).then((t) => t.cid) : this.client.dag.put(n, {
      pin: e
    });
  }
  async get(n, e = !1, t) {
    const r = (await Promise.resolve().then(() => uN)).CID.asCID(n);
    if (!!r) {
      if (!e) {
        const i = this.client.cat(n), s = (await Promise.resolve().then(() => cN)).concat(await this.all(i));
        return (await Promise.resolve().then(() => DF)).toString(s);
      }
      return JSON.stringify((await this.client.dag.get(r, { path: t })).value);
    }
  }
};
cd = QR([
  JR(0, HR)
], cd);
const YR = "@kolektivo/dapp", XR = "A collection of institutional technologies that open up new opportunities for local communities to govern and finance their own regenerative economies.", ZR = "1.0.0", eP = {
  type: "git",
  url: "https://github.com/Kolektivo/dapp"
}, tP = "CL Cybernetix GmbH", nP = "./", rP = "MIT", iP = {
  node: ">=16.0.0"
}, sP = {
  http: !1
}, aP = {
  "lint:js": "eslint src --ext .js,.ts",
  "lint:fix": "eslint src  --fix",
  "lint:scss:fix": 'stylelint "src/**/*.scss" --fix',
  "lint:scss": 'stylelint "src/**/*.scss"',
  "lint:html": "htmlhint -c .htmlhintrc src design-system ",
  lint: "npm run lint:js && npm run lint:html && npm run lint:scss",
  clean: "npx -y rimraf node_modules package-lock.json && npm i",
  dev: "vite",
  start: "vite",
  typecheck: "tsc",
  build: "tsc && vite build",
  "build:chart-data-script": "vite build --config vite.config-lib.ts",
  "build:dev:chart-data-script": "vite build --config vite.config-lib.ts --mode development",
  "build:dev": "vite build --mode development",
  "preview-build": "vite preview --open",
  postinstall: "node build/postinstall/index.mjs",
  test: "vitest --no-threads",
  "test:ui": "vitest --ui",
  coverage: "vitest run --coverage",
  e2e: "playwright test",
  "e2e:watch": "playwright test --watch",
  "e2e:ci": "URL=$npm_config_url playwright test",
  "vercel:deploy": "vercel --token $npm_config_token",
  "vercel:deploy:production": "vercel --prod --token $npm_config_token",
  "vercel:alias": "vercel alias set $npm_config_deployment $npm_config_branch --token $npm_config_token --scope $npm_config_scope"
}, oP = {
  "@aurelia/i18n": "dev",
  "@aurelia/validation-html": "dev",
  "@celo-tools/celo-ethers-wrapper": "^0.3.0",
  "@dethcrypto/eth-sdk": "^0.3.3",
  "@dethcrypto/eth-sdk-client": "^0.1.6",
  "@material-design-icons/svg": "^0.13.0",
  "@metamask/detect-provider": "^2.0.0",
  "@metamask/providers": "^10.0.0",
  "@walletconnect/web3-provider": "^1.8.0",
  aurelia: "dev",
  "browserify-zlib": "^0.2.0",
  buffer: "^6.0.3",
  "chart.js": "^3.9.1",
  cids: "^1.1.9",
  ethers: "^5.7.2",
  events: "^3.3.0",
  firebase: "^9.12.1",
  "i18next-chained-backend": "^4.0.0",
  "i18next-http-backend": "^2.0.0",
  "i18next-intervalplural-postprocessor": "^3.0.0",
  "i18next-localstorage-backend": "^4.0.0",
  "ipfs-core": "^0.16.1",
  "ipfs-http-client": "^58.0.1",
  "lit-js-sdk": "^1.2.17",
  process: "^0.11.10",
  "stream-browserify": "^3.0.0",
  uint8arrays: "^4.0.2",
  util: "^0.12.5",
  web3modal: "^1.9.9"
}, uP = {
  "eslint-plugin-simple-import-sort": "^8.0.0",
  "@aurelia/plugin-conventions": "dev",
  "@aurelia/testing": "dev",
  "@esbuild-plugins/node-globals-polyfill": "^0.1.1",
  "@playwright/test": "^1.27.1",
  "@rollup/plugin-inject": "^5.0.2",
  "@typechain/ethers-v5": "^10.1.0",
  "@types/node": "^18.11.4",
  "@typescript-eslint/eslint-plugin": "^5.40.1",
  "@typescript-eslint/parser": "^5.40.1",
  "@vitest/ui": "^0.24.3",
  "cross-env": "^7.0.3",
  eslint: "^8.26.0",
  "eslint-config-prettier": "^8.5.0",
  "eslint-import-resolver-typescript": "^3.5.2",
  "eslint-plugin-cypress": "^2.12.1",
  "eslint-plugin-import": "^2.26.0",
  "eslint-plugin-prettier": "^4.2.1",
  "eslint-plugin-unused-imports": "^2.0.0",
  "fs-extra": "^10.1.0",
  glob: "^8.0.3",
  "happy-dom": "^7.6.0",
  "html-loader": "^4.2.0",
  htmlhint: "^1.1.4",
  "http-browserify": "1.7.0",
  "https-browserify": "^1.0.0",
  postcss: "^8.4.18",
  "postcss-loader": "^7.0.1",
  "rollup-plugin-html": "^0.2.1",
  "rollup-plugin-polyfill-node": "^0.10.2",
  "rollup-plugin-swc": "^0.2.1",
  "rollup-plugin-visualizer": "^5.8.3",
  "rollup-pluginutils": "^2.8.2",
  sass: "^1.55.0",
  stylelint: "^14.14.0",
  "stylelint-config-prettier": "^9.0.3",
  "stylelint-config-standard": "^29.0.0",
  "stylelint-config-standard-scss": "^5.0.0",
  "stylelint-prettier": "^2.0.0",
  tslib: "^2.4.0",
  typescript: "~4.8.4",
  "unplugin-swc": "^1.3.2",
  vercel: "^28.4.12",
  vite: "^3.1.8",
  "vite-svg-loader": "^3.6.0",
  "vite-tsconfig-paths": "^3.5.2",
  vitest: "^0.24.3",
  "vitest-mock-extended": "^1.0.2"
}, lP = {
  terser: "npm:@swc/core"
}, cP = {
  name: YR,
  description: XR,
  version: ZR,
  repository: eP,
  author: tP,
  homepage: nP,
  license: rP,
  engines: iP,
  browser: sP,
  scripts: aP,
  dependencies: oP,
  devDependencies: uP,
  resolutions: lP
}, py = he.createInterface("BrowserStorageService");
class hy {
  addVersion(e, t) {
    return {
      data: e,
      _version: t
    };
  }
  getKey(e) {
    return `${cP.name}.${e}`;
  }
  set(e, t, r, i) {
    const s = typeof i == "string" ? this.addVersion(r, i) : r;
    e.setItem(this.getKey(t), JSON.stringify(s));
  }
  get(e, t, r, i) {
    const s = e.getItem(this.getKey(t));
    if (typeof s == "string")
      try {
        const a = JSON.parse(s);
        if (typeof i == "string") {
          const o = a;
          return o._version === i ? o.data : r;
        } else
          return a;
      } catch {
        return r;
      }
    return r;
  }
  remove(e, t) {
    e.removeItem(this.getKey(t));
  }
  lsSet(e, t, r) {
    this.set(localStorage, e, t, r);
  }
  lsGet(e, t, r) {
    return this.get(localStorage, e, t, r);
  }
  lsRemove(e) {
    this.remove(localStorage, e);
  }
  ssSet(e, t, r) {
    this.set(sessionStorage, e, t, r);
  }
  ssGet(e, t, r) {
    return this.get(sessionStorage, e, t, r);
  }
  ssRemove(e) {
    this.remove(sessionStorage, e);
  }
  static register(e) {
    pe.singleton(py, hy).register(e);
  }
}
const dP = he.createInterface(), Nl = he.createInterface();
var Ah = /* @__PURE__ */ ((n) => (n[n.MONETARY_CONTROLLER = 1] = "MONETARY_CONTROLLER", n[n.RESERVE_DELEGATE = 2] = "RESERVE_DELEGATE", n[n.RESERVE_VETO_DELEGATE = 3] = "RESERVE_VETO_DELEGATE", n[n.TOPOLOGY_DELEGATE = 4] = "TOPOLOGY_DELEGATE", n[n.ECOLOGY_DELEGATE = 5] = "ECOLOGY_DELEGATE", n[n.ECOLOGY_DELEGATE_PROPOSER = 6] = "ECOLOGY_DELEGATE_PROPOSER", n[n.RESERVE_ARBITRAGEUR = 7] = "RESERVE_ARBITRAGEUR", n[n.LOCAL_MULTI_SIG_MEMBER = 8] = "LOCAL_MULTI_SIG_MEMBER", n[n.TREASURY_DELEGATE = 101] = "TREASURY_DELEGATE", n[n.TREASURY_VETO_DELEGATE = 102] = "TREASURY_VETO_DELEGATE", n[n.TREASURY_ARBITRAGEUR = 103] = "TREASURY_ARBITRAGEUR", n[n.KOLEKTIVO_MULTI_SIG_MEMBER = 104] = "KOLEKTIVO_MULTI_SIG_MEMBER", n))(Ah || {}), fP = Object.defineProperty, pP = Object.getOwnPropertyDescriptor, hP = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? pP(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && fP(e, t, i), i;
}, Cp = (n, e) => (t, r) => e(t, r, n);
const w6 = he.createInterface("EncryptionService");
let dd = class {
  constructor(n, e, t) {
    this.logger = n, this.container = e, this.config = t, this.logger.scopeTo("EncryptionService");
  }
  client;
  static register(n) {
    pe.singleton(w6, dd).register(n);
  }
  authSig;
  encryptedSymmetricKey;
  get chain() {
    return this.config.chain.toLowerCase();
  }
  getAccessControlConditions(n) {
    return [
      {
        contractAddress: n,
        standardContractType: "ERC1155",
        chain: this.chain,
        method: "balanceOfBatch",
        parameters: [":userAddress,:userAddress", `${Ah.RESERVE_DELEGATE},${Ah.ECOLOGY_DELEGATE_PROPOSER}`],
        returnValueTest: {
          comparator: ">",
          value: "0"
        }
      }
    ];
  }
  async connect() {
    if (this.client)
      return;
    const n = await this.container.get(dP);
    return this.client = n, await this.client.connect();
  }
  async encrypt(n, e, t, r) {
    if (await this.connect(), !this.client)
      return;
    const i = {
      web3: e,
      account: t.toLowerCase(),
      chainId: this.config.chainId,
      expiration: new Date(Date.now() + 3e5)
    };
    this.authSig = await this.client.getAuthSig(i);
    const { encryptedString: s, symmetricKey: a } = await this.client.encryptString(n);
    return this.encryptedSymmetricKey = this.client.uint8arrayToString(
      await this.client.saveEncryptionKey({
        accessControlConditions: this.getAccessControlConditions(r),
        symmetricKey: a,
        authSig: this.authSig,
        chain: this.chain
      }),
      "base16"
    ), { encryptedString: s, symmetricKey: a };
  }
  async decryptAs(n, e) {
    if (await this.connect(), !this.client)
      throw new Error("No encryption client connected");
    const t = await this.client.getEncryptionKey({
      accessControlConditions: this.getAccessControlConditions(e),
      toDecrypt: this.encryptedSymmetricKey,
      chain: this.chain,
      authSig: this.authSig
    }), r = await this.client.decryptString(n, t);
    try {
      return JSON.parse(r);
    } catch {
      this.logger.info("Failed to parse data from LIT");
    }
    return r;
  }
};
dd = hP([
  Cp(0, Ra),
  Cp(1, ko),
  Cp(2, Nl)
], dd);
var yy = {};
const yP = /* @__PURE__ */ Ot(__), mP = /* @__PURE__ */ Ot(l7), bP = /* @__PURE__ */ Ot(z7);
class my {
  constructor(e) {
    V(this, "alphabet", e), V(this, "base", e.length), V(this, "_alphabetMap", {}), V(this, "_leader", e.charAt(0));
    for (let t = 0; t < e.length; t++)
      this._alphabetMap[e.charAt(t)] = t;
  }
  encode(e) {
    let t = z(e);
    if (t.length === 0)
      return "";
    let r = [0];
    for (let s = 0; s < t.length; ++s) {
      let a = t[s];
      for (let o = 0; o < r.length; ++o)
        a += r[o] << 8, r[o] = a % this.base, a = a / this.base | 0;
      for (; a > 0; )
        r.push(a % this.base), a = a / this.base | 0;
    }
    let i = "";
    for (let s = 0; t[s] === 0 && s < t.length - 1; ++s)
      i += this._leader;
    for (let s = r.length - 1; s >= 0; --s)
      i += this.alphabet[r[s]];
    return i;
  }
  decode(e) {
    if (typeof e != "string")
      throw new TypeError("Expected String");
    let t = [];
    if (e.length === 0)
      return new Uint8Array(t);
    t.push(0);
    for (let r = 0; r < e.length; r++) {
      let i = this._alphabetMap[e[r]];
      if (i === void 0)
        throw new Error("Non-base" + this.base + " character");
      let s = i;
      for (let a = 0; a < t.length; ++a)
        s += t[a] * this.base, t[a] = s & 255, s >>= 8;
      for (; s > 0; )
        t.push(s & 255), s >>= 8;
    }
    for (let r = 0; e[r] === this._leader && r < e.length - 1; ++r)
      t.push(0);
    return z(new Uint8Array(t.reverse()));
  }
}
const gP = new my("abcdefghijklmnopqrstuvwxyz234567"), _o = new my("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"), vP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaseX: my,
  Base32: gP,
  Base58: _o
}, Symbol.toStringTag, { value: "Module" })), xP = /* @__PURE__ */ Ot(vP), wP = /* @__PURE__ */ Ot(d8), TP = /* @__PURE__ */ Ot(C_);
var Mo;
(function(n) {
  n.sha256 = "sha256", n.sha512 = "sha512";
})(Mo || (Mo = {}));
const AP = "sha2/5.7.0", CP = new O(AP);
function T6(n) {
  return "0x" + kn.ripemd160().update(z(n)).digest("hex");
}
function Ni(n) {
  return "0x" + kn.sha256().update(z(n)).digest("hex");
}
function SP(n) {
  return "0x" + kn.sha512().update(z(n)).digest("hex");
}
function tl(n, e, t) {
  return Mo[n] || CP.throwError("unsupported algorithm " + n, O.errors.UNSUPPORTED_OPERATION, {
    operation: "hmac",
    algorithm: n
  }), "0x" + kn.hmac(kn[n], z(e)).update(z(t)).digest("hex");
}
const EP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  computeHmac: tl,
  ripemd160: T6,
  sha256: Ni,
  sha512: SP,
  get SupportedAlgorithm() {
    return Mo;
  }
}, Symbol.toStringTag, { value: "Module" }));
function by(n, e, t, r, i) {
  n = z(n), e = z(e);
  let s, a = 1;
  const o = new Uint8Array(r), u = new Uint8Array(e.length + 4);
  u.set(e);
  let l, c;
  for (let p = 1; p <= a; p++) {
    u[e.length] = p >> 24 & 255, u[e.length + 1] = p >> 16 & 255, u[e.length + 2] = p >> 8 & 255, u[e.length + 3] = p & 255;
    let b = z(tl(i, n, u));
    s || (s = b.length, c = new Uint8Array(s), a = Math.ceil(r / s), l = r - (a - 1) * s), c.set(b);
    for (let w = 1; w < t; w++) {
      b = z(tl(i, n, b));
      for (let T = 0; T < s; T++)
        c[T] ^= b[T];
    }
    const A = (p - 1) * s, g = p === a ? l : s;
    o.set(z(c).slice(0, g), A);
  }
  return K(o);
}
const _P = "wordlists/5.7.0", MP = new O(_P);
class Fl {
  constructor(e) {
    MP.checkAbstract(new.target, Fl), V(this, "locale", e);
  }
  split(e) {
    return e.toLowerCase().split(/ +/g);
  }
  join(e) {
    return e.join(" ");
  }
  static check(e) {
    const t = [];
    for (let r = 0; r < 2048; r++) {
      const i = e.getWord(r);
      if (r !== e.getWordIndex(i))
        return "0x";
      t.push(i);
    }
    return ps(t.join(`
`) + `
`);
  }
  static register(e, t) {
    t || (t = e.locale);
  }
}
const RP = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
let Ru = null;
function O2(n) {
  if (Ru == null && (Ru = RP.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), Fl.check(n) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"))
    throw Ru = null, new Error("BIP39 Wordlist for en (English) FAILED");
}
class PP extends Fl {
  constructor() {
    super("en");
  }
  getWord(e) {
    return O2(this), Ru[e];
  }
  getWordIndex(e) {
    return O2(this), Ru.indexOf(e);
  }
}
const A6 = new PP();
Fl.register(A6);
const I2 = {
  en: A6
}, OP = "hdnode/5.7.0", nl = new O(OP), IP = W.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), kP = Nt("Bitcoin seed"), to = 2147483648;
function C6(n) {
  return (1 << n) - 1 << 8 - n;
}
function DP(n) {
  return (1 << n) - 1;
}
function rc(n) {
  return Be(K(n), 32);
}
function k2(n) {
  return _o.encode(Ve([n, Dt(Ni(Ni(n)), 0, 4)]));
}
function gy(n) {
  if (n == null)
    return I2.en;
  if (typeof n == "string") {
    const e = I2[n];
    return e == null && nl.throwArgumentError("unknown locale", "wordlist", n), e;
  }
  return n;
}
const Ka = {}, Ro = "m/44'/60'/0'/0/0";
class Qn {
  constructor(e, t, r, i, s, a, o, u) {
    if (e !== Ka)
      throw new Error("HDNode constructor cannot be called directly");
    if (t) {
      const l = new da(t);
      V(this, "privateKey", l.privateKey), V(this, "publicKey", l.compressedPublicKey);
    } else
      V(this, "privateKey", null), V(this, "publicKey", K(r));
    V(this, "parentFingerprint", i), V(this, "fingerprint", Dt(T6(Ni(this.publicKey)), 0, 4)), V(this, "address", gs(this.publicKey)), V(this, "chainCode", s), V(this, "index", a), V(this, "depth", o), u == null ? (V(this, "mnemonic", null), V(this, "path", null)) : typeof u == "string" ? (V(this, "mnemonic", null), V(this, "path", u)) : (V(this, "mnemonic", u), V(this, "path", u.path));
  }
  get extendedKey() {
    if (this.depth >= 256)
      throw new Error("Depth too large!");
    return k2(Ve([
      this.privateKey != null ? "0x0488ADE4" : "0x0488B21E",
      K(this.depth),
      this.parentFingerprint,
      Be(K(this.index), 4),
      this.chainCode,
      this.privateKey != null ? Ve(["0x00", this.privateKey]) : this.publicKey
    ]));
  }
  neuter() {
    return new Qn(Ka, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
  }
  _derive(e) {
    if (e > 4294967295)
      throw new Error("invalid index - " + String(e));
    let t = this.path;
    t && (t += "/" + (e & ~to));
    const r = new Uint8Array(37);
    if (e & to) {
      if (!this.privateKey)
        throw new Error("cannot derive child of neutered node");
      r.set(z(this.privateKey), 1), t && (t += "'");
    } else
      r.set(z(this.publicKey));
    for (let p = 24; p >= 0; p -= 8)
      r[33 + (p >> 3)] = e >> 24 - p & 255;
    const i = z(tl(Mo.sha512, this.chainCode, r)), s = i.slice(0, 32), a = i.slice(32);
    let o = null, u = null;
    this.privateKey ? o = rc(W.from(s).add(this.privateKey).mod(IP)) : u = new da(K(s))._addPoint(this.publicKey);
    let l = t;
    const c = this.mnemonic;
    return c && (l = Object.freeze({
      phrase: c.phrase,
      path: t,
      locale: c.locale || "en"
    })), new Qn(Ka, o, u, this.fingerprint, rc(a), e, this.depth + 1, l);
  }
  derivePath(e) {
    const t = e.split("/");
    if (t.length === 0 || t[0] === "m" && this.depth !== 0)
      throw new Error("invalid path - " + e);
    t[0] === "m" && t.shift();
    let r = this;
    for (let i = 0; i < t.length; i++) {
      const s = t[i];
      if (s.match(/^[0-9]+'$/)) {
        const a = parseInt(s.substring(0, s.length - 1));
        if (a >= to)
          throw new Error("invalid path index - " + s);
        r = r._derive(to + a);
      } else if (s.match(/^[0-9]+$/)) {
        const a = parseInt(s);
        if (a >= to)
          throw new Error("invalid path index - " + s);
        r = r._derive(a);
      } else
        throw new Error("invalid path component - " + s);
    }
    return r;
  }
  static _fromSeed(e, t) {
    const r = z(e);
    if (r.length < 16 || r.length > 64)
      throw new Error("invalid seed");
    const i = z(tl(Mo.sha512, kP, r));
    return new Qn(Ka, rc(i.slice(0, 32)), null, "0x00000000", rc(i.slice(32)), 0, 0, t);
  }
  static fromMnemonic(e, t, r) {
    return r = gy(r), e = of(af(e, r), r), Qn._fromSeed(S6(e, t), {
      phrase: e,
      path: "m",
      locale: r.locale
    });
  }
  static fromSeed(e) {
    return Qn._fromSeed(e, null);
  }
  static fromExtendedKey(e) {
    const t = _o.decode(e);
    (t.length !== 82 || k2(t.slice(0, 78)) !== e) && nl.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
    const r = t[4], i = K(t.slice(5, 9)), s = parseInt(K(t.slice(9, 13)).substring(2), 16), a = K(t.slice(13, 45)), o = t.slice(45, 78);
    switch (K(t.slice(0, 4))) {
      case "0x0488b21e":
      case "0x043587cf":
        return new Qn(Ka, null, K(o), i, a, s, r, null);
      case "0x0488ade4":
      case "0x04358394 ":
        if (o[0] !== 0)
          break;
        return new Qn(Ka, K(o.slice(1)), null, i, a, s, r, null);
    }
    return nl.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
  }
}
function S6(n, e) {
  e || (e = "");
  const t = Nt("mnemonic" + e, ri.NFKD);
  return by(Nt(n, ri.NFKD), t, 2048, 64, "sha512");
}
function af(n, e) {
  e = gy(e), nl.checkNormalize();
  const t = e.split(n);
  if (t.length % 3 !== 0)
    throw new Error("invalid mnemonic");
  const r = z(new Uint8Array(Math.ceil(11 * t.length / 8)));
  let i = 0;
  for (let l = 0; l < t.length; l++) {
    let c = e.getWordIndex(t[l].normalize("NFKD"));
    if (c === -1)
      throw new Error("invalid mnemonic");
    for (let p = 0; p < 11; p++)
      c & 1 << 10 - p && (r[i >> 3] |= 1 << 7 - i % 8), i++;
  }
  const s = 32 * t.length / 3, a = t.length / 3, o = C6(a);
  if ((z(Ni(r.slice(0, s / 8)))[0] & o) !== (r[r.length - 1] & o))
    throw new Error("invalid checksum");
  return K(r.slice(0, s / 8));
}
function of(n, e) {
  if (e = gy(e), n = z(n), n.length % 4 !== 0 || n.length < 16 || n.length > 32)
    throw new Error("invalid entropy");
  const t = [0];
  let r = 11;
  for (let a = 0; a < n.length; a++)
    r > 8 ? (t[t.length - 1] <<= 8, t[t.length - 1] |= n[a], r -= 8) : (t[t.length - 1] <<= r, t[t.length - 1] |= n[a] >> 8 - r, t.push(n[a] & DP(8 - r)), r += 3);
  const i = n.length / 4, s = z(Ni(n))[0] & C6(i);
  return t[t.length - 1] <<= i, t[t.length - 1] |= s >> 8 - i, e.join(t.map((a) => e.getWord(a)));
}
function BP(n, e) {
  try {
    return af(n, e), !0;
  } catch {
  }
  return !1;
}
function NP(n) {
  return (typeof n != "number" || n < 0 || n >= to || n % 1) && nl.throwArgumentError("invalid account index", "index", n), `m/44'/60'/${n}'/0/0`;
}
const FP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  defaultPath: Ro,
  HDNode: Qn,
  mnemonicToSeed: S6,
  mnemonicToEntropy: af,
  entropyToMnemonic: of,
  isValidMnemonic: BP,
  getAccountPath: NP
}, Symbol.toStringTag, { value: "Module" })), LP = /* @__PURE__ */ Ot(FP);
var E6 = { exports: {} };
(function(n, e) {
  (function(t) {
    function r(m) {
      return parseInt(m) === m;
    }
    function i(m) {
      if (!r(m.length))
        return !1;
      for (var f = 0; f < m.length; f++)
        if (!r(m[f]) || m[f] < 0 || m[f] > 255)
          return !1;
      return !0;
    }
    function s(m, f) {
      if (m.buffer && ArrayBuffer.isView(m) && m.name === "Uint8Array")
        return f && (m.slice ? m = m.slice() : m = Array.prototype.slice.call(m)), m;
      if (Array.isArray(m)) {
        if (!i(m))
          throw new Error("Array contains invalid value: " + m);
        return new Uint8Array(m);
      }
      if (r(m.length) && i(m))
        return new Uint8Array(m);
      throw new Error("unsupported array-like object");
    }
    function a(m) {
      return new Uint8Array(m);
    }
    function o(m, f, v, k, h) {
      (k != null || h != null) && (m.slice ? m = m.slice(k, h) : m = Array.prototype.slice.call(m, k, h)), f.set(m, v);
    }
    var u = function() {
      function m(v) {
        var k = [], h = 0;
        for (v = encodeURI(v); h < v.length; ) {
          var R = v.charCodeAt(h++);
          R === 37 ? (k.push(parseInt(v.substr(h, 2), 16)), h += 2) : k.push(R);
        }
        return s(k);
      }
      function f(v) {
        for (var k = [], h = 0; h < v.length; ) {
          var R = v[h];
          R < 128 ? (k.push(String.fromCharCode(R)), h++) : R > 191 && R < 224 ? (k.push(String.fromCharCode((R & 31) << 6 | v[h + 1] & 63)), h += 2) : (k.push(String.fromCharCode((R & 15) << 12 | (v[h + 1] & 63) << 6 | v[h + 2] & 63)), h += 3);
        }
        return k.join("");
      }
      return {
        toBytes: m,
        fromBytes: f
      };
    }(), l = function() {
      function m(k) {
        for (var h = [], R = 0; R < k.length; R += 2)
          h.push(parseInt(k.substr(R, 2), 16));
        return h;
      }
      var f = "0123456789abcdef";
      function v(k) {
        for (var h = [], R = 0; R < k.length; R++) {
          var L = k[R];
          h.push(f[(L & 240) >> 4] + f[L & 15]);
        }
        return h.join("");
      }
      return {
        toBytes: m,
        fromBytes: v
      };
    }(), c = { 16: 10, 24: 12, 32: 14 }, p = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], b = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], A = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125], g = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], w = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], T = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], _ = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], I = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890], N = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935], B = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600], D = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480], $ = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], H = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], j = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], Q = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
    function oe(m) {
      for (var f = [], v = 0; v < m.length; v += 4)
        f.push(
          m[v] << 24 | m[v + 1] << 16 | m[v + 2] << 8 | m[v + 3]
        );
      return f;
    }
    var J = function(m) {
      if (!(this instanceof J))
        throw Error("AES must be instanitated with `new`");
      Object.defineProperty(this, "key", {
        value: s(m, !0)
      }), this._prepare();
    };
    J.prototype._prepare = function() {
      var m = c[this.key.length];
      if (m == null)
        throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
      this._Ke = [], this._Kd = [];
      for (var f = 0; f <= m; f++)
        this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
      for (var v = (m + 1) * 4, k = this.key.length / 4, h = oe(this.key), R, f = 0; f < k; f++)
        R = f >> 2, this._Ke[R][f % 4] = h[f], this._Kd[m - R][f % 4] = h[f];
      for (var L = 0, F = k, U; F < v; ) {
        if (U = h[k - 1], h[0] ^= b[U >> 16 & 255] << 24 ^ b[U >> 8 & 255] << 16 ^ b[U & 255] << 8 ^ b[U >> 24 & 255] ^ p[L] << 24, L += 1, k != 8)
          for (var f = 1; f < k; f++)
            h[f] ^= h[f - 1];
        else {
          for (var f = 1; f < k / 2; f++)
            h[f] ^= h[f - 1];
          U = h[k / 2 - 1], h[k / 2] ^= b[U & 255] ^ b[U >> 8 & 255] << 8 ^ b[U >> 16 & 255] << 16 ^ b[U >> 24 & 255] << 24;
          for (var f = k / 2 + 1; f < k; f++)
            h[f] ^= h[f - 1];
        }
        for (var f = 0, te, q; f < k && F < v; )
          te = F >> 2, q = F % 4, this._Ke[te][q] = h[f], this._Kd[m - te][q] = h[f++], F++;
      }
      for (var te = 1; te < m; te++)
        for (var q = 0; q < 4; q++)
          U = this._Kd[te][q], this._Kd[te][q] = $[U >> 24 & 255] ^ H[U >> 16 & 255] ^ j[U >> 8 & 255] ^ Q[U & 255];
    }, J.prototype.encrypt = function(m) {
      if (m.length != 16)
        throw new Error("invalid plaintext size (must be 16 bytes)");
      for (var f = this._Ke.length - 1, v = [0, 0, 0, 0], k = oe(m), h = 0; h < 4; h++)
        k[h] ^= this._Ke[0][h];
      for (var R = 1; R < f; R++) {
        for (var h = 0; h < 4; h++)
          v[h] = g[k[h] >> 24 & 255] ^ w[k[(h + 1) % 4] >> 16 & 255] ^ T[k[(h + 2) % 4] >> 8 & 255] ^ _[k[(h + 3) % 4] & 255] ^ this._Ke[R][h];
        k = v.slice();
      }
      for (var L = a(16), F, h = 0; h < 4; h++)
        F = this._Ke[f][h], L[4 * h] = (b[k[h] >> 24 & 255] ^ F >> 24) & 255, L[4 * h + 1] = (b[k[(h + 1) % 4] >> 16 & 255] ^ F >> 16) & 255, L[4 * h + 2] = (b[k[(h + 2) % 4] >> 8 & 255] ^ F >> 8) & 255, L[4 * h + 3] = (b[k[(h + 3) % 4] & 255] ^ F) & 255;
      return L;
    }, J.prototype.decrypt = function(m) {
      if (m.length != 16)
        throw new Error("invalid ciphertext size (must be 16 bytes)");
      for (var f = this._Kd.length - 1, v = [0, 0, 0, 0], k = oe(m), h = 0; h < 4; h++)
        k[h] ^= this._Kd[0][h];
      for (var R = 1; R < f; R++) {
        for (var h = 0; h < 4; h++)
          v[h] = I[k[h] >> 24 & 255] ^ N[k[(h + 3) % 4] >> 16 & 255] ^ B[k[(h + 2) % 4] >> 8 & 255] ^ D[k[(h + 1) % 4] & 255] ^ this._Kd[R][h];
        k = v.slice();
      }
      for (var L = a(16), F, h = 0; h < 4; h++)
        F = this._Kd[f][h], L[4 * h] = (A[k[h] >> 24 & 255] ^ F >> 24) & 255, L[4 * h + 1] = (A[k[(h + 3) % 4] >> 16 & 255] ^ F >> 16) & 255, L[4 * h + 2] = (A[k[(h + 2) % 4] >> 8 & 255] ^ F >> 8) & 255, L[4 * h + 3] = (A[k[(h + 1) % 4] & 255] ^ F) & 255;
      return L;
    };
    var ue = function(m) {
      if (!(this instanceof ue))
        throw Error("AES must be instanitated with `new`");
      this.description = "Electronic Code Block", this.name = "ecb", this._aes = new J(m);
    };
    ue.prototype.encrypt = function(m) {
      if (m = s(m), m.length % 16 !== 0)
        throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var f = a(m.length), v = a(16), k = 0; k < m.length; k += 16)
        o(m, v, 0, k, k + 16), v = this._aes.encrypt(v), o(v, f, k);
      return f;
    }, ue.prototype.decrypt = function(m) {
      if (m = s(m), m.length % 16 !== 0)
        throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var f = a(m.length), v = a(16), k = 0; k < m.length; k += 16)
        o(m, v, 0, k, k + 16), v = this._aes.decrypt(v), o(v, f, k);
      return f;
    };
    var E = function(m, f) {
      if (!(this instanceof E))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Cipher Block Chaining", this.name = "cbc", !f)
        f = a(16);
      else if (f.length != 16)
        throw new Error("invalid initialation vector size (must be 16 bytes)");
      this._lastCipherblock = s(f, !0), this._aes = new J(m);
    };
    E.prototype.encrypt = function(m) {
      if (m = s(m), m.length % 16 !== 0)
        throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var f = a(m.length), v = a(16), k = 0; k < m.length; k += 16) {
        o(m, v, 0, k, k + 16);
        for (var h = 0; h < 16; h++)
          v[h] ^= this._lastCipherblock[h];
        this._lastCipherblock = this._aes.encrypt(v), o(this._lastCipherblock, f, k);
      }
      return f;
    }, E.prototype.decrypt = function(m) {
      if (m = s(m), m.length % 16 !== 0)
        throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var f = a(m.length), v = a(16), k = 0; k < m.length; k += 16) {
        o(m, v, 0, k, k + 16), v = this._aes.decrypt(v);
        for (var h = 0; h < 16; h++)
          f[k + h] = v[h] ^ this._lastCipherblock[h];
        o(m, this._lastCipherblock, 0, k, k + 16);
      }
      return f;
    };
    var d = function(m, f, v) {
      if (!(this instanceof d))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Cipher Feedback", this.name = "cfb", !f)
        f = a(16);
      else if (f.length != 16)
        throw new Error("invalid initialation vector size (must be 16 size)");
      v || (v = 1), this.segmentSize = v, this._shiftRegister = s(f, !0), this._aes = new J(m);
    };
    d.prototype.encrypt = function(m) {
      if (m.length % this.segmentSize != 0)
        throw new Error("invalid plaintext size (must be segmentSize bytes)");
      for (var f = s(m, !0), v, k = 0; k < f.length; k += this.segmentSize) {
        v = this._aes.encrypt(this._shiftRegister);
        for (var h = 0; h < this.segmentSize; h++)
          f[k + h] ^= v[h];
        o(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), o(f, this._shiftRegister, 16 - this.segmentSize, k, k + this.segmentSize);
      }
      return f;
    }, d.prototype.decrypt = function(m) {
      if (m.length % this.segmentSize != 0)
        throw new Error("invalid ciphertext size (must be segmentSize bytes)");
      for (var f = s(m, !0), v, k = 0; k < f.length; k += this.segmentSize) {
        v = this._aes.encrypt(this._shiftRegister);
        for (var h = 0; h < this.segmentSize; h++)
          f[k + h] ^= v[h];
        o(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), o(m, this._shiftRegister, 16 - this.segmentSize, k, k + this.segmentSize);
      }
      return f;
    };
    var y = function(m, f) {
      if (!(this instanceof y))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Output Feedback", this.name = "ofb", !f)
        f = a(16);
      else if (f.length != 16)
        throw new Error("invalid initialation vector size (must be 16 bytes)");
      this._lastPrecipher = s(f, !0), this._lastPrecipherIndex = 16, this._aes = new J(m);
    };
    y.prototype.encrypt = function(m) {
      for (var f = s(m, !0), v = 0; v < f.length; v++)
        this._lastPrecipherIndex === 16 && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), f[v] ^= this._lastPrecipher[this._lastPrecipherIndex++];
      return f;
    }, y.prototype.decrypt = y.prototype.encrypt;
    var x = function(m) {
      if (!(this instanceof x))
        throw Error("Counter must be instanitated with `new`");
      m !== 0 && !m && (m = 1), typeof m == "number" ? (this._counter = a(16), this.setValue(m)) : this.setBytes(m);
    };
    x.prototype.setValue = function(m) {
      if (typeof m != "number" || parseInt(m) != m)
        throw new Error("invalid counter value (must be an integer)");
      for (var f = 15; f >= 0; --f)
        this._counter[f] = m % 256, m = m >> 8;
    }, x.prototype.setBytes = function(m) {
      if (m = s(m, !0), m.length != 16)
        throw new Error("invalid counter bytes size (must be 16 bytes)");
      this._counter = m;
    }, x.prototype.increment = function() {
      for (var m = 15; m >= 0; m--)
        if (this._counter[m] === 255)
          this._counter[m] = 0;
        else {
          this._counter[m]++;
          break;
        }
    };
    var S = function(m, f) {
      if (!(this instanceof S))
        throw Error("AES must be instanitated with `new`");
      this.description = "Counter", this.name = "ctr", f instanceof x || (f = new x(f)), this._counter = f, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new J(m);
    };
    S.prototype.encrypt = function(m) {
      for (var f = s(m, !0), v = 0; v < f.length; v++)
        this._remainingCounterIndex === 16 && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), f[v] ^= this._remainingCounter[this._remainingCounterIndex++];
      return f;
    }, S.prototype.decrypt = S.prototype.encrypt;
    function C(m) {
      m = s(m, !0);
      var f = 16 - m.length % 16, v = a(m.length + f);
      o(m, v);
      for (var k = m.length; k < v.length; k++)
        v[k] = f;
      return v;
    }
    function M(m) {
      if (m = s(m, !0), m.length < 16)
        throw new Error("PKCS#7 invalid length");
      var f = m[m.length - 1];
      if (f > 16)
        throw new Error("PKCS#7 padding byte out of range");
      for (var v = m.length - f, k = 0; k < f; k++)
        if (m[v + k] !== f)
          throw new Error("PKCS#7 invalid padding byte");
      var h = a(v);
      return o(m, h, 0, 0, v), h;
    }
    var P = {
      AES: J,
      Counter: x,
      ModeOfOperation: {
        ecb: ue,
        cbc: E,
        cfb: d,
        ofb: y,
        ctr: S
      },
      utils: {
        hex: l,
        utf8: u
      },
      padding: {
        pkcs7: {
          pad: C,
          strip: M
        }
      },
      _arrayTest: {
        coerceArray: s,
        createArray: a,
        copyArray: o
      }
    };
    n.exports = P;
  })();
})(E6);
const Qr = E6.exports, _6 = "json-wallets/5.7.0";
function fa(n) {
  return typeof n == "string" && n.substring(0, 2) !== "0x" && (n = "0x" + n), z(n);
}
function iu(n, e) {
  for (n = String(n); n.length < e; )
    n = "0" + n;
  return n;
}
function vy(n) {
  return typeof n == "string" ? Nt(n, ri.NFKC) : z(n);
}
function kt(n, e) {
  let t = n;
  const r = e.toLowerCase().split("/");
  for (let i = 0; i < r.length; i++) {
    let s = null;
    for (const a in t)
      if (a.toLowerCase() === r[i]) {
        s = t[a];
        break;
      }
    if (s === null)
      return null;
    t = s;
  }
  return t;
}
function $P(n) {
  const e = z(n);
  e[6] = e[6] & 15 | 64, e[8] = e[8] & 63 | 128;
  const t = K(e);
  return [
    t.substring(2, 10),
    t.substring(10, 14),
    t.substring(14, 18),
    t.substring(18, 22),
    t.substring(22, 34)
  ].join("-");
}
const UP = new O(_6);
class VP extends Os {
  isCrowdsaleAccount(e) {
    return !!(e && e._isCrowdsaleAccount);
  }
}
function xy(n, e) {
  const t = JSON.parse(n);
  e = vy(e);
  const r = De(kt(t, "ethaddr")), i = fa(kt(t, "encseed"));
  (!i || i.length % 16 !== 0) && UP.throwArgumentError("invalid encseed", "json", n);
  const s = z(by(e, e, 2e3, 32, "sha256")).slice(0, 16), a = i.slice(0, 16), o = i.slice(16), u = new Qr.ModeOfOperation.cbc(s, a), l = Qr.padding.pkcs7.strip(z(u.decrypt(o)));
  let c = "";
  for (let A = 0; A < l.length; A++)
    c += String.fromCharCode(l[A]);
  const p = Nt(c), b = Ie(p);
  return new VP({
    _isCrowdsaleAccount: !0,
    address: r,
    privateKey: b
  });
}
function uf(n) {
  let e = null;
  try {
    e = JSON.parse(n);
  } catch {
    return !1;
  }
  return e.encseed && e.ethaddr;
}
function lf(n) {
  let e = null;
  try {
    e = JSON.parse(n);
  } catch {
    return !1;
  }
  return !(!e.version || parseInt(e.version) !== e.version || parseInt(e.version) !== 3);
}
function jP(n) {
  if (uf(n))
    try {
      return De(JSON.parse(n).ethaddr);
    } catch {
      return null;
    }
  if (lf(n))
    try {
      return De(JSON.parse(n).address);
    } catch {
      return null;
    }
  return null;
}
var M6 = { exports: {} };
(function(n, e) {
  (function(t) {
    function i(w) {
      const T = new Uint32Array([
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ]);
      let _ = 1779033703, I = 3144134277, N = 1013904242, B = 2773480762, D = 1359893119, $ = 2600822924, H = 528734635, j = 1541459225;
      const Q = new Uint32Array(64);
      function oe(S) {
        let C = 0, M = S.length;
        for (; M >= 64; ) {
          let P = _, m = I, f = N, v = B, k = D, h = $, R = H, L = j, F, U, te, q, Y;
          for (U = 0; U < 16; U++)
            te = C + U * 4, Q[U] = (S[te] & 255) << 24 | (S[te + 1] & 255) << 16 | (S[te + 2] & 255) << 8 | S[te + 3] & 255;
          for (U = 16; U < 64; U++)
            F = Q[U - 2], q = (F >>> 17 | F << 32 - 17) ^ (F >>> 19 | F << 32 - 19) ^ F >>> 10, F = Q[U - 15], Y = (F >>> 7 | F << 32 - 7) ^ (F >>> 18 | F << 32 - 18) ^ F >>> 3, Q[U] = (q + Q[U - 7] | 0) + (Y + Q[U - 16] | 0) | 0;
          for (U = 0; U < 64; U++)
            q = (((k >>> 6 | k << 32 - 6) ^ (k >>> 11 | k << 32 - 11) ^ (k >>> 25 | k << 32 - 25)) + (k & h ^ ~k & R) | 0) + (L + (T[U] + Q[U] | 0) | 0) | 0, Y = ((P >>> 2 | P << 32 - 2) ^ (P >>> 13 | P << 32 - 13) ^ (P >>> 22 | P << 32 - 22)) + (P & m ^ P & f ^ m & f) | 0, L = R, R = h, h = k, k = v + q | 0, v = f, f = m, m = P, P = q + Y | 0;
          _ = _ + P | 0, I = I + m | 0, N = N + f | 0, B = B + v | 0, D = D + k | 0, $ = $ + h | 0, H = H + R | 0, j = j + L | 0, C += 64, M -= 64;
        }
      }
      oe(w);
      let J, ue = w.length % 64, E = w.length / 536870912 | 0, d = w.length << 3, y = ue < 56 ? 56 : 120, x = w.slice(w.length - ue, w.length);
      for (x.push(128), J = ue + 1; J < y; J++)
        x.push(0);
      return x.push(E >>> 24 & 255), x.push(E >>> 16 & 255), x.push(E >>> 8 & 255), x.push(E >>> 0 & 255), x.push(d >>> 24 & 255), x.push(d >>> 16 & 255), x.push(d >>> 8 & 255), x.push(d >>> 0 & 255), oe(x), [
        _ >>> 24 & 255,
        _ >>> 16 & 255,
        _ >>> 8 & 255,
        _ >>> 0 & 255,
        I >>> 24 & 255,
        I >>> 16 & 255,
        I >>> 8 & 255,
        I >>> 0 & 255,
        N >>> 24 & 255,
        N >>> 16 & 255,
        N >>> 8 & 255,
        N >>> 0 & 255,
        B >>> 24 & 255,
        B >>> 16 & 255,
        B >>> 8 & 255,
        B >>> 0 & 255,
        D >>> 24 & 255,
        D >>> 16 & 255,
        D >>> 8 & 255,
        D >>> 0 & 255,
        $ >>> 24 & 255,
        $ >>> 16 & 255,
        $ >>> 8 & 255,
        $ >>> 0 & 255,
        H >>> 24 & 255,
        H >>> 16 & 255,
        H >>> 8 & 255,
        H >>> 0 & 255,
        j >>> 24 & 255,
        j >>> 16 & 255,
        j >>> 8 & 255,
        j >>> 0 & 255
      ];
    }
    function s(w, T, _) {
      w = w.length <= 64 ? w : i(w);
      const I = 64 + T.length + 4, N = new Array(I), B = new Array(64);
      let D, $ = [];
      for (D = 0; D < 64; D++)
        N[D] = 54;
      for (D = 0; D < w.length; D++)
        N[D] ^= w[D];
      for (D = 0; D < T.length; D++)
        N[64 + D] = T[D];
      for (D = I - 4; D < I; D++)
        N[D] = 0;
      for (D = 0; D < 64; D++)
        B[D] = 92;
      for (D = 0; D < w.length; D++)
        B[D] ^= w[D];
      function H() {
        for (let j = I - 1; j >= I - 4; j--) {
          if (N[j]++, N[j] <= 255)
            return;
          N[j] = 0;
        }
      }
      for (; _ >= 32; )
        H(), $ = $.concat(i(B.concat(i(N)))), _ -= 32;
      return _ > 0 && (H(), $ = $.concat(i(B.concat(i(N))).slice(0, _))), $;
    }
    function a(w, T, _, I, N) {
      let B;
      for (c(w, (2 * _ - 1) * 16, N, 0, 16), B = 0; B < 2 * _; B++)
        l(w, B * 16, N, 16), u(N, I), c(N, 0, w, T + B * 16, 16);
      for (B = 0; B < _; B++)
        c(w, T + B * 2 * 16, w, B * 16, 16);
      for (B = 0; B < _; B++)
        c(w, T + (B * 2 + 1) * 16, w, (B + _) * 16, 16);
    }
    function o(w, T) {
      return w << T | w >>> 32 - T;
    }
    function u(w, T) {
      c(w, 0, T, 0, 16);
      for (let _ = 8; _ > 0; _ -= 2)
        T[4] ^= o(T[0] + T[12], 7), T[8] ^= o(T[4] + T[0], 9), T[12] ^= o(T[8] + T[4], 13), T[0] ^= o(T[12] + T[8], 18), T[9] ^= o(T[5] + T[1], 7), T[13] ^= o(T[9] + T[5], 9), T[1] ^= o(T[13] + T[9], 13), T[5] ^= o(T[1] + T[13], 18), T[14] ^= o(T[10] + T[6], 7), T[2] ^= o(T[14] + T[10], 9), T[6] ^= o(T[2] + T[14], 13), T[10] ^= o(T[6] + T[2], 18), T[3] ^= o(T[15] + T[11], 7), T[7] ^= o(T[3] + T[15], 9), T[11] ^= o(T[7] + T[3], 13), T[15] ^= o(T[11] + T[7], 18), T[1] ^= o(T[0] + T[3], 7), T[2] ^= o(T[1] + T[0], 9), T[3] ^= o(T[2] + T[1], 13), T[0] ^= o(T[3] + T[2], 18), T[6] ^= o(T[5] + T[4], 7), T[7] ^= o(T[6] + T[5], 9), T[4] ^= o(T[7] + T[6], 13), T[5] ^= o(T[4] + T[7], 18), T[11] ^= o(T[10] + T[9], 7), T[8] ^= o(T[11] + T[10], 9), T[9] ^= o(T[8] + T[11], 13), T[10] ^= o(T[9] + T[8], 18), T[12] ^= o(T[15] + T[14], 7), T[13] ^= o(T[12] + T[15], 9), T[14] ^= o(T[13] + T[12], 13), T[15] ^= o(T[14] + T[13], 18);
      for (let _ = 0; _ < 16; ++_)
        w[_] += T[_];
    }
    function l(w, T, _, I) {
      for (let N = 0; N < I; N++)
        _[N] ^= w[T + N];
    }
    function c(w, T, _, I, N) {
      for (; N--; )
        _[I++] = w[T++];
    }
    function p(w) {
      if (!w || typeof w.length != "number")
        return !1;
      for (let T = 0; T < w.length; T++) {
        const _ = w[T];
        if (typeof _ != "number" || _ % 1 || _ < 0 || _ >= 256)
          return !1;
      }
      return !0;
    }
    function b(w, T) {
      if (typeof w != "number" || w % 1)
        throw new Error("invalid " + T);
      return w;
    }
    function A(w, T, _, I, N, B, D) {
      if (_ = b(_, "N"), I = b(I, "r"), N = b(N, "p"), B = b(B, "dkLen"), _ === 0 || (_ & _ - 1) !== 0)
        throw new Error("N must be power of 2");
      if (_ > 2147483647 / 128 / I)
        throw new Error("N too large");
      if (I > 2147483647 / 128 / N)
        throw new Error("r too large");
      if (!p(w))
        throw new Error("password must be an array or buffer");
      if (w = Array.prototype.slice.call(w), !p(T))
        throw new Error("salt must be an array or buffer");
      T = Array.prototype.slice.call(T);
      let $ = s(w, T, N * 128 * I);
      const H = new Uint32Array(N * 32 * I);
      for (let k = 0; k < H.length; k++) {
        const h = k * 4;
        H[k] = ($[h + 3] & 255) << 24 | ($[h + 2] & 255) << 16 | ($[h + 1] & 255) << 8 | ($[h + 0] & 255) << 0;
      }
      const j = new Uint32Array(64 * I), Q = new Uint32Array(32 * I * _), oe = 32 * I, J = new Uint32Array(16), ue = new Uint32Array(16), E = N * _ * 2;
      let d = 0, y = null, x = !1, S = 0, C = 0, M, P;
      const m = D ? parseInt(1e3 / I) : 4294967295, f = typeof setImmediate < "u" ? setImmediate : setTimeout, v = function() {
        if (x)
          return D(new Error("cancelled"), d / E);
        let k;
        switch (S) {
          case 0:
            P = C * 32 * I, c(H, P, j, 0, oe), S = 1, M = 0;
          case 1:
            k = _ - M, k > m && (k = m);
            for (let R = 0; R < k; R++)
              c(j, 0, Q, (M + R) * oe, oe), a(j, oe, I, J, ue);
            if (M += k, d += k, D) {
              const R = parseInt(1e3 * d / E);
              if (R !== y) {
                if (x = D(null, d / E), x)
                  break;
                y = R;
              }
            }
            if (M < _)
              break;
            M = 0, S = 2;
          case 2:
            k = _ - M, k > m && (k = m);
            for (let R = 0; R < k; R++) {
              const L = (2 * I - 1) * 16, F = j[L] & _ - 1;
              l(Q, F * oe, j, oe), a(j, oe, I, J, ue);
            }
            if (M += k, d += k, D) {
              const R = parseInt(1e3 * d / E);
              if (R !== y) {
                if (x = D(null, d / E), x)
                  break;
                y = R;
              }
            }
            if (M < _)
              break;
            if (c(j, 0, H, P, oe), C++, C < N) {
              S = 0;
              break;
            }
            $ = [];
            for (let R = 0; R < H.length; R++)
              $.push(H[R] >> 0 & 255), $.push(H[R] >> 8 & 255), $.push(H[R] >> 16 & 255), $.push(H[R] >> 24 & 255);
            const h = s(w, $, B);
            return D && D(null, 1, h), h;
        }
        D && f(v);
      };
      if (!D)
        for (; ; ) {
          const k = v();
          if (k != null)
            return k;
        }
      v();
    }
    const g = {
      scrypt: function(w, T, _, I, N, B, D) {
        return new Promise(function($, H) {
          let j = 0;
          D && D(0), A(w, T, _, I, N, B, function(Q, oe, J) {
            if (Q)
              H(Q);
            else if (J)
              D && j !== 1 && D(1), $(new Uint8Array(J));
            else if (D && oe !== j)
              return j = oe, D(oe);
          });
        });
      },
      syncScrypt: function(w, T, _, I, N, B) {
        return new Uint8Array(A(w, T, _, I, N, B));
      }
    };
    n.exports = g;
  })();
})(M6);
const wy = M6.exports, GP = "random/5.7.0", Ch = new O(GP);
function WP() {
  if (typeof self < "u")
    return self;
  if (typeof window < "u")
    return window;
  if (typeof ga < "u")
    return ga;
  throw new Error("unable to locate global object");
}
const D2 = WP();
let Pc = D2.crypto || D2.msCrypto;
(!Pc || !Pc.getRandomValues) && (Ch.warn("WARNING: Missing strong random number source"), Pc = {
  getRandomValues: function(n) {
    return Ch.throwError("no secure random source avaialble", O.errors.UNSUPPORTED_OPERATION, {
      operation: "crypto.getRandomValues"
    });
  }
});
function ao(n) {
  (n <= 0 || n > 1024 || n % 1 || n != n) && Ch.throwArgumentError("invalid length", "length", n);
  const e = new Uint8Array(n);
  return Pc.getRandomValues(e), z(e);
}
function zP(n) {
  n = n.slice();
  for (let e = n.length - 1; e > 0; e--) {
    const t = Math.floor(Math.random() * (e + 1)), r = n[e];
    n[e] = n[t], n[t] = r;
  }
  return n;
}
const HP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  randomBytes: ao,
  shuffled: zP
}, Symbol.toStringTag, { value: "Module" }));
var KP = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const Sh = new O(_6);
function B2(n) {
  return n != null && n.mnemonic && n.mnemonic.phrase;
}
class qP extends Os {
  isKeystoreAccount(e) {
    return !!(e && e._isKeystoreAccount);
  }
}
function QP(n, e, t) {
  if (kt(n, "crypto/cipher") === "aes-128-ctr") {
    const i = fa(kt(n, "crypto/cipherparams/iv")), s = new Qr.Counter(i), a = new Qr.ModeOfOperation.ctr(e, s);
    return z(a.decrypt(t));
  }
  return null;
}
function R6(n, e) {
  const t = fa(kt(n, "crypto/ciphertext"));
  if (K(Ie(Ve([e.slice(16, 32), t]))).substring(2) !== kt(n, "crypto/mac").toLowerCase())
    throw new Error("invalid password");
  const i = QP(n, e.slice(0, 16), t);
  i || Sh.throwError("unsupported cipher", O.errors.UNSUPPORTED_OPERATION, {
    operation: "decrypt"
  });
  const s = e.slice(32, 64), a = gs(i);
  if (n.address) {
    let u = n.address.toLowerCase();
    if (u.substring(0, 2) !== "0x" && (u = "0x" + u), De(u) !== a)
      throw new Error("address mismatch");
  }
  const o = {
    _isKeystoreAccount: !0,
    address: a,
    privateKey: K(i)
  };
  if (kt(n, "x-ethers/version") === "0.1") {
    const u = fa(kt(n, "x-ethers/mnemonicCiphertext")), l = fa(kt(n, "x-ethers/mnemonicCounter")), c = new Qr.Counter(l), p = new Qr.ModeOfOperation.ctr(s, c), b = kt(n, "x-ethers/path") || Ro, A = kt(n, "x-ethers/locale") || "en", g = z(p.decrypt(u));
    try {
      const w = of(g, A), T = Qn.fromMnemonic(w, null, A).derivePath(b);
      if (T.privateKey != o.privateKey)
        throw new Error("mnemonic mismatch");
      o.mnemonic = T.mnemonic;
    } catch (w) {
      if (w.code !== O.errors.INVALID_ARGUMENT || w.argument !== "wordlist")
        throw w;
    }
  }
  return new qP(o);
}
function P6(n, e, t, r, i) {
  return z(by(n, e, t, r, i));
}
function JP(n, e, t, r, i) {
  return Promise.resolve(P6(n, e, t, r, i));
}
function O6(n, e, t, r, i) {
  const s = vy(e), a = kt(n, "crypto/kdf");
  if (a && typeof a == "string") {
    const o = function(u, l) {
      return Sh.throwArgumentError("invalid key-derivation function parameters", u, l);
    };
    if (a.toLowerCase() === "scrypt") {
      const u = fa(kt(n, "crypto/kdfparams/salt")), l = parseInt(kt(n, "crypto/kdfparams/n")), c = parseInt(kt(n, "crypto/kdfparams/r")), p = parseInt(kt(n, "crypto/kdfparams/p"));
      (!l || !c || !p) && o("kdf", a), (l & l - 1) !== 0 && o("N", l);
      const b = parseInt(kt(n, "crypto/kdfparams/dklen"));
      return b !== 32 && o("dklen", b), r(s, u, l, c, p, 64, i);
    } else if (a.toLowerCase() === "pbkdf2") {
      const u = fa(kt(n, "crypto/kdfparams/salt"));
      let l = null;
      const c = kt(n, "crypto/kdfparams/prf");
      c === "hmac-sha256" ? l = "sha256" : c === "hmac-sha512" ? l = "sha512" : o("prf", c);
      const p = parseInt(kt(n, "crypto/kdfparams/c")), b = parseInt(kt(n, "crypto/kdfparams/dklen"));
      return b !== 32 && o("dklen", b), t(s, u, p, b, l);
    }
  }
  return Sh.throwArgumentError("unsupported key-derivation function", "kdf", a);
}
function I6(n, e) {
  const t = JSON.parse(n), r = O6(t, e, P6, wy.syncScrypt);
  return R6(t, r);
}
function k6(n, e, t) {
  return KP(this, void 0, void 0, function* () {
    const r = JSON.parse(n), i = yield O6(r, e, JP, wy.scrypt, t);
    return R6(r, i);
  });
}
function D6(n, e, t, r) {
  try {
    if (De(n.address) !== gs(n.privateKey))
      throw new Error("address/privateKey mismatch");
    if (B2(n)) {
      const T = n.mnemonic;
      if (Qn.fromMnemonic(T.phrase, null, T.locale).derivePath(T.path || Ro).privateKey != n.privateKey)
        throw new Error("mnemonic mismatch");
    }
  } catch (T) {
    return Promise.reject(T);
  }
  typeof t == "function" && !r && (r = t, t = {}), t || (t = {});
  const i = z(n.privateKey), s = vy(e);
  let a = null, o = null, u = null;
  if (B2(n)) {
    const T = n.mnemonic;
    a = z(af(T.phrase, T.locale || "en")), o = T.path || Ro, u = T.locale || "en";
  }
  let l = t.client;
  l || (l = "ethers.js");
  let c = null;
  t.salt ? c = z(t.salt) : c = ao(32);
  let p = null;
  if (t.iv) {
    if (p = z(t.iv), p.length !== 16)
      throw new Error("invalid iv");
  } else
    p = ao(16);
  let b = null;
  if (t.uuid) {
    if (b = z(t.uuid), b.length !== 16)
      throw new Error("invalid uuid");
  } else
    b = ao(16);
  let A = 1 << 17, g = 8, w = 1;
  return t.scrypt && (t.scrypt.N && (A = t.scrypt.N), t.scrypt.r && (g = t.scrypt.r), t.scrypt.p && (w = t.scrypt.p)), wy.scrypt(s, c, A, g, w, 64, r).then((T) => {
    T = z(T);
    const _ = T.slice(0, 16), I = T.slice(16, 32), N = T.slice(32, 64), B = new Qr.Counter(p), D = new Qr.ModeOfOperation.ctr(_, B), $ = z(D.encrypt(i)), H = Ie(Ve([I, $])), j = {
      address: n.address.substring(2).toLowerCase(),
      id: $P(b),
      version: 3,
      crypto: {
        cipher: "aes-128-ctr",
        cipherparams: {
          iv: K(p).substring(2)
        },
        ciphertext: K($).substring(2),
        kdf: "scrypt",
        kdfparams: {
          salt: K(c).substring(2),
          n: A,
          dklen: 32,
          p: w,
          r: g
        },
        mac: H.substring(2)
      }
    };
    if (a) {
      const Q = ao(16), oe = new Qr.Counter(Q), J = new Qr.ModeOfOperation.ctr(N, oe), ue = z(J.encrypt(a)), E = new Date(), d = E.getUTCFullYear() + "-" + iu(E.getUTCMonth() + 1, 2) + "-" + iu(E.getUTCDate(), 2) + "T" + iu(E.getUTCHours(), 2) + "-" + iu(E.getUTCMinutes(), 2) + "-" + iu(E.getUTCSeconds(), 2) + ".0Z";
      j["x-ethers"] = {
        client: l,
        gethFilename: "UTC--" + d + "--" + j.address,
        mnemonicCounter: K(Q).substring(2),
        mnemonicCiphertext: K(ue).substring(2),
        path: o,
        locale: u,
        version: "0.1"
      };
    }
    return JSON.stringify(j);
  });
}
function B6(n, e, t) {
  if (uf(n)) {
    t && t(0);
    const r = xy(n, e);
    return t && t(1), Promise.resolve(r);
  }
  return lf(n) ? k6(n, e, t) : Promise.reject(new Error("invalid JSON wallet"));
}
function N6(n, e) {
  if (uf(n))
    return xy(n, e);
  if (lf(n))
    return I6(n, e);
  throw new Error("invalid JSON wallet");
}
const YP = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decryptCrowdsale: xy,
  decryptKeystore: k6,
  decryptKeystoreSync: I6,
  encryptKeystore: D6,
  isCrowdsaleWallet: uf,
  isKeystoreWallet: lf,
  getJsonWalletAddress: jP,
  decryptJsonWallet: B6,
  decryptJsonWalletSync: N6
}, Symbol.toStringTag, { value: "Module" })), XP = /* @__PURE__ */ Ot(YP), ZP = /* @__PURE__ */ Ot(e7), e9 = /* @__PURE__ */ Ot(l8), N2 = /* @__PURE__ */ Ot(EP), t9 = "solidity/5.7.0", n9 = new RegExp("^bytes([0-9]+)$"), r9 = new RegExp("^(u?int)([0-9]*)$"), i9 = new RegExp("^(.*)\\[([0-9]*)\\]$"), s9 = "0000000000000000000000000000000000000000000000000000000000000000", no = new O(t9);
function F6(n, e, t) {
  switch (n) {
    case "address":
      return t ? Su(e, 32) : z(e);
    case "string":
      return Nt(e);
    case "bytes":
      return z(e);
    case "bool":
      return e = e ? "0x01" : "0x00", t ? Su(e, 32) : z(e);
  }
  let r = n.match(r9);
  if (r) {
    let i = parseInt(r[2] || "256");
    return (r[2] && String(i) !== r[2] || i % 8 !== 0 || i === 0 || i > 256) && no.throwArgumentError("invalid number type", "type", n), t && (i = 256), e = W.from(e).toTwos(i), Su(e, i / 8);
  }
  if (r = n.match(n9), r) {
    const i = parseInt(r[1]);
    return (String(i) !== r[1] || i === 0 || i > 32) && no.throwArgumentError("invalid bytes type", "type", n), z(e).byteLength !== i && no.throwArgumentError(`invalid value for ${n}`, "value", e), t ? z((e + s9).substring(0, 66)) : e;
  }
  if (r = n.match(i9), r && Array.isArray(e)) {
    const i = r[1];
    parseInt(r[2] || String(e.length)) != e.length && no.throwArgumentError(`invalid array length for ${n}`, "value", e);
    const a = [];
    return e.forEach(function(o) {
      a.push(F6(i, o, !0));
    }), Ve(a);
  }
  return no.throwArgumentError("invalid type", "type", n);
}
function Ty(n, e) {
  n.length != e.length && no.throwArgumentError("wrong number of values; expected ${ types.length }", "values", e);
  const t = [];
  return n.forEach(function(r, i) {
    t.push(F6(r, e[i]));
  }), K(Ve(t));
}
function a9(n, e) {
  return Ie(Ty(n, e));
}
function o9(n, e) {
  return Ni(Ty(n, e));
}
const u9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  pack: Ty,
  keccak256: a9,
  sha256: o9
}, Symbol.toStringTag, { value: "Module" })), l9 = /* @__PURE__ */ Ot(u9), c9 = /* @__PURE__ */ Ot(HP), d9 = /* @__PURE__ */ Ot(x8), f9 = /* @__PURE__ */ Ot(n7), p9 = /* @__PURE__ */ Ot(gR), F2 = /* @__PURE__ */ Ot(V7), h9 = /* @__PURE__ */ Ot(ER), y9 = "units/5.7.0", L6 = new O(y9), $6 = [
  "wei",
  "kwei",
  "mwei",
  "gwei",
  "szabo",
  "finney",
  "ether"
];
function m9(n) {
  const e = String(n).split(".");
  (e.length > 2 || !e[0].match(/^-?[0-9]*$/) || e[1] && !e[1].match(/^[0-9]*$/) || n === "." || n === "-.") && L6.throwArgumentError("invalid value", "value", n);
  let t = e[0], r = "";
  for (t.substring(0, 1) === "-" && (r = "-", t = t.substring(1)); t.substring(0, 1) === "0"; )
    t = t.substring(1);
  t === "" && (t = "0");
  let i = "";
  for (e.length === 2 && (i = "." + (e[1] || "0")); i.length > 2 && i[i.length - 1] === "0"; )
    i = i.substring(0, i.length - 1);
  const s = [];
  for (; t.length; )
    if (t.length <= 3) {
      s.unshift(t);
      break;
    } else {
      const a = t.length - 3;
      s.unshift(t.substring(a)), t = t.substring(0, a);
    }
  return r + s.join(",") + i;
}
function U6(n, e) {
  if (typeof e == "string") {
    const t = $6.indexOf(e);
    t !== -1 && (e = 3 * t);
  }
  return Ac(n, e ?? 18);
}
function V6(n, e) {
  if (typeof n != "string" && L6.throwArgumentError("value must be a string", "value", n), typeof e == "string") {
    const t = $6.indexOf(e);
    t !== -1 && (e = 3 * t);
  }
  return Vr(n, e ?? 18);
}
function b9(n) {
  return U6(n, 18);
}
function g9(n) {
  return V6(n, 18);
}
const v9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  commify: m9,
  formatUnits: U6,
  parseUnits: V6,
  formatEther: b9,
  parseEther: g9
}, Symbol.toStringTag, { value: "Module" })), x9 = /* @__PURE__ */ Ot(v9), w9 = "wallet/5.7.0";
var L2 = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const qa = new O(w9);
function T9(n) {
  return n != null && Ae(n.privateKey, 32) && n.address != null;
}
function A9(n) {
  const e = n.mnemonic;
  return e && e.phrase;
}
class aa extends $a {
  constructor(e, t) {
    if (super(), T9(e)) {
      const r = new da(e.privateKey);
      if (V(this, "_signingKey", () => r), V(this, "address", gs(this.publicKey)), this.address !== De(e.address) && qa.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]"), A9(e)) {
        const i = e.mnemonic;
        V(this, "_mnemonic", () => ({
          phrase: i.phrase,
          path: i.path || Ro,
          locale: i.locale || "en"
        }));
        const s = this.mnemonic, a = Qn.fromMnemonic(s.phrase, null, s.locale).derivePath(s.path);
        gs(a.privateKey) !== this.address && qa.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
      } else
        V(this, "_mnemonic", () => null);
    } else {
      if (da.isSigningKey(e))
        e.curve !== "secp256k1" && qa.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]"), V(this, "_signingKey", () => e);
      else {
        typeof e == "string" && e.match(/^[0-9a-f]*$/i) && e.length === 64 && (e = "0x" + e);
        const r = new da(e);
        V(this, "_signingKey", () => r);
      }
      V(this, "_mnemonic", () => null), V(this, "address", gs(this.publicKey));
    }
    t && !kl.isProvider(t) && qa.throwArgumentError("invalid provider", "provider", t), V(this, "provider", t || null);
  }
  get mnemonic() {
    return this._mnemonic();
  }
  get privateKey() {
    return this._signingKey().privateKey;
  }
  get publicKey() {
    return this._signingKey().publicKey;
  }
  getAddress() {
    return Promise.resolve(this.address);
  }
  connect(e) {
    return new aa(this, e);
  }
  signTransaction(e) {
    return Rt(e).then((t) => {
      t.from != null && (De(t.from) !== this.address && qa.throwArgumentError("transaction from address mismatch", "transaction.from", e.from), delete t.from);
      const r = this._signingKey().signDigest(Ie(Th(t)));
      return Th(t, r);
    });
  }
  signMessage(e) {
    return L2(this, void 0, void 0, function* () {
      return fh(this._signingKey().signDigest(ry(e)));
    });
  }
  _signTypedData(e, t, r) {
    return L2(this, void 0, void 0, function* () {
      const i = yield en.resolveNames(e, t, r, (s) => (this.provider == null && qa.throwError("cannot resolve ENS names without a provider", O.errors.UNSUPPORTED_OPERATION, {
        operation: "resolveName",
        value: s
      }), this.provider.resolveName(s)));
      return fh(this._signingKey().signDigest(en.hash(i.domain, t, i.value)));
    });
  }
  encrypt(e, t, r) {
    if (typeof t == "function" && !r && (r = t, t = {}), r && typeof r != "function")
      throw new Error("invalid callback");
    return t || (t = {}), D6(this, e, t, r);
  }
  static createRandom(e) {
    let t = ao(16);
    e || (e = {}), e.extraEntropy && (t = z(Dt(Ie(Ve([t, e.extraEntropy])), 0, 16)));
    const r = of(t, e.locale);
    return aa.fromMnemonic(r, e.path, e.locale);
  }
  static fromEncryptedJson(e, t, r) {
    return B6(e, t, r).then((i) => new aa(i));
  }
  static fromEncryptedJsonSync(e, t) {
    return new aa(N6(e, t));
  }
  static fromMnemonic(e, t, r) {
    return t || (t = Ro), new aa(Qn.fromMnemonic(e, null, r).derivePath(t));
  }
}
function C9(n, e) {
  return Ho(ry(n), e);
}
function S9(n, e, t, r) {
  return Ho(en.hash(n, e, t), r);
}
const E9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Wallet: aa,
  verifyMessage: C9,
  verifyTypedData: S9
}, Symbol.toStringTag, { value: "Module" })), _9 = /* @__PURE__ */ Ot(E9), M9 = "web/5.7.1";
var R9 = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
function P9(n, e) {
  return R9(this, void 0, void 0, function* () {
    e == null && (e = {});
    const t = {
      method: e.method || "GET",
      headers: e.headers || {},
      body: e.body || void 0
    };
    if (e.skipFetchSetup !== !0 && (t.mode = "cors", t.cache = "no-cache", t.credentials = "same-origin", t.redirect = "follow", t.referrer = "client"), e.fetchOptions != null) {
      const a = e.fetchOptions;
      a.mode && (t.mode = a.mode), a.cache && (t.cache = a.cache), a.credentials && (t.credentials = a.credentials), a.redirect && (t.redirect = a.redirect), a.referrer && (t.referrer = a.referrer);
    }
    const r = yield fetch(n, t), i = yield r.arrayBuffer(), s = {};
    return r.headers.forEach ? r.headers.forEach((a, o) => {
      s[o.toLowerCase()] = a;
    }) : r.headers.keys().forEach((a) => {
      s[a.toLowerCase()] = r.headers.get(a);
    }), {
      headers: s,
      statusCode: r.status,
      statusMessage: r.statusText,
      body: z(new Uint8Array(i))
    };
  });
}
var O9 = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const Sr = new O(M9);
function $2(n) {
  return new Promise((e) => {
    setTimeout(e, n);
  });
}
function ns(n, e) {
  if (n == null)
    return null;
  if (typeof n == "string")
    return n;
  if (Pl(n)) {
    if (e && (e.split("/")[0] === "text" || e.split(";")[0].trim() === "application/json"))
      try {
        return Is(n);
      } catch {
      }
    return K(n);
  }
  return n;
}
function I9(n) {
  return Nt(n.replace(/%([0-9a-f][0-9a-f])/gi, (e, t) => String.fromCharCode(parseInt(t, 16))));
}
function j6(n, e, t) {
  const r = typeof n == "object" && n.throttleLimit != null ? n.throttleLimit : 12;
  Sr.assertArgument(r > 0 && r % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", r);
  const i = typeof n == "object" ? n.throttleCallback : null, s = typeof n == "object" && typeof n.throttleSlotInterval == "number" ? n.throttleSlotInterval : 100;
  Sr.assertArgument(s > 0 && s % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", s);
  const a = typeof n == "object" ? !!n.errorPassThrough : !1, o = {};
  let u = null;
  const l = {
    method: "GET"
  };
  let c = !1, p = 2 * 60 * 1e3;
  if (typeof n == "string")
    u = n;
  else if (typeof n == "object") {
    if ((n == null || n.url == null) && Sr.throwArgumentError("missing URL", "connection.url", n), u = n.url, typeof n.timeout == "number" && n.timeout > 0 && (p = n.timeout), n.headers)
      for (const _ in n.headers)
        o[_.toLowerCase()] = { key: _, value: String(n.headers[_]) }, ["if-none-match", "if-modified-since"].indexOf(_.toLowerCase()) >= 0 && (c = !0);
    if (l.allowGzip = !!n.allowGzip, n.user != null && n.password != null) {
      u.substring(0, 6) !== "https:" && n.allowInsecureAuthentication !== !0 && Sr.throwError("basic authentication requires a secure https url", O.errors.INVALID_ARGUMENT, { argument: "url", url: u, user: n.user, password: "[REDACTED]" });
      const _ = n.user + ":" + n.password;
      o.authorization = {
        key: "Authorization",
        value: "Basic " + ny(Nt(_))
      };
    }
    n.skipFetchSetup != null && (l.skipFetchSetup = !!n.skipFetchSetup), n.fetchOptions != null && (l.fetchOptions = $t(n.fetchOptions));
  }
  const b = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"), A = u ? u.match(b) : null;
  if (A)
    try {
      const _ = {
        statusCode: 200,
        statusMessage: "OK",
        headers: { "content-type": A[1] || "text/plain" },
        body: A[2] ? ty(A[3]) : I9(A[3])
      };
      let I = _.body;
      return t && (I = t(_.body, _)), Promise.resolve(I);
    } catch (_) {
      Sr.throwError("processing response error", O.errors.SERVER_ERROR, {
        body: ns(A[1], A[2]),
        error: _,
        requestBody: null,
        requestMethod: "GET",
        url: u
      });
    }
  e && (l.method = "POST", l.body = e, o["content-type"] == null && (o["content-type"] = { key: "Content-Type", value: "application/octet-stream" }), o["content-length"] == null && (o["content-length"] = { key: "Content-Length", value: String(e.length) }));
  const g = {};
  Object.keys(o).forEach((_) => {
    const I = o[_];
    g[I.key] = I.value;
  }), l.headers = g;
  const w = function() {
    let _ = null;
    return { promise: new Promise(function(B, D) {
      p && (_ = setTimeout(() => {
        _ != null && (_ = null, D(Sr.makeError("timeout", O.errors.TIMEOUT, {
          requestBody: ns(l.body, g["content-type"]),
          requestMethod: l.method,
          timeout: p,
          url: u
        })));
      }, p));
    }), cancel: function() {
      _ != null && (clearTimeout(_), _ = null);
    } };
  }(), T = function() {
    return O9(this, void 0, void 0, function* () {
      for (let _ = 0; _ < r; _++) {
        let I = null;
        try {
          if (I = yield P9(u, l), _ < r) {
            if (I.statusCode === 301 || I.statusCode === 302) {
              const B = I.headers.location || "";
              if (l.method === "GET" && B.match(/^https:/)) {
                u = I.headers.location;
                continue;
              }
            } else if (I.statusCode === 429) {
              let B = !0;
              if (i && (B = yield i(_, u)), B) {
                let D = 0;
                const $ = I.headers["retry-after"];
                typeof $ == "string" && $.match(/^[1-9][0-9]*$/) ? D = parseInt($) * 1e3 : D = s * parseInt(String(Math.random() * Math.pow(2, _))), yield $2(D);
                continue;
              }
            }
          }
        } catch (B) {
          I = B.response, I == null && (w.cancel(), Sr.throwError("missing response", O.errors.SERVER_ERROR, {
            requestBody: ns(l.body, g["content-type"]),
            requestMethod: l.method,
            serverError: B,
            url: u
          }));
        }
        let N = I.body;
        if (c && I.statusCode === 304 ? N = null : !a && (I.statusCode < 200 || I.statusCode >= 300) && (w.cancel(), Sr.throwError("bad response", O.errors.SERVER_ERROR, {
          status: I.statusCode,
          headers: I.headers,
          body: ns(N, I.headers ? I.headers["content-type"] : null),
          requestBody: ns(l.body, g["content-type"]),
          requestMethod: l.method,
          url: u
        })), t)
          try {
            const B = yield t(N, I);
            return w.cancel(), B;
          } catch (B) {
            if (B.throttleRetry && _ < r) {
              let D = !0;
              if (i && (D = yield i(_, u)), D) {
                const $ = s * parseInt(String(Math.random() * Math.pow(2, _)));
                yield $2($);
                continue;
              }
            }
            w.cancel(), Sr.throwError("processing response error", O.errors.SERVER_ERROR, {
              body: ns(N, I.headers ? I.headers["content-type"] : null),
              error: B,
              requestBody: ns(l.body, g["content-type"]),
              requestMethod: l.method,
              url: u
            });
          }
        return w.cancel(), N;
      }
      return Sr.throwError("failed response", O.errors.SERVER_ERROR, {
        requestBody: ns(l.body, g["content-type"]),
        requestMethod: l.method,
        url: u
      });
    });
  }();
  return Promise.race([w.promise, T]);
}
function cf(n, e, t) {
  let r = (s, a) => {
    let o = null;
    if (s != null)
      try {
        o = JSON.parse(Is(s));
      } catch (u) {
        Sr.throwError("invalid JSON", O.errors.SERVER_ERROR, {
          body: s,
          error: u
        });
      }
    return t && (o = t(o, a)), o;
  }, i = null;
  if (e != null) {
    i = Nt(e);
    const s = typeof n == "string" ? { url: n } : $t(n);
    s.headers ? Object.keys(s.headers).filter((o) => o.toLowerCase() === "content-type").length !== 0 || (s.headers = $t(s.headers), s.headers["content-type"] = "application/json") : s.headers = { "content-type": "application/json" }, n = s;
  }
  return j6(n, i, r);
}
function oo(n, e) {
  return e || (e = {}), e = $t(e), e.floor == null && (e.floor = 0), e.ceiling == null && (e.ceiling = 1e4), e.interval == null && (e.interval = 250), new Promise(function(t, r) {
    let i = null, s = !1;
    const a = () => s ? !1 : (s = !0, i && clearTimeout(i), !0);
    e.timeout && (i = setTimeout(() => {
      a() && r(new Error("timeout"));
    }, e.timeout));
    const o = e.retryLimit;
    let u = 0;
    function l() {
      return n().then(function(c) {
        if (c !== void 0)
          a() && t(c);
        else if (e.oncePoll)
          e.oncePoll.once("poll", l);
        else if (e.onceBlock)
          e.onceBlock.once("block", l);
        else if (!s) {
          if (u++, u > o) {
            a() && r(new Error("retry limit reached"));
            return;
          }
          let p = e.interval * parseInt(String(Math.random() * Math.pow(2, u)));
          p < e.floor && (p = e.floor), p > e.ceiling && (p = e.ceiling), setTimeout(l, p);
        }
        return null;
      }, function(c) {
        a() && r(c);
      });
    }
    l();
  });
}
const k9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  _fetchData: j6,
  fetchJson: cf,
  poll: oo
}, Symbol.toStringTag, { value: "Module" })), D9 = /* @__PURE__ */ Ot(k9);
(function(n) {
  var e = os && os.__createBinding || (Object.create ? function(J, ue, E, d) {
    d === void 0 && (d = E), Object.defineProperty(J, d, { enumerable: !0, get: function() {
      return ue[E];
    } });
  } : function(J, ue, E, d) {
    d === void 0 && (d = E), J[d] = ue[E];
  }), t = os && os.__setModuleDefault || (Object.create ? function(J, ue) {
    Object.defineProperty(J, "default", { enumerable: !0, value: ue });
  } : function(J, ue) {
    J.default = ue;
  }), r = os && os.__importStar || function(J) {
    if (J && J.__esModule)
      return J;
    var ue = {};
    if (J != null)
      for (var E in J)
        E !== "default" && Object.prototype.hasOwnProperty.call(J, E) && e(ue, J, E);
    return t(ue, J), ue;
  };
  Object.defineProperty(n, "__esModule", { value: !0 }), n.formatBytes32String = n.Utf8ErrorFuncs = n.toUtf8String = n.toUtf8CodePoints = n.toUtf8Bytes = n._toEscapedUtf8String = n.nameprep = n.hexDataSlice = n.hexDataLength = n.hexZeroPad = n.hexValue = n.hexStripZeros = n.hexConcat = n.isHexString = n.hexlify = n.base64 = n.base58 = n.TransactionDescription = n.LogDescription = n.Interface = n.SigningKey = n.HDNode = n.defaultPath = n.isBytesLike = n.isBytes = n.zeroPad = n.stripZeros = n.concat = n.arrayify = n.shallowCopy = n.resolveProperties = n.getStatic = n.defineReadOnly = n.deepCopy = n.checkProperties = n.poll = n.fetchJson = n._fetchData = n.RLP = n.Logger = n.checkResultErrors = n.FormatTypes = n.ParamType = n.FunctionFragment = n.EventFragment = n.ErrorFragment = n.ConstructorFragment = n.Fragment = n.defaultAbiCoder = n.AbiCoder = void 0, n.Indexed = n.Utf8ErrorReason = n.UnicodeNormalizationForm = n.SupportedAlgorithm = n.mnemonicToSeed = n.isValidMnemonic = n.entropyToMnemonic = n.mnemonicToEntropy = n.getAccountPath = n.verifyTypedData = n.verifyMessage = n.recoverPublicKey = n.computePublicKey = n.recoverAddress = n.computeAddress = n.getJsonWalletAddress = n.TransactionTypes = n.serializeTransaction = n.parseTransaction = n.accessListify = n.joinSignature = n.splitSignature = n.soliditySha256 = n.solidityKeccak256 = n.solidityPack = n.shuffled = n.randomBytes = n.sha512 = n.sha256 = n.ripemd160 = n.keccak256 = n.computeHmac = n.commify = n.parseUnits = n.formatUnits = n.parseEther = n.formatEther = n.isAddress = n.getCreate2Address = n.getContractAddress = n.getIcapAddress = n.getAddress = n._TypedDataEncoder = n.id = n.isValidName = n.namehash = n.hashMessage = n.dnsEncode = n.parseBytes32String = void 0;
  var i = yP;
  Object.defineProperty(n, "AbiCoder", { enumerable: !0, get: function() {
    return i.AbiCoder;
  } }), Object.defineProperty(n, "checkResultErrors", { enumerable: !0, get: function() {
    return i.checkResultErrors;
  } }), Object.defineProperty(n, "ConstructorFragment", { enumerable: !0, get: function() {
    return i.ConstructorFragment;
  } }), Object.defineProperty(n, "defaultAbiCoder", { enumerable: !0, get: function() {
    return i.defaultAbiCoder;
  } }), Object.defineProperty(n, "ErrorFragment", { enumerable: !0, get: function() {
    return i.ErrorFragment;
  } }), Object.defineProperty(n, "EventFragment", { enumerable: !0, get: function() {
    return i.EventFragment;
  } }), Object.defineProperty(n, "FormatTypes", { enumerable: !0, get: function() {
    return i.FormatTypes;
  } }), Object.defineProperty(n, "Fragment", { enumerable: !0, get: function() {
    return i.Fragment;
  } }), Object.defineProperty(n, "FunctionFragment", { enumerable: !0, get: function() {
    return i.FunctionFragment;
  } }), Object.defineProperty(n, "Indexed", { enumerable: !0, get: function() {
    return i.Indexed;
  } }), Object.defineProperty(n, "Interface", { enumerable: !0, get: function() {
    return i.Interface;
  } }), Object.defineProperty(n, "LogDescription", { enumerable: !0, get: function() {
    return i.LogDescription;
  } }), Object.defineProperty(n, "ParamType", { enumerable: !0, get: function() {
    return i.ParamType;
  } }), Object.defineProperty(n, "TransactionDescription", { enumerable: !0, get: function() {
    return i.TransactionDescription;
  } });
  var s = mP;
  Object.defineProperty(n, "getAddress", { enumerable: !0, get: function() {
    return s.getAddress;
  } }), Object.defineProperty(n, "getCreate2Address", { enumerable: !0, get: function() {
    return s.getCreate2Address;
  } }), Object.defineProperty(n, "getContractAddress", { enumerable: !0, get: function() {
    return s.getContractAddress;
  } }), Object.defineProperty(n, "getIcapAddress", { enumerable: !0, get: function() {
    return s.getIcapAddress;
  } }), Object.defineProperty(n, "isAddress", { enumerable: !0, get: function() {
    return s.isAddress;
  } });
  var a = r(bP);
  n.base64 = a;
  var o = xP;
  Object.defineProperty(n, "base58", { enumerable: !0, get: function() {
    return o.Base58;
  } });
  var u = wP;
  Object.defineProperty(n, "arrayify", { enumerable: !0, get: function() {
    return u.arrayify;
  } }), Object.defineProperty(n, "concat", { enumerable: !0, get: function() {
    return u.concat;
  } }), Object.defineProperty(n, "hexConcat", { enumerable: !0, get: function() {
    return u.hexConcat;
  } }), Object.defineProperty(n, "hexDataSlice", { enumerable: !0, get: function() {
    return u.hexDataSlice;
  } }), Object.defineProperty(n, "hexDataLength", { enumerable: !0, get: function() {
    return u.hexDataLength;
  } }), Object.defineProperty(n, "hexlify", { enumerable: !0, get: function() {
    return u.hexlify;
  } }), Object.defineProperty(n, "hexStripZeros", { enumerable: !0, get: function() {
    return u.hexStripZeros;
  } }), Object.defineProperty(n, "hexValue", { enumerable: !0, get: function() {
    return u.hexValue;
  } }), Object.defineProperty(n, "hexZeroPad", { enumerable: !0, get: function() {
    return u.hexZeroPad;
  } }), Object.defineProperty(n, "isBytes", { enumerable: !0, get: function() {
    return u.isBytes;
  } }), Object.defineProperty(n, "isBytesLike", { enumerable: !0, get: function() {
    return u.isBytesLike;
  } }), Object.defineProperty(n, "isHexString", { enumerable: !0, get: function() {
    return u.isHexString;
  } }), Object.defineProperty(n, "joinSignature", { enumerable: !0, get: function() {
    return u.joinSignature;
  } }), Object.defineProperty(n, "zeroPad", { enumerable: !0, get: function() {
    return u.zeroPad;
  } }), Object.defineProperty(n, "splitSignature", { enumerable: !0, get: function() {
    return u.splitSignature;
  } }), Object.defineProperty(n, "stripZeros", { enumerable: !0, get: function() {
    return u.stripZeros;
  } });
  var l = TP;
  Object.defineProperty(n, "_TypedDataEncoder", { enumerable: !0, get: function() {
    return l._TypedDataEncoder;
  } }), Object.defineProperty(n, "dnsEncode", { enumerable: !0, get: function() {
    return l.dnsEncode;
  } }), Object.defineProperty(n, "hashMessage", { enumerable: !0, get: function() {
    return l.hashMessage;
  } }), Object.defineProperty(n, "id", { enumerable: !0, get: function() {
    return l.id;
  } }), Object.defineProperty(n, "isValidName", { enumerable: !0, get: function() {
    return l.isValidName;
  } }), Object.defineProperty(n, "namehash", { enumerable: !0, get: function() {
    return l.namehash;
  } });
  var c = LP;
  Object.defineProperty(n, "defaultPath", { enumerable: !0, get: function() {
    return c.defaultPath;
  } }), Object.defineProperty(n, "entropyToMnemonic", { enumerable: !0, get: function() {
    return c.entropyToMnemonic;
  } }), Object.defineProperty(n, "getAccountPath", { enumerable: !0, get: function() {
    return c.getAccountPath;
  } }), Object.defineProperty(n, "HDNode", { enumerable: !0, get: function() {
    return c.HDNode;
  } }), Object.defineProperty(n, "isValidMnemonic", { enumerable: !0, get: function() {
    return c.isValidMnemonic;
  } }), Object.defineProperty(n, "mnemonicToEntropy", { enumerable: !0, get: function() {
    return c.mnemonicToEntropy;
  } }), Object.defineProperty(n, "mnemonicToSeed", { enumerable: !0, get: function() {
    return c.mnemonicToSeed;
  } });
  var p = XP;
  Object.defineProperty(n, "getJsonWalletAddress", { enumerable: !0, get: function() {
    return p.getJsonWalletAddress;
  } });
  var b = ZP;
  Object.defineProperty(n, "keccak256", { enumerable: !0, get: function() {
    return b.keccak256;
  } });
  var A = e9;
  Object.defineProperty(n, "Logger", { enumerable: !0, get: function() {
    return A.Logger;
  } });
  var g = N2;
  Object.defineProperty(n, "computeHmac", { enumerable: !0, get: function() {
    return g.computeHmac;
  } }), Object.defineProperty(n, "ripemd160", { enumerable: !0, get: function() {
    return g.ripemd160;
  } }), Object.defineProperty(n, "sha256", { enumerable: !0, get: function() {
    return g.sha256;
  } }), Object.defineProperty(n, "sha512", { enumerable: !0, get: function() {
    return g.sha512;
  } });
  var w = l9;
  Object.defineProperty(n, "solidityKeccak256", { enumerable: !0, get: function() {
    return w.keccak256;
  } }), Object.defineProperty(n, "solidityPack", { enumerable: !0, get: function() {
    return w.pack;
  } }), Object.defineProperty(n, "soliditySha256", { enumerable: !0, get: function() {
    return w.sha256;
  } });
  var T = c9;
  Object.defineProperty(n, "randomBytes", { enumerable: !0, get: function() {
    return T.randomBytes;
  } }), Object.defineProperty(n, "shuffled", { enumerable: !0, get: function() {
    return T.shuffled;
  } });
  var _ = d9;
  Object.defineProperty(n, "checkProperties", { enumerable: !0, get: function() {
    return _.checkProperties;
  } }), Object.defineProperty(n, "deepCopy", { enumerable: !0, get: function() {
    return _.deepCopy;
  } }), Object.defineProperty(n, "defineReadOnly", { enumerable: !0, get: function() {
    return _.defineReadOnly;
  } }), Object.defineProperty(n, "getStatic", { enumerable: !0, get: function() {
    return _.getStatic;
  } }), Object.defineProperty(n, "resolveProperties", { enumerable: !0, get: function() {
    return _.resolveProperties;
  } }), Object.defineProperty(n, "shallowCopy", { enumerable: !0, get: function() {
    return _.shallowCopy;
  } });
  var I = r(f9);
  n.RLP = I;
  var N = p9;
  Object.defineProperty(n, "computePublicKey", { enumerable: !0, get: function() {
    return N.computePublicKey;
  } }), Object.defineProperty(n, "recoverPublicKey", { enumerable: !0, get: function() {
    return N.recoverPublicKey;
  } }), Object.defineProperty(n, "SigningKey", { enumerable: !0, get: function() {
    return N.SigningKey;
  } });
  var B = F2;
  Object.defineProperty(n, "formatBytes32String", { enumerable: !0, get: function() {
    return B.formatBytes32String;
  } }), Object.defineProperty(n, "nameprep", { enumerable: !0, get: function() {
    return B.nameprep;
  } }), Object.defineProperty(n, "parseBytes32String", { enumerable: !0, get: function() {
    return B.parseBytes32String;
  } }), Object.defineProperty(n, "_toEscapedUtf8String", { enumerable: !0, get: function() {
    return B._toEscapedUtf8String;
  } }), Object.defineProperty(n, "toUtf8Bytes", { enumerable: !0, get: function() {
    return B.toUtf8Bytes;
  } }), Object.defineProperty(n, "toUtf8CodePoints", { enumerable: !0, get: function() {
    return B.toUtf8CodePoints;
  } }), Object.defineProperty(n, "toUtf8String", { enumerable: !0, get: function() {
    return B.toUtf8String;
  } }), Object.defineProperty(n, "Utf8ErrorFuncs", { enumerable: !0, get: function() {
    return B.Utf8ErrorFuncs;
  } });
  var D = h9;
  Object.defineProperty(n, "accessListify", { enumerable: !0, get: function() {
    return D.accessListify;
  } }), Object.defineProperty(n, "computeAddress", { enumerable: !0, get: function() {
    return D.computeAddress;
  } }), Object.defineProperty(n, "parseTransaction", { enumerable: !0, get: function() {
    return D.parse;
  } }), Object.defineProperty(n, "recoverAddress", { enumerable: !0, get: function() {
    return D.recoverAddress;
  } }), Object.defineProperty(n, "serializeTransaction", { enumerable: !0, get: function() {
    return D.serialize;
  } }), Object.defineProperty(n, "TransactionTypes", { enumerable: !0, get: function() {
    return D.TransactionTypes;
  } });
  var $ = x9;
  Object.defineProperty(n, "commify", { enumerable: !0, get: function() {
    return $.commify;
  } }), Object.defineProperty(n, "formatEther", { enumerable: !0, get: function() {
    return $.formatEther;
  } }), Object.defineProperty(n, "parseEther", { enumerable: !0, get: function() {
    return $.parseEther;
  } }), Object.defineProperty(n, "formatUnits", { enumerable: !0, get: function() {
    return $.formatUnits;
  } }), Object.defineProperty(n, "parseUnits", { enumerable: !0, get: function() {
    return $.parseUnits;
  } });
  var H = _9;
  Object.defineProperty(n, "verifyMessage", { enumerable: !0, get: function() {
    return H.verifyMessage;
  } }), Object.defineProperty(n, "verifyTypedData", { enumerable: !0, get: function() {
    return H.verifyTypedData;
  } });
  var j = D9;
  Object.defineProperty(n, "_fetchData", { enumerable: !0, get: function() {
    return j._fetchData;
  } }), Object.defineProperty(n, "fetchJson", { enumerable: !0, get: function() {
    return j.fetchJson;
  } }), Object.defineProperty(n, "poll", { enumerable: !0, get: function() {
    return j.poll;
  } });
  var Q = N2;
  Object.defineProperty(n, "SupportedAlgorithm", { enumerable: !0, get: function() {
    return Q.SupportedAlgorithm;
  } });
  var oe = F2;
  Object.defineProperty(n, "UnicodeNormalizationForm", { enumerable: !0, get: function() {
    return oe.UnicodeNormalizationForm;
  } }), Object.defineProperty(n, "Utf8ErrorReason", { enumerable: !0, get: function() {
    return oe.Utf8ErrorReason;
  } });
})(yy);
var Rr = /* @__PURE__ */ ((n) => (n[n["1h"] = 0] = "1h", n[n["1d"] = 1] = "1d", n[n["1w"] = 2] = "1w", n[n["1m"] = 3] = "1m", n[n["1y"] = 4] = "1y", n))(Rr || {});
function B9(n, e) {
  if (typeof n != "number" || Number.isInteger(n) || isNaN(n))
    return n;
  const t = n.toString().split(".");
  return Number(`${t[0]}.${t[1].slice(0, e)}`);
}
function G6(n) {
  switch (n) {
    case Rr["1d"]:
      return "hour";
    case Rr["1h"]:
      return "minute";
    case Rr["1m"]:
    case Rr["1w"]:
    case Rr["1y"]:
      return "day";
  }
}
function W6(n) {
  const e = new Date();
  switch (n) {
    case Rr["1h"]:
      e.setMinutes(e.getMinutes() - 60);
      break;
    case Rr["1d"]:
      e.setHours(e.getHours() - 24);
      break;
    case Rr["1w"]:
      e.setDate(e.getDate() - 7);
      break;
    case Rr["1m"]:
      e.setMonth(e.getMonth() - 1);
      break;
    case Rr["1y"]:
      e.setFullYear(e.getFullYear() - 1);
      break;
  }
  return e.getTime();
}
const N9 = (n, e) => {
  for (const t in e) {
    const r = new RegExp("{" + t + "}", "gm");
    n = n.replace(r, e[t]);
  }
  return n;
}, U2 = (n, e) => {
  const t = typeof n;
  return (t === "string" || t === "number") && (n = B9(Number(n), Number(e))), yy.parseUnits(n.toString(), e);
}, Qt = (n, e) => yy.formatUnits(n.toString(), e), Ay = he.createInterface();
function F9({ mustBeMetaMask: n = !1, silent: e = !1, timeout: t = 3e3 } = {}) {
  i();
  let r = !1;
  return new Promise((s) => {
    window.ethereum ? a() : (window.addEventListener("ethereum#initialized", a, { once: !0 }), setTimeout(() => {
      a();
    }, t));
    function a() {
      if (r)
        return;
      r = !0, window.removeEventListener("ethereum#initialized", a);
      const { ethereum: o } = window;
      o && (!n || o.isMetaMask) ? s(o) : (!e && console.error("@metamask/detect-provider:", n && o ? "Non-MetaMask window.ethereum detected." : "Unable to detect window.ethereum."), s(null));
    }
  });
  function i() {
    if (typeof n != "boolean")
      throw new Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");
    if (typeof e != "boolean")
      throw new Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");
    if (typeof t != "number")
      throw new Error("@metamask/detect-provider: Expected option 'timeout' to be a number.");
  }
}
var L9 = F9;
const $9 = "networks/5.7.1", V2 = new O($9);
function U9(n) {
  return n && typeof n.renetwork == "function";
}
function vi(n) {
  const e = function(t, r) {
    r == null && (r = {});
    const i = [];
    if (t.InfuraProvider && r.infura !== "-")
      try {
        i.push(new t.InfuraProvider(n, r.infura));
      } catch {
      }
    if (t.EtherscanProvider && r.etherscan !== "-")
      try {
        i.push(new t.EtherscanProvider(n, r.etherscan));
      } catch {
      }
    if (t.AlchemyProvider && r.alchemy !== "-")
      try {
        i.push(new t.AlchemyProvider(n, r.alchemy));
      } catch {
      }
    if (t.PocketProvider && r.pocket !== "-") {
      const s = ["goerli", "ropsten", "rinkeby", "sepolia"];
      try {
        const a = new t.PocketProvider(n, r.pocket);
        a.network && s.indexOf(a.network.name) === -1 && i.push(a);
      } catch {
      }
    }
    if (t.CloudflareProvider && r.cloudflare !== "-")
      try {
        i.push(new t.CloudflareProvider(n));
      } catch {
      }
    if (t.AnkrProvider && r.ankr !== "-")
      try {
        const s = ["ropsten"], a = new t.AnkrProvider(n, r.ankr);
        a.network && s.indexOf(a.network.name) === -1 && i.push(a);
      } catch {
      }
    if (i.length === 0)
      return null;
    if (t.FallbackProvider) {
      let s = 1;
      return r.quorum != null ? s = r.quorum : n === "homestead" && (s = 2), new t.FallbackProvider(i, s);
    }
    return i[0];
  };
  return e.renetwork = function(t) {
    return vi(t);
  }, e;
}
function fd(n, e) {
  const t = function(r, i) {
    return r.JsonRpcProvider ? new r.JsonRpcProvider(n, e) : null;
  };
  return t.renetwork = function(r) {
    return fd(n, r);
  }, t;
}
const j2 = {
  chainId: 1,
  ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
  name: "homestead",
  _defaultProvider: vi("homestead")
}, G2 = {
  chainId: 3,
  ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
  name: "ropsten",
  _defaultProvider: vi("ropsten")
}, W2 = {
  chainId: 63,
  name: "classicMordor",
  _defaultProvider: fd("https://www.ethercluster.com/mordor", "classicMordor")
}, ic = {
  unspecified: { chainId: 0, name: "unspecified" },
  homestead: j2,
  mainnet: j2,
  morden: { chainId: 2, name: "morden" },
  ropsten: G2,
  testnet: G2,
  rinkeby: {
    chainId: 4,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "rinkeby",
    _defaultProvider: vi("rinkeby")
  },
  kovan: {
    chainId: 42,
    name: "kovan",
    _defaultProvider: vi("kovan")
  },
  goerli: {
    chainId: 5,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "goerli",
    _defaultProvider: vi("goerli")
  },
  kintsugi: { chainId: 1337702, name: "kintsugi" },
  sepolia: {
    chainId: 11155111,
    name: "sepolia",
    _defaultProvider: vi("sepolia")
  },
  classic: {
    chainId: 61,
    name: "classic",
    _defaultProvider: fd("https://www.ethercluster.com/etc", "classic")
  },
  classicMorden: { chainId: 62, name: "classicMorden" },
  classicMordor: W2,
  classicTestnet: W2,
  classicKotti: {
    chainId: 6,
    name: "classicKotti",
    _defaultProvider: fd("https://www.ethercluster.com/kotti", "classicKotti")
  },
  xdai: { chainId: 100, name: "xdai" },
  matic: {
    chainId: 137,
    name: "matic",
    _defaultProvider: vi("matic")
  },
  maticmum: { chainId: 80001, name: "maticmum" },
  optimism: {
    chainId: 10,
    name: "optimism",
    _defaultProvider: vi("optimism")
  },
  "optimism-kovan": { chainId: 69, name: "optimism-kovan" },
  "optimism-goerli": { chainId: 420, name: "optimism-goerli" },
  arbitrum: { chainId: 42161, name: "arbitrum" },
  "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" },
  "arbitrum-goerli": { chainId: 421613, name: "arbitrum-goerli" },
  bnb: { chainId: 56, name: "bnb" },
  bnbt: { chainId: 97, name: "bnbt" }
};
function V9(n) {
  if (n == null)
    return null;
  if (typeof n == "number") {
    for (const r in ic) {
      const i = ic[r];
      if (i.chainId === n)
        return {
          name: i.name,
          chainId: i.chainId,
          ensAddress: i.ensAddress || null,
          _defaultProvider: i._defaultProvider || null
        };
    }
    return {
      chainId: n,
      name: "unknown"
    };
  }
  if (typeof n == "string") {
    const r = ic[n];
    return r == null ? null : {
      name: r.name,
      chainId: r.chainId,
      ensAddress: r.ensAddress,
      _defaultProvider: r._defaultProvider || null
    };
  }
  const e = ic[n.name];
  if (!e)
    return typeof n.chainId != "number" && V2.throwArgumentError("invalid network chainId", "network", n), n;
  n.chainId !== 0 && n.chainId !== e.chainId && V2.throwArgumentError("network chainId mismatch", "network", n);
  let t = n._defaultProvider || null;
  return t == null && e._defaultProvider && (U9(e._defaultProvider) ? t = e._defaultProvider.renetwork(n) : t = e._defaultProvider), {
    name: n.name,
    chainId: e.chainId,
    ensAddress: n.ensAddress || e.ensAddress || null,
    _defaultProvider: t
  };
}
var pd = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", Eh = {};
for (var sc = 0; sc < pd.length; sc++) {
  var Sp = pd.charAt(sc);
  if (Eh[Sp] !== void 0)
    throw new TypeError(Sp + " is ambiguous");
  Eh[Sp] = sc;
}
function ho(n) {
  var e = n >> 25;
  return (n & 33554431) << 5 ^ -(e >> 0 & 1) & 996825010 ^ -(e >> 1 & 1) & 642813549 ^ -(e >> 2 & 1) & 513874426 ^ -(e >> 3 & 1) & 1027748829 ^ -(e >> 4 & 1) & 705979059;
}
function z6(n) {
  for (var e = 1, t = 0; t < n.length; ++t) {
    var r = n.charCodeAt(t);
    if (r < 33 || r > 126)
      return "Invalid prefix (" + n + ")";
    e = ho(e) ^ r >> 5;
  }
  for (e = ho(e), t = 0; t < n.length; ++t) {
    var i = n.charCodeAt(t);
    e = ho(e) ^ i & 31;
  }
  return e;
}
function j9(n, e, t) {
  if (t = t || 90, n.length + 7 + e.length > t)
    throw new TypeError("Exceeds length limit");
  n = n.toLowerCase();
  var r = z6(n);
  if (typeof r == "string")
    throw new Error(r);
  for (var i = n + "1", s = 0; s < e.length; ++s) {
    var a = e[s];
    if (a >> 5 !== 0)
      throw new Error("Non 5-bit word");
    r = ho(r) ^ a, i += pd.charAt(a);
  }
  for (s = 0; s < 6; ++s)
    r = ho(r);
  for (r ^= 1, s = 0; s < 6; ++s) {
    var o = r >> (5 - s) * 5 & 31;
    i += pd.charAt(o);
  }
  return i;
}
function H6(n, e) {
  if (e = e || 90, n.length < 8)
    return n + " too short";
  if (n.length > e)
    return "Exceeds length limit";
  var t = n.toLowerCase(), r = n.toUpperCase();
  if (n !== t && n !== r)
    return "Mixed-case string " + n;
  n = t;
  var i = n.lastIndexOf("1");
  if (i === -1)
    return "No separator character for " + n;
  if (i === 0)
    return "Missing prefix for " + n;
  var s = n.slice(0, i), a = n.slice(i + 1);
  if (a.length < 6)
    return "Data too short";
  var o = z6(s);
  if (typeof o == "string")
    return o;
  for (var u = [], l = 0; l < a.length; ++l) {
    var c = a.charAt(l), p = Eh[c];
    if (p === void 0)
      return "Unknown character " + c;
    o = ho(o) ^ p, !(l + 6 >= a.length) && u.push(p);
  }
  return o !== 1 ? "Invalid checksum for " + n : { prefix: s, words: u };
}
function G9() {
  var n = H6.apply(null, arguments);
  if (typeof n == "object")
    return n;
}
function W9(n) {
  var e = H6.apply(null, arguments);
  if (typeof e == "object")
    return e;
  throw new Error(e);
}
function df(n, e, t, r) {
  for (var i = 0, s = 0, a = (1 << t) - 1, o = [], u = 0; u < n.length; ++u)
    for (i = i << e | n[u], s += e; s >= t; )
      s -= t, o.push(i >> s & a);
  if (r)
    s > 0 && o.push(i << t - s & a);
  else {
    if (s >= e)
      return "Excess padding";
    if (i << t - s & a)
      return "Non-zero padding";
  }
  return o;
}
function z9(n) {
  var e = df(n, 8, 5, !0);
  if (Array.isArray(e))
    return e;
}
function H9(n) {
  var e = df(n, 8, 5, !0);
  if (Array.isArray(e))
    return e;
  throw new Error(e);
}
function K9(n) {
  var e = df(n, 5, 8, !1);
  if (Array.isArray(e))
    return e;
}
function q9(n) {
  var e = df(n, 5, 8, !1);
  if (Array.isArray(e))
    return e;
  throw new Error(e);
}
var z2 = {
  decodeUnsafe: G9,
  decode: W9,
  encode: j9,
  toWordsUnsafe: z9,
  toWords: H9,
  fromWordsUnsafe: K9,
  fromWords: q9
};
const Cy = "providers/5.7.2", su = new O(Cy);
class re {
  constructor() {
    this.formats = this.getDefaultFormats();
  }
  getDefaultFormats() {
    const e = {}, t = this.address.bind(this), r = this.bigNumber.bind(this), i = this.blockTag.bind(this), s = this.data.bind(this), a = this.hash.bind(this), o = this.hex.bind(this), u = this.number.bind(this), l = this.type.bind(this), c = (p) => this.data(p, !0);
    return e.transaction = {
      hash: a,
      type: l,
      accessList: re.allowNull(this.accessList.bind(this), null),
      blockHash: re.allowNull(a, null),
      blockNumber: re.allowNull(u, null),
      transactionIndex: re.allowNull(u, null),
      confirmations: re.allowNull(u, null),
      from: t,
      gasPrice: re.allowNull(r),
      maxPriorityFeePerGas: re.allowNull(r),
      maxFeePerGas: re.allowNull(r),
      gasLimit: r,
      to: re.allowNull(t, null),
      value: r,
      nonce: u,
      data: s,
      r: re.allowNull(this.uint256),
      s: re.allowNull(this.uint256),
      v: re.allowNull(u),
      creates: re.allowNull(t, null),
      raw: re.allowNull(s)
    }, e.transactionRequest = {
      from: re.allowNull(t),
      nonce: re.allowNull(u),
      gasLimit: re.allowNull(r),
      gasPrice: re.allowNull(r),
      maxPriorityFeePerGas: re.allowNull(r),
      maxFeePerGas: re.allowNull(r),
      to: re.allowNull(t),
      value: re.allowNull(r),
      data: re.allowNull(c),
      type: re.allowNull(u),
      accessList: re.allowNull(this.accessList.bind(this), null)
    }, e.receiptLog = {
      transactionIndex: u,
      blockNumber: u,
      transactionHash: a,
      address: t,
      topics: re.arrayOf(a),
      data: s,
      logIndex: u,
      blockHash: a
    }, e.receipt = {
      to: re.allowNull(this.address, null),
      from: re.allowNull(this.address, null),
      contractAddress: re.allowNull(t, null),
      transactionIndex: u,
      root: re.allowNull(o),
      gasUsed: r,
      logsBloom: re.allowNull(s),
      blockHash: a,
      transactionHash: a,
      logs: re.arrayOf(this.receiptLog.bind(this)),
      blockNumber: u,
      confirmations: re.allowNull(u, null),
      cumulativeGasUsed: r,
      effectiveGasPrice: re.allowNull(r),
      status: re.allowNull(u),
      type: l
    }, e.block = {
      hash: re.allowNull(a),
      parentHash: a,
      number: u,
      timestamp: u,
      nonce: re.allowNull(o),
      difficulty: this.difficulty.bind(this),
      gasLimit: r,
      gasUsed: r,
      miner: re.allowNull(t),
      extraData: s,
      transactions: re.allowNull(re.arrayOf(a)),
      baseFeePerGas: re.allowNull(r)
    }, e.blockWithTransactions = $t(e.block), e.blockWithTransactions.transactions = re.allowNull(re.arrayOf(this.transactionResponse.bind(this))), e.filter = {
      fromBlock: re.allowNull(i, void 0),
      toBlock: re.allowNull(i, void 0),
      blockHash: re.allowNull(a, void 0),
      address: re.allowNull(t, void 0),
      topics: re.allowNull(this.topics.bind(this), void 0)
    }, e.filterLog = {
      blockNumber: re.allowNull(u),
      blockHash: re.allowNull(a),
      transactionIndex: u,
      removed: re.allowNull(this.boolean.bind(this)),
      address: t,
      data: re.allowFalsish(s, "0x"),
      topics: re.arrayOf(a),
      transactionHash: a,
      logIndex: u
    }, e;
  }
  accessList(e) {
    return Va(e || []);
  }
  number(e) {
    return e === "0x" ? 0 : W.from(e).toNumber();
  }
  type(e) {
    return e === "0x" || e == null ? 0 : W.from(e).toNumber();
  }
  bigNumber(e) {
    return W.from(e);
  }
  boolean(e) {
    if (typeof e == "boolean")
      return e;
    if (typeof e == "string") {
      if (e = e.toLowerCase(), e === "true")
        return !0;
      if (e === "false")
        return !1;
    }
    throw new Error("invalid boolean - " + e);
  }
  hex(e, t) {
    return typeof e == "string" && (!t && e.substring(0, 2) !== "0x" && (e = "0x" + e), Ae(e)) ? e.toLowerCase() : su.throwArgumentError("invalid hash", "value", e);
  }
  data(e, t) {
    const r = this.hex(e, t);
    if (r.length % 2 !== 0)
      throw new Error("invalid data; odd-length - " + e);
    return r;
  }
  address(e) {
    return De(e);
  }
  callAddress(e) {
    if (!Ae(e, 32))
      return null;
    const t = De(Dt(e, 12));
    return t === b7 ? null : t;
  }
  contractAddress(e) {
    return J0(e);
  }
  blockTag(e) {
    if (e == null)
      return "latest";
    if (e === "earliest")
      return "0x0";
    switch (e) {
      case "earliest":
        return "0x0";
      case "latest":
      case "pending":
      case "safe":
      case "finalized":
        return e;
    }
    if (typeof e == "number" || Ae(e))
      return Xd(e);
    throw new Error("invalid blockTag");
  }
  hash(e, t) {
    const r = this.hex(e, t);
    return ni(r) !== 32 ? su.throwArgumentError("invalid hash", "value", e) : r;
  }
  difficulty(e) {
    if (e == null)
      return null;
    const t = W.from(e);
    try {
      return t.toNumber();
    } catch {
    }
    return null;
  }
  uint256(e) {
    if (!Ae(e))
      throw new Error("invalid uint256");
    return Be(e, 32);
  }
  _block(e, t) {
    e.author != null && e.miner == null && (e.miner = e.author);
    const r = e._difficulty != null ? e._difficulty : e.difficulty, i = re.check(t, e);
    return i._difficulty = r == null ? null : W.from(r), i;
  }
  block(e) {
    return this._block(e, this.formats.block);
  }
  blockWithTransactions(e) {
    return this._block(e, this.formats.blockWithTransactions);
  }
  transactionRequest(e) {
    return re.check(this.formats.transactionRequest, e);
  }
  transactionResponse(e) {
    e.gas != null && e.gasLimit == null && (e.gasLimit = e.gas), e.to && W.from(e.to).isZero() && (e.to = "0x0000000000000000000000000000000000000000"), e.input != null && e.data == null && (e.data = e.input), e.to == null && e.creates == null && (e.creates = this.contractAddress(e)), (e.type === 1 || e.type === 2) && e.accessList == null && (e.accessList = []);
    const t = re.check(this.formats.transaction, e);
    if (e.chainId != null) {
      let r = e.chainId;
      Ae(r) && (r = W.from(r).toNumber()), t.chainId = r;
    } else {
      let r = e.networkId;
      r == null && t.v == null && (r = e.chainId), Ae(r) && (r = W.from(r).toNumber()), typeof r != "number" && t.v != null && (r = (t.v - 35) / 2, r < 0 && (r = 0), r = parseInt(r)), typeof r != "number" && (r = 0), t.chainId = r;
    }
    return t.blockHash && t.blockHash.replace(/0/g, "") === "x" && (t.blockHash = null), t;
  }
  transaction(e) {
    return f6(e);
  }
  receiptLog(e) {
    return re.check(this.formats.receiptLog, e);
  }
  receipt(e) {
    const t = re.check(this.formats.receipt, e);
    if (t.root != null)
      if (t.root.length <= 4) {
        const r = W.from(t.root).toNumber();
        r === 0 || r === 1 ? (t.status != null && t.status !== r && su.throwArgumentError("alt-root-status/status mismatch", "value", { root: t.root, status: t.status }), t.status = r, delete t.root) : su.throwArgumentError("invalid alt-root-status", "value.root", t.root);
      } else
        t.root.length !== 66 && su.throwArgumentError("invalid root hash", "value.root", t.root);
    return t.status != null && (t.byzantium = !0), t;
  }
  topics(e) {
    return Array.isArray(e) ? e.map((t) => this.topics(t)) : e != null ? this.hash(e, !0) : null;
  }
  filter(e) {
    return re.check(this.formats.filter, e);
  }
  filterLog(e) {
    return re.check(this.formats.filterLog, e);
  }
  static check(e, t) {
    const r = {};
    for (const i in e)
      try {
        const s = e[i](t[i]);
        s !== void 0 && (r[i] = s);
      } catch (s) {
        throw s.checkKey = i, s.checkValue = t[i], s;
      }
    return r;
  }
  static allowNull(e, t) {
    return function(r) {
      return r == null ? t : e(r);
    };
  }
  static allowFalsish(e, t) {
    return function(r) {
      return r ? e(r) : t;
    };
  }
  static arrayOf(e) {
    return function(t) {
      if (!Array.isArray(t))
        throw new Error("not an array");
      const r = [];
      return t.forEach(function(i) {
        r.push(e(i));
      }), r;
    };
  }
}
var ce = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const ye = new O(Cy), Q9 = 10;
function H2(n) {
  return n == null ? "null" : (ni(n) !== 32 && ye.throwArgumentError("invalid topic", "topic", n), n.toLowerCase());
}
function K2(n) {
  for (n = n.slice(); n.length > 0 && n[n.length - 1] == null; )
    n.pop();
  return n.map((e) => {
    if (Array.isArray(e)) {
      const t = {};
      e.forEach((i) => {
        t[H2(i)] = !0;
      });
      const r = Object.keys(t);
      return r.sort(), r.join("|");
    } else
      return H2(e);
  }).join("&");
}
function J9(n) {
  return n === "" ? [] : n.split(/&/g).map((e) => {
    if (e === "")
      return [];
    const t = e.split("|").map((r) => r === "null" ? null : r);
    return t.length === 1 ? t[0] : t;
  });
}
function Qa(n) {
  if (typeof n == "string") {
    if (n = n.toLowerCase(), ni(n) === 32)
      return "tx:" + n;
    if (n.indexOf(":") === -1)
      return n;
  } else {
    if (Array.isArray(n))
      return "filter:*:" + K2(n);
    if (O_.isForkEvent(n))
      throw ye.warn("not implemented"), new Error("not implemented");
    if (n && typeof n == "object")
      return "filter:" + (n.address || "*") + ":" + K2(n.topics || []);
  }
  throw new Error("invalid event - " + n);
}
function au() {
  return new Date().getTime();
}
function q2(n) {
  return new Promise((e) => {
    setTimeout(e, n);
  });
}
const Y9 = ["block", "network", "pending", "poll"];
class X9 {
  constructor(e, t, r) {
    V(this, "tag", e), V(this, "listener", t), V(this, "once", r), this._lastBlockNumber = -2, this._inflight = !1;
  }
  get event() {
    switch (this.type) {
      case "tx":
        return this.hash;
      case "filter":
        return this.filter;
    }
    return this.tag;
  }
  get type() {
    return this.tag.split(":")[0];
  }
  get hash() {
    const e = this.tag.split(":");
    return e[0] !== "tx" ? null : e[1];
  }
  get filter() {
    const e = this.tag.split(":");
    if (e[0] !== "filter")
      return null;
    const t = e[1], r = J9(e[2]), i = {};
    return r.length > 0 && (i.topics = r), t && t !== "*" && (i.address = t), i;
  }
  pollable() {
    return this.tag.indexOf(":") >= 0 || Y9.indexOf(this.tag) >= 0;
  }
}
const Z9 = {
  0: { symbol: "btc", p2pkh: 0, p2sh: 5, prefix: "bc" },
  2: { symbol: "ltc", p2pkh: 48, p2sh: 50, prefix: "ltc" },
  3: { symbol: "doge", p2pkh: 30, p2sh: 22 },
  60: { symbol: "eth", ilk: "eth" },
  61: { symbol: "etc", ilk: "eth" },
  700: { symbol: "xdai", ilk: "eth" }
};
function Ep(n) {
  return Be(W.from(n).toHexString(), 32);
}
function Q2(n) {
  return _o.encode(Ve([n, Dt(Ni(Ni(n)), 0, 4)]));
}
const K6 = new RegExp("^(ipfs)://(.*)$", "i"), J2 = [
  new RegExp("^(https)://(.*)$", "i"),
  new RegExp("^(data):(.*)$", "i"),
  K6,
  new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")
];
function Oc(n, e) {
  try {
    return Is(rl(n, e));
  } catch {
  }
  return null;
}
function rl(n, e) {
  if (n === "0x")
    return null;
  const t = W.from(Dt(n, e, e + 32)).toNumber(), r = W.from(Dt(n, t, t + 32)).toNumber();
  return Dt(n, t + 32, t + 32 + r);
}
function _p(n) {
  return n.match(/^ipfs:\/\/ipfs\//i) ? n = n.substring(12) : n.match(/^ipfs:\/\//i) ? n = n.substring(7) : ye.throwArgumentError("unsupported IPFS format", "link", n), `https://gateway.ipfs.io/ipfs/${n}`;
}
function Y2(n) {
  const e = z(n);
  if (e.length > 32)
    throw new Error("internal; should not happen");
  const t = new Uint8Array(32);
  return t.set(e, 32 - e.length), t;
}
function eO(n) {
  if (n.length % 32 === 0)
    return n;
  const e = new Uint8Array(Math.ceil(n.length / 32) * 32);
  return e.set(n), e;
}
function q6(n) {
  const e = [];
  let t = 0;
  for (let r = 0; r < n.length; r++)
    e.push(null), t += 32;
  for (let r = 0; r < n.length; r++) {
    const i = z(n[r]);
    e[r] = Y2(t), e.push(Y2(i.length)), e.push(eO(i)), t += 32 + Math.ceil(i.length / 32) * 32;
  }
  return Sn(e);
}
class X2 {
  constructor(e, t, r, i) {
    V(this, "provider", e), V(this, "name", r), V(this, "address", e.formatter.address(t)), V(this, "_resolvedAddress", i);
  }
  supportsWildcard() {
    return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({
      to: this.address,
      data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
    }).then((e) => W.from(e).eq(1)).catch((e) => {
      if (e.code === O.errors.CALL_EXCEPTION)
        return !1;
      throw this._supportsEip2544 = null, e;
    })), this._supportsEip2544;
  }
  _fetch(e, t) {
    return ce(this, void 0, void 0, function* () {
      const r = {
        to: this.address,
        ccipReadEnabled: !0,
        data: Sn([e, Mu(this.name), t || "0x"])
      };
      let i = !1;
      (yield this.supportsWildcard()) && (i = !0, r.data = Sn(["0x9061b923", q6([Iw(this.name), r.data])]));
      try {
        let s = yield this.provider.call(r);
        return z(s).length % 32 === 4 && ye.throwError("resolver threw error", O.errors.CALL_EXCEPTION, {
          transaction: r,
          data: s
        }), i && (s = rl(s, 0)), s;
      } catch (s) {
        if (s.code === O.errors.CALL_EXCEPTION)
          return null;
        throw s;
      }
    });
  }
  _fetchBytes(e, t) {
    return ce(this, void 0, void 0, function* () {
      const r = yield this._fetch(e, t);
      return r != null ? rl(r, 0) : null;
    });
  }
  _getAddress(e, t) {
    const r = Z9[String(e)];
    if (r == null && ye.throwError(`unsupported coin type: ${e}`, O.errors.UNSUPPORTED_OPERATION, {
      operation: `getAddress(${e})`
    }), r.ilk === "eth")
      return this.provider.formatter.address(t);
    const i = z(t);
    if (r.p2pkh != null) {
      const s = t.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
      if (s) {
        const a = parseInt(s[1], 16);
        if (s[2].length === a * 2 && a >= 1 && a <= 75)
          return Q2(Ve([[r.p2pkh], "0x" + s[2]]));
      }
    }
    if (r.p2sh != null) {
      const s = t.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
      if (s) {
        const a = parseInt(s[1], 16);
        if (s[2].length === a * 2 && a >= 1 && a <= 75)
          return Q2(Ve([[r.p2sh], "0x" + s[2]]));
      }
    }
    if (r.prefix != null) {
      const s = i[1];
      let a = i[0];
      if (a === 0 ? s !== 20 && s !== 32 && (a = -1) : a = -1, a >= 0 && i.length === 2 + s && s >= 1 && s <= 75) {
        const o = z2.toWords(i.slice(2));
        return o.unshift(a), z2.encode(r.prefix, o);
      }
    }
    return null;
  }
  getAddress(e) {
    return ce(this, void 0, void 0, function* () {
      if (e == null && (e = 60), e === 60)
        try {
          const i = yield this._fetch("0x3b3b57de");
          return i === "0x" || i === vw ? null : this.provider.formatter.callAddress(i);
        } catch (i) {
          if (i.code === O.errors.CALL_EXCEPTION)
            return null;
          throw i;
        }
      const t = yield this._fetchBytes("0xf1cb7e06", Ep(e));
      if (t == null || t === "0x")
        return null;
      const r = this._getAddress(e, t);
      return r == null && ye.throwError("invalid or unsupported coin data", O.errors.UNSUPPORTED_OPERATION, {
        operation: `getAddress(${e})`,
        coinType: e,
        data: t
      }), r;
    });
  }
  getAvatar() {
    return ce(this, void 0, void 0, function* () {
      const e = [{ type: "name", content: this.name }];
      try {
        const t = yield this.getText("avatar");
        if (t == null)
          return null;
        for (let r = 0; r < J2.length; r++) {
          const i = t.match(J2[r]);
          if (i == null)
            continue;
          const s = i[1].toLowerCase();
          switch (s) {
            case "https":
              return e.push({ type: "url", content: t }), { linkage: e, url: t };
            case "data":
              return e.push({ type: "data", content: t }), { linkage: e, url: t };
            case "ipfs":
              return e.push({ type: "ipfs", content: t }), { linkage: e, url: _p(t) };
            case "erc721":
            case "erc1155": {
              const a = s === "erc721" ? "0xc87b56dd" : "0x0e89341c";
              e.push({ type: s, content: t });
              const o = this._resolvedAddress || (yield this.getAddress()), u = (i[2] || "").split("/");
              if (u.length !== 2)
                return null;
              const l = yield this.provider.formatter.address(u[0]), c = Be(W.from(u[1]).toHexString(), 32);
              if (s === "erc721") {
                const w = this.provider.formatter.callAddress(yield this.provider.call({
                  to: l,
                  data: Sn(["0x6352211e", c])
                }));
                if (o !== w)
                  return null;
                e.push({ type: "owner", content: w });
              } else if (s === "erc1155") {
                const w = W.from(yield this.provider.call({
                  to: l,
                  data: Sn(["0x00fdd58e", Be(o, 32), c])
                }));
                if (w.isZero())
                  return null;
                e.push({ type: "balance", content: w.toString() });
              }
              const p = {
                to: this.provider.formatter.address(u[0]),
                data: Sn([a, c])
              };
              let b = Oc(yield this.provider.call(p), 0);
              if (b == null)
                return null;
              e.push({ type: "metadata-url-base", content: b }), s === "erc1155" && (b = b.replace("{id}", c.substring(2)), e.push({ type: "metadata-url-expanded", content: b })), b.match(/^ipfs:/i) && (b = _p(b)), e.push({ type: "metadata-url", content: b });
              const A = yield cf(b);
              if (!A)
                return null;
              e.push({ type: "metadata", content: JSON.stringify(A) });
              let g = A.image;
              if (typeof g != "string")
                return null;
              if (!g.match(/^(https:\/\/|data:)/i)) {
                if (g.match(K6) == null)
                  return null;
                e.push({ type: "url-ipfs", content: g }), g = _p(g);
              }
              return e.push({ type: "url", content: g }), { linkage: e, url: g };
            }
          }
        }
      } catch {
      }
      return null;
    });
  }
  getContentHash() {
    return ce(this, void 0, void 0, function* () {
      const e = yield this._fetchBytes("0xbc1c58d1");
      if (e == null || e === "0x")
        return null;
      const t = e.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
      if (t) {
        const a = parseInt(t[3], 16);
        if (t[4].length === a * 2)
          return "ipfs://" + _o.encode("0x" + t[1]);
      }
      const r = e.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
      if (r) {
        const a = parseInt(r[3], 16);
        if (r[4].length === a * 2)
          return "ipns://" + _o.encode("0x" + r[1]);
      }
      const i = e.match(/^0xe40101fa011b20([0-9a-f]*)$/);
      if (i && i[1].length === 32 * 2)
        return "bzz://" + i[1];
      const s = e.match(/^0x90b2c605([0-9a-f]*)$/);
      if (s && s[1].length === 34 * 2) {
        const a = { "=": "", "+": "-", "/": "_" };
        return "sia://" + ny("0x" + s[1]).replace(/[=+\/]/g, (u) => a[u]);
      }
      return ye.throwError("invalid or unsupported content hash data", O.errors.UNSUPPORTED_OPERATION, {
        operation: "getContentHash()",
        data: e
      });
    });
  }
  getText(e) {
    return ce(this, void 0, void 0, function* () {
      let t = Nt(e);
      t = Ve([Ep(64), Ep(t.length), t]), t.length % 32 !== 0 && (t = Ve([t, Be("0x", 32 - e.length % 32)]));
      const r = yield this._fetchBytes("0x59d1d43c", K(t));
      return r == null || r === "0x" ? null : Is(r);
    });
  }
}
let Mp = null, tO = 1;
class nO extends kl {
  constructor(e) {
    if (super(), this._events = [], this._emitted = { block: -2 }, this.disableCcipRead = !1, this.formatter = new.target.getFormatter(), V(this, "anyNetwork", e === "any"), this.anyNetwork && (e = this.detectNetwork()), e instanceof Promise)
      this._networkPromise = e, e.catch((t) => {
      }), this._ready().catch((t) => {
      });
    else {
      const t = Ir(new.target, "getNetwork")(e);
      t ? (V(this, "_network", t), this.emit("network", t, null)) : ye.throwArgumentError("invalid network", "network", e);
    }
    this._maxInternalBlockNumber = -1024, this._lastBlockNumber = -2, this._maxFilterBlockRange = 10, this._pollingInterval = 4e3, this._fastQueryDate = 0;
  }
  _ready() {
    return ce(this, void 0, void 0, function* () {
      if (this._network == null) {
        let e = null;
        if (this._networkPromise)
          try {
            e = yield this._networkPromise;
          } catch {
          }
        e == null && (e = yield this.detectNetwork()), e || ye.throwError("no network detected", O.errors.UNKNOWN_ERROR, {}), this._network == null && (this.anyNetwork ? this._network = e : V(this, "_network", e), this.emit("network", e, null));
      }
      return this._network;
    });
  }
  get ready() {
    return oo(() => this._ready().then((e) => e, (e) => {
      if (!(e.code === O.errors.NETWORK_ERROR && e.event === "noNetwork"))
        throw e;
    }));
  }
  static getFormatter() {
    return Mp == null && (Mp = new re()), Mp;
  }
  static getNetwork(e) {
    return V9(e ?? "homestead");
  }
  ccipReadFetch(e, t, r) {
    return ce(this, void 0, void 0, function* () {
      if (this.disableCcipRead || r.length === 0)
        return null;
      const i = e.to.toLowerCase(), s = t.toLowerCase(), a = [];
      for (let o = 0; o < r.length; o++) {
        const u = r[o], l = u.replace("{sender}", i).replace("{data}", s), c = u.indexOf("{data}") >= 0 ? null : JSON.stringify({ data: s, sender: i }), p = yield cf({ url: l, errorPassThrough: !0 }, c, (A, g) => (A.status = g.statusCode, A));
        if (p.data)
          return p.data;
        const b = p.message || "unknown error";
        if (p.status >= 400 && p.status < 500)
          return ye.throwError(`response not found during CCIP fetch: ${b}`, O.errors.SERVER_ERROR, { url: u, errorMessage: b });
        a.push(b);
      }
      return ye.throwError(`error encountered during CCIP fetch: ${a.map((o) => JSON.stringify(o)).join(", ")}`, O.errors.SERVER_ERROR, {
        urls: r,
        errorMessages: a
      });
    });
  }
  _getInternalBlockNumber(e) {
    return ce(this, void 0, void 0, function* () {
      if (yield this._ready(), e > 0)
        for (; this._internalBlockNumber; ) {
          const i = this._internalBlockNumber;
          try {
            const s = yield i;
            if (au() - s.respTime <= e)
              return s.blockNumber;
            break;
          } catch {
            if (this._internalBlockNumber === i)
              break;
          }
        }
      const t = au(), r = Rt({
        blockNumber: this.perform("getBlockNumber", {}),
        networkError: this.getNetwork().then((i) => null, (i) => i)
      }).then(({ blockNumber: i, networkError: s }) => {
        if (s)
          throw this._internalBlockNumber === r && (this._internalBlockNumber = null), s;
        const a = au();
        return i = W.from(i).toNumber(), i < this._maxInternalBlockNumber && (i = this._maxInternalBlockNumber), this._maxInternalBlockNumber = i, this._setFastBlockNumber(i), { blockNumber: i, reqTime: t, respTime: a };
      });
      return this._internalBlockNumber = r, r.catch((i) => {
        this._internalBlockNumber === r && (this._internalBlockNumber = null);
      }), (yield r).blockNumber;
    });
  }
  poll() {
    return ce(this, void 0, void 0, function* () {
      const e = tO++, t = [];
      let r = null;
      try {
        r = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
      } catch (i) {
        this.emit("error", i);
        return;
      }
      if (this._setFastBlockNumber(r), this.emit("poll", e, r), r === this._lastBlockNumber) {
        this.emit("didPoll", e);
        return;
      }
      if (this._emitted.block === -2 && (this._emitted.block = r - 1), Math.abs(this._emitted.block - r) > 1e3)
        ye.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${r})`), this.emit("error", ye.makeError("network block skew detected", O.errors.NETWORK_ERROR, {
          blockNumber: r,
          event: "blockSkew",
          previousBlockNumber: this._emitted.block
        })), this.emit("block", r);
      else
        for (let i = this._emitted.block + 1; i <= r; i++)
          this.emit("block", i);
      this._emitted.block !== r && (this._emitted.block = r, Object.keys(this._emitted).forEach((i) => {
        if (i === "block")
          return;
        const s = this._emitted[i];
        s !== "pending" && r - s > 12 && delete this._emitted[i];
      })), this._lastBlockNumber === -2 && (this._lastBlockNumber = r - 1), this._events.forEach((i) => {
        switch (i.type) {
          case "tx": {
            const s = i.hash;
            let a = this.getTransactionReceipt(s).then((o) => (!o || o.blockNumber == null || (this._emitted["t:" + s] = o.blockNumber, this.emit(s, o)), null)).catch((o) => {
              this.emit("error", o);
            });
            t.push(a);
            break;
          }
          case "filter": {
            if (!i._inflight) {
              i._inflight = !0, i._lastBlockNumber === -2 && (i._lastBlockNumber = r - 1);
              const s = i.filter;
              s.fromBlock = i._lastBlockNumber + 1, s.toBlock = r;
              const a = s.toBlock - this._maxFilterBlockRange;
              a > s.fromBlock && (s.fromBlock = a), s.fromBlock < 0 && (s.fromBlock = 0);
              const o = this.getLogs(s).then((u) => {
                i._inflight = !1, u.length !== 0 && u.forEach((l) => {
                  l.blockNumber > i._lastBlockNumber && (i._lastBlockNumber = l.blockNumber), this._emitted["b:" + l.blockHash] = l.blockNumber, this._emitted["t:" + l.transactionHash] = l.blockNumber, this.emit(s, l);
                });
              }).catch((u) => {
                this.emit("error", u), i._inflight = !1;
              });
              t.push(o);
            }
            break;
          }
        }
      }), this._lastBlockNumber = r, Promise.all(t).then(() => {
        this.emit("didPoll", e);
      }).catch((i) => {
        this.emit("error", i);
      });
    });
  }
  resetEventsBlock(e) {
    this._lastBlockNumber = e - 1, this.polling && this.poll();
  }
  get network() {
    return this._network;
  }
  detectNetwork() {
    return ce(this, void 0, void 0, function* () {
      return ye.throwError("provider does not support network detection", O.errors.UNSUPPORTED_OPERATION, {
        operation: "provider.detectNetwork"
      });
    });
  }
  getNetwork() {
    return ce(this, void 0, void 0, function* () {
      const e = yield this._ready(), t = yield this.detectNetwork();
      if (e.chainId !== t.chainId) {
        if (this.anyNetwork)
          return this._network = t, this._lastBlockNumber = -2, this._fastBlockNumber = null, this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", t, e), yield q2(0), this._network;
        const r = ye.makeError("underlying network changed", O.errors.NETWORK_ERROR, {
          event: "changed",
          network: e,
          detectedNetwork: t
        });
        throw this.emit("error", r), r;
      }
      return e;
    });
  }
  get blockNumber() {
    return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((e) => {
      this._setFastBlockNumber(e);
    }, (e) => {
    }), this._fastBlockNumber != null ? this._fastBlockNumber : -1;
  }
  get polling() {
    return this._poller != null;
  }
  set polling(e) {
    e && !this._poller ? (this._poller = setInterval(() => {
      this.poll();
    }, this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout(() => {
      this.poll(), this._bootstrapPoll = setTimeout(() => {
        this._poller || this.poll(), this._bootstrapPoll = null;
      }, this.pollingInterval);
    }, 0))) : !e && this._poller && (clearInterval(this._poller), this._poller = null);
  }
  get pollingInterval() {
    return this._pollingInterval;
  }
  set pollingInterval(e) {
    if (typeof e != "number" || e <= 0 || parseInt(String(e)) != e)
      throw new Error("invalid polling interval");
    this._pollingInterval = e, this._poller && (clearInterval(this._poller), this._poller = setInterval(() => {
      this.poll();
    }, this._pollingInterval));
  }
  _getFastBlockNumber() {
    const e = au();
    return e - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = e, this._fastBlockNumberPromise = this.getBlockNumber().then((t) => ((this._fastBlockNumber == null || t > this._fastBlockNumber) && (this._fastBlockNumber = t), this._fastBlockNumber))), this._fastBlockNumberPromise;
  }
  _setFastBlockNumber(e) {
    this._fastBlockNumber != null && e < this._fastBlockNumber || (this._fastQueryDate = au(), (this._fastBlockNumber == null || e > this._fastBlockNumber) && (this._fastBlockNumber = e, this._fastBlockNumberPromise = Promise.resolve(e)));
  }
  waitForTransaction(e, t, r) {
    return ce(this, void 0, void 0, function* () {
      return this._waitForTransaction(e, t ?? 1, r || 0, null);
    });
  }
  _waitForTransaction(e, t, r, i) {
    return ce(this, void 0, void 0, function* () {
      const s = yield this.getTransactionReceipt(e);
      return (s ? s.confirmations : 0) >= t ? s : new Promise((a, o) => {
        const u = [];
        let l = !1;
        const c = function() {
          return l ? !0 : (l = !0, u.forEach((b) => {
            b();
          }), !1);
        }, p = (b) => {
          b.confirmations < t || c() || a(b);
        };
        if (this.on(e, p), u.push(() => {
          this.removeListener(e, p);
        }), i) {
          let b = i.startBlock, A = null;
          const g = (w) => ce(this, void 0, void 0, function* () {
            l || (yield q2(1e3), this.getTransactionCount(i.from).then((T) => ce(this, void 0, void 0, function* () {
              if (!l) {
                if (T <= i.nonce)
                  b = w;
                else {
                  {
                    const _ = yield this.getTransaction(e);
                    if (_ && _.blockNumber != null)
                      return;
                  }
                  for (A == null && (A = b - 3, A < i.startBlock && (A = i.startBlock)); A <= w; ) {
                    if (l)
                      return;
                    const _ = yield this.getBlockWithTransactions(A);
                    for (let I = 0; I < _.transactions.length; I++) {
                      const N = _.transactions[I];
                      if (N.hash === e)
                        return;
                      if (N.from === i.from && N.nonce === i.nonce) {
                        if (l)
                          return;
                        const B = yield this.waitForTransaction(N.hash, t);
                        if (c())
                          return;
                        let D = "replaced";
                        N.data === i.data && N.to === i.to && N.value.eq(i.value) ? D = "repriced" : N.data === "0x" && N.from === N.to && N.value.isZero() && (D = "cancelled"), o(ye.makeError("transaction was replaced", O.errors.TRANSACTION_REPLACED, {
                          cancelled: D === "replaced" || D === "cancelled",
                          reason: D,
                          replacement: this._wrapTransaction(N),
                          hash: e,
                          receipt: B
                        }));
                        return;
                      }
                    }
                    A++;
                  }
                }
                l || this.once("block", g);
              }
            }), (T) => {
              l || this.once("block", g);
            }));
          });
          if (l)
            return;
          this.once("block", g), u.push(() => {
            this.removeListener("block", g);
          });
        }
        if (typeof r == "number" && r > 0) {
          const b = setTimeout(() => {
            c() || o(ye.makeError("timeout exceeded", O.errors.TIMEOUT, { timeout: r }));
          }, r);
          b.unref && b.unref(), u.push(() => {
            clearTimeout(b);
          });
        }
      });
    });
  }
  getBlockNumber() {
    return ce(this, void 0, void 0, function* () {
      return this._getInternalBlockNumber(0);
    });
  }
  getGasPrice() {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const e = yield this.perform("getGasPrice", {});
      try {
        return W.from(e);
      } catch (t) {
        return ye.throwError("bad result from backend", O.errors.SERVER_ERROR, {
          method: "getGasPrice",
          result: e,
          error: t
        });
      }
    });
  }
  getBalance(e, t) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const r = yield Rt({
        address: this._getAddress(e),
        blockTag: this._getBlockTag(t)
      }), i = yield this.perform("getBalance", r);
      try {
        return W.from(i);
      } catch (s) {
        return ye.throwError("bad result from backend", O.errors.SERVER_ERROR, {
          method: "getBalance",
          params: r,
          result: i,
          error: s
        });
      }
    });
  }
  getTransactionCount(e, t) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const r = yield Rt({
        address: this._getAddress(e),
        blockTag: this._getBlockTag(t)
      }), i = yield this.perform("getTransactionCount", r);
      try {
        return W.from(i).toNumber();
      } catch (s) {
        return ye.throwError("bad result from backend", O.errors.SERVER_ERROR, {
          method: "getTransactionCount",
          params: r,
          result: i,
          error: s
        });
      }
    });
  }
  getCode(e, t) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const r = yield Rt({
        address: this._getAddress(e),
        blockTag: this._getBlockTag(t)
      }), i = yield this.perform("getCode", r);
      try {
        return K(i);
      } catch (s) {
        return ye.throwError("bad result from backend", O.errors.SERVER_ERROR, {
          method: "getCode",
          params: r,
          result: i,
          error: s
        });
      }
    });
  }
  getStorageAt(e, t, r) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const i = yield Rt({
        address: this._getAddress(e),
        blockTag: this._getBlockTag(r),
        position: Promise.resolve(t).then((a) => Xd(a))
      }), s = yield this.perform("getStorageAt", i);
      try {
        return K(s);
      } catch (a) {
        return ye.throwError("bad result from backend", O.errors.SERVER_ERROR, {
          method: "getStorageAt",
          params: i,
          result: s,
          error: a
        });
      }
    });
  }
  _wrapTransaction(e, t, r) {
    if (t != null && ni(t) !== 32)
      throw new Error("invalid response - sendTransaction");
    const i = e;
    return t != null && e.hash !== t && ye.throwError("Transaction hash mismatch from Provider.sendTransaction.", O.errors.UNKNOWN_ERROR, { expectedHash: e.hash, returnedHash: t }), i.wait = (s, a) => ce(this, void 0, void 0, function* () {
      s == null && (s = 1), a == null && (a = 0);
      let o;
      s !== 0 && r != null && (o = {
        data: e.data,
        from: e.from,
        nonce: e.nonce,
        to: e.to,
        value: e.value,
        startBlock: r
      });
      const u = yield this._waitForTransaction(e.hash, s, a, o);
      return u == null && s === 0 ? null : (this._emitted["t:" + e.hash] = u.blockNumber, u.status === 0 && ye.throwError("transaction failed", O.errors.CALL_EXCEPTION, {
        transactionHash: e.hash,
        transaction: e,
        receipt: u
      }), u);
    }), i;
  }
  sendTransaction(e) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const t = yield Promise.resolve(e).then((s) => K(s)), r = this.formatter.transaction(e);
      r.confirmations == null && (r.confirmations = 0);
      const i = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
      try {
        const s = yield this.perform("sendTransaction", { signedTransaction: t });
        return this._wrapTransaction(r, s, i);
      } catch (s) {
        throw s.transaction = r, s.transactionHash = r.hash, s;
      }
    });
  }
  _getTransactionRequest(e) {
    return ce(this, void 0, void 0, function* () {
      const t = yield e, r = {};
      return ["from", "to"].forEach((i) => {
        t[i] != null && (r[i] = Promise.resolve(t[i]).then((s) => s ? this._getAddress(s) : null));
      }), ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((i) => {
        t[i] != null && (r[i] = Promise.resolve(t[i]).then((s) => s ? W.from(s) : null));
      }), ["type"].forEach((i) => {
        t[i] != null && (r[i] = Promise.resolve(t[i]).then((s) => s ?? null));
      }), t.accessList && (r.accessList = this.formatter.accessList(t.accessList)), ["data"].forEach((i) => {
        t[i] != null && (r[i] = Promise.resolve(t[i]).then((s) => s ? K(s) : null));
      }), this.formatter.transactionRequest(yield Rt(r));
    });
  }
  _getFilter(e) {
    return ce(this, void 0, void 0, function* () {
      e = yield e;
      const t = {};
      return e.address != null && (t.address = this._getAddress(e.address)), ["blockHash", "topics"].forEach((r) => {
        e[r] != null && (t[r] = e[r]);
      }), ["fromBlock", "toBlock"].forEach((r) => {
        e[r] != null && (t[r] = this._getBlockTag(e[r]));
      }), this.formatter.filter(yield Rt(t));
    });
  }
  _call(e, t, r) {
    return ce(this, void 0, void 0, function* () {
      r >= Q9 && ye.throwError("CCIP read exceeded maximum redirections", O.errors.SERVER_ERROR, {
        redirects: r,
        transaction: e
      });
      const i = e.to, s = yield this.perform("call", { transaction: e, blockTag: t });
      if (r >= 0 && t === "latest" && i != null && s.substring(0, 10) === "0x556f1830" && ni(s) % 32 === 4)
        try {
          const a = Dt(s, 4), o = Dt(a, 0, 32);
          W.from(o).eq(i) || ye.throwError("CCIP Read sender did not match", O.errors.CALL_EXCEPTION, {
            name: "OffchainLookup",
            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
            transaction: e,
            data: s
          });
          const u = [], l = W.from(Dt(a, 32, 64)).toNumber(), c = W.from(Dt(a, l, l + 32)).toNumber(), p = Dt(a, l + 32);
          for (let _ = 0; _ < c; _++) {
            const I = Oc(p, _ * 32);
            I == null && ye.throwError("CCIP Read contained corrupt URL string", O.errors.CALL_EXCEPTION, {
              name: "OffchainLookup",
              signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
              transaction: e,
              data: s
            }), u.push(I);
          }
          const b = rl(a, 64);
          W.from(Dt(a, 100, 128)).isZero() || ye.throwError("CCIP Read callback selector included junk", O.errors.CALL_EXCEPTION, {
            name: "OffchainLookup",
            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
            transaction: e,
            data: s
          });
          const A = Dt(a, 96, 100), g = rl(a, 128), w = yield this.ccipReadFetch(e, b, u);
          w == null && ye.throwError("CCIP Read disabled or provided no URLs", O.errors.CALL_EXCEPTION, {
            name: "OffchainLookup",
            signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
            transaction: e,
            data: s
          });
          const T = {
            to: i,
            data: Sn([A, q6([w, g])])
          };
          return this._call(T, t, r + 1);
        } catch (a) {
          if (a.code === O.errors.SERVER_ERROR)
            throw a;
        }
      try {
        return K(s);
      } catch (a) {
        return ye.throwError("bad result from backend", O.errors.SERVER_ERROR, {
          method: "call",
          params: { transaction: e, blockTag: t },
          result: s,
          error: a
        });
      }
    });
  }
  call(e, t) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const r = yield Rt({
        transaction: this._getTransactionRequest(e),
        blockTag: this._getBlockTag(t),
        ccipReadEnabled: Promise.resolve(e.ccipReadEnabled)
      });
      return this._call(r.transaction, r.blockTag, r.ccipReadEnabled ? 0 : -1);
    });
  }
  estimateGas(e) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const t = yield Rt({
        transaction: this._getTransactionRequest(e)
      }), r = yield this.perform("estimateGas", t);
      try {
        return W.from(r);
      } catch (i) {
        return ye.throwError("bad result from backend", O.errors.SERVER_ERROR, {
          method: "estimateGas",
          params: t,
          result: r,
          error: i
        });
      }
    });
  }
  _getAddress(e) {
    return ce(this, void 0, void 0, function* () {
      e = yield e, typeof e != "string" && ye.throwArgumentError("invalid address or ENS name", "name", e);
      const t = yield this.resolveName(e);
      return t == null && ye.throwError("ENS name not configured", O.errors.UNSUPPORTED_OPERATION, {
        operation: `resolveName(${JSON.stringify(e)})`
      }), t;
    });
  }
  _getBlock(e, t) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork(), e = yield e;
      let r = -128;
      const i = {
        includeTransactions: !!t
      };
      if (Ae(e, 32))
        i.blockHash = e;
      else
        try {
          i.blockTag = yield this._getBlockTag(e), Ae(i.blockTag) && (r = parseInt(i.blockTag.substring(2), 16));
        } catch {
          ye.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", e);
        }
      return oo(() => ce(this, void 0, void 0, function* () {
        const s = yield this.perform("getBlock", i);
        if (s == null)
          return i.blockHash != null && this._emitted["b:" + i.blockHash] == null || i.blockTag != null && r > this._emitted.block ? null : void 0;
        if (t) {
          let a = null;
          for (let u = 0; u < s.transactions.length; u++) {
            const l = s.transactions[u];
            if (l.blockNumber == null)
              l.confirmations = 0;
            else if (l.confirmations == null) {
              a == null && (a = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval));
              let c = a - l.blockNumber + 1;
              c <= 0 && (c = 1), l.confirmations = c;
            }
          }
          const o = this.formatter.blockWithTransactions(s);
          return o.transactions = o.transactions.map((u) => this._wrapTransaction(u)), o;
        }
        return this.formatter.block(s);
      }), { oncePoll: this });
    });
  }
  getBlock(e) {
    return this._getBlock(e, !1);
  }
  getBlockWithTransactions(e) {
    return this._getBlock(e, !0);
  }
  getTransaction(e) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork(), e = yield e;
      const t = { transactionHash: this.formatter.hash(e, !0) };
      return oo(() => ce(this, void 0, void 0, function* () {
        const r = yield this.perform("getTransaction", t);
        if (r == null)
          return this._emitted["t:" + e] == null ? null : void 0;
        const i = this.formatter.transactionResponse(r);
        if (i.blockNumber == null)
          i.confirmations = 0;
        else if (i.confirmations == null) {
          let a = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - i.blockNumber + 1;
          a <= 0 && (a = 1), i.confirmations = a;
        }
        return this._wrapTransaction(i);
      }), { oncePoll: this });
    });
  }
  getTransactionReceipt(e) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork(), e = yield e;
      const t = { transactionHash: this.formatter.hash(e, !0) };
      return oo(() => ce(this, void 0, void 0, function* () {
        const r = yield this.perform("getTransactionReceipt", t);
        if (r == null)
          return this._emitted["t:" + e] == null ? null : void 0;
        if (r.blockHash == null)
          return;
        const i = this.formatter.receipt(r);
        if (i.blockNumber == null)
          i.confirmations = 0;
        else if (i.confirmations == null) {
          let a = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - i.blockNumber + 1;
          a <= 0 && (a = 1), i.confirmations = a;
        }
        return i;
      }), { oncePoll: this });
    });
  }
  getLogs(e) {
    return ce(this, void 0, void 0, function* () {
      yield this.getNetwork();
      const t = yield Rt({ filter: this._getFilter(e) }), r = yield this.perform("getLogs", t);
      return r.forEach((i) => {
        i.removed == null && (i.removed = !1);
      }), re.arrayOf(this.formatter.filterLog.bind(this.formatter))(r);
    });
  }
  getEtherPrice() {
    return ce(this, void 0, void 0, function* () {
      return yield this.getNetwork(), this.perform("getEtherPrice", {});
    });
  }
  _getBlockTag(e) {
    return ce(this, void 0, void 0, function* () {
      if (e = yield e, typeof e == "number" && e < 0) {
        e % 1 && ye.throwArgumentError("invalid BlockTag", "blockTag", e);
        let t = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
        return t += e, t < 0 && (t = 0), this.formatter.blockTag(t);
      }
      return this.formatter.blockTag(e);
    });
  }
  getResolver(e) {
    return ce(this, void 0, void 0, function* () {
      let t = e;
      for (; ; ) {
        if (t === "" || t === "." || e !== "eth" && t === "eth")
          return null;
        const r = yield this._getResolver(t, "getResolver");
        if (r != null) {
          const i = new X2(this, r, e);
          return t !== e && !(yield i.supportsWildcard()) ? null : i;
        }
        t = t.split(".").slice(1).join(".");
      }
    });
  }
  _getResolver(e, t) {
    return ce(this, void 0, void 0, function* () {
      t == null && (t = "ENS");
      const r = yield this.getNetwork();
      r.ensAddress || ye.throwError("network does not support ENS", O.errors.UNSUPPORTED_OPERATION, { operation: t, network: r.name });
      try {
        const i = yield this.call({
          to: r.ensAddress,
          data: "0x0178b8bf" + Mu(e).substring(2)
        });
        return this.formatter.callAddress(i);
      } catch {
      }
      return null;
    });
  }
  resolveName(e) {
    return ce(this, void 0, void 0, function* () {
      e = yield e;
      try {
        return Promise.resolve(this.formatter.address(e));
      } catch (r) {
        if (Ae(e))
          throw r;
      }
      typeof e != "string" && ye.throwArgumentError("invalid ENS name", "name", e);
      const t = yield this.getResolver(e);
      return t ? yield t.getAddress() : null;
    });
  }
  lookupAddress(e) {
    return ce(this, void 0, void 0, function* () {
      e = yield e, e = this.formatter.address(e);
      const t = e.substring(2).toLowerCase() + ".addr.reverse", r = yield this._getResolver(t, "lookupAddress");
      if (r == null)
        return null;
      const i = Oc(yield this.call({
        to: r,
        data: "0x691f3431" + Mu(t).substring(2)
      }), 0);
      return (yield this.resolveName(i)) != e ? null : i;
    });
  }
  getAvatar(e) {
    return ce(this, void 0, void 0, function* () {
      let t = null;
      if (Ae(e)) {
        const s = this.formatter.address(e).substring(2).toLowerCase() + ".addr.reverse", a = yield this._getResolver(s, "getAvatar");
        if (!a)
          return null;
        t = new X2(this, a, s);
        try {
          const o = yield t.getAvatar();
          if (o)
            return o.url;
        } catch (o) {
          if (o.code !== O.errors.CALL_EXCEPTION)
            throw o;
        }
        try {
          const o = Oc(yield this.call({
            to: a,
            data: "0x691f3431" + Mu(s).substring(2)
          }), 0);
          t = yield this.getResolver(o);
        } catch (o) {
          if (o.code !== O.errors.CALL_EXCEPTION)
            throw o;
          return null;
        }
      } else if (t = yield this.getResolver(e), !t)
        return null;
      const r = yield t.getAvatar();
      return r == null ? null : r.url;
    });
  }
  perform(e, t) {
    return ye.throwError(e + " not implemented", O.errors.NOT_IMPLEMENTED, { operation: e });
  }
  _startEvent(e) {
    this.polling = this._events.filter((t) => t.pollable()).length > 0;
  }
  _stopEvent(e) {
    this.polling = this._events.filter((t) => t.pollable()).length > 0;
  }
  _addEventListener(e, t, r) {
    const i = new X9(Qa(e), t, r);
    return this._events.push(i), this._startEvent(i), this;
  }
  on(e, t) {
    return this._addEventListener(e, t, !1);
  }
  once(e, t) {
    return this._addEventListener(e, t, !0);
  }
  emit(e, ...t) {
    let r = !1, i = [], s = Qa(e);
    return this._events = this._events.filter((a) => a.tag !== s ? !0 : (setTimeout(() => {
      a.listener.apply(this, t);
    }, 0), r = !0, a.once ? (i.push(a), !1) : !0)), i.forEach((a) => {
      this._stopEvent(a);
    }), r;
  }
  listenerCount(e) {
    if (!e)
      return this._events.length;
    let t = Qa(e);
    return this._events.filter((r) => r.tag === t).length;
  }
  listeners(e) {
    if (e == null)
      return this._events.map((r) => r.listener);
    let t = Qa(e);
    return this._events.filter((r) => r.tag === t).map((r) => r.listener);
  }
  off(e, t) {
    if (t == null)
      return this.removeAllListeners(e);
    const r = [];
    let i = !1, s = Qa(e);
    return this._events = this._events.filter((a) => a.tag !== s || a.listener != t || i ? !0 : (i = !0, r.push(a), !1)), r.forEach((a) => {
      this._stopEvent(a);
    }), this;
  }
  removeAllListeners(e) {
    let t = [];
    if (e == null)
      t = this._events, this._events = [];
    else {
      const r = Qa(e);
      this._events = this._events.filter((i) => i.tag !== r ? !0 : (t.push(i), !1));
    }
    return t.forEach((r) => {
      this._stopEvent(r);
    }), this;
  }
}
var gi = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(c) {
      try {
        l(r.next(c));
      } catch (p) {
        a(p);
      }
    }
    function u(c) {
      try {
        l(r.throw(c));
      } catch (p) {
        a(p);
      }
    }
    function l(c) {
      c.done ? s(c.value) : i(c.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const Lt = new O(Cy), rO = ["call", "estimateGas"];
function Pu(n, e) {
  if (n == null)
    return null;
  if (typeof n.message == "string" && n.message.match("reverted")) {
    const t = Ae(n.data) ? n.data : null;
    if (!e || t)
      return { message: n.message, data: t };
  }
  if (typeof n == "object") {
    for (const t in n) {
      const r = Pu(n[t], e);
      if (r)
        return r;
    }
    return null;
  }
  if (typeof n == "string")
    try {
      return Pu(JSON.parse(n), e);
    } catch {
    }
  return null;
}
function Q6(n, e, t) {
  const r = t.transaction || t.signedTransaction;
  if (n === "call") {
    const s = Pu(e, !0);
    if (s)
      return s.data;
    Lt.throwError("missing revert data in call exception; Transaction reverted without a reason string", O.errors.CALL_EXCEPTION, {
      data: "0x",
      transaction: r,
      error: e
    });
  }
  if (n === "estimateGas") {
    let s = Pu(e.body, !1);
    s == null && (s = Pu(e, !1)), s && Lt.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", O.errors.UNPREDICTABLE_GAS_LIMIT, {
      reason: s.message,
      method: n,
      transaction: r,
      error: e
    });
  }
  let i = e.message;
  throw e.code === O.errors.SERVER_ERROR && e.error && typeof e.error.message == "string" ? i = e.error.message : typeof e.body == "string" ? i = e.body : typeof e.responseText == "string" && (i = e.responseText), i = (i || "").toLowerCase(), i.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i) && Lt.throwError("insufficient funds for intrinsic transaction cost", O.errors.INSUFFICIENT_FUNDS, {
    error: e,
    method: n,
    transaction: r
  }), i.match(/nonce (is )?too low/i) && Lt.throwError("nonce has already been used", O.errors.NONCE_EXPIRED, {
    error: e,
    method: n,
    transaction: r
  }), i.match(/replacement transaction underpriced|transaction gas price.*too low/i) && Lt.throwError("replacement fee too low", O.errors.REPLACEMENT_UNDERPRICED, {
    error: e,
    method: n,
    transaction: r
  }), i.match(/only replay-protected/i) && Lt.throwError("legacy pre-eip-155 transactions not supported", O.errors.UNSUPPORTED_OPERATION, {
    error: e,
    method: n,
    transaction: r
  }), rO.indexOf(n) >= 0 && i.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/) && Lt.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", O.errors.UNPREDICTABLE_GAS_LIMIT, {
    error: e,
    method: n,
    transaction: r
  }), e;
}
function Z2(n) {
  return new Promise(function(e) {
    setTimeout(e, n);
  });
}
function iO(n) {
  if (n.error) {
    const e = new Error(n.error.message);
    throw e.code = n.error.code, e.data = n.error.data, e;
  }
  return n.result;
}
function ou(n) {
  return n && n.toLowerCase();
}
const _h = {};
class J6 extends $a {
  constructor(e, t, r) {
    if (super(), e !== _h)
      throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
    V(this, "provider", t), r == null && (r = 0), typeof r == "string" ? (V(this, "_address", this.provider.formatter.address(r)), V(this, "_index", null)) : typeof r == "number" ? (V(this, "_index", r), V(this, "_address", null)) : Lt.throwArgumentError("invalid address or index", "addressOrIndex", r);
  }
  connect(e) {
    return Lt.throwError("cannot alter JSON-RPC Signer connection", O.errors.UNSUPPORTED_OPERATION, {
      operation: "connect"
    });
  }
  connectUnchecked() {
    return new sO(_h, this.provider, this._address || this._index);
  }
  getAddress() {
    return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then((e) => (e.length <= this._index && Lt.throwError("unknown account #" + this._index, O.errors.UNSUPPORTED_OPERATION, {
      operation: "getAddress"
    }), this.provider.formatter.address(e[this._index])));
  }
  sendUncheckedTransaction(e) {
    e = $t(e);
    const t = this.getAddress().then((r) => (r && (r = r.toLowerCase()), r));
    if (e.gasLimit == null) {
      const r = $t(e);
      r.from = t, e.gasLimit = this.provider.estimateGas(r);
    }
    return e.to != null && (e.to = Promise.resolve(e.to).then((r) => gi(this, void 0, void 0, function* () {
      if (r == null)
        return null;
      const i = yield this.provider.resolveName(r);
      return i == null && Lt.throwArgumentError("provided ENS name resolves to null", "tx.to", r), i;
    }))), Rt({
      tx: Rt(e),
      sender: t
    }).then(({ tx: r, sender: i }) => {
      r.from != null ? r.from.toLowerCase() !== i && Lt.throwArgumentError("from address mismatch", "transaction", e) : r.from = i;
      const s = this.provider.constructor.hexlifyTransaction(r, { from: !0 });
      return this.provider.send("eth_sendTransaction", [s]).then((a) => a, (a) => (typeof a.message == "string" && a.message.match(/user denied/i) && Lt.throwError("user rejected transaction", O.errors.ACTION_REJECTED, {
        action: "sendTransaction",
        transaction: r
      }), Q6("sendTransaction", a, s)));
    });
  }
  signTransaction(e) {
    return Lt.throwError("signing transactions is unsupported", O.errors.UNSUPPORTED_OPERATION, {
      operation: "signTransaction"
    });
  }
  sendTransaction(e) {
    return gi(this, void 0, void 0, function* () {
      const t = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval), r = yield this.sendUncheckedTransaction(e);
      try {
        return yield oo(() => gi(this, void 0, void 0, function* () {
          const i = yield this.provider.getTransaction(r);
          if (i !== null)
            return this.provider._wrapTransaction(i, r, t);
        }), { oncePoll: this.provider });
      } catch (i) {
        throw i.transactionHash = r, i;
      }
    });
  }
  signMessage(e) {
    return gi(this, void 0, void 0, function* () {
      const t = typeof e == "string" ? Nt(e) : e, r = yield this.getAddress();
      try {
        return yield this.provider.send("personal_sign", [K(t), r.toLowerCase()]);
      } catch (i) {
        throw typeof i.message == "string" && i.message.match(/user denied/i) && Lt.throwError("user rejected signing", O.errors.ACTION_REJECTED, {
          action: "signMessage",
          from: r,
          messageData: e
        }), i;
      }
    });
  }
  _legacySignMessage(e) {
    return gi(this, void 0, void 0, function* () {
      const t = typeof e == "string" ? Nt(e) : e, r = yield this.getAddress();
      try {
        return yield this.provider.send("eth_sign", [r.toLowerCase(), K(t)]);
      } catch (i) {
        throw typeof i.message == "string" && i.message.match(/user denied/i) && Lt.throwError("user rejected signing", O.errors.ACTION_REJECTED, {
          action: "_legacySignMessage",
          from: r,
          messageData: e
        }), i;
      }
    });
  }
  _signTypedData(e, t, r) {
    return gi(this, void 0, void 0, function* () {
      const i = yield en.resolveNames(e, t, r, (a) => this.provider.resolveName(a)), s = yield this.getAddress();
      try {
        return yield this.provider.send("eth_signTypedData_v4", [
          s.toLowerCase(),
          JSON.stringify(en.getPayload(i.domain, t, i.value))
        ]);
      } catch (a) {
        throw typeof a.message == "string" && a.message.match(/user denied/i) && Lt.throwError("user rejected signing", O.errors.ACTION_REJECTED, {
          action: "_signTypedData",
          from: s,
          messageData: { domain: i.domain, types: t, value: i.value }
        }), a;
      }
    });
  }
  unlock(e) {
    return gi(this, void 0, void 0, function* () {
      const t = this.provider, r = yield this.getAddress();
      return t.send("personal_unlockAccount", [r.toLowerCase(), e, null]);
    });
  }
}
class sO extends J6 {
  sendTransaction(e) {
    return this.sendUncheckedTransaction(e).then((t) => ({
      hash: t,
      nonce: null,
      gasLimit: null,
      gasPrice: null,
      data: null,
      value: null,
      chainId: null,
      confirmations: 0,
      from: null,
      wait: (r) => this.provider.waitForTransaction(t, r)
    }));
  }
}
const aO = {
  chainId: !0,
  data: !0,
  gasLimit: !0,
  gasPrice: !0,
  nonce: !0,
  to: !0,
  value: !0,
  type: !0,
  accessList: !0,
  maxFeePerGas: !0,
  maxPriorityFeePerGas: !0
};
class oO extends nO {
  constructor(e, t) {
    let r = t;
    r == null && (r = new Promise((i, s) => {
      setTimeout(() => {
        this.detectNetwork().then((a) => {
          i(a);
        }, (a) => {
          s(a);
        });
      }, 0);
    })), super(r), e || (e = Ir(this.constructor, "defaultUrl")()), typeof e == "string" ? V(this, "connection", Object.freeze({
      url: e
    })) : V(this, "connection", Object.freeze($t(e))), this._nextId = 42;
  }
  get _cache() {
    return this._eventLoopCache == null && (this._eventLoopCache = {}), this._eventLoopCache;
  }
  static defaultUrl() {
    return "http://localhost:8545";
  }
  detectNetwork() {
    return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(), setTimeout(() => {
      this._cache.detectNetwork = null;
    }, 0)), this._cache.detectNetwork;
  }
  _uncachedDetectNetwork() {
    return gi(this, void 0, void 0, function* () {
      yield Z2(0);
      let e = null;
      try {
        e = yield this.send("eth_chainId", []);
      } catch {
        try {
          e = yield this.send("net_version", []);
        } catch {
        }
      }
      if (e != null) {
        const t = Ir(this.constructor, "getNetwork");
        try {
          return t(W.from(e).toNumber());
        } catch (r) {
          return Lt.throwError("could not detect network", O.errors.NETWORK_ERROR, {
            chainId: e,
            event: "invalidNetwork",
            serverError: r
          });
        }
      }
      return Lt.throwError("could not detect network", O.errors.NETWORK_ERROR, {
        event: "noNetwork"
      });
    });
  }
  getSigner(e) {
    return new J6(_h, this, e);
  }
  getUncheckedSigner(e) {
    return this.getSigner(e).connectUnchecked();
  }
  listAccounts() {
    return this.send("eth_accounts", []).then((e) => e.map((t) => this.formatter.address(t)));
  }
  send(e, t) {
    const r = {
      method: e,
      params: t,
      id: this._nextId++,
      jsonrpc: "2.0"
    };
    this.emit("debug", {
      action: "request",
      request: Cs(r),
      provider: this
    });
    const i = ["eth_chainId", "eth_blockNumber"].indexOf(e) >= 0;
    if (i && this._cache[e])
      return this._cache[e];
    const s = cf(this.connection, JSON.stringify(r), iO).then((a) => (this.emit("debug", {
      action: "response",
      request: r,
      response: a,
      provider: this
    }), a), (a) => {
      throw this.emit("debug", {
        action: "response",
        error: a,
        request: r,
        provider: this
      }), a;
    });
    return i && (this._cache[e] = s, setTimeout(() => {
      this._cache[e] = null;
    }, 0)), s;
  }
  prepareRequest(e, t) {
    switch (e) {
      case "getBlockNumber":
        return ["eth_blockNumber", []];
      case "getGasPrice":
        return ["eth_gasPrice", []];
      case "getBalance":
        return ["eth_getBalance", [ou(t.address), t.blockTag]];
      case "getTransactionCount":
        return ["eth_getTransactionCount", [ou(t.address), t.blockTag]];
      case "getCode":
        return ["eth_getCode", [ou(t.address), t.blockTag]];
      case "getStorageAt":
        return ["eth_getStorageAt", [ou(t.address), Be(t.position, 32), t.blockTag]];
      case "sendTransaction":
        return ["eth_sendRawTransaction", [t.signedTransaction]];
      case "getBlock":
        return t.blockTag ? ["eth_getBlockByNumber", [t.blockTag, !!t.includeTransactions]] : t.blockHash ? ["eth_getBlockByHash", [t.blockHash, !!t.includeTransactions]] : null;
      case "getTransaction":
        return ["eth_getTransactionByHash", [t.transactionHash]];
      case "getTransactionReceipt":
        return ["eth_getTransactionReceipt", [t.transactionHash]];
      case "call":
        return ["eth_call", [Ir(this.constructor, "hexlifyTransaction")(t.transaction, { from: !0 }), t.blockTag]];
      case "estimateGas":
        return ["eth_estimateGas", [Ir(this.constructor, "hexlifyTransaction")(t.transaction, { from: !0 })]];
      case "getLogs":
        return t.filter && t.filter.address != null && (t.filter.address = ou(t.filter.address)), ["eth_getLogs", [t.filter]];
    }
    return null;
  }
  perform(e, t) {
    return gi(this, void 0, void 0, function* () {
      if (e === "call" || e === "estimateGas") {
        const i = t.transaction;
        if (i && i.type != null && W.from(i.type).isZero() && i.maxFeePerGas == null && i.maxPriorityFeePerGas == null) {
          const s = yield this.getFeeData();
          s.maxFeePerGas == null && s.maxPriorityFeePerGas == null && (t = $t(t), t.transaction = $t(i), delete t.transaction.type);
        }
      }
      const r = this.prepareRequest(e, t);
      r == null && Lt.throwError(e + " not implemented", O.errors.NOT_IMPLEMENTED, { operation: e });
      try {
        return yield this.send(r[0], r[1]);
      } catch (i) {
        return Q6(e, i, t);
      }
    });
  }
  _startEvent(e) {
    e.tag === "pending" && this._startPending(), super._startEvent(e);
  }
  _startPending() {
    if (this._pendingFilter != null)
      return;
    const e = this, t = this.send("eth_newPendingTransactionFilter", []);
    this._pendingFilter = t, t.then(function(r) {
      function i() {
        e.send("eth_getFilterChanges", [r]).then(function(s) {
          if (e._pendingFilter != t)
            return null;
          let a = Promise.resolve();
          return s.forEach(function(o) {
            e._emitted["t:" + o.toLowerCase()] = "pending", a = a.then(function() {
              return e.getTransaction(o).then(function(u) {
                return e.emit("pending", u), null;
              });
            });
          }), a.then(function() {
            return Z2(1e3);
          });
        }).then(function() {
          if (e._pendingFilter != t) {
            e.send("eth_uninstallFilter", [r]);
            return;
          }
          return setTimeout(function() {
            i();
          }, 0), null;
        }).catch((s) => {
        });
      }
      return i(), r;
    }).catch((r) => {
    });
  }
  _stopEvent(e) {
    e.tag === "pending" && this.listenerCount("pending") === 0 && (this._pendingFilter = null), super._stopEvent(e);
  }
  static hexlifyTransaction(e, t) {
    const r = $t(aO);
    if (t)
      for (const s in t)
        t[s] && (r[s] = !0);
    K0(e, r);
    const i = {};
    return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function(s) {
      if (e[s] == null)
        return;
      const a = Xd(W.from(e[s]));
      s === "gasLimit" && (s = "gas"), i[s] = a;
    }), ["from", "to", "data"].forEach(function(s) {
      e[s] != null && (i[s] = K(e[s]));
    }), e.accessList && (i.accessList = Va(e.accessList)), i;
  }
}
const uO = "ethers/5.7.2";
new O(uO);
var lO = Object.defineProperty, cO = Object.getOwnPropertyDescriptor, dO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? cO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && lO(e, t, i), i;
}, uu = (n, e) => (t, r) => e(t, r, n);
const Y6 = he.createInterface("EthereumService");
let il = class {
  constructor(n, e, t, r, i) {
    this.eventAggregator = n, this.logger = e, this.configuration = t, this.readOnlyProvider = r, this.walletConnector = i, this.logger = e.scopeTo("EthereumService");
  }
  static register(n) {
    pe.singleton(Y6, il).register(n);
  }
  get targetedChainId() {
    return this.configuration.chainId;
  }
  lastBlock;
  async connect(n) {
    return n ? await this.walletConnector.connectTo(n) : await this.walletConnector.connect();
  }
  async getMetaMaskProvider() {
    const n = await L9({ mustBeMetaMask: !0 });
    if (!n)
      return null;
    if (!!await n._metamask.isUnlocked() && !!(await n.request({ method: "eth_accounts" })).length)
      return n;
  }
  async getAccountsForProvider(n) {
    return $a.isSigner(n) ? [await n.getAddress()] : await n.listAccounts();
  }
  async switchToTargetedNetwork(n) {
    try {
      return await n.provider.request?.({
        method: "wallet_switchEthereumChain",
        params: [{ chainId: `0x${this.targetedChainId.toString(16)}` }]
      }), n.provider;
    } catch (e) {
      if (e.code !== 4902)
        return;
      throw new Error(`The ${this.configuration.chain} network is not installed in your Metamask configuration`);
    }
  }
  async addTokenToMetamask(n, e, t, r, i) {
    try {
      await n.request({
        method: "wallet_watchAsset",
        params: {
          type: "ERC20",
          options: {
            address: e,
            symbol: t,
            decimals: r,
            image: i
          }
        }
      });
    } catch (s) {
      this.logger.error(s);
    }
  }
  async getBlock(n) {
    const e = await this.readOnlyProvider.getBlock(n);
    return e.blockDate = new Date(e.timestamp * 1e3), e;
  }
  getEtherscanLink(n, e = !1) {
    return N9(this.configuration.scanLink, { type: e ? "tx" : "address", address: n });
  }
};
il = dO([
  uu(0, Ud),
  uu(1, Ra),
  uu(2, Nl),
  uu(3, Yd),
  uu(4, Ay)
], il);
var fO = Object.defineProperty, pO = Object.getOwnPropertyDescriptor, hO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? pO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && fO(e, t, i), i;
}, yO = (n, e) => (t, r) => e(t, r, n);
const X6 = he.createInterface("HttpService"), Z6 = { accept: "application/json" }, mO = { "content-type": "application/json", ...Z6 };
let hd = class {
  constructor(n) {
    this.logger = n, this.logger = n.scopeTo("HttpService");
  }
  static register(n) {
    n.register(pe.singleton(X6, hd));
  }
  async call(n, e, t) {
    const r = await fetch(n, {
      body: e,
      method: e ? "POST" : "GET",
      headers: e ? mO : Z6,
      ...t
    });
    if (r.ok)
      return await r.json();
    const i = new Error(await r.text());
    return this.logger.error({ response: r, error: i }), Promise.reject(i);
  }
};
hd = hO([
  yO(0, Ra)
], hd);
var bO = Object.defineProperty, gO = Object.getOwnPropertyDescriptor, vO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? gO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && bO(e, t, i), i;
}, e1 = (n, e) => (t, r) => e(t, r, n);
const e5 = he.createInterface("ObserverService");
let yd = class {
  constructor(n, e) {
    this.locator = n, this.cacheService = e;
  }
  static register(n) {
    n.register(pe.singleton(e5, yd));
  }
  listen(n, e, t) {
    const r = this.locator.getObserver(n, e), i = {
      handleChange: t
    };
    return r.subscribe(i), () => r.unsubscribe(i);
  }
};
yd = vO([
  e1(0, Pa),
  e1(1, Rl)
], yd);
var xO = Object.defineProperty, wO = Object.getOwnPropertyDescriptor, TO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? wO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && xO(e, t, i), i;
}, AO = (n, e) => (t, r) => e(t, r, n);
const t5 = he.createInterface("TimingService");
let md = class {
  constructor(n) {
    this.config = n;
  }
  static register(n) {
    pe.singleton(t5, md).register(n);
  }
  startTimer(n) {
    this.config.isDevelopment && console.time(n);
  }
  endTimer(n) {
    this.config.isDevelopment && console.timeEnd(n);
  }
};
md = TO([
  AO(0, Nl)
], md);
var CO = Object.defineProperty, SO = Object.getOwnPropertyDescriptor, EO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? SO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && CO(e, t, i), i;
}, or = (n, e) => (t, r) => e(t, r, n);
const _O = he.createInterface();
let Mh = class {
  constructor(n, e, t, r, i, s, a, o, u, l, c, p) {
    this.httpService = n, this.numberService = e, this.ethereumService = t, this.browserStorageService = r, this.timingService = i, this.cacheService = s, this.observerService = a, this.encryptionService = o, this.contractService = u, this.tokenService = l, this.ipfsService = c, this.configuration = p;
  }
  static register(n) {
    n.register(pe.singleton(_O, Mh)).register(yd).register(md).register(Jd).register(Zu).register(hd).register(el).register(il).register(dd).register(hy).register(cd).register(So).register(Eo);
  }
};
Mh = EO([
  or(0, X6),
  or(1, Bl),
  or(2, Y6),
  or(3, py),
  or(4, t5),
  or(5, Rl),
  or(6, e5),
  or(7, w6),
  or(8, Ko),
  or(9, dy),
  or(10, fy),
  or(11, Nl)
], Mh);
he.createInterface("DateServiceIntl");
var MO = Object.defineProperty, RO = Object.getOwnPropertyDescriptor, PO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? RO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && MO(e, t, i), i;
};
let t1 = class {
  disposables;
  constructor() {
    this.disposables = new Array();
  }
  push(n) {
    return this.disposables.push(n);
  }
  dispose(n) {
    if (n)
      this._dispose(n);
    else {
      for (n of this.disposables)
        n.dispose();
      this.disposables.length = 0;
    }
  }
  _dispose(n) {
    n.dispose(), this.disposables.splice(this.disposables.indexOf(n), 1);
  }
};
t1 = PO([
  ov()
], t1);
var OO = Object.defineProperty, IO = Object.getOwnPropertyDescriptor, kO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? IO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && OO(e, t, i), i;
}, DO = (n, e) => (t, r) => e(t, r, n);
const BO = he.createInterface("TransactionsService");
let bd = class {
  constructor(n) {
    this.eventAggregator = n;
  }
  static blocksToConfirm = 1;
  static register(n) {
    pe.singleton(BO, bd).register(n);
  }
  async send(n) {
    let e;
    try {
      this.eventAggregator.publish("transaction.sending");
      const t = await n();
      return this.eventAggregator.publish("transaction.sent", t), e = await t.wait(1), this.eventAggregator.publish("transaction.mined", { message: "Transaction was mined", receipt: e }), e = await t.wait(bd.blocksToConfirm), this.eventAggregator.publish("transaction.confirmed", { message: "Transaction was confirmed", receipt: e }), e;
    } catch (t) {
      return this.eventAggregator.publish("transaction.failed", t), null;
    }
  }
};
bd = kO([
  DO(0, Ud)
], bd);
var us = /* @__PURE__ */ ((n) => (n[n.NonStablecoin = 0] = "NonStablecoin", n[n.Stablecoin = 1] = "Stablecoin", n[n.Ecological = 2] = "Ecological", n))(us || {}), NO = Object.defineProperty, FO = Object.getOwnPropertyDescriptor, LO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? FO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && NO(e, t, i), i;
}, lu = (n, e) => (t, r) => e(t, r, n);
const Sy = he.createInterface("IContractStore");
let gd = class {
  constructor(n, e, t, r, i) {
    this.contractService = n, this.tokenService = e, this.logger = t, this.numberService = r, this.tokenInfo = i;
  }
  static register(n) {
    n.register(pe.singleton(Sy, gd));
  }
  async getAsset(n, e, t, r, i, s) {
    let a;
    e && (a = Number(e));
    const u = (await this.tokenInfo.tokens).find((T) => T.address === n && T.id == a);
    if (!u) {
      this.logger.error(`No token info was found for ${n}`);
      return;
    }
    const l = await this.tokenService.getTokenContract(n, u.id);
    if (s || (u.id ? s = await t.oraclePerERC721Id(n, u.id) : s = await t.oraclePerERC20(n)), !s || W.from(s).isZero())
      return;
    const p = await (await this.contractService.getContract("monetary", "Oracle", s)).getData();
    if (!p[1])
      return;
    u.price = this.numberService.fromString(Qt(p[0], 18));
    let b = U2(1, 18), A;
    u.id || (A = await l.totalSupply(), b = await l.balanceOf(r));
    let g;
    u.id ? g = us.Ecological : g = await t.assetTypeOfERC20(n), i && this.populateTransactionsForAsset(i, l, r, u);
    const w = {
      quantity: b,
      token: u,
      total: 0,
      type: g,
      totalSupply: A
    };
    return w.total = u.id ? u.price : this.numberService.fromString(Qt(w.quantity, 18)) * u.price, w;
  }
  async populateTransactionsForAsset(n, e, t, r) {
    const i = await e.queryFilter(e.filters.Transfer(void 0, t)), s = await this.mapTransactions(i, "deposit", r);
    n.push(...s);
    const a = await e.queryFilter(e.filters.Transfer(t)), o = await this.mapTransactions(a, "withdrawl", r);
    n.push(...o);
  }
  async mapTransactions(n, e, t) {
    return await Promise.all(
      n.map(async (r) => {
        const i = await r.getBlock();
        return {
          address: e === "deposit" ? r.args.from : r.args.to,
          amount: "amount" in r.args ? r.args.amount : U2(1, 18),
          date: i.timestamp,
          id: r.transactionHash,
          token: t,
          type: e
        };
      })
    );
  }
};
gd = LO([
  lu(0, Ko),
  lu(1, dy),
  lu(2, Ra),
  lu(3, Bl),
  lu(4, v6)
], gd);
var $O = Object.defineProperty, UO = Object.getOwnPropertyDescriptor, VO = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? UO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && $O(e, t, i), i;
}, jO = (n, e) => (t, r) => e(t, r, n);
const Ey = he.createInterface("DataStore");
let vd = class {
  constructor(n) {
    this.firebaseService = n;
  }
  static register(n) {
    n.register(pe.singleton(Ey, vd));
  }
  async getDocs(...n) {
    return this.firebaseService.getDocs(...n);
  }
};
vd = VO([
  jO(0, cy)
], vd);
function ff(n = "") {
  const e = /* @__PURE__ */ new WeakMap();
  return function(t, r, i) {
    const s = t[r];
    if (typeof s != "function")
      throw { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_49136_EKEVELYUTXLNXMPA", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", FPS_BROWSER_APP_PROFILE_STRING: "Internet Explorer", FPS_BROWSER_USER_PROFILE_STRING: "Default", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Program Files (x86)\\IncrediBuild;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\.dotnet\\tools", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" }.NODE_ENV !== "production" ? new Error(`ER: @callOnce: Invalid decorator target: "${String(r)}", can only be used on a method.`) : new Error(`ER: @callOnce: > ${String(r)}`);
    i.value = function(...a) {
      if (e.has(this))
        return { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_49136_EKEVELYUTXLNXMPA", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", FPS_BROWSER_APP_PROFILE_STRING: "Internet Explorer", FPS_BROWSER_USER_PROFILE_STRING: "Default", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Program Files (x86)\\IncrediBuild;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\.dotnet\\tools", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" }.NODE_ENV !== "production" && n && (console.warn(`Warning: @callOnce: ${String(r)} ${n}`), console.warn(new Error().stack)), e.get(this);
      const o = s.apply(this, a);
      return e.set(this, o), o;
    };
  };
}
var GO = Object.defineProperty, WO = Object.getOwnPropertyDescriptor, n5 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? WO(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && GO(e, t, i), i;
}, ac = (n, e) => (t, r) => e(t, r, n);
const r5 = he.createInterface("TreasuryStore");
let sl = class {
  constructor(n, e, t, r) {
    this.numberService = n, this.contractStore = e, this.contractService = t, this.dataStore = r;
  }
  totalSupply;
  totalValuation;
  treasuryDistribution;
  reservesDistribution;
  treasuryContract;
  lastRebaseTime;
  treasuryAssets = [];
  transactions = [];
  static register(n) {
    n.register(pe.singleton(r5, sl));
  }
  get treasuryValue() {
    return this.treasuryAssets?.length === 0 ? 0 : this.treasuryAssets?.map((n) => n?.total ?? 0).sum() ?? 0;
  }
  async loadTokenData() {
    if (this.totalValuation && this.totalSupply)
      return;
    const n = await this.getTreasuryContract();
    this.totalValuation = await n.totalValuation(), this.totalSupply = await n.totalSupply(), this.treasuryDistribution = (await this.getDistributionPercentage("Treasury")).toNumber() / 100, this.reservesDistribution = (await this.getDistributionPercentage("Reserve")).toNumber() / 100;
  }
  async loadAssets() {
    const n = await this.getTreasuryContract(), e = n.address;
    if (!e)
      return;
    const t = (await Promise.all([
      n.allRegisteredERC20s().then((r) => r.map((i) => ({ tokenId: void 0, address: i }))),
      n.allRegisteredERC721Ids().then((r) => r.map((i) => ({ tokenId: i.id, address: i.erc721 })))
    ])).flatMap((r) => r);
    this.treasuryAssets = (await Promise.all(
      t.map(
        (r) => this.contractStore.getAsset(r.address, r.tokenId, n, e, this.transactions).catch()
      )
    )).filter(Boolean);
  }
  async getValueOverTime(n) {
    const e = W6(n), r = (await this.dataStore.getDocs(
      `chartData/ktt/${G6(n)}`,
      "createdAt",
      "desc",
      { fieldPath: "createdAt", opStr: ">=", value: e }
    )).map((a) => ({
      createdAt: new Date(a.createdAt),
      value: this.numberService.fromString(Qt(a.value, 18))
    }));
    r.sort((a, o) => new Date(a.createdAt).getTime() - new Date(o.createdAt).getTime());
    const s = await (await this.getTreasuryContract()).totalValuation();
    return r.push({
      createdAt: new Date(),
      value: this.numberService.fromString(Qt(s, 18))
    }), r;
  }
  async getLastRebaseTime() {
    const n = await this.getTreasuryContract(), e = await n.queryFilter(n.filters.Rebase());
    e.sort((t, r) => r.blockNumber - t.blockNumber), this.lastRebaseTime = e[0] && new Date((await e[0].getBlock()).timestamp * 1e3);
  }
  get circulatingDistribution() {
    return this.treasuryDistribution == null || this.reservesDistribution == null ? 0 : 1 - (this.treasuryDistribution + this.reservesDistribution);
  }
  get currentPrice() {
    return !this.totalSupply || !this.totalValuation ? 0 : Number(Qt(this.totalSupply, 18)) / Number(Qt(this.totalValuation, 18));
  }
  async getTreasuryContract() {
    return this.treasuryContract ? this.treasuryContract : (this.treasuryContract = await this.contractService.getContract("monetary", "Treasury"), this.treasuryContract);
  }
  async getDistributionPercentage(n) {
    const e = (await this.contractService.getContract("monetary", n)).address;
    return !e || !this.totalSupply ? W.from(0) : (await (await this.getTreasuryContract()).balanceOf(e)).div(this.totalSupply);
  }
};
n5([
  ff()
], sl.prototype, "loadAssets", 1);
sl = n5([
  ac(0, Bl),
  ac(1, Sy),
  ac(2, Ko),
  ac(3, Ey)
], sl);
const zO = "Kolektivo Tokenlist", HO = "2022-08-16T22:25:12+00:00", KO = {
  major: 1,
  minor: 2,
  patch: 0
}, qO = [
  "kolektivo",
  "tokens"
], QO = [
  {
    address: "0x74b06277Cd1efaA9f6595D25AdB54b4530d15BF5",
    chainId: 42220,
    name: "Kolektivo Treasury Token",
    symbol: "KTT",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/ktt.svg"
  },
  {
    address: "0xf4cb43D02842c65101e5DA329ED01dFeC2280EdA",
    chainId: 42220,
    name: "Kolektivo Curacao Token",
    symbol: "kCUR",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/kcur.svg"
  },
  {
    address: "0x4cB13ED364bd2c212B694921CdAca979DCA76054",
    chainId: 42220,
    name: "Test Token #1",
    symbol: "TT1",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/tt1.svg"
  },
  {
    address: "0x5bFE78b0d15eF0cdcA4077336e0bEbEc15CFb142",
    chainId: 42220,
    name: "Test Token #2",
    symbol: "TT2",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/tt1.svg"
  },
  {
    address: "0xd312bCeA257799a39e0C85d7EC45031612e4dd50",
    chainId: 42220,
    name: "Test Token #3",
    symbol: "TT3",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/tt1.svg"
  },
  {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    chainId: 42220,
    name: "GeoNFT #1",
    symbol: "GEO1",
    decimals: 1,
    id: 1,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/geo1.svg"
  },
  {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    chainId: 42220,
    name: "GeoNFT #2",
    symbol: "GEO2",
    decimals: 1,
    id: 2,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/geo1.svg"
  }
], JO = {
  name: zO,
  timestamp: HO,
  version: KO,
  keywords: qO,
  tokens: QO
}, YO = new O("CeloNetworks"), n1 = [
  {
    name: "celo",
    chainId: 42220
  },
  {
    name: "alfajores",
    chainId: 44787
  },
  {
    name: "baklava",
    chainId: 62320
  }
];
function Rh(n) {
  {
    if (n == null)
      return null;
    if (typeof n == "number") {
      const e = n1.filter((t) => t.chainId === n);
      return e.length ? { name: e[0].name, chainId: e[0].chainId } : {
        name: "unknown",
        chainId: n
      };
    }
    if (typeof n == "string") {
      const e = n1.filter((t) => t.name === n);
      return e.length ? { name: e[0].name, chainId: e[0].chainId } : null;
    }
    if (typeof n.name == "string" && typeof n.chainId == "number") {
      const e = Rh(n.name), t = Rh(n.chainId);
      if (e == null && t == null)
        return {
          name: n.name,
          chainId: n.chainId
        };
      if (e && t && e.name === t.name && e.chainId === t.chainId)
        return e;
    }
    return YO.throwArgumentError("network chainId mismatch", "network", n);
  }
}
const XO = new O("celo/transactions");
function ZO(n) {
  const e = Il(n);
  e.length !== 12 && e.length !== 9 && XO.throwArgumentError("invalid raw transaction", "rawTransaction", n);
  const t = {
    nonce: cu(e[0]).toNumber(),
    gasPrice: cu(e[1]),
    gasLimit: cu(e[2]),
    feeCurrency: Rp(e[3]),
    gatewayFeeRecipient: Rp(e[4]),
    gatewayFee: cu(e[5]),
    to: Rp(e[6]),
    value: cu(e[7]),
    data: e[8],
    chainId: 0
  };
  if (e.length === 9)
    return t;
  try {
    t.v = W.from(e[9]).toNumber();
  } catch (r) {
    return console.log(r), t;
  }
  if (t.r = Be(e[10], 32), t.s = Be(e[11], 32), W.from(t.r).isZero() && W.from(t.s).isZero())
    t.chainId = t.v, t.v = 0;
  else {
    t.chainId = Math.floor((t.v - 35) / 2), t.chainId < 0 && (t.chainId = 0);
    let r = t.v - 27;
    const i = e.slice(0, 6);
    t.chainId !== 0 && (i.push(K(t.chainId)), i.push("0x"), i.push("0x"), r -= t.chainId * 2 + 8);
    const s = Ie(Ss(i));
    try {
      t.from = Ho(s, {
        r: K(t.r),
        s: K(t.s),
        recoveryParam: r
      });
    } catch (a) {
      console.log(a);
    }
    t.hash = Ie(n);
  }
  return t;
}
function Rp(n) {
  if (n !== "0x")
    try {
      return De(n);
    } catch {
      return n;
    }
}
function cu(n) {
  return n === "0x" ? Y0 : W.from(n);
}
const eI = new O("CeloProvider");
class tI extends oO {
  constructor(e, t) {
    super(e, t);
    const r = this.formatter.formats.block;
    r.gasLimit = () => W.from(0), r.nonce = () => "", r.difficulty = () => 0;
    const i = this.formatter.formats.blockWithTransactions;
    i.gasLimit = () => W.from(0), i.nonce = () => "", i.difficulty = () => 0;
  }
  async sendTransaction(e) {
    await this.getNetwork();
    const t = await Promise.resolve(e), r = K(t), i = ZO(t);
    try {
      const s = await this.perform("sendTransaction", {
        signedTransaction: r
      });
      return this._wrapTransaction(i, s);
    } catch (s) {
      throw s.transaction = i, s.transactionHash = i.hash, s;
    }
  }
  async getGasPrice(e) {
    await this.getNetwork();
    const t = e ? { feeCurrencyAddress: e } : {};
    return W.from(await this.perform("getGasPrice", t));
  }
  prepareRequest(e, t) {
    return e === "getGasPrice" ? ["eth_gasPrice", t.feeCurrencyAddress ? [t.feeCurrencyAddress] : []] : super.prepareRequest(e, t);
  }
  static getNetwork(e) {
    const t = Rh(e ?? "celo");
    return t ?? eI.throwError(`unknown network: ${JSON.stringify(t)}`, O.errors.UNSUPPORTED_OPERATION, {
      operation: "getNetwork",
      value: e
    });
  }
}
const WL = new O("CeloWallet"), zL = [
  O.errors.INSUFFICIENT_FUNDS,
  O.errors.NONCE_EXPIRED,
  O.errors.REPLACEMENT_UNDERPRICED
];
const nI = {
  authDomain: "kolektivo-36b63.firebaseapp.com",
  projectId: "kolektivo-36b63",
  storageBucket: "kolektivo-36b63.appspot.com",
  messagingSenderId: "324595180464",
  appId: "1:324595180464:web:69e6b83cdba3bf2d30ac75",
  measurementId: "G-7BSHV1Y6VS"
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const i5 = function(n) {
  const e = [];
  let t = 0;
  for (let r = 0; r < n.length; r++) {
    let i = n.charCodeAt(r);
    i < 128 ? e[t++] = i : i < 2048 ? (e[t++] = i >> 6 | 192, e[t++] = i & 63 | 128) : (i & 64512) === 55296 && r + 1 < n.length && (n.charCodeAt(r + 1) & 64512) === 56320 ? (i = 65536 + ((i & 1023) << 10) + (n.charCodeAt(++r) & 1023), e[t++] = i >> 18 | 240, e[t++] = i >> 12 & 63 | 128, e[t++] = i >> 6 & 63 | 128, e[t++] = i & 63 | 128) : (e[t++] = i >> 12 | 224, e[t++] = i >> 6 & 63 | 128, e[t++] = i & 63 | 128);
  }
  return e;
}, rI = function(n) {
  const e = [];
  let t = 0, r = 0;
  for (; t < n.length; ) {
    const i = n[t++];
    if (i < 128)
      e[r++] = String.fromCharCode(i);
    else if (i > 191 && i < 224) {
      const s = n[t++];
      e[r++] = String.fromCharCode((i & 31) << 6 | s & 63);
    } else if (i > 239 && i < 365) {
      const s = n[t++], a = n[t++], o = n[t++], u = ((i & 7) << 18 | (s & 63) << 12 | (a & 63) << 6 | o & 63) - 65536;
      e[r++] = String.fromCharCode(55296 + (u >> 10)), e[r++] = String.fromCharCode(56320 + (u & 1023));
    } else {
      const s = n[t++], a = n[t++];
      e[r++] = String.fromCharCode((i & 15) << 12 | (s & 63) << 6 | a & 63);
    }
  }
  return e.join("");
}, s5 = {
  byteToCharMap_: null,
  charToByteMap_: null,
  byteToCharMapWebSafe_: null,
  charToByteMapWebSafe_: null,
  ENCODED_VALS_BASE: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
  get ENCODED_VALS() {
    return this.ENCODED_VALS_BASE + "+/=";
  },
  get ENCODED_VALS_WEBSAFE() {
    return this.ENCODED_VALS_BASE + "-_.";
  },
  HAS_NATIVE_SUPPORT: typeof atob == "function",
  encodeByteArray(n, e) {
    if (!Array.isArray(n))
      throw Error("encodeByteArray takes an array as a parameter");
    this.init_();
    const t = e ? this.byteToCharMapWebSafe_ : this.byteToCharMap_, r = [];
    for (let i = 0; i < n.length; i += 3) {
      const s = n[i], a = i + 1 < n.length, o = a ? n[i + 1] : 0, u = i + 2 < n.length, l = u ? n[i + 2] : 0, c = s >> 2, p = (s & 3) << 4 | o >> 4;
      let b = (o & 15) << 2 | l >> 6, A = l & 63;
      u || (A = 64, a || (b = 64)), r.push(t[c], t[p], t[b], t[A]);
    }
    return r.join("");
  },
  encodeString(n, e) {
    return this.HAS_NATIVE_SUPPORT && !e ? btoa(n) : this.encodeByteArray(i5(n), e);
  },
  decodeString(n, e) {
    return this.HAS_NATIVE_SUPPORT && !e ? atob(n) : rI(this.decodeStringToByteArray(n, e));
  },
  decodeStringToByteArray(n, e) {
    this.init_();
    const t = e ? this.charToByteMapWebSafe_ : this.charToByteMap_, r = [];
    for (let i = 0; i < n.length; ) {
      const s = t[n.charAt(i++)], o = i < n.length ? t[n.charAt(i)] : 0;
      ++i;
      const l = i < n.length ? t[n.charAt(i)] : 64;
      ++i;
      const p = i < n.length ? t[n.charAt(i)] : 64;
      if (++i, s == null || o == null || l == null || p == null)
        throw Error();
      const b = s << 2 | o >> 4;
      if (r.push(b), l !== 64) {
        const A = o << 4 & 240 | l >> 2;
        if (r.push(A), p !== 64) {
          const g = l << 6 & 192 | p;
          r.push(g);
        }
      }
    }
    return r;
  },
  init_() {
    if (!this.byteToCharMap_) {
      this.byteToCharMap_ = {}, this.charToByteMap_ = {}, this.byteToCharMapWebSafe_ = {}, this.charToByteMapWebSafe_ = {};
      for (let n = 0; n < this.ENCODED_VALS.length; n++)
        this.byteToCharMap_[n] = this.ENCODED_VALS.charAt(n), this.charToByteMap_[this.byteToCharMap_[n]] = n, this.byteToCharMapWebSafe_[n] = this.ENCODED_VALS_WEBSAFE.charAt(n), this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[n]] = n, n >= this.ENCODED_VALS_BASE.length && (this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(n)] = n, this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(n)] = n);
    }
  }
}, iI = function(n) {
  const e = i5(n);
  return s5.encodeByteArray(e, !0);
}, xd = function(n) {
  return iI(n).replace(/\./g, "");
}, sI = function(n) {
  try {
    return s5.decodeString(n, !0);
  } catch (e) {
    console.error("base64Decode failed: ", e);
  }
  return null;
};
function aI() {
  return typeof indexedDB == "object";
}
function oI() {
  return new Promise((n, e) => {
    try {
      let t = !0;
      const r = "validate-browser-context-for-indexeddb-analytics-module", i = self.indexedDB.open(r);
      i.onsuccess = () => {
        i.result.close(), t || self.indexedDB.deleteDatabase(r), n(!0);
      }, i.onupgradeneeded = () => {
        t = !1;
      }, i.onerror = () => {
        var s;
        e(((s = i.error) === null || s === void 0 ? void 0 : s.message) || "");
      };
    } catch (t) {
      e(t);
    }
  });
}
function uI() {
  if (typeof self < "u")
    return self;
  if (typeof window < "u")
    return window;
  if (typeof ga < "u")
    return ga;
  throw new Error("Unable to locate global object.");
}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const lI = () => uI().__FIREBASE_DEFAULTS__, cI = () => {
  if (typeof Ec > "u" || typeof { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_49136_EKEVELYUTXLNXMPA", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", FPS_BROWSER_APP_PROFILE_STRING: "Internet Explorer", FPS_BROWSER_USER_PROFILE_STRING: "Default", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Program Files (x86)\\IncrediBuild;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\.dotnet\\tools", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" } > "u")
    return;
  const n = { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_49136_EKEVELYUTXLNXMPA", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", FPS_BROWSER_APP_PROFILE_STRING: "Internet Explorer", FPS_BROWSER_USER_PROFILE_STRING: "Default", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Program Files (x86)\\IncrediBuild;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\.dotnet\\tools", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" }.__FIREBASE_DEFAULTS__;
  if (n)
    return JSON.parse(n);
}, dI = () => {
  if (typeof document > "u")
    return;
  let n;
  try {
    n = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);
  } catch {
    return;
  }
  const e = n && sI(n[1]);
  return e && JSON.parse(e);
}, a5 = () => {
  try {
    return lI() || cI() || dI();
  } catch (n) {
    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${n}`);
    return;
  }
}, fI = (n) => {
  var e, t;
  return (t = (e = a5()) === null || e === void 0 ? void 0 : e.emulatorHosts) === null || t === void 0 ? void 0 : t[n];
}, pI = (n) => {
  const e = fI(n);
  if (!e)
    return;
  const t = e.lastIndexOf(":");
  if (t <= 0 || t + 1 === e.length)
    throw new Error(`Invalid host ${e} with no separate hostname and port!`);
  const r = parseInt(e.substring(t + 1), 10);
  return e[0] === "[" ? [e.substring(1, t - 1), r] : [e.substring(0, t), r];
}, hI = () => {
  var n;
  return (n = a5()) === null || n === void 0 ? void 0 : n.config;
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class yI {
  constructor() {
    this.reject = () => {
    }, this.resolve = () => {
    }, this.promise = new Promise((e, t) => {
      this.resolve = e, this.reject = t;
    });
  }
  wrapCallback(e) {
    return (t, r) => {
      t ? this.reject(t) : this.resolve(r), typeof e == "function" && (this.promise.catch(() => {
      }), e.length === 1 ? e(t) : e(t, r));
    };
  }
}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function mI(n, e) {
  if (n.uid)
    throw new Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');
  const t = {
    alg: "none",
    type: "JWT"
  }, r = e || "demo-project", i = n.iat || 0, s = n.sub || n.user_id;
  if (!s)
    throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
  const a = Object.assign({
    iss: `https://securetoken.google.com/${r}`,
    aud: r,
    iat: i,
    exp: i + 3600,
    auth_time: i,
    sub: s,
    user_id: s,
    firebase: {
      sign_in_provider: "custom",
      identities: {}
    }
  }, n), o = "";
  return [
    xd(JSON.stringify(t)),
    xd(JSON.stringify(a)),
    o
  ].join(".");
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const bI = "FirebaseError";
class qo extends Error {
  constructor(e, t, r) {
    super(t), this.code = e, this.customData = r, this.name = bI, Object.setPrototypeOf(this, qo.prototype), Error.captureStackTrace && Error.captureStackTrace(this, o5.prototype.create);
  }
}
class o5 {
  constructor(e, t, r) {
    this.service = e, this.serviceName = t, this.errors = r;
  }
  create(e, ...t) {
    const r = t[0] || {}, i = `${this.service}/${e}`, s = this.errors[e], a = s ? gI(s, r) : "Error", o = `${this.serviceName}: ${a} (${i}).`;
    return new qo(i, o, r);
  }
}
function gI(n, e) {
  return n.replace(vI, (t, r) => {
    const i = e[r];
    return i != null ? String(i) : `<${r}?>`;
  });
}
const vI = /\{\$([^}]+)}/g;
function wd(n, e) {
  if (n === e)
    return !0;
  const t = Object.keys(n), r = Object.keys(e);
  for (const i of t) {
    if (!r.includes(i))
      return !1;
    const s = n[i], a = e[i];
    if (r1(s) && r1(a)) {
      if (!wd(s, a))
        return !1;
    } else if (s !== a)
      return !1;
  }
  for (const i of r)
    if (!t.includes(i))
      return !1;
  return !0;
}
function r1(n) {
  return n !== null && typeof n == "object";
}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Ht(n) {
  return n && n._delegate ? n._delegate : n;
}
class al {
  constructor(e, t, r) {
    this.name = e, this.instanceFactory = t, this.type = r, this.multipleInstances = !1, this.serviceProps = {}, this.instantiationMode = "LAZY", this.onInstanceCreated = null;
  }
  setInstantiationMode(e) {
    return this.instantiationMode = e, this;
  }
  setMultipleInstances(e) {
    return this.multipleInstances = e, this;
  }
  setServiceProps(e) {
    return this.serviceProps = e, this;
  }
  setInstanceCreatedCallback(e) {
    return this.onInstanceCreated = e, this;
  }
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const ia = "[DEFAULT]";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class xI {
  constructor(e, t) {
    this.name = e, this.container = t, this.component = null, this.instances = /* @__PURE__ */ new Map(), this.instancesDeferred = /* @__PURE__ */ new Map(), this.instancesOptions = /* @__PURE__ */ new Map(), this.onInitCallbacks = /* @__PURE__ */ new Map();
  }
  get(e) {
    const t = this.normalizeInstanceIdentifier(e);
    if (!this.instancesDeferred.has(t)) {
      const r = new yI();
      if (this.instancesDeferred.set(t, r), this.isInitialized(t) || this.shouldAutoInitialize())
        try {
          const i = this.getOrInitializeService({
            instanceIdentifier: t
          });
          i && r.resolve(i);
        } catch {
        }
    }
    return this.instancesDeferred.get(t).promise;
  }
  getImmediate(e) {
    var t;
    const r = this.normalizeInstanceIdentifier(e?.identifier), i = (t = e?.optional) !== null && t !== void 0 ? t : !1;
    if (this.isInitialized(r) || this.shouldAutoInitialize())
      try {
        return this.getOrInitializeService({
          instanceIdentifier: r
        });
      } catch (s) {
        if (i)
          return null;
        throw s;
      }
    else {
      if (i)
        return null;
      throw Error(`Service ${this.name} is not available`);
    }
  }
  getComponent() {
    return this.component;
  }
  setComponent(e) {
    if (e.name !== this.name)
      throw Error(`Mismatching Component ${e.name} for Provider ${this.name}.`);
    if (this.component)
      throw Error(`Component for ${this.name} has already been provided`);
    if (this.component = e, !!this.shouldAutoInitialize()) {
      if (TI(e))
        try {
          this.getOrInitializeService({ instanceIdentifier: ia });
        } catch {
        }
      for (const [t, r] of this.instancesDeferred.entries()) {
        const i = this.normalizeInstanceIdentifier(t);
        try {
          const s = this.getOrInitializeService({
            instanceIdentifier: i
          });
          r.resolve(s);
        } catch {
        }
      }
    }
  }
  clearInstance(e = ia) {
    this.instancesDeferred.delete(e), this.instancesOptions.delete(e), this.instances.delete(e);
  }
  async delete() {
    const e = Array.from(this.instances.values());
    await Promise.all([
      ...e.filter((t) => "INTERNAL" in t).map((t) => t.INTERNAL.delete()),
      ...e.filter((t) => "_delete" in t).map((t) => t._delete())
    ]);
  }
  isComponentSet() {
    return this.component != null;
  }
  isInitialized(e = ia) {
    return this.instances.has(e);
  }
  getOptions(e = ia) {
    return this.instancesOptions.get(e) || {};
  }
  initialize(e = {}) {
    const { options: t = {} } = e, r = this.normalizeInstanceIdentifier(e.instanceIdentifier);
    if (this.isInitialized(r))
      throw Error(`${this.name}(${r}) has already been initialized`);
    if (!this.isComponentSet())
      throw Error(`Component ${this.name} has not been registered yet`);
    const i = this.getOrInitializeService({
      instanceIdentifier: r,
      options: t
    });
    for (const [s, a] of this.instancesDeferred.entries()) {
      const o = this.normalizeInstanceIdentifier(s);
      r === o && a.resolve(i);
    }
    return i;
  }
  onInit(e, t) {
    var r;
    const i = this.normalizeInstanceIdentifier(t), s = (r = this.onInitCallbacks.get(i)) !== null && r !== void 0 ? r : /* @__PURE__ */ new Set();
    s.add(e), this.onInitCallbacks.set(i, s);
    const a = this.instances.get(i);
    return a && e(a, i), () => {
      s.delete(e);
    };
  }
  invokeOnInitCallbacks(e, t) {
    const r = this.onInitCallbacks.get(t);
    if (!!r)
      for (const i of r)
        try {
          i(e, t);
        } catch {
        }
  }
  getOrInitializeService({ instanceIdentifier: e, options: t = {} }) {
    let r = this.instances.get(e);
    if (!r && this.component && (r = this.component.instanceFactory(this.container, {
      instanceIdentifier: wI(e),
      options: t
    }), this.instances.set(e, r), this.instancesOptions.set(e, t), this.invokeOnInitCallbacks(r, e), this.component.onInstanceCreated))
      try {
        this.component.onInstanceCreated(this.container, e, r);
      } catch {
      }
    return r || null;
  }
  normalizeInstanceIdentifier(e = ia) {
    return this.component ? this.component.multipleInstances ? e : ia : e;
  }
  shouldAutoInitialize() {
    return !!this.component && this.component.instantiationMode !== "EXPLICIT";
  }
}
function wI(n) {
  return n === ia ? void 0 : n;
}
function TI(n) {
  return n.instantiationMode === "EAGER";
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class AI {
  constructor(e) {
    this.name = e, this.providers = /* @__PURE__ */ new Map();
  }
  addComponent(e) {
    const t = this.getProvider(e.name);
    if (t.isComponentSet())
      throw new Error(`Component ${e.name} has already been registered with ${this.name}`);
    t.setComponent(e);
  }
  addOrOverwriteComponent(e) {
    this.getProvider(e.name).isComponentSet() && this.providers.delete(e.name), this.addComponent(e);
  }
  getProvider(e) {
    if (this.providers.has(e))
      return this.providers.get(e);
    const t = new xI(e, this);
    return this.providers.set(e, t), t;
  }
  getProviders() {
    return Array.from(this.providers.values());
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Ne;
(function(n) {
  n[n.DEBUG = 0] = "DEBUG", n[n.VERBOSE = 1] = "VERBOSE", n[n.INFO = 2] = "INFO", n[n.WARN = 3] = "WARN", n[n.ERROR = 4] = "ERROR", n[n.SILENT = 5] = "SILENT";
})(Ne || (Ne = {}));
const CI = {
  debug: Ne.DEBUG,
  verbose: Ne.VERBOSE,
  info: Ne.INFO,
  warn: Ne.WARN,
  error: Ne.ERROR,
  silent: Ne.SILENT
}, SI = Ne.INFO, EI = {
  [Ne.DEBUG]: "log",
  [Ne.VERBOSE]: "log",
  [Ne.INFO]: "info",
  [Ne.WARN]: "warn",
  [Ne.ERROR]: "error"
}, _I = (n, e, ...t) => {
  if (e < n.logLevel)
    return;
  const r = new Date().toISOString(), i = EI[e];
  if (i)
    console[i](`[${r}]  ${n.name}:`, ...t);
  else
    throw new Error(`Attempted to log a message with an invalid logType (value: ${e})`);
};
class u5 {
  constructor(e) {
    this.name = e, this._logLevel = SI, this._logHandler = _I, this._userLogHandler = null;
  }
  get logLevel() {
    return this._logLevel;
  }
  set logLevel(e) {
    if (!(e in Ne))
      throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);
    this._logLevel = e;
  }
  setLogLevel(e) {
    this._logLevel = typeof e == "string" ? CI[e] : e;
  }
  get logHandler() {
    return this._logHandler;
  }
  set logHandler(e) {
    if (typeof e != "function")
      throw new TypeError("Value assigned to `logHandler` must be a function");
    this._logHandler = e;
  }
  get userLogHandler() {
    return this._userLogHandler;
  }
  set userLogHandler(e) {
    this._userLogHandler = e;
  }
  debug(...e) {
    this._userLogHandler && this._userLogHandler(this, Ne.DEBUG, ...e), this._logHandler(this, Ne.DEBUG, ...e);
  }
  log(...e) {
    this._userLogHandler && this._userLogHandler(this, Ne.VERBOSE, ...e), this._logHandler(this, Ne.VERBOSE, ...e);
  }
  info(...e) {
    this._userLogHandler && this._userLogHandler(this, Ne.INFO, ...e), this._logHandler(this, Ne.INFO, ...e);
  }
  warn(...e) {
    this._userLogHandler && this._userLogHandler(this, Ne.WARN, ...e), this._logHandler(this, Ne.WARN, ...e);
  }
  error(...e) {
    this._userLogHandler && this._userLogHandler(this, Ne.ERROR, ...e), this._logHandler(this, Ne.ERROR, ...e);
  }
}
const MI = (n, e) => e.some((t) => n instanceof t);
let i1, s1;
function RI() {
  return i1 || (i1 = [
    IDBDatabase,
    IDBObjectStore,
    IDBIndex,
    IDBCursor,
    IDBTransaction
  ]);
}
function PI() {
  return s1 || (s1 = [
    IDBCursor.prototype.advance,
    IDBCursor.prototype.continue,
    IDBCursor.prototype.continuePrimaryKey
  ]);
}
const l5 = /* @__PURE__ */ new WeakMap(), Ph = /* @__PURE__ */ new WeakMap(), c5 = /* @__PURE__ */ new WeakMap(), Pp = /* @__PURE__ */ new WeakMap(), _y = /* @__PURE__ */ new WeakMap();
function OI(n) {
  const e = new Promise((t, r) => {
    const i = () => {
      n.removeEventListener("success", s), n.removeEventListener("error", a);
    }, s = () => {
      t(vs(n.result)), i();
    }, a = () => {
      r(n.error), i();
    };
    n.addEventListener("success", s), n.addEventListener("error", a);
  });
  return e.then((t) => {
    t instanceof IDBCursor && l5.set(t, n);
  }).catch(() => {
  }), _y.set(e, n), e;
}
function II(n) {
  if (Ph.has(n))
    return;
  const e = new Promise((t, r) => {
    const i = () => {
      n.removeEventListener("complete", s), n.removeEventListener("error", a), n.removeEventListener("abort", a);
    }, s = () => {
      t(), i();
    }, a = () => {
      r(n.error || new DOMException("AbortError", "AbortError")), i();
    };
    n.addEventListener("complete", s), n.addEventListener("error", a), n.addEventListener("abort", a);
  });
  Ph.set(n, e);
}
let Oh = {
  get(n, e, t) {
    if (n instanceof IDBTransaction) {
      if (e === "done")
        return Ph.get(n);
      if (e === "objectStoreNames")
        return n.objectStoreNames || c5.get(n);
      if (e === "store")
        return t.objectStoreNames[1] ? void 0 : t.objectStore(t.objectStoreNames[0]);
    }
    return vs(n[e]);
  },
  set(n, e, t) {
    return n[e] = t, !0;
  },
  has(n, e) {
    return n instanceof IDBTransaction && (e === "done" || e === "store") ? !0 : e in n;
  }
};
function kI(n) {
  Oh = n(Oh);
}
function DI(n) {
  return n === IDBDatabase.prototype.transaction && !("objectStoreNames" in IDBTransaction.prototype) ? function(e, ...t) {
    const r = n.call(Op(this), e, ...t);
    return c5.set(r, e.sort ? e.sort() : [e]), vs(r);
  } : PI().includes(n) ? function(...e) {
    return n.apply(Op(this), e), vs(l5.get(this));
  } : function(...e) {
    return vs(n.apply(Op(this), e));
  };
}
function BI(n) {
  return typeof n == "function" ? DI(n) : (n instanceof IDBTransaction && II(n), MI(n, RI()) ? new Proxy(n, Oh) : n);
}
function vs(n) {
  if (n instanceof IDBRequest)
    return OI(n);
  if (Pp.has(n))
    return Pp.get(n);
  const e = BI(n);
  return e !== n && (Pp.set(n, e), _y.set(e, n)), e;
}
const Op = (n) => _y.get(n);
function NI(n, e, { blocked: t, upgrade: r, blocking: i, terminated: s } = {}) {
  const a = indexedDB.open(n, e), o = vs(a);
  return r && a.addEventListener("upgradeneeded", (u) => {
    r(vs(a.result), u.oldVersion, u.newVersion, vs(a.transaction));
  }), t && a.addEventListener("blocked", () => t()), o.then((u) => {
    s && u.addEventListener("close", () => s()), i && u.addEventListener("versionchange", () => i());
  }).catch(() => {
  }), o;
}
const FI = ["get", "getKey", "getAll", "getAllKeys", "count"], LI = ["put", "add", "delete", "clear"], Ip = /* @__PURE__ */ new Map();
function a1(n, e) {
  if (!(n instanceof IDBDatabase && !(e in n) && typeof e == "string"))
    return;
  if (Ip.get(e))
    return Ip.get(e);
  const t = e.replace(/FromIndex$/, ""), r = e !== t, i = LI.includes(t);
  if (!(t in (r ? IDBIndex : IDBObjectStore).prototype) || !(i || FI.includes(t)))
    return;
  const s = async function(a, ...o) {
    const u = this.transaction(a, i ? "readwrite" : "readonly");
    let l = u.store;
    return r && (l = l.index(o.shift())), (await Promise.all([
      l[t](...o),
      i && u.done
    ]))[0];
  };
  return Ip.set(e, s), s;
}
kI((n) => ({
  ...n,
  get: (e, t, r) => a1(e, t) || n.get(e, t, r),
  has: (e, t) => !!a1(e, t) || n.has(e, t)
}));
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class $I {
  constructor(e) {
    this.container = e;
  }
  getPlatformInfoString() {
    return this.container.getProviders().map((t) => {
      if (UI(t)) {
        const r = t.getImmediate();
        return `${r.library}/${r.version}`;
      } else
        return null;
    }).filter((t) => t).join(" ");
  }
}
function UI(n) {
  const e = n.getComponent();
  return e?.type === "VERSION";
}
const Ih = "@firebase/app", o1 = "0.8.4";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const wa = new u5("@firebase/app"), VI = "@firebase/app-compat", jI = "@firebase/analytics-compat", GI = "@firebase/analytics", WI = "@firebase/app-check-compat", zI = "@firebase/app-check", HI = "@firebase/auth", KI = "@firebase/auth-compat", qI = "@firebase/database", QI = "@firebase/database-compat", JI = "@firebase/functions", YI = "@firebase/functions-compat", XI = "@firebase/installations", ZI = "@firebase/installations-compat", ek = "@firebase/messaging", tk = "@firebase/messaging-compat", nk = "@firebase/performance", rk = "@firebase/performance-compat", ik = "@firebase/remote-config", sk = "@firebase/remote-config-compat", ak = "@firebase/storage", ok = "@firebase/storage-compat", uk = "@firebase/firestore", lk = "@firebase/firestore-compat", ck = "firebase", dk = "9.14.0";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Td = "[DEFAULT]", fk = {
  [Ih]: "fire-core",
  [VI]: "fire-core-compat",
  [GI]: "fire-analytics",
  [jI]: "fire-analytics-compat",
  [zI]: "fire-app-check",
  [WI]: "fire-app-check-compat",
  [HI]: "fire-auth",
  [KI]: "fire-auth-compat",
  [qI]: "fire-rtdb",
  [QI]: "fire-rtdb-compat",
  [JI]: "fire-fn",
  [YI]: "fire-fn-compat",
  [XI]: "fire-iid",
  [ZI]: "fire-iid-compat",
  [ek]: "fire-fcm",
  [tk]: "fire-fcm-compat",
  [nk]: "fire-perf",
  [rk]: "fire-perf-compat",
  [ik]: "fire-rc",
  [sk]: "fire-rc-compat",
  [ak]: "fire-gcs",
  [ok]: "fire-gcs-compat",
  [uk]: "fire-fst",
  [lk]: "fire-fst-compat",
  "fire-js": "fire-js",
  [ck]: "fire-js-all"
};
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Ad = /* @__PURE__ */ new Map(), kh = /* @__PURE__ */ new Map();
function pk(n, e) {
  try {
    n.container.addComponent(e);
  } catch (t) {
    wa.debug(`Component ${e.name} failed to register with FirebaseApp ${n.name}`, t);
  }
}
function Cd(n) {
  const e = n.name;
  if (kh.has(e))
    return wa.debug(`There were multiple attempts to register component ${e}.`), !1;
  kh.set(e, n);
  for (const t of Ad.values())
    pk(t, n);
  return !0;
}
function My(n, e) {
  const t = n.container.getProvider("heartbeat").getImmediate({ optional: !0 });
  return t && t.triggerHeartbeat(), n.container.getProvider(e);
}
function hk(n, e, t = Td) {
  My(n, e).clearInstance(t);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const yk = {
  ["no-app"]: "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
  ["bad-app-name"]: "Illegal App name: '{$appName}",
  ["duplicate-app"]: "Firebase App named '{$appName}' already exists with different options or config",
  ["app-deleted"]: "Firebase App named '{$appName}' already deleted",
  ["no-options"]: "Need to provide options, when not being deployed to hosting via source.",
  ["invalid-app-argument"]: "firebase.{$appName}() takes either no argument or a Firebase App instance.",
  ["invalid-log-argument"]: "First argument to `onLog` must be null or a function.",
  ["idb-open"]: "Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.",
  ["idb-get"]: "Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.",
  ["idb-set"]: "Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.",
  ["idb-delete"]: "Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}."
}, xs = new o5("app", "Firebase", yk);
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class mk {
  constructor(e, t, r) {
    this._isDeleted = !1, this._options = Object.assign({}, e), this._config = Object.assign({}, t), this._name = t.name, this._automaticDataCollectionEnabled = t.automaticDataCollectionEnabled, this._container = r, this.container.addComponent(new al("app", () => this, "PUBLIC"));
  }
  get automaticDataCollectionEnabled() {
    return this.checkDestroyed(), this._automaticDataCollectionEnabled;
  }
  set automaticDataCollectionEnabled(e) {
    this.checkDestroyed(), this._automaticDataCollectionEnabled = e;
  }
  get name() {
    return this.checkDestroyed(), this._name;
  }
  get options() {
    return this.checkDestroyed(), this._options;
  }
  get config() {
    return this.checkDestroyed(), this._config;
  }
  get container() {
    return this._container;
  }
  get isDeleted() {
    return this._isDeleted;
  }
  set isDeleted(e) {
    this._isDeleted = e;
  }
  checkDestroyed() {
    if (this.isDeleted)
      throw xs.create("app-deleted", { appName: this._name });
  }
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const bk = dk;
function d5(n, e = {}) {
  let t = n;
  typeof e != "object" && (e = { name: e });
  const r = Object.assign({ name: Td, automaticDataCollectionEnabled: !1 }, e), i = r.name;
  if (typeof i != "string" || !i)
    throw xs.create("bad-app-name", {
      appName: String(i)
    });
  if (t || (t = hI()), !t)
    throw xs.create("no-options");
  const s = Ad.get(i);
  if (s) {
    if (wd(t, s.options) && wd(r, s.config))
      return s;
    throw xs.create("duplicate-app", { appName: i });
  }
  const a = new AI(i);
  for (const u of kh.values())
    a.addComponent(u);
  const o = new mk(t, r, a);
  return Ad.set(i, o), o;
}
function gk(n = Td) {
  const e = Ad.get(n);
  if (!e && n === Td)
    return d5();
  if (!e)
    throw xs.create("no-app", { appName: n });
  return e;
}
function yo(n, e, t) {
  var r;
  let i = (r = fk[n]) !== null && r !== void 0 ? r : n;
  t && (i += `-${t}`);
  const s = i.match(/\s|\//), a = e.match(/\s|\//);
  if (s || a) {
    const o = [
      `Unable to register library "${i}" with version "${e}":`
    ];
    s && o.push(`library name "${i}" contains illegal characters (whitespace or "/")`), s && a && o.push("and"), a && o.push(`version name "${e}" contains illegal characters (whitespace or "/")`), wa.warn(o.join(" "));
    return;
  }
  Cd(new al(`${i}-version`, () => ({ library: i, version: e }), "VERSION"));
}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const vk = "firebase-heartbeat-database", xk = 1, ol = "firebase-heartbeat-store";
let kp = null;
function f5() {
  return kp || (kp = NI(vk, xk, {
    upgrade: (n, e) => {
      switch (e) {
        case 0:
          n.createObjectStore(ol);
      }
    }
  }).catch((n) => {
    throw xs.create("idb-open", {
      originalErrorMessage: n.message
    });
  })), kp;
}
async function wk(n) {
  var e;
  try {
    return (await f5()).transaction(ol).objectStore(ol).get(p5(n));
  } catch (t) {
    if (t instanceof qo)
      wa.warn(t.message);
    else {
      const r = xs.create("idb-get", {
        originalErrorMessage: (e = t) === null || e === void 0 ? void 0 : e.message
      });
      wa.warn(r.message);
    }
  }
}
async function u1(n, e) {
  var t;
  try {
    const i = (await f5()).transaction(ol, "readwrite");
    return await i.objectStore(ol).put(e, p5(n)), i.done;
  } catch (r) {
    if (r instanceof qo)
      wa.warn(r.message);
    else {
      const i = xs.create("idb-set", {
        originalErrorMessage: (t = r) === null || t === void 0 ? void 0 : t.message
      });
      wa.warn(i.message);
    }
  }
}
function p5(n) {
  return `${n.name}!${n.options.appId}`;
}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Tk = 1024, Ak = 30 * 24 * 60 * 60 * 1e3;
class Ck {
  constructor(e) {
    this.container = e, this._heartbeatsCache = null;
    const t = this.container.getProvider("app").getImmediate();
    this._storage = new Ek(t), this._heartbeatsCachePromise = this._storage.read().then((r) => (this._heartbeatsCache = r, r));
  }
  async triggerHeartbeat() {
    const t = this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(), r = l1();
    if (this._heartbeatsCache === null && (this._heartbeatsCache = await this._heartbeatsCachePromise), !(this._heartbeatsCache.lastSentHeartbeatDate === r || this._heartbeatsCache.heartbeats.some((i) => i.date === r)))
      return this._heartbeatsCache.heartbeats.push({ date: r, agent: t }), this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter((i) => {
        const s = new Date(i.date).valueOf();
        return Date.now() - s <= Ak;
      }), this._storage.overwrite(this._heartbeatsCache);
  }
  async getHeartbeatsHeader() {
    if (this._heartbeatsCache === null && await this._heartbeatsCachePromise, this._heartbeatsCache === null || this._heartbeatsCache.heartbeats.length === 0)
      return "";
    const e = l1(), { heartbeatsToSend: t, unsentEntries: r } = Sk(this._heartbeatsCache.heartbeats), i = xd(JSON.stringify({ version: 2, heartbeats: t }));
    return this._heartbeatsCache.lastSentHeartbeatDate = e, r.length > 0 ? (this._heartbeatsCache.heartbeats = r, await this._storage.overwrite(this._heartbeatsCache)) : (this._heartbeatsCache.heartbeats = [], this._storage.overwrite(this._heartbeatsCache)), i;
  }
}
function l1() {
  return new Date().toISOString().substring(0, 10);
}
function Sk(n, e = Tk) {
  const t = [];
  let r = n.slice();
  for (const i of n) {
    const s = t.find((a) => a.agent === i.agent);
    if (s) {
      if (s.dates.push(i.date), c1(t) > e) {
        s.dates.pop();
        break;
      }
    } else if (t.push({
      agent: i.agent,
      dates: [i.date]
    }), c1(t) > e) {
      t.pop();
      break;
    }
    r = r.slice(1);
  }
  return {
    heartbeatsToSend: t,
    unsentEntries: r
  };
}
class Ek {
  constructor(e) {
    this.app = e, this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();
  }
  async runIndexedDBEnvironmentCheck() {
    return aI() ? oI().then(() => !0).catch(() => !1) : !1;
  }
  async read() {
    return await this._canUseIndexedDBPromise ? await wk(this.app) || { heartbeats: [] } : { heartbeats: [] };
  }
  async overwrite(e) {
    var t;
    if (await this._canUseIndexedDBPromise) {
      const i = await this.read();
      return u1(this.app, {
        lastSentHeartbeatDate: (t = e.lastSentHeartbeatDate) !== null && t !== void 0 ? t : i.lastSentHeartbeatDate,
        heartbeats: e.heartbeats
      });
    } else
      return;
  }
  async add(e) {
    var t;
    if (await this._canUseIndexedDBPromise) {
      const i = await this.read();
      return u1(this.app, {
        lastSentHeartbeatDate: (t = e.lastSentHeartbeatDate) !== null && t !== void 0 ? t : i.lastSentHeartbeatDate,
        heartbeats: [
          ...i.heartbeats,
          ...e.heartbeats
        ]
      });
    } else
      return;
  }
}
function c1(n) {
  return xd(
    JSON.stringify({ version: 2, heartbeats: n })
  ).length;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function _k(n) {
  Cd(new al("platform-logger", (e) => new $I(e), "PRIVATE")), Cd(new al("heartbeat", (e) => new Ck(e), "PRIVATE")), yo(Ih, o1, n), yo(Ih, o1, "esm2017"), yo("fire-js", "");
}
_k("");
var Mk = "firebase", Rk = "9.14.0";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
yo(Mk, Rk, "app");
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Dn {
  constructor(e) {
    this.uid = e;
  }
  isAuthenticated() {
    return this.uid != null;
  }
  toKey() {
    return this.isAuthenticated() ? "uid:" + this.uid : "anonymous-user";
  }
  isEqual(e) {
    return e.uid === this.uid;
  }
}
Dn.UNAUTHENTICATED = new Dn(null), Dn.GOOGLE_CREDENTIALS = new Dn("google-credentials-uid"), Dn.FIRST_PARTY = new Dn("first-party-uid"), Dn.MOCK_USER = new Dn("mock-user");
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
let Qo = "9.14.0";
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Ta = new u5("@firebase/firestore");
function Pk(n) {
  Ta.setLogLevel(n);
}
function Aa(n, ...e) {
  if (Ta.logLevel <= Ne.DEBUG) {
    const t = e.map(Ry);
    Ta.debug(`Firestore (${Qo}): ${n}`, ...t);
  }
}
function pf(n, ...e) {
  if (Ta.logLevel <= Ne.ERROR) {
    const t = e.map(Ry);
    Ta.error(`Firestore (${Qo}): ${n}`, ...t);
  }
}
function h5(n, ...e) {
  if (Ta.logLevel <= Ne.WARN) {
    const t = e.map(Ry);
    Ta.warn(`Firestore (${Qo}): ${n}`, ...t);
  }
}
function Ry(n) {
  if (typeof n == "string")
    return n;
  try {
    return e = n, JSON.stringify(e);
  } catch {
    return n;
  }
  /**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  var e;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Fe(n = "Unexpected state") {
  const e = `FIRESTORE (${Qo}) INTERNAL ASSERTION FAILED: ` + n;
  throw pf(e), new Error(e);
}
function xn(n, e) {
  n || Fe();
}
function Jo(n, e) {
  return n;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const d1 = "ok", Py = "cancelled", mo = "unknown", se = "invalid-argument", y5 = "deadline-exceeded", Oy = "not-found", Ok = "already-exists", m5 = "permission-denied", Sd = "unauthenticated", b5 = "resource-exhausted", Fi = "failed-precondition", Iy = "aborted", g5 = "out-of-range", ky = "unimplemented", v5 = "internal", x5 = "unavailable", Ik = "data-loss";
class Z extends qo {
  constructor(e, t) {
    super(e, t), this.code = e, this.message = t, this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Dy {
  constructor() {
    this.promise = new Promise((e, t) => {
      this.resolve = e, this.reject = t;
    });
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class w5 {
  constructor(e, t) {
    this.user = t, this.type = "OAuth", this.headers = /* @__PURE__ */ new Map(), this.headers.set("Authorization", `Bearer ${e}`);
  }
}
class kk {
  getToken() {
    return Promise.resolve(null);
  }
  invalidateToken() {
  }
  start(e, t) {
    e.enqueueRetryable(() => t(Dn.UNAUTHENTICATED));
  }
  shutdown() {
  }
}
class Dk {
  constructor(e) {
    this.token = e, this.changeListener = null;
  }
  getToken() {
    return Promise.resolve(this.token);
  }
  invalidateToken() {
  }
  start(e, t) {
    this.changeListener = t, e.enqueueRetryable(() => t(this.token.user));
  }
  shutdown() {
    this.changeListener = null;
  }
}
class Bk {
  constructor(e) {
    this.auth = null, e.onInit((t) => {
      this.auth = t;
    });
  }
  getToken() {
    return this.auth ? this.auth.getToken().then((e) => e ? (xn(typeof e.accessToken == "string"), new w5(e.accessToken, new Dn(this.auth.getUid()))) : null) : Promise.resolve(null);
  }
  invalidateToken() {
  }
  start(e, t) {
  }
  shutdown() {
  }
}
class Nk {
  constructor(e, t, r, i) {
    this.t = e, this.i = t, this.o = r, this.u = i, this.type = "FirstParty", this.user = Dn.FIRST_PARTY, this.h = /* @__PURE__ */ new Map();
  }
  l() {
    return this.u ? this.u() : (xn(!(typeof this.t != "object" || this.t === null || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), this.t.auth.getAuthHeaderValueForFirstParty([]));
  }
  get headers() {
    this.h.set("X-Goog-AuthUser", this.i);
    const e = this.l();
    return e && this.h.set("Authorization", e), this.o && this.h.set("X-Goog-Iam-Authorization-Token", this.o), this.h;
  }
}
class Fk {
  constructor(e, t, r, i) {
    this.t = e, this.i = t, this.o = r, this.u = i;
  }
  getToken() {
    return Promise.resolve(new Nk(this.t, this.i, this.o, this.u));
  }
  start(e, t) {
    e.enqueueRetryable(() => t(Dn.FIRST_PARTY));
  }
  shutdown() {
  }
  invalidateToken() {
  }
}
class Lk {
  constructor(e) {
    this.value = e, this.type = "AppCheck", this.headers = /* @__PURE__ */ new Map(), e && e.length > 0 && this.headers.set("x-firebase-appcheck", this.value);
  }
}
class $k {
  constructor(e) {
    this.m = e, this.appCheck = null, e.onInit((t) => {
      this.appCheck = t;
    });
  }
  getToken() {
    return this.appCheck ? this.appCheck.getToken().then((e) => e ? (xn(typeof e.token == "string"), new Lk(e.token)) : null) : Promise.resolve(null);
  }
  invalidateToken() {
  }
  start(e, t) {
  }
  shutdown() {
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Uk {
  constructor(e, t, r, i, s, a, o, u) {
    this.databaseId = e, this.appId = t, this.persistenceKey = r, this.host = i, this.ssl = s, this.forceLongPolling = a, this.autoDetectLongPolling = o, this.useFetchStreams = u;
  }
}
class ul {
  constructor(e, t) {
    this.projectId = e, this.database = t || "(default)";
  }
  static empty() {
    return new ul("", "");
  }
  get isDefaultDatabase() {
    return this.database === "(default)";
  }
  isEqual(e) {
    return e instanceof ul && e.projectId === this.projectId && e.database === this.database;
  }
}
class ll {
  constructor(e, t, r) {
    t === void 0 ? t = 0 : t > e.length && Fe(), r === void 0 ? r = e.length - t : r > e.length - t && Fe(), this.segments = e, this.offset = t, this.len = r;
  }
  get length() {
    return this.len;
  }
  isEqual(e) {
    return ll.comparator(this, e) === 0;
  }
  child(e) {
    const t = this.segments.slice(this.offset, this.limit());
    return e instanceof ll ? e.forEach((r) => {
      t.push(r);
    }) : t.push(e), this.construct(t);
  }
  limit() {
    return this.offset + this.length;
  }
  popFirst(e) {
    return e = e === void 0 ? 1 : e, this.construct(this.segments, this.offset + e, this.length - e);
  }
  popLast() {
    return this.construct(this.segments, this.offset, this.length - 1);
  }
  firstSegment() {
    return this.segments[this.offset];
  }
  lastSegment() {
    return this.get(this.length - 1);
  }
  get(e) {
    return this.segments[this.offset + e];
  }
  isEmpty() {
    return this.length === 0;
  }
  isPrefixOf(e) {
    if (e.length < this.length)
      return !1;
    for (let t = 0; t < this.length; t++)
      if (this.get(t) !== e.get(t))
        return !1;
    return !0;
  }
  isImmediateParentOf(e) {
    if (this.length + 1 !== e.length)
      return !1;
    for (let t = 0; t < this.length; t++)
      if (this.get(t) !== e.get(t))
        return !1;
    return !0;
  }
  forEach(e) {
    for (let t = this.offset, r = this.limit(); t < r; t++)
      e(this.segments[t]);
  }
  toArray() {
    return this.segments.slice(this.offset, this.limit());
  }
  static comparator(e, t) {
    const r = Math.min(e.length, t.length);
    for (let i = 0; i < r; i++) {
      const s = e.get(i), a = t.get(i);
      if (s < a)
        return -1;
      if (s > a)
        return 1;
    }
    return e.length < t.length ? -1 : e.length > t.length ? 1 : 0;
  }
}
class Bt extends ll {
  construct(e, t, r) {
    return new Bt(e, t, r);
  }
  canonicalString() {
    return this.toArray().join("/");
  }
  toString() {
    return this.canonicalString();
  }
  static fromString(...e) {
    const t = [];
    for (const r of e) {
      if (r.indexOf("//") >= 0)
        throw new Z(se, `Invalid segment (${r}). Paths must not contain // in them.`);
      t.push(...r.split("/").filter((i) => i.length > 0));
    }
    return new Bt(t);
  }
  static emptyPath() {
    return new Bt([]);
  }
}
const Vk = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
class Yn extends ll {
  construct(e, t, r) {
    return new Yn(e, t, r);
  }
  static isValidIdentifier(e) {
    return Vk.test(e);
  }
  canonicalString() {
    return this.toArray().map((e) => (e = e.replace(/\\/g, "\\\\").replace(/`/g, "\\`"), Yn.isValidIdentifier(e) || (e = "`" + e + "`"), e)).join(".");
  }
  toString() {
    return this.canonicalString();
  }
  isKeyField() {
    return this.length === 1 && this.get(0) === "__name__";
  }
  static keyField() {
    return new Yn(["__name__"]);
  }
  static fromServerFormat(e) {
    const t = [];
    let r = "", i = 0;
    const s = () => {
      if (r.length === 0)
        throw new Z(se, `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);
      t.push(r), r = "";
    };
    let a = !1;
    for (; i < e.length; ) {
      const o = e[i];
      if (o === "\\") {
        if (i + 1 === e.length)
          throw new Z(se, "Path has trailing escape character: " + e);
        const u = e[i + 1];
        if (u !== "\\" && u !== "." && u !== "`")
          throw new Z(se, "Path has invalid escape sequence: " + e);
        r += u, i += 2;
      } else
        o === "`" ? (a = !a, i++) : o !== "." || a ? (r += o, i++) : (s(), i++);
    }
    if (s(), a)
      throw new Z(se, "Unterminated ` in path: " + e);
    return new Yn(t);
  }
  static emptyPath() {
    return new Yn([]);
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Ut {
  constructor(e) {
    this.path = e;
  }
  static fromPath(e) {
    return new Ut(Bt.fromString(e));
  }
  static fromName(e) {
    return new Ut(Bt.fromString(e).popFirst(5));
  }
  static empty() {
    return new Ut(Bt.emptyPath());
  }
  get collectionGroup() {
    return this.path.popLast().lastSegment();
  }
  hasCollectionId(e) {
    return this.path.length >= 2 && this.path.get(this.path.length - 2) === e;
  }
  getCollectionGroup() {
    return this.path.get(this.path.length - 2);
  }
  getCollectionPath() {
    return this.path.popLast();
  }
  isEqual(e) {
    return e !== null && Bt.comparator(this.path, e.path) === 0;
  }
  toString() {
    return this.path.toString();
  }
  static comparator(e, t) {
    return Bt.comparator(e.path, t.path);
  }
  static isDocumentKey(e) {
    return e.length % 2 == 0;
  }
  static fromSegments(e) {
    return new Ut(new Bt(e.slice()));
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function By(n, e, t) {
  if (!t)
    throw new Z(se, `Function ${n}() cannot be called with an empty ${e}.`);
}
function f1(n) {
  if (!Ut.isDocumentKey(n))
    throw new Z(se, `Invalid document reference. Document references must have an even number of segments, but ${n} has ${n.length}.`);
}
function p1(n) {
  if (Ut.isDocumentKey(n))
    throw new Z(se, `Invalid collection reference. Collection references must have an odd number of segments, but ${n} has ${n.length}.`);
}
function hf(n) {
  if (n === void 0)
    return "undefined";
  if (n === null)
    return "null";
  if (typeof n == "string")
    return n.length > 20 && (n = `${n.substring(0, 20)}...`), JSON.stringify(n);
  if (typeof n == "number" || typeof n == "boolean")
    return "" + n;
  if (typeof n == "object") {
    if (n instanceof Array)
      return "an array";
    {
      const e = function(t) {
        return t.constructor ? t.constructor.name : null;
      }(n);
      return e ? `a custom ${e} object` : "an object";
    }
  }
  return typeof n == "function" ? "a function" : Fe();
}
function wr(n, e) {
  if ("_delegate" in n && (n = n._delegate), !(n instanceof e)) {
    if (e.name === n.constructor.name)
      throw new Z(se, "Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?");
    {
      const t = hf(n);
      throw new Z(se, `Expected type '${e.name}', but it was: ${t}`);
    }
  }
  return n;
}
function T5(n, e) {
  if (e <= 0)
    throw new Z(se, `Function ${n}() requires a positive number, but it was: ${e}.`);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function A5(n) {
  return n == null;
}
function Ed(n) {
  return n === 0 && 1 / n == -1 / 0;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const jk = {
  BatchGetDocuments: "batchGet",
  Commit: "commit",
  RunQuery: "runQuery",
  RunAggregationQuery: "runAggregationQuery"
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var h1, Te;
function y1(n) {
  if (n === void 0)
    return pf("RPC_ERROR", "HTTP error has no status"), mo;
  switch (n) {
    case 200:
      return d1;
    case 400:
      return Fi;
    case 401:
      return Sd;
    case 403:
      return m5;
    case 404:
      return Oy;
    case 409:
      return Iy;
    case 416:
      return g5;
    case 429:
      return b5;
    case 499:
      return Py;
    case 500:
      return mo;
    case 501:
      return ky;
    case 503:
      return x5;
    case 504:
      return y5;
    default:
      return n >= 200 && n < 300 ? d1 : n >= 400 && n < 500 ? Fi : n >= 500 && n < 600 ? v5 : mo;
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
(Te = h1 || (h1 = {}))[Te.OK = 0] = "OK", Te[Te.CANCELLED = 1] = "CANCELLED", Te[Te.UNKNOWN = 2] = "UNKNOWN", Te[Te.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", Te[Te.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", Te[Te.NOT_FOUND = 5] = "NOT_FOUND", Te[Te.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", Te[Te.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", Te[Te.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", Te[Te.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", Te[Te.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", Te[Te.ABORTED = 10] = "ABORTED", Te[Te.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", Te[Te.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", Te[Te.INTERNAL = 13] = "INTERNAL", Te[Te.UNAVAILABLE = 14] = "UNAVAILABLE", Te[Te.DATA_LOSS = 15] = "DATA_LOSS";
class Gk extends class {
  constructor(e) {
    this.databaseInfo = e, this.databaseId = e.databaseId;
    const t = e.ssl ? "https" : "http";
    this.p = t + "://" + e.host, this.g = "projects/" + this.databaseId.projectId + "/databases/" + this.databaseId.database + "/documents";
  }
  get v() {
    return !1;
  }
  I(e, t, r, i, s) {
    const a = this.T(e, t);
    Aa("RestConnection", "Sending: ", a, r);
    const o = {};
    return this.A(o, i, s), this.R(e, a, o, r).then((u) => (Aa("RestConnection", "Received: ", u), u), (u) => {
      throw h5("RestConnection", `${e} failed with error: `, u, "url: ", a, "request:", r), u;
    });
  }
  P(e, t, r, i, s, a) {
    return this.I(e, t, r, i, s);
  }
  A(e, t, r) {
    e["X-Goog-Api-Client"] = "gl-js/ fire/" + Qo, e["Content-Type"] = "text/plain", this.databaseInfo.appId && (e["X-Firebase-GMPID"] = this.databaseInfo.appId), t && t.headers.forEach((i, s) => e[s] = i), r && r.headers.forEach((i, s) => e[s] = i);
  }
  T(e, t) {
    const r = jk[e];
    return `${this.p}/v1/${t}:${r}`;
  }
} {
  constructor(e, t) {
    super(e), this.V = t;
  }
  N(e, t) {
    throw new Error("Not supported by FetchConnection");
  }
  async R(e, t, r, i) {
    var s;
    const a = JSON.stringify(i);
    let o;
    try {
      o = await this.V(t, {
        method: "POST",
        headers: r,
        body: a
      });
    } catch (u) {
      throw new Z(y1(u.status), "Request failed with error: " + u.statusText);
    }
    if (!o.ok) {
      let u = await o.json();
      Array.isArray(u) && (u = u[0]);
      const l = (s = u?.error) === null || s === void 0 ? void 0 : s.message;
      throw new Z(y1(o.status), `Request failed with error: ${l ?? o.statusText}`);
    }
    return o.json();
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Wk(n) {
  const e = typeof self < "u" && (self.crypto || self.msCrypto), t = new Uint8Array(n);
  if (e && typeof e.getRandomValues == "function")
    e.getRandomValues(t);
  else
    for (let r = 0; r < n; r++)
      t[r] = Math.floor(256 * Math.random());
  return t;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class zk {
  static $() {
    const e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", t = Math.floor(256 / e.length) * e.length;
    let r = "";
    for (; r.length < 20; ) {
      const i = Wk(40);
      for (let s = 0; s < i.length; ++s)
        r.length < 20 && i[s] < t && (r += e.charAt(i[s] % e.length));
    }
    return r;
  }
}
function Jt(n, e) {
  return n < e ? -1 : n > e ? 1 : 0;
}
function Ny(n, e, t) {
  return n.length === e.length && n.every((r, i) => t(r, e[i]));
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Un {
  constructor(e, t) {
    if (this.seconds = e, this.nanoseconds = t, t < 0)
      throw new Z(se, "Timestamp nanoseconds out of range: " + t);
    if (t >= 1e9)
      throw new Z(se, "Timestamp nanoseconds out of range: " + t);
    if (e < -62135596800)
      throw new Z(se, "Timestamp seconds out of range: " + e);
    if (e >= 253402300800)
      throw new Z(se, "Timestamp seconds out of range: " + e);
  }
  static now() {
    return Un.fromMillis(Date.now());
  }
  static fromDate(e) {
    return Un.fromMillis(e.getTime());
  }
  static fromMillis(e) {
    const t = Math.floor(e / 1e3), r = Math.floor(1e6 * (e - 1e3 * t));
    return new Un(t, r);
  }
  toDate() {
    return new Date(this.toMillis());
  }
  toMillis() {
    return 1e3 * this.seconds + this.nanoseconds / 1e6;
  }
  _compareTo(e) {
    return this.seconds === e.seconds ? Jt(this.nanoseconds, e.nanoseconds) : Jt(this.seconds, e.seconds);
  }
  isEqual(e) {
    return e.seconds === this.seconds && e.nanoseconds === this.nanoseconds;
  }
  toString() {
    return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
  }
  toJSON() {
    return {
      seconds: this.seconds,
      nanoseconds: this.nanoseconds
    };
  }
  valueOf() {
    const e = this.seconds - -62135596800;
    return String(e).padStart(12, "0") + "." + String(this.nanoseconds).padStart(9, "0");
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Nn {
  constructor(e) {
    this.timestamp = e;
  }
  static fromTimestamp(e) {
    return new Nn(e);
  }
  static min() {
    return new Nn(new Un(0, 0));
  }
  static max() {
    return new Nn(new Un(253402300799, 999999999));
  }
  compareTo(e) {
    return this.timestamp._compareTo(e.timestamp);
  }
  isEqual(e) {
    return this.timestamp.isEqual(e.timestamp);
  }
  toMicroseconds() {
    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
  }
  toString() {
    return "SnapshotVersion(" + this.timestamp.toString() + ")";
  }
  toTimestamp() {
    return this.timestamp;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function m1(n) {
  let e = 0;
  for (const t in n)
    Object.prototype.hasOwnProperty.call(n, t) && e++;
  return e;
}
function Ll(n, e) {
  for (const t in n)
    Object.prototype.hasOwnProperty.call(n, t) && e(t, n[t]);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class _d {
  constructor(e, t) {
    this.comparator = e, this.root = t || tn.EMPTY;
  }
  insert(e, t) {
    return new _d(this.comparator, this.root.insert(e, t, this.comparator).copy(null, null, tn.BLACK, null, null));
  }
  remove(e) {
    return new _d(this.comparator, this.root.remove(e, this.comparator).copy(null, null, tn.BLACK, null, null));
  }
  get(e) {
    let t = this.root;
    for (; !t.isEmpty(); ) {
      const r = this.comparator(e, t.key);
      if (r === 0)
        return t.value;
      r < 0 ? t = t.left : r > 0 && (t = t.right);
    }
    return null;
  }
  indexOf(e) {
    let t = 0, r = this.root;
    for (; !r.isEmpty(); ) {
      const i = this.comparator(e, r.key);
      if (i === 0)
        return t + r.left.size;
      i < 0 ? r = r.left : (t += r.left.size + 1, r = r.right);
    }
    return -1;
  }
  isEmpty() {
    return this.root.isEmpty();
  }
  get size() {
    return this.root.size;
  }
  minKey() {
    return this.root.minKey();
  }
  maxKey() {
    return this.root.maxKey();
  }
  inorderTraversal(e) {
    return this.root.inorderTraversal(e);
  }
  forEach(e) {
    this.inorderTraversal((t, r) => (e(t, r), !1));
  }
  toString() {
    const e = [];
    return this.inorderTraversal((t, r) => (e.push(`${t}:${r}`), !1)), `{${e.join(", ")}}`;
  }
  reverseTraversal(e) {
    return this.root.reverseTraversal(e);
  }
  getIterator() {
    return new oc(this.root, null, this.comparator, !1);
  }
  getIteratorFrom(e) {
    return new oc(this.root, e, this.comparator, !1);
  }
  getReverseIterator() {
    return new oc(this.root, null, this.comparator, !0);
  }
  getReverseIteratorFrom(e) {
    return new oc(this.root, e, this.comparator, !0);
  }
}
class oc {
  constructor(e, t, r, i) {
    this.isReverse = i, this.nodeStack = [];
    let s = 1;
    for (; !e.isEmpty(); )
      if (s = t ? r(e.key, t) : 1, t && i && (s *= -1), s < 0)
        e = this.isReverse ? e.left : e.right;
      else {
        if (s === 0) {
          this.nodeStack.push(e);
          break;
        }
        this.nodeStack.push(e), e = this.isReverse ? e.right : e.left;
      }
  }
  getNext() {
    let e = this.nodeStack.pop();
    const t = {
      key: e.key,
      value: e.value
    };
    if (this.isReverse)
      for (e = e.left; !e.isEmpty(); )
        this.nodeStack.push(e), e = e.right;
    else
      for (e = e.right; !e.isEmpty(); )
        this.nodeStack.push(e), e = e.left;
    return t;
  }
  hasNext() {
    return this.nodeStack.length > 0;
  }
  peek() {
    if (this.nodeStack.length === 0)
      return null;
    const e = this.nodeStack[this.nodeStack.length - 1];
    return {
      key: e.key,
      value: e.value
    };
  }
}
class tn {
  constructor(e, t, r, i, s) {
    this.key = e, this.value = t, this.color = r ?? tn.RED, this.left = i ?? tn.EMPTY, this.right = s ?? tn.EMPTY, this.size = this.left.size + 1 + this.right.size;
  }
  copy(e, t, r, i, s) {
    return new tn(e ?? this.key, t ?? this.value, r ?? this.color, i ?? this.left, s ?? this.right);
  }
  isEmpty() {
    return !1;
  }
  inorderTraversal(e) {
    return this.left.inorderTraversal(e) || e(this.key, this.value) || this.right.inorderTraversal(e);
  }
  reverseTraversal(e) {
    return this.right.reverseTraversal(e) || e(this.key, this.value) || this.left.reverseTraversal(e);
  }
  min() {
    return this.left.isEmpty() ? this : this.left.min();
  }
  minKey() {
    return this.min().key;
  }
  maxKey() {
    return this.right.isEmpty() ? this.key : this.right.maxKey();
  }
  insert(e, t, r) {
    let i = this;
    const s = r(e, i.key);
    return i = s < 0 ? i.copy(null, null, null, i.left.insert(e, t, r), null) : s === 0 ? i.copy(null, t, null, null, null) : i.copy(null, null, null, null, i.right.insert(e, t, r)), i.fixUp();
  }
  removeMin() {
    if (this.left.isEmpty())
      return tn.EMPTY;
    let e = this;
    return e.left.isRed() || e.left.left.isRed() || (e = e.moveRedLeft()), e = e.copy(null, null, null, e.left.removeMin(), null), e.fixUp();
  }
  remove(e, t) {
    let r, i = this;
    if (t(e, i.key) < 0)
      i.left.isEmpty() || i.left.isRed() || i.left.left.isRed() || (i = i.moveRedLeft()), i = i.copy(null, null, null, i.left.remove(e, t), null);
    else {
      if (i.left.isRed() && (i = i.rotateRight()), i.right.isEmpty() || i.right.isRed() || i.right.left.isRed() || (i = i.moveRedRight()), t(e, i.key) === 0) {
        if (i.right.isEmpty())
          return tn.EMPTY;
        r = i.right.min(), i = i.copy(r.key, r.value, null, null, i.right.removeMin());
      }
      i = i.copy(null, null, null, null, i.right.remove(e, t));
    }
    return i.fixUp();
  }
  isRed() {
    return this.color;
  }
  fixUp() {
    let e = this;
    return e.right.isRed() && !e.left.isRed() && (e = e.rotateLeft()), e.left.isRed() && e.left.left.isRed() && (e = e.rotateRight()), e.left.isRed() && e.right.isRed() && (e = e.colorFlip()), e;
  }
  moveRedLeft() {
    let e = this.colorFlip();
    return e.right.left.isRed() && (e = e.copy(null, null, null, null, e.right.rotateRight()), e = e.rotateLeft(), e = e.colorFlip()), e;
  }
  moveRedRight() {
    let e = this.colorFlip();
    return e.left.left.isRed() && (e = e.rotateRight(), e = e.colorFlip()), e;
  }
  rotateLeft() {
    const e = this.copy(null, null, tn.RED, null, this.right.left);
    return this.right.copy(null, null, this.color, e, null);
  }
  rotateRight() {
    const e = this.copy(null, null, tn.RED, this.left.right, null);
    return this.left.copy(null, null, this.color, null, e);
  }
  colorFlip() {
    const e = this.left.copy(null, null, !this.left.color, null, null), t = this.right.copy(null, null, !this.right.color, null, null);
    return this.copy(null, null, !this.color, e, t);
  }
  checkMaxDepth() {
    const e = this.check();
    return Math.pow(2, e) <= this.size + 1;
  }
  check() {
    if (this.isRed() && this.left.isRed() || this.right.isRed())
      throw Fe();
    const e = this.left.check();
    if (e !== this.right.check())
      throw Fe();
    return e + (this.isRed() ? 0 : 1);
  }
}
tn.EMPTY = null, tn.RED = !0, tn.BLACK = !1;
tn.EMPTY = new class {
  constructor() {
    this.size = 0;
  }
  get key() {
    throw Fe();
  }
  get value() {
    throw Fe();
  }
  get color() {
    throw Fe();
  }
  get left() {
    throw Fe();
  }
  get right() {
    throw Fe();
  }
  copy(n, e, t, r, i) {
    return this;
  }
  insert(n, e, t) {
    return new tn(n, e);
  }
  remove(n, e) {
    return this;
  }
  isEmpty() {
    return !0;
  }
  inorderTraversal(n) {
    return !1;
  }
  reverseTraversal(n) {
    return !1;
  }
  minKey() {
    return null;
  }
  maxKey() {
    return null;
  }
  isRed() {
    return !1;
  }
  checkMaxDepth() {
    return !0;
  }
  check() {
    return 0;
  }
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Md {
  constructor(e) {
    this.comparator = e, this.data = new _d(this.comparator);
  }
  has(e) {
    return this.data.get(e) !== null;
  }
  first() {
    return this.data.minKey();
  }
  last() {
    return this.data.maxKey();
  }
  get size() {
    return this.data.size;
  }
  indexOf(e) {
    return this.data.indexOf(e);
  }
  forEach(e) {
    this.data.inorderTraversal((t, r) => (e(t), !1));
  }
  forEachInRange(e, t) {
    const r = this.data.getIteratorFrom(e[0]);
    for (; r.hasNext(); ) {
      const i = r.getNext();
      if (this.comparator(i.key, e[1]) >= 0)
        return;
      t(i.key);
    }
  }
  forEachWhile(e, t) {
    let r;
    for (r = t !== void 0 ? this.data.getIteratorFrom(t) : this.data.getIterator(); r.hasNext(); )
      if (!e(r.getNext().key))
        return;
  }
  firstAfterOrEqual(e) {
    const t = this.data.getIteratorFrom(e);
    return t.hasNext() ? t.getNext().key : null;
  }
  getIterator() {
    return new b1(this.data.getIterator());
  }
  getIteratorFrom(e) {
    return new b1(this.data.getIteratorFrom(e));
  }
  add(e) {
    return this.copy(this.data.remove(e).insert(e, !0));
  }
  delete(e) {
    return this.has(e) ? this.copy(this.data.remove(e)) : this;
  }
  isEmpty() {
    return this.data.isEmpty();
  }
  unionWith(e) {
    let t = this;
    return t.size < e.size && (t = e, e = this), e.forEach((r) => {
      t = t.add(r);
    }), t;
  }
  isEqual(e) {
    if (!(e instanceof Md) || this.size !== e.size)
      return !1;
    const t = this.data.getIterator(), r = e.data.getIterator();
    for (; t.hasNext(); ) {
      const i = t.getNext().key, s = r.getNext().key;
      if (this.comparator(i, s) !== 0)
        return !1;
    }
    return !0;
  }
  toArray() {
    const e = [];
    return this.forEach((t) => {
      e.push(t);
    }), e;
  }
  toString() {
    const e = [];
    return this.forEach((t) => e.push(t)), "SortedSet(" + e.toString() + ")";
  }
  copy(e) {
    const t = new Md(this.comparator);
    return t.data = e, t;
  }
}
class b1 {
  constructor(e) {
    this.iter = e;
  }
  getNext() {
    return this.iter.getNext().key;
  }
  hasNext() {
    return this.iter.hasNext();
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Ca {
  constructor(e) {
    this.fields = e, e.sort(Yn.comparator);
  }
  static empty() {
    return new Ca([]);
  }
  unionWith(e) {
    let t = new Md(Yn.comparator);
    for (const r of this.fields)
      t = t.add(r);
    for (const r of e)
      t = t.add(r);
    return new Ca(t.toArray());
  }
  covers(e) {
    for (const t of this.fields)
      if (t.isPrefixOf(e))
        return !0;
    return !1;
  }
  isEqual(e) {
    return Ny(this.fields, e.fields, (t, r) => t.isEqual(r));
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Li {
  constructor(e) {
    this.binaryString = e;
  }
  static fromBase64String(e) {
    const t = atob(e);
    return new Li(t);
  }
  static fromUint8Array(e) {
    const t = function(r) {
      let i = "";
      for (let s = 0; s < r.length; ++s)
        i += String.fromCharCode(r[s]);
      return i;
    }(e);
    return new Li(t);
  }
  [Symbol.iterator]() {
    let e = 0;
    return {
      next: () => e < this.binaryString.length ? {
        value: this.binaryString.charCodeAt(e++),
        done: !1
      } : {
        value: void 0,
        done: !0
      }
    };
  }
  toBase64() {
    return e = this.binaryString, btoa(e);
    var e;
  }
  toUint8Array() {
    return function(e) {
      const t = new Uint8Array(e.length);
      for (let r = 0; r < e.length; r++)
        t[r] = e.charCodeAt(r);
      return t;
    }(this.binaryString);
  }
  approximateByteSize() {
    return 2 * this.binaryString.length;
  }
  compareTo(e) {
    return Jt(this.binaryString, e.binaryString);
  }
  isEqual(e) {
    return this.binaryString === e.binaryString;
  }
}
Li.EMPTY_BYTE_STRING = new Li("");
const Hk = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
function Sa(n) {
  if (xn(!!n), typeof n == "string") {
    let e = 0;
    const t = Hk.exec(n);
    if (xn(!!t), t[1]) {
      let i = t[1];
      i = (i + "000000000").substr(0, 9), e = Number(i);
    }
    const r = new Date(n);
    return {
      seconds: Math.floor(r.getTime() / 1e3),
      nanos: e
    };
  }
  return {
    seconds: jt(n.seconds),
    nanos: jt(n.nanos)
  };
}
function jt(n) {
  return typeof n == "number" ? n : typeof n == "string" ? Number(n) : 0;
}
function cl(n) {
  return typeof n == "string" ? Li.fromBase64String(n) : Li.fromUint8Array(n);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Fy(n) {
  var e, t;
  return ((t = (((e = n?.mapValue) === null || e === void 0 ? void 0 : e.fields) || {}).__type__) === null || t === void 0 ? void 0 : t.stringValue) === "server_timestamp";
}
function C5(n) {
  const e = n.mapValue.fields.__previous_value__;
  return Fy(e) ? C5(e) : e;
}
function dl(n) {
  const e = Sa(n.mapValue.fields.__local_write_time__.timestampValue);
  return new Un(e.seconds, e.nanos);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const uc = {
  fields: {
    __type__: {
      stringValue: "__max__"
    }
  }
};
function Ea(n) {
  return "nullValue" in n ? 0 : "booleanValue" in n ? 1 : "integerValue" in n || "doubleValue" in n ? 2 : "timestampValue" in n ? 3 : "stringValue" in n ? 5 : "bytesValue" in n ? 6 : "referenceValue" in n ? 7 : "geoPointValue" in n ? 8 : "arrayValue" in n ? 9 : "mapValue" in n ? Fy(n) ? 4 : function(e) {
    return (((e.mapValue || {}).fields || {}).__type__ || {}).stringValue === "__max__";
  }(n) ? 9007199254740991 : 10 : Fe();
}
function Po(n, e) {
  if (n === e)
    return !0;
  const t = Ea(n);
  if (t !== Ea(e))
    return !1;
  switch (t) {
    case 0:
    case 9007199254740991:
      return !0;
    case 1:
      return n.booleanValue === e.booleanValue;
    case 4:
      return dl(n).isEqual(dl(e));
    case 3:
      return function(r, i) {
        if (typeof r.timestampValue == "string" && typeof i.timestampValue == "string" && r.timestampValue.length === i.timestampValue.length)
          return r.timestampValue === i.timestampValue;
        const s = Sa(r.timestampValue), a = Sa(i.timestampValue);
        return s.seconds === a.seconds && s.nanos === a.nanos;
      }(n, e);
    case 5:
      return n.stringValue === e.stringValue;
    case 6:
      return function(r, i) {
        return cl(r.bytesValue).isEqual(cl(i.bytesValue));
      }(n, e);
    case 7:
      return n.referenceValue === e.referenceValue;
    case 8:
      return function(r, i) {
        return jt(r.geoPointValue.latitude) === jt(i.geoPointValue.latitude) && jt(r.geoPointValue.longitude) === jt(i.geoPointValue.longitude);
      }(n, e);
    case 2:
      return function(r, i) {
        if ("integerValue" in r && "integerValue" in i)
          return jt(r.integerValue) === jt(i.integerValue);
        if ("doubleValue" in r && "doubleValue" in i) {
          const s = jt(r.doubleValue), a = jt(i.doubleValue);
          return s === a ? Ed(s) === Ed(a) : isNaN(s) && isNaN(a);
        }
        return !1;
      }(n, e);
    case 9:
      return Ny(n.arrayValue.values || [], e.arrayValue.values || [], Po);
    case 10:
      return function(r, i) {
        const s = r.mapValue.fields || {}, a = i.mapValue.fields || {};
        if (m1(s) !== m1(a))
          return !1;
        for (const o in s)
          if (s.hasOwnProperty(o) && (a[o] === void 0 || !Po(s[o], a[o])))
            return !1;
        return !0;
      }(n, e);
    default:
      return Fe();
  }
}
function fl(n, e) {
  return (n.values || []).find((t) => Po(t, e)) !== void 0;
}
function Rd(n, e) {
  if (n === e)
    return 0;
  const t = Ea(n), r = Ea(e);
  if (t !== r)
    return Jt(t, r);
  switch (t) {
    case 0:
    case 9007199254740991:
      return 0;
    case 1:
      return Jt(n.booleanValue, e.booleanValue);
    case 2:
      return function(i, s) {
        const a = jt(i.integerValue || i.doubleValue), o = jt(s.integerValue || s.doubleValue);
        return a < o ? -1 : a > o ? 1 : a === o ? 0 : isNaN(a) ? isNaN(o) ? 0 : -1 : 1;
      }(n, e);
    case 3:
      return g1(n.timestampValue, e.timestampValue);
    case 4:
      return g1(dl(n), dl(e));
    case 5:
      return Jt(n.stringValue, e.stringValue);
    case 6:
      return function(i, s) {
        const a = cl(i), o = cl(s);
        return a.compareTo(o);
      }(n.bytesValue, e.bytesValue);
    case 7:
      return function(i, s) {
        const a = i.split("/"), o = s.split("/");
        for (let u = 0; u < a.length && u < o.length; u++) {
          const l = Jt(a[u], o[u]);
          if (l !== 0)
            return l;
        }
        return Jt(a.length, o.length);
      }(n.referenceValue, e.referenceValue);
    case 8:
      return function(i, s) {
        const a = Jt(jt(i.latitude), jt(s.latitude));
        return a !== 0 ? a : Jt(jt(i.longitude), jt(s.longitude));
      }(n.geoPointValue, e.geoPointValue);
    case 9:
      return function(i, s) {
        const a = i.values || [], o = s.values || [];
        for (let u = 0; u < a.length && u < o.length; ++u) {
          const l = Rd(a[u], o[u]);
          if (l)
            return l;
        }
        return Jt(a.length, o.length);
      }(n.arrayValue, e.arrayValue);
    case 10:
      return function(i, s) {
        if (i === uc && s === uc)
          return 0;
        if (i === uc)
          return 1;
        if (s === uc)
          return -1;
        const a = i.fields || {}, o = Object.keys(a), u = s.fields || {}, l = Object.keys(u);
        o.sort(), l.sort();
        for (let c = 0; c < o.length && c < l.length; ++c) {
          const p = Jt(o[c], l[c]);
          if (p !== 0)
            return p;
          const b = Rd(a[o[c]], u[l[c]]);
          if (b !== 0)
            return b;
        }
        return Jt(o.length, l.length);
      }(n.mapValue, e.mapValue);
    default:
      throw Fe();
  }
}
function g1(n, e) {
  if (typeof n == "string" && typeof e == "string" && n.length === e.length)
    return Jt(n, e);
  const t = Sa(n), r = Sa(e), i = Jt(t.seconds, r.seconds);
  return i !== 0 ? i : Jt(t.nanos, r.nanos);
}
function Pd(n, e) {
  return {
    referenceValue: `projects/${n.projectId}/databases/${n.database}/documents/${e.path.canonicalString()}`
  };
}
function S5(n) {
  return !!n && "arrayValue" in n;
}
function v1(n) {
  return !!n && "nullValue" in n;
}
function x1(n) {
  return !!n && "doubleValue" in n && isNaN(Number(n.doubleValue));
}
function Dp(n) {
  return !!n && "mapValue" in n;
}
function Ou(n) {
  if (n.geoPointValue)
    return {
      geoPointValue: Object.assign({}, n.geoPointValue)
    };
  if (n.timestampValue && typeof n.timestampValue == "object")
    return {
      timestampValue: Object.assign({}, n.timestampValue)
    };
  if (n.mapValue) {
    const e = {
      mapValue: {
        fields: {}
      }
    };
    return Ll(n.mapValue.fields, (t, r) => e.mapValue.fields[t] = Ou(r)), e;
  }
  if (n.arrayValue) {
    const e = {
      arrayValue: {
        values: []
      }
    };
    for (let t = 0; t < (n.arrayValue.values || []).length; ++t)
      e.arrayValue.values[t] = Ou(n.arrayValue.values[t]);
    return e;
  }
  return Object.assign({}, n);
}
class Xn {
  constructor(e) {
    this.value = e;
  }
  static empty() {
    return new Xn({
      mapValue: {}
    });
  }
  field(e) {
    if (e.isEmpty())
      return this.value;
    {
      let t = this.value;
      for (let r = 0; r < e.length - 1; ++r)
        if (t = (t.mapValue.fields || {})[e.get(r)], !Dp(t))
          return null;
      return t = (t.mapValue.fields || {})[e.lastSegment()], t || null;
    }
  }
  set(e, t) {
    this.getFieldsMap(e.popLast())[e.lastSegment()] = Ou(t);
  }
  setAll(e) {
    let t = Yn.emptyPath(), r = {}, i = [];
    e.forEach((a, o) => {
      if (!t.isImmediateParentOf(o)) {
        const u = this.getFieldsMap(t);
        this.applyChanges(u, r, i), r = {}, i = [], t = o.popLast();
      }
      a ? r[o.lastSegment()] = Ou(a) : i.push(o.lastSegment());
    });
    const s = this.getFieldsMap(t);
    this.applyChanges(s, r, i);
  }
  delete(e) {
    const t = this.field(e.popLast());
    Dp(t) && t.mapValue.fields && delete t.mapValue.fields[e.lastSegment()];
  }
  isEqual(e) {
    return Po(this.value, e.value);
  }
  getFieldsMap(e) {
    let t = this.value;
    t.mapValue.fields || (t.mapValue = {
      fields: {}
    });
    for (let r = 0; r < e.length; ++r) {
      let i = t.mapValue.fields[e.get(r)];
      Dp(i) && i.mapValue.fields || (i = {
        mapValue: {
          fields: {}
        }
      }, t.mapValue.fields[e.get(r)] = i), t = i;
    }
    return t.mapValue.fields;
  }
  applyChanges(e, t, r) {
    Ll(t, (i, s) => e[i] = s);
    for (const i of r)
      delete e[i];
  }
  clone() {
    return new Xn(Ou(this.value));
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Wr {
  constructor(e, t, r, i, s, a) {
    this.key = e, this.documentType = t, this.version = r, this.readTime = i, this.data = s, this.documentState = a;
  }
  static newInvalidDocument(e) {
    return new Wr(e, 0, Nn.min(), Nn.min(), Xn.empty(), 0);
  }
  static newFoundDocument(e, t, r) {
    return new Wr(e, 1, t, Nn.min(), r, 0);
  }
  static newNoDocument(e, t) {
    return new Wr(e, 2, t, Nn.min(), Xn.empty(), 0);
  }
  static newUnknownDocument(e, t) {
    return new Wr(e, 3, t, Nn.min(), Xn.empty(), 2);
  }
  convertToFoundDocument(e, t) {
    return this.version = e, this.documentType = 1, this.data = t, this.documentState = 0, this;
  }
  convertToNoDocument(e) {
    return this.version = e, this.documentType = 2, this.data = Xn.empty(), this.documentState = 0, this;
  }
  convertToUnknownDocument(e) {
    return this.version = e, this.documentType = 3, this.data = Xn.empty(), this.documentState = 2, this;
  }
  setHasCommittedMutations() {
    return this.documentState = 2, this;
  }
  setHasLocalMutations() {
    return this.documentState = 1, this.version = Nn.min(), this;
  }
  setReadTime(e) {
    return this.readTime = e, this;
  }
  get hasLocalMutations() {
    return this.documentState === 1;
  }
  get hasCommittedMutations() {
    return this.documentState === 2;
  }
  get hasPendingWrites() {
    return this.hasLocalMutations || this.hasCommittedMutations;
  }
  isValidDocument() {
    return this.documentType !== 0;
  }
  isFoundDocument() {
    return this.documentType === 1;
  }
  isNoDocument() {
    return this.documentType === 2;
  }
  isUnknownDocument() {
    return this.documentType === 3;
  }
  isEqual(e) {
    return e instanceof Wr && this.key.isEqual(e.key) && this.version.isEqual(e.version) && this.documentType === e.documentType && this.documentState === e.documentState && this.data.isEqual(e.data);
  }
  mutableCopy() {
    return new Wr(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);
  }
  toString() {
    return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;
  }
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Kk {
  constructor(e, t = null, r = [], i = [], s = null, a = null, o = null) {
    this.path = e, this.collectionGroup = t, this.orderBy = r, this.filters = i, this.limit = s, this.startAt = a, this.endAt = o, this.D = null;
  }
}
function w1(n, e = null, t = [], r = [], i = null, s = null, a = null) {
  return new Kk(n, e, t, r, i, s, a);
}
class di extends class {
} {
  constructor(e, t, r) {
    super(), this.field = e, this.op = t, this.value = r;
  }
  static create(e, t, r) {
    return e.isKeyField() ? t === "in" || t === "not-in" ? this.F(e, t, r) : new qk(e, t, r) : t === "array-contains" ? new Yk(e, r) : t === "in" ? new Xk(e, r) : t === "not-in" ? new Zk(e, r) : t === "array-contains-any" ? new eD(e, r) : new di(e, t, r);
  }
  static F(e, t, r) {
    return t === "in" ? new Qk(e, r) : new Jk(e, r);
  }
  matches(e) {
    const t = e.data.field(this.field);
    return this.op === "!=" ? t !== null && this.S(Rd(t, this.value)) : t !== null && Ea(this.value) === Ea(t) && this.S(Rd(t, this.value));
  }
  S(e) {
    switch (this.op) {
      case "<":
        return e < 0;
      case "<=":
        return e <= 0;
      case "==":
        return e === 0;
      case "!=":
        return e !== 0;
      case ">":
        return e > 0;
      case ">=":
        return e >= 0;
      default:
        return Fe();
    }
  }
  q() {
    return ["<", "<=", ">", ">=", "!=", "not-in"].indexOf(this.op) >= 0;
  }
}
class qk extends di {
  constructor(e, t, r) {
    super(e, t, r), this.key = Ut.fromName(r.referenceValue);
  }
  matches(e) {
    const t = Ut.comparator(e.key, this.key);
    return this.S(t);
  }
}
class Qk extends di {
  constructor(e, t) {
    super(e, "in", t), this.keys = E5("in", t);
  }
  matches(e) {
    return this.keys.some((t) => t.isEqual(e.key));
  }
}
class Jk extends di {
  constructor(e, t) {
    super(e, "not-in", t), this.keys = E5("not-in", t);
  }
  matches(e) {
    return !this.keys.some((t) => t.isEqual(e.key));
  }
}
function E5(n, e) {
  var t;
  return (((t = e.arrayValue) === null || t === void 0 ? void 0 : t.values) || []).map((r) => Ut.fromName(r.referenceValue));
}
class Yk extends di {
  constructor(e, t) {
    super(e, "array-contains", t);
  }
  matches(e) {
    const t = e.data.field(this.field);
    return S5(t) && fl(t.arrayValue, this.value);
  }
}
class Xk extends di {
  constructor(e, t) {
    super(e, "in", t);
  }
  matches(e) {
    const t = e.data.field(this.field);
    return t !== null && fl(this.value.arrayValue, t);
  }
}
class Zk extends di {
  constructor(e, t) {
    super(e, "not-in", t);
  }
  matches(e) {
    if (fl(this.value.arrayValue, {
      nullValue: "NULL_VALUE"
    }))
      return !1;
    const t = e.data.field(this.field);
    return t !== null && !fl(this.value.arrayValue, t);
  }
}
class eD extends di {
  constructor(e, t) {
    super(e, "array-contains-any", t);
  }
  matches(e) {
    const t = e.data.field(this.field);
    return !(!S5(t) || !t.arrayValue.values) && t.arrayValue.values.some((r) => fl(this.value.arrayValue, r));
  }
}
class Od {
  constructor(e, t) {
    this.position = e, this.inclusive = t;
  }
}
class Iu {
  constructor(e, t = "asc") {
    this.field = e, this.dir = t;
  }
}
function tD(n, e) {
  return n.dir === e.dir && n.field.isEqual(e.field);
}
function T1(n, e) {
  if (n === null)
    return e === null;
  if (e === null || n.inclusive !== e.inclusive || n.position.length !== e.position.length)
    return !1;
  for (let t = 0; t < n.position.length; t++)
    if (!Po(n.position[t], e.position[t]))
      return !1;
  return !0;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ja {
  constructor(e, t = null, r = [], i = [], s = null, a = "F", o = null, u = null) {
    this.path = e, this.collectionGroup = t, this.explicitOrderBy = r, this.filters = i, this.limit = s, this.limitType = a, this.startAt = o, this.endAt = u, this.O = null, this.k = null, this.startAt, this.endAt;
  }
}
function Ly(n) {
  return n.explicitOrderBy.length > 0 ? n.explicitOrderBy[0].field : null;
}
function $y(n) {
  for (const e of n.filters)
    if (e.q())
      return e.field;
  return null;
}
function _5(n) {
  return n.collectionGroup !== null;
}
function Dh(n) {
  const e = Jo(n);
  if (e.O === null) {
    e.O = [];
    const t = $y(e), r = Ly(e);
    if (t !== null && r === null)
      t.isKeyField() || e.O.push(new Iu(t)), e.O.push(new Iu(Yn.keyField(), "asc"));
    else {
      let i = !1;
      for (const s of e.explicitOrderBy)
        e.O.push(s), s.field.isKeyField() && (i = !0);
      if (!i) {
        const s = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : "asc";
        e.O.push(new Iu(Yn.keyField(), s));
      }
    }
  }
  return e.O;
}
function Id(n) {
  const e = Jo(n);
  if (!e.k)
    if (e.limitType === "F")
      e.k = w1(e.path, e.collectionGroup, Dh(e), e.filters, e.limit, e.startAt, e.endAt);
    else {
      const t = [];
      for (const s of Dh(e)) {
        const a = s.dir === "desc" ? "asc" : "desc";
        t.push(new Iu(s.field, a));
      }
      const r = e.endAt ? new Od(e.endAt.position, e.endAt.inclusive) : null, i = e.startAt ? new Od(e.startAt.position, e.startAt.inclusive) : null;
      e.k = w1(e.path, e.collectionGroup, t, e.filters, e.limit, r, i);
    }
  return e.k;
}
function nD(n, e) {
  return function(t, r) {
    if (t.limit !== r.limit || t.orderBy.length !== r.orderBy.length)
      return !1;
    for (let a = 0; a < t.orderBy.length; a++)
      if (!tD(t.orderBy[a], r.orderBy[a]))
        return !1;
    if (t.filters.length !== r.filters.length)
      return !1;
    for (let a = 0; a < t.filters.length; a++)
      if (i = t.filters[a], s = r.filters[a], i.op !== s.op || !i.field.isEqual(s.field) || !Po(i.value, s.value))
        return !1;
    var i, s;
    return t.collectionGroup === r.collectionGroup && !!t.path.isEqual(r.path) && !!T1(t.startAt, r.startAt) && T1(t.endAt, r.endAt);
  }(Id(n), Id(e)) && n.limitType === e.limitType;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function M5(n, e) {
  return function(t) {
    return typeof t == "number" && Number.isInteger(t) && !Ed(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;
  }(e) ? function(t) {
    return {
      integerValue: "" + t
    };
  }(e) : function(t, r) {
    if (t.C) {
      if (isNaN(r))
        return {
          doubleValue: "NaN"
        };
      if (r === 1 / 0)
        return {
          doubleValue: "Infinity"
        };
      if (r === -1 / 0)
        return {
          doubleValue: "-Infinity"
        };
    }
    return {
      doubleValue: Ed(r) ? "-0" : r
    };
  }(n, e);
}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class yf {
  constructor() {
    this._ = void 0;
  }
}
class R5 extends yf {
}
class P5 extends yf {
  constructor(e) {
    super(), this.elements = e;
  }
}
class O5 extends yf {
  constructor(e) {
    super(), this.elements = e;
  }
}
class I5 extends yf {
  constructor(e, t) {
    super(), this.L = e, this.M = t;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class mf {
  constructor(e, t) {
    this.field = e, this.transform = t;
  }
}
class bn {
  constructor(e, t) {
    this.updateTime = e, this.exists = t;
  }
  static none() {
    return new bn();
  }
  static exists(e) {
    return new bn(void 0, e);
  }
  static updateTime(e) {
    return new bn(e);
  }
  get isNone() {
    return this.updateTime === void 0 && this.exists === void 0;
  }
  isEqual(e) {
    return this.exists === e.exists && (this.updateTime ? !!e.updateTime && this.updateTime.isEqual(e.updateTime) : !e.updateTime);
  }
}
class bf {
}
class k5 extends bf {
  constructor(e, t, r, i = []) {
    super(), this.key = e, this.value = t, this.precondition = r, this.fieldTransforms = i, this.type = 0;
  }
  getFieldMask() {
    return null;
  }
}
class Uy extends bf {
  constructor(e, t, r, i, s = []) {
    super(), this.key = e, this.data = t, this.fieldMask = r, this.precondition = i, this.fieldTransforms = s, this.type = 1;
  }
  getFieldMask() {
    return this.fieldMask;
  }
}
class gf extends bf {
  constructor(e, t) {
    super(), this.key = e, this.precondition = t, this.type = 2, this.fieldTransforms = [];
  }
  getFieldMask() {
    return null;
  }
}
class D5 extends bf {
  constructor(e, t) {
    super(), this.key = e, this.precondition = t, this.type = 3, this.fieldTransforms = [];
  }
  getFieldMask() {
    return null;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const rD = (() => ({
  asc: "ASCENDING",
  desc: "DESCENDING"
}))(), iD = (() => ({
  "<": "LESS_THAN",
  "<=": "LESS_THAN_OR_EQUAL",
  ">": "GREATER_THAN",
  ">=": "GREATER_THAN_OR_EQUAL",
  "==": "EQUAL",
  "!=": "NOT_EQUAL",
  "array-contains": "ARRAY_CONTAINS",
  in: "IN",
  "not-in": "NOT_IN",
  "array-contains-any": "ARRAY_CONTAINS_ANY"
}))();
class sD {
  constructor(e, t) {
    this.databaseId = e, this.C = t;
  }
}
function Bh(n, e) {
  return n.C ? `${new Date(1e3 * e.seconds).toISOString().replace(/\.\d*/, "").replace("Z", "")}.${("000000000" + e.nanoseconds).slice(-9)}Z` : {
    seconds: "" + e.seconds,
    nanos: e.nanoseconds
  };
}
function aD(n, e) {
  return n.C ? e.toBase64() : e.toUint8Array();
}
function oD(n, e) {
  return Bh(n, e.toTimestamp());
}
function Nh(n) {
  return xn(!!n), Nn.fromTimestamp(function(e) {
    const t = Sa(e);
    return new Un(t.seconds, t.nanos);
  }(n));
}
function Vy(n, e) {
  return function(t) {
    return new Bt(["projects", t.projectId, "databases", t.database]);
  }(n).child("documents").child(e).canonicalString();
}
function kd(n, e) {
  return Vy(n.databaseId, e.path);
}
function Fh(n, e) {
  const t = function(i) {
    const s = Bt.fromString(i);
    return xn(F5(s)), s;
  }(e);
  if (t.get(1) !== n.databaseId.projectId)
    throw new Z(se, "Tried to deserialize key from different project: " + t.get(1) + " vs " + n.databaseId.projectId);
  if (t.get(3) !== n.databaseId.database)
    throw new Z(se, "Tried to deserialize key from different database: " + t.get(3) + " vs " + n.databaseId.database);
  return new Ut((xn((r = t).length > 4 && r.get(4) === "documents"), r.popFirst(5)));
  var r;
}
function A1(n, e) {
  return Vy(n.databaseId, e);
}
function B5(n) {
  return new Bt(["projects", n.databaseId.projectId, "databases", n.databaseId.database]).canonicalString();
}
function C1(n, e, t) {
  return {
    name: kd(n, e),
    fields: t.value.mapValue.fields
  };
}
function uD(n, e) {
  return "found" in e ? function(t, r) {
    xn(!!r.found), r.found.name, r.found.updateTime;
    const i = Fh(t, r.found.name), s = Nh(r.found.updateTime), a = new Xn({
      mapValue: {
        fields: r.found.fields
      }
    });
    return Wr.newFoundDocument(i, s, a);
  }(n, e) : "missing" in e ? function(t, r) {
    xn(!!r.missing), xn(!!r.readTime);
    const i = Fh(t, r.missing), s = Nh(r.readTime);
    return Wr.newNoDocument(i, s);
  }(n, e) : Fe();
}
function lD(n, e) {
  let t;
  if (e instanceof k5)
    t = {
      update: C1(n, e.key, e.value)
    };
  else if (e instanceof gf)
    t = {
      delete: kd(n, e.key)
    };
  else if (e instanceof Uy)
    t = {
      update: C1(n, e.key, e.data),
      updateMask: fD(e.fieldMask)
    };
  else {
    if (!(e instanceof D5))
      return Fe();
    t = {
      verify: kd(n, e.key)
    };
  }
  return e.fieldTransforms.length > 0 && (t.updateTransforms = e.fieldTransforms.map((r) => function(i, s) {
    const a = s.transform;
    if (a instanceof R5)
      return {
        fieldPath: s.field.canonicalString(),
        setToServerValue: "REQUEST_TIME"
      };
    if (a instanceof P5)
      return {
        fieldPath: s.field.canonicalString(),
        appendMissingElements: {
          values: a.elements
        }
      };
    if (a instanceof O5)
      return {
        fieldPath: s.field.canonicalString(),
        removeAllFromArray: {
          values: a.elements
        }
      };
    if (a instanceof I5)
      return {
        fieldPath: s.field.canonicalString(),
        increment: a.M
      };
    throw Fe();
  }(0, r))), e.precondition.isNone || (t.currentDocument = function(r, i) {
    return i.updateTime !== void 0 ? {
      updateTime: oD(r, i.updateTime)
    } : i.exists !== void 0 ? {
      exists: i.exists
    } : Fe();
  }(n, e.precondition)), t;
}
function N5(n, e) {
  const t = {
    structuredQuery: {}
  }, r = e.path;
  e.collectionGroup !== null ? (t.parent = A1(n, r), t.structuredQuery.from = [{
    collectionId: e.collectionGroup,
    allDescendants: !0
  }]) : (t.parent = A1(n, r.popLast()), t.structuredQuery.from = [{
    collectionId: r.lastSegment()
  }]);
  const i = function(u) {
    if (u.length === 0)
      return;
    const l = u.map((c) => function(p) {
      if (p.op === "==") {
        if (x1(p.value))
          return {
            unaryFilter: {
              field: Ja(p.field),
              op: "IS_NAN"
            }
          };
        if (v1(p.value))
          return {
            unaryFilter: {
              field: Ja(p.field),
              op: "IS_NULL"
            }
          };
      } else if (p.op === "!=") {
        if (x1(p.value))
          return {
            unaryFilter: {
              field: Ja(p.field),
              op: "IS_NOT_NAN"
            }
          };
        if (v1(p.value))
          return {
            unaryFilter: {
              field: Ja(p.field),
              op: "IS_NOT_NULL"
            }
          };
      }
      return {
        fieldFilter: {
          field: Ja(p.field),
          op: dD(p.op),
          value: p.value
        }
      };
    }(c));
    return l.length === 1 ? l[0] : {
      compositeFilter: {
        op: "AND",
        filters: l
      }
    };
  }(e.filters);
  i && (t.structuredQuery.where = i);
  const s = function(u) {
    if (u.length !== 0)
      return u.map((l) => function(c) {
        return {
          field: Ja(c.field),
          direction: cD(c.dir)
        };
      }(l));
  }(e.orderBy);
  s && (t.structuredQuery.orderBy = s);
  const a = function(u, l) {
    return u.C || A5(l) ? l : {
      value: l
    };
  }(n, e.limit);
  var o;
  return a !== null && (t.structuredQuery.limit = a), e.startAt && (t.structuredQuery.startAt = {
    before: (o = e.startAt).inclusive,
    values: o.position
  }), e.endAt && (t.structuredQuery.endAt = function(u) {
    return {
      before: !u.inclusive,
      values: u.position
    };
  }(e.endAt)), t;
}
function cD(n) {
  return rD[n];
}
function dD(n) {
  return iD[n];
}
function Ja(n) {
  return {
    fieldPath: n.canonicalString()
  };
}
function fD(n) {
  const e = [];
  return n.fields.forEach((t) => e.push(t.canonicalString())), {
    fieldPaths: e
  };
}
function F5(n) {
  return n.length >= 4 && n.get(0) === "projects" && n.get(2) === "databases";
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function jy(n) {
  return new sD(n, !0);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class L5 {
  constructor(e, t, r = 1e3, i = 1.5, s = 6e4) {
    this.U = e, this.timerId = t, this.j = r, this.B = i, this.G = s, this.W = 0, this.K = null, this.Y = Date.now(), this.reset();
  }
  reset() {
    this.W = 0;
  }
  H() {
    this.W = this.G;
  }
  J(e) {
    this.cancel();
    const t = Math.floor(this.W + this.X()), r = Math.max(0, Date.now() - this.Y), i = Math.max(0, t - r);
    i > 0 && Aa("ExponentialBackoff", `Backing off for ${i} ms (base delay: ${this.W} ms, delay with jitter: ${t} ms, last attempt: ${r} ms ago)`), this.K = this.U.enqueueAfterDelay(this.timerId, i, () => (this.Y = Date.now(), e())), this.W *= this.B, this.W < this.j && (this.W = this.j), this.W > this.G && (this.W = this.G);
  }
  Z() {
    this.K !== null && (this.K.skipDelay(), this.K = null);
  }
  cancel() {
    this.K !== null && (this.K.cancel(), this.K = null);
  }
  X() {
    return (Math.random() - 0.5) * this.W;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class pD extends class {
} {
  constructor(e, t, r, i) {
    super(), this.authCredentials = e, this.appCheckCredentials = t, this.connection = r, this.L = i, this.tt = !1;
  }
  et() {
    if (this.tt)
      throw new Z(Fi, "The client has already been terminated.");
  }
  I(e, t, r) {
    return this.et(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(([i, s]) => this.connection.I(e, t, r, i, s)).catch((i) => {
      throw i.name === "FirebaseError" ? (i.code === Sd && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), i) : new Z(mo, i.toString());
    });
  }
  P(e, t, r, i) {
    return this.et(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(([s, a]) => this.connection.P(e, t, r, s, a, i)).catch((s) => {
      throw s.name === "FirebaseError" ? (s.code === Sd && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), s) : new Z(mo, s.toString());
    });
  }
  terminate() {
    this.tt = !0;
  }
}
async function Yo(n, e) {
  const t = Jo(n), r = B5(t.L) + "/documents", i = {
    writes: e.map((s) => lD(t.L, s))
  };
  await t.I("Commit", r, i);
}
async function $5(n, e) {
  const t = Jo(n), r = B5(t.L) + "/documents", i = {
    documents: e.map((u) => kd(t.L, u))
  }, s = await t.P("BatchGetDocuments", r, i, e.length), a = /* @__PURE__ */ new Map();
  s.forEach((u) => {
    const l = uD(t.L, u);
    a.set(l.key.toString(), l);
  });
  const o = [];
  return e.forEach((u) => {
    const l = a.get(u.toString());
    xn(!!l), o.push(l);
  }), o;
}
async function hD(n, e) {
  const t = Jo(n), r = N5(t.L, Id(e));
  return (await t.P("RunQuery", r.parent, {
    structuredQuery: r.structuredQuery
  })).filter((i) => !!i.document).map((i) => function(s, a, o) {
    const u = Fh(s, a.name), l = Nh(a.updateTime), c = new Xn({
      mapValue: {
        fields: a.fields
      }
    }), p = Wr.newFoundDocument(u, l, c);
    return o && p.setHasCommittedMutations(), o ? p.setHasCommittedMutations() : p;
  }(t.L, i.document, void 0));
}
async function yD(n, e) {
  const t = Jo(n), r = function(s, a) {
    const o = N5(s, a);
    return {
      structuredAggregationQuery: {
        aggregations: [{
          count: {},
          alias: "count_alias"
        }],
        structuredQuery: o.structuredQuery
      },
      parent: o.parent
    };
  }(t.L, Id(e)), i = r.parent;
  return t.connection.v || delete r.parent, (await t.P("RunAggregationQuery", i, r, 1)).filter((s) => !!s.result).map((s) => s.result.aggregateFields);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const ku = /* @__PURE__ */ new Map();
function Hi(n) {
  if (n._terminated)
    throw new Z(Fi, "The client has already been terminated.");
  if (!ku.has(n)) {
    Aa("ComponentProvider", "Initializing Datastore");
    const s = function(u) {
      return new Gk(u, fetch.bind(null));
    }((e = n._databaseId, t = n.app.options.appId || "", r = n._persistenceKey, i = n._freezeSettings(), new Uk(e, t, r, i.host, i.ssl, i.experimentalForceLongPolling, i.experimentalAutoDetectLongPolling, i.useFetchStreams))), a = jy(n._databaseId), o = function(u, l, c, p) {
      return new pD(u, l, c, p);
    }(n._authCredentials, n._appCheckCredentials, s, a);
    ku.set(n, o);
  }
  var e, t, r, i;
  /**
  * @license
  * Copyright 2018 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  return ku.get(n);
}
class S1 {
  constructor(e) {
    var t;
    if (e.host === void 0) {
      if (e.ssl !== void 0)
        throw new Z(se, "Can't provide ssl option if host option is not set");
      this.host = "firestore.googleapis.com", this.ssl = !0;
    } else
      this.host = e.host, this.ssl = (t = e.ssl) === null || t === void 0 || t;
    if (this.credentials = e.credentials, this.ignoreUndefinedProperties = !!e.ignoreUndefinedProperties, e.cacheSizeBytes === void 0)
      this.cacheSizeBytes = 41943040;
    else {
      if (e.cacheSizeBytes !== -1 && e.cacheSizeBytes < 1048576)
        throw new Z(se, "cacheSizeBytes must be at least 1048576");
      this.cacheSizeBytes = e.cacheSizeBytes;
    }
    this.experimentalForceLongPolling = !!e.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!e.experimentalAutoDetectLongPolling, this.useFetchStreams = !!e.useFetchStreams, function(r, i, s, a) {
      if (i === !0 && a === !0)
        throw new Z(se, `${r} and ${s} cannot be used together.`);
    }("experimentalForceLongPolling", e.experimentalForceLongPolling, "experimentalAutoDetectLongPolling", e.experimentalAutoDetectLongPolling);
  }
  isEqual(e) {
    return this.host === e.host && this.ssl === e.ssl && this.credentials === e.credentials && this.cacheSizeBytes === e.cacheSizeBytes && this.experimentalForceLongPolling === e.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === e.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === e.ignoreUndefinedProperties && this.useFetchStreams === e.useFetchStreams;
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class fi {
  constructor(e, t, r, i) {
    this._authCredentials = e, this._appCheckCredentials = t, this._databaseId = r, this._app = i, this.type = "firestore-lite", this._persistenceKey = "(lite)", this._settings = new S1({}), this._settingsFrozen = !1;
  }
  get app() {
    if (!this._app)
      throw new Z(Fi, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
    return this._app;
  }
  get _initialized() {
    return this._settingsFrozen;
  }
  get _terminated() {
    return this._terminateTask !== void 0;
  }
  _setSettings(e) {
    if (this._settingsFrozen)
      throw new Z(Fi, "Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.");
    this._settings = new S1(e), e.credentials !== void 0 && (this._authCredentials = function(t) {
      if (!t)
        return new kk();
      switch (t.type) {
        case "gapi":
          const r = t.client;
          return new Fk(r, t.sessionIndex || "0", t.iamToken || null, t.authTokenFactory || null);
        case "provider":
          return t.client;
        default:
          throw new Z(se, "makeAuthCredentialsProvider failed due to invalid credential type");
      }
    }(e.credentials));
  }
  _getSettings() {
    return this._settings;
  }
  _freezeSettings() {
    return this._settingsFrozen = !0, this._settings;
  }
  _delete() {
    return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;
  }
  toJSON() {
    return {
      app: this._app,
      databaseId: this._databaseId,
      settings: this._settings
    };
  }
  _terminate() {
    return function(e) {
      const t = ku.get(e);
      t && (Aa("ComponentProvider", "Removing Datastore"), ku.delete(e), t.terminate());
    }(this), Promise.resolve();
  }
}
function mD(n, e, t) {
  t || (t = "(default)");
  const r = My(n, "firestore/lite");
  if (r.isInitialized(t))
    throw new Z(Fi, "Firestore can only be initialized once per app.");
  return r.initialize({
    options: e,
    instanceIdentifier: t
  });
}
function bD(n, e) {
  const t = typeof n == "object" ? n : gk(), r = typeof n == "string" ? n : e || "(default)", i = My(t, "firestore/lite").getImmediate({
    identifier: r
  });
  if (!i._initialized) {
    const s = pI("firestore");
    s && U5(i, ...s);
  }
  return i;
}
function U5(n, e, t, r = {}) {
  var i;
  const s = (n = wr(n, fi))._getSettings();
  if (s.host !== "firestore.googleapis.com" && s.host !== e && h5("Host has been set in both settings() and useEmulator(), emulator host will be used"), n._setSettings(Object.assign(Object.assign({}, s), {
    host: `${e}:${t}`,
    ssl: !1
  })), r.mockUserToken) {
    let a, o;
    if (typeof r.mockUserToken == "string")
      a = r.mockUserToken, o = Dn.MOCK_USER;
    else {
      a = mI(r.mockUserToken, (i = n._app) === null || i === void 0 ? void 0 : i.options.projectId);
      const u = r.mockUserToken.sub || r.mockUserToken.user_id;
      if (!u)
        throw new Z(se, "mockUserToken must contain 'sub' or 'user_id' field!");
      o = new Dn(u);
    }
    n._authCredentials = new Dk(new w5(a, o));
  }
}
function gD(n) {
  return n = wr(n, fi), hk(n.app, "firestore/lite"), n._delete();
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class vD {
  constructor() {
    this.type = "AggregateField";
  }
}
class V5 {
  constructor(e, t) {
    this._data = t, this.type = "AggregateQuerySnapshot", this.query = e;
  }
  data() {
    return this._data;
  }
}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class xD {
  constructor(e, t, r) {
    this.query = e, this.datastore = t, this.userDataWriter = r;
  }
  run() {
    return yD(this.datastore, this.query._query).then((e) => {
      xn(e[0] !== void 0);
      const t = Object.entries(e[0]).filter(([r, i]) => r === "count_alias").map(([r, i]) => this.userDataWriter.convertValue(i))[0];
      return xn(typeof t == "number"), Promise.resolve(new V5(this.query, {
        count: t
      }));
    });
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Wt {
  constructor(e, t, r) {
    this.converter = t, this._key = r, this.type = "document", this.firestore = e;
  }
  get _path() {
    return this._key.path;
  }
  get id() {
    return this._key.path.lastSegment();
  }
  get path() {
    return this._key.path.canonicalString();
  }
  get parent() {
    return new pr(this.firestore, this.converter, this._key.path.popLast());
  }
  withConverter(e) {
    return new Wt(this.firestore, e, this._key);
  }
}
class er {
  constructor(e, t, r) {
    this.converter = t, this._query = r, this.type = "query", this.firestore = e;
  }
  withConverter(e) {
    return new er(this.firestore, e, this._query);
  }
}
class pr extends er {
  constructor(e, t, r) {
    super(e, t, new ja(r)), this._path = r, this.type = "collection";
  }
  get id() {
    return this._query.path.lastSegment();
  }
  get path() {
    return this._query.path.canonicalString();
  }
  get parent() {
    const e = this._path.popLast();
    return e.isEmpty() ? null : new Wt(
      this.firestore,
      null,
      new Ut(e)
    );
  }
  withConverter(e) {
    return new pr(this.firestore, e, this._path);
  }
}
function Lh(n, e, ...t) {
  if (n = Ht(n), By("collection", "path", e), n instanceof fi) {
    const r = Bt.fromString(e, ...t);
    return p1(r), new pr(n, null, r);
  }
  {
    if (!(n instanceof Wt || n instanceof pr))
      throw new Z(se, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    const r = n._path.child(Bt.fromString(e, ...t));
    return p1(r), new pr(
      n.firestore,
      null,
      r
    );
  }
}
function wD(n, e) {
  if (n = wr(n, fi), By("collectionGroup", "collection id", e), e.indexOf("/") >= 0)
    throw new Z(se, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);
  return new er(
    n,
    null,
    function(t) {
      return new ja(Bt.emptyPath(), t);
    }(e)
  );
}
function Du(n, e, ...t) {
  if (n = Ht(n), arguments.length === 1 && (e = zk.$()), By("doc", "path", e), n instanceof fi) {
    const r = Bt.fromString(e, ...t);
    return f1(r), new Wt(
      n,
      null,
      new Ut(r)
    );
  }
  {
    if (!(n instanceof Wt || n instanceof pr))
      throw new Z(se, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    const r = n._path.child(Bt.fromString(e, ...t));
    return f1(r), new Wt(n.firestore, n instanceof pr ? n.converter : null, new Ut(r));
  }
}
function TD(n, e) {
  return n = Ht(n), e = Ht(e), (n instanceof Wt || n instanceof pr) && (e instanceof Wt || e instanceof pr) && n.firestore === e.firestore && n.path === e.path && n.converter === e.converter;
}
function Gy(n, e) {
  return n = Ht(n), e = Ht(e), n instanceof er && e instanceof er && n.firestore === e.firestore && nD(n._query, e._query) && n.converter === e.converter;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class _a {
  constructor(e) {
    this._byteString = e;
  }
  static fromBase64String(e) {
    try {
      return new _a(Li.fromBase64String(e));
    } catch (t) {
      throw new Z(se, "Failed to construct data from Base64 string: " + t);
    }
  }
  static fromUint8Array(e) {
    return new _a(Li.fromUint8Array(e));
  }
  toBase64() {
    return this._byteString.toBase64();
  }
  toUint8Array() {
    return this._byteString.toUint8Array();
  }
  toString() {
    return "Bytes(base64: " + this.toBase64() + ")";
  }
  isEqual(e) {
    return this._byteString.isEqual(e._byteString);
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Ds {
  constructor(...e) {
    for (let t = 0; t < e.length; ++t)
      if (e[t].length === 0)
        throw new Z(se, "Invalid field name at argument $(i + 1). Field names must not be empty.");
    this._internalPath = new Yn(e);
  }
  isEqual(e) {
    return this._internalPath.isEqual(e._internalPath);
  }
}
function AD() {
  return new Ds("__name__");
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Bs {
  constructor(e) {
    this._methodName = e;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class vf {
  constructor(e, t) {
    if (!isFinite(e) || e < -90 || e > 90)
      throw new Z(se, "Latitude must be a number between -90 and 90, but was: " + e);
    if (!isFinite(t) || t < -180 || t > 180)
      throw new Z(se, "Longitude must be a number between -180 and 180, but was: " + t);
    this._lat = e, this._long = t;
  }
  get latitude() {
    return this._lat;
  }
  get longitude() {
    return this._long;
  }
  isEqual(e) {
    return this._lat === e._lat && this._long === e._long;
  }
  toJSON() {
    return {
      latitude: this._lat,
      longitude: this._long
    };
  }
  _compareTo(e) {
    return Jt(this._lat, e._lat) || Jt(this._long, e._long);
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const CD = /^__.*__$/;
class SD {
  constructor(e, t, r) {
    this.data = e, this.fieldMask = t, this.fieldTransforms = r;
  }
  toMutation(e, t) {
    return this.fieldMask !== null ? new Uy(e, this.data, this.fieldMask, t, this.fieldTransforms) : new k5(e, this.data, t, this.fieldTransforms);
  }
}
class j5 {
  constructor(e, t, r) {
    this.data = e, this.fieldMask = t, this.fieldTransforms = r;
  }
  toMutation(e, t) {
    return new Uy(e, this.data, this.fieldMask, t, this.fieldTransforms);
  }
}
function G5(n) {
  switch (n) {
    case 0:
    case 2:
    case 1:
      return !0;
    case 3:
    case 4:
      return !1;
    default:
      throw Fe();
  }
}
class xf {
  constructor(e, t, r, i, s, a) {
    this.settings = e, this.databaseId = t, this.L = r, this.ignoreUndefinedProperties = i, s === void 0 && this.nt(), this.fieldTransforms = s || [], this.fieldMask = a || [];
  }
  get path() {
    return this.settings.path;
  }
  get rt() {
    return this.settings.rt;
  }
  st(e) {
    return new xf(Object.assign(Object.assign({}, this.settings), e), this.databaseId, this.L, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);
  }
  it(e) {
    var t;
    const r = (t = this.path) === null || t === void 0 ? void 0 : t.child(e), i = this.st({
      path: r,
      ot: !1
    });
    return i.ut(e), i;
  }
  ct(e) {
    var t;
    const r = (t = this.path) === null || t === void 0 ? void 0 : t.child(e), i = this.st({
      path: r,
      ot: !1
    });
    return i.nt(), i;
  }
  at(e) {
    return this.st({
      path: void 0,
      ot: !0
    });
  }
  ht(e) {
    return Dd(e, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);
  }
  contains(e) {
    return this.fieldMask.find((t) => e.isPrefixOf(t)) !== void 0 || this.fieldTransforms.find((t) => e.isPrefixOf(t.field)) !== void 0;
  }
  nt() {
    if (this.path)
      for (let e = 0; e < this.path.length; e++)
        this.ut(this.path.get(e));
  }
  ut(e) {
    if (e.length === 0)
      throw this.ht("Document fields must not be empty");
    if (G5(this.rt) && CD.test(e))
      throw this.ht('Document fields cannot begin and end with "__"');
  }
}
class ED {
  constructor(e, t, r) {
    this.databaseId = e, this.ignoreUndefinedProperties = t, this.L = r || jy(e);
  }
  dt(e, t, r, i = !1) {
    return new xf({
      rt: e,
      methodName: t,
      ft: r,
      path: Yn.emptyPath(),
      ot: !1,
      lt: i
    }, this.databaseId, this.L, this.ignoreUndefinedProperties);
  }
}
function Ga(n) {
  const e = n._freezeSettings(), t = jy(n._databaseId);
  return new ED(n._databaseId, !!e.ignoreUndefinedProperties, t);
}
function wf(n, e, t, r, i, s = {}) {
  const a = n.dt(s.merge || s.mergeFields ? 2 : 0, e, t, i);
  Ky("Data must be an object, but it was:", a, r);
  const o = H5(r, a);
  let u, l;
  if (s.merge)
    u = new Ca(a.fieldMask), l = a.fieldTransforms;
  else if (s.mergeFields) {
    const c = [];
    for (const p of s.mergeFields) {
      const b = $h(e, p, t);
      if (!a.contains(b))
        throw new Z(se, `Field '${b}' is specified in your field mask but missing from your input data.`);
      q5(c, b) || c.push(b);
    }
    u = new Ca(c), l = a.fieldTransforms.filter((p) => u.covers(p.field));
  } else
    u = null, l = a.fieldTransforms;
  return new SD(new Xn(o), u, l);
}
class $l extends Bs {
  _toFieldTransform(e) {
    if (e.rt !== 2)
      throw e.rt === 1 ? e.ht(`${this._methodName}() can only appear at the top level of your update data`) : e.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);
    return e.fieldMask.push(e.path), null;
  }
  isEqual(e) {
    return e instanceof $l;
  }
}
function W5(n, e, t) {
  return new xf({
    rt: 3,
    ft: e.settings.ft,
    methodName: n._methodName,
    ot: t
  }, e.databaseId, e.L, e.ignoreUndefinedProperties);
}
class Wy extends Bs {
  _toFieldTransform(e) {
    return new mf(e.path, new R5());
  }
  isEqual(e) {
    return e instanceof Wy;
  }
}
class _D extends Bs {
  constructor(e, t) {
    super(e), this.wt = t;
  }
  _toFieldTransform(e) {
    const t = W5(
      this,
      e,
      !0
    ), r = this.wt.map((s) => Wa(s, t)), i = new P5(r);
    return new mf(e.path, i);
  }
  isEqual(e) {
    return this === e;
  }
}
class MD extends Bs {
  constructor(e, t) {
    super(e), this.wt = t;
  }
  _toFieldTransform(e) {
    const t = W5(
      this,
      e,
      !0
    ), r = this.wt.map((s) => Wa(s, t)), i = new O5(r);
    return new mf(e.path, i);
  }
  isEqual(e) {
    return this === e;
  }
}
class RD extends Bs {
  constructor(e, t) {
    super(e), this.yt = t;
  }
  _toFieldTransform(e) {
    const t = new I5(e.L, M5(e.L, this.yt));
    return new mf(e.path, t);
  }
  isEqual(e) {
    return this === e;
  }
}
function zy(n, e, t, r) {
  const i = n.dt(1, e, t);
  Ky("Data must be an object, but it was:", i, r);
  const s = [], a = Xn.empty();
  Ll(r, (u, l) => {
    const c = qy(e, u, t);
    l = Ht(l);
    const p = i.ct(c);
    if (l instanceof $l)
      s.push(c);
    else {
      const b = Wa(l, p);
      b != null && (s.push(c), a.set(c, b));
    }
  });
  const o = new Ca(s);
  return new j5(a, o, i.fieldTransforms);
}
function Hy(n, e, t, r, i, s) {
  const a = n.dt(1, e, t), o = [$h(e, r, t)], u = [i];
  if (s.length % 2 != 0)
    throw new Z(se, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);
  for (let b = 0; b < s.length; b += 2)
    o.push($h(e, s[b])), u.push(s[b + 1]);
  const l = [], c = Xn.empty();
  for (let b = o.length - 1; b >= 0; --b)
    if (!q5(l, o[b])) {
      const A = o[b];
      let g = u[b];
      g = Ht(g);
      const w = a.ct(A);
      if (g instanceof $l)
        l.push(A);
      else {
        const T = Wa(g, w);
        T != null && (l.push(A), c.set(A, T));
      }
    }
  const p = new Ca(l);
  return new j5(c, p, a.fieldTransforms);
}
function z5(n, e, t, r = !1) {
  return Wa(t, n.dt(r ? 4 : 3, e));
}
function Wa(n, e) {
  if (K5(
    n = Ht(n)
  ))
    return Ky("Unsupported field value:", e, n), H5(n, e);
  if (n instanceof Bs)
    return function(t, r) {
      if (!G5(r.rt))
        throw r.ht(`${t._methodName}() can only be used with update() and set()`);
      if (!r.path)
        throw r.ht(`${t._methodName}() is not currently supported inside arrays`);
      const i = t._toFieldTransform(r);
      i && r.fieldTransforms.push(i);
    }(n, e), null;
  if (n === void 0 && e.ignoreUndefinedProperties)
    return null;
  if (e.path && e.fieldMask.push(e.path), n instanceof Array) {
    if (e.settings.ot && e.rt !== 4)
      throw e.ht("Nested arrays are not supported");
    return function(t, r) {
      const i = [];
      let s = 0;
      for (const a of t) {
        let o = Wa(a, r.at(s));
        o == null && (o = {
          nullValue: "NULL_VALUE"
        }), i.push(o), s++;
      }
      return {
        arrayValue: {
          values: i
        }
      };
    }(n, e);
  }
  return function(t, r) {
    if ((t = Ht(t)) === null)
      return {
        nullValue: "NULL_VALUE"
      };
    if (typeof t == "number")
      return M5(r.L, t);
    if (typeof t == "boolean")
      return {
        booleanValue: t
      };
    if (typeof t == "string")
      return {
        stringValue: t
      };
    if (t instanceof Date) {
      const i = Un.fromDate(t);
      return {
        timestampValue: Bh(r.L, i)
      };
    }
    if (t instanceof Un) {
      const i = new Un(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
      return {
        timestampValue: Bh(r.L, i)
      };
    }
    if (t instanceof vf)
      return {
        geoPointValue: {
          latitude: t.latitude,
          longitude: t.longitude
        }
      };
    if (t instanceof _a)
      return {
        bytesValue: aD(r.L, t._byteString)
      };
    if (t instanceof Wt) {
      const i = r.databaseId, s = t.firestore._databaseId;
      if (!s.isEqual(i))
        throw r.ht(`Document reference is for database ${s.projectId}/${s.database} but should be for database ${i.projectId}/${i.database}`);
      return {
        referenceValue: Vy(t.firestore._databaseId || r.databaseId, t._key.path)
      };
    }
    throw r.ht(`Unsupported field value: ${hf(t)}`);
  }(n, e);
}
function H5(n, e) {
  const t = {};
  return function(r) {
    for (const i in r)
      if (Object.prototype.hasOwnProperty.call(r, i))
        return !1;
    return !0;
  }(n) ? e.path && e.path.length > 0 && e.fieldMask.push(e.path) : Ll(n, (r, i) => {
    const s = Wa(i, e.it(r));
    s != null && (t[r] = s);
  }), {
    mapValue: {
      fields: t
    }
  };
}
function K5(n) {
  return !(typeof n != "object" || n === null || n instanceof Array || n instanceof Date || n instanceof Un || n instanceof vf || n instanceof _a || n instanceof Wt || n instanceof Bs);
}
function Ky(n, e, t) {
  if (!K5(t) || !function(r) {
    return typeof r == "object" && r !== null && (Object.getPrototypeOf(r) === Object.prototype || Object.getPrototypeOf(r) === null);
  }(t)) {
    const r = hf(t);
    throw r === "an object" ? e.ht(n + " a custom object") : e.ht(n + " " + r);
  }
}
function $h(n, e, t) {
  if ((e = Ht(e)) instanceof Ds)
    return e._internalPath;
  if (typeof e == "string")
    return qy(n, e);
  throw Dd(
    "Field path arguments must be of type string or ",
    n,
    !1,
    void 0,
    t
  );
}
const PD = new RegExp("[~\\*/\\[\\]]");
function qy(n, e, t) {
  if (e.search(PD) >= 0)
    throw Dd(
      `Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`,
      n,
      !1,
      void 0,
      t
    );
  try {
    return new Ds(...e.split("."))._internalPath;
  } catch {
    throw Dd(
      `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`,
      n,
      !1,
      void 0,
      t
    );
  }
}
function Dd(n, e, t, r, i) {
  const s = r && !r.isEmpty(), a = i !== void 0;
  let o = `Function ${e}() called with invalid data`;
  t && (o += " (via `toFirestore()`)"), o += ". ";
  let u = "";
  return (s || a) && (u += " (found", s && (u += ` in field ${r}`), a && (u += ` in document ${i}`), u += ")"), new Z(se, o + n + u);
}
function q5(n, e) {
  return n.some((t) => t.isEqual(e));
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class _s {
  constructor(e, t, r, i, s) {
    this._firestore = e, this._userDataWriter = t, this._key = r, this._document = i, this._converter = s;
  }
  get id() {
    return this._key.path.lastSegment();
  }
  get ref() {
    return new Wt(this._firestore, this._converter, this._key);
  }
  exists() {
    return this._document !== null;
  }
  data() {
    if (this._document) {
      if (this._converter) {
        const e = new Qy(
          this._firestore,
          this._userDataWriter,
          this._key,
          this._document,
          null
        );
        return this._converter.fromFirestore(e);
      }
      return this._userDataWriter.convertValue(this._document.data.value);
    }
  }
  get(e) {
    if (this._document) {
      const t = this._document.data.field(Jy("DocumentSnapshot.get", e));
      if (t !== null)
        return this._userDataWriter.convertValue(t);
    }
  }
}
class Qy extends _s {
  data() {
    return super.data();
  }
}
class Bd {
  constructor(e, t) {
    this._docs = t, this.query = e;
  }
  get docs() {
    return [...this._docs];
  }
  get size() {
    return this.docs.length;
  }
  get empty() {
    return this.docs.length === 0;
  }
  forEach(e, t) {
    this._docs.forEach(e, t);
  }
}
function Q5(n, e) {
  return n = Ht(n), e = Ht(e), n instanceof _s && e instanceof _s ? n._firestore === e._firestore && n._key.isEqual(e._key) && (n._document === null ? e._document === null : n._document.isEqual(e._document)) && n._converter === e._converter : n instanceof Bd && e instanceof Bd && Gy(n.query, e.query) && Ny(n.docs, e.docs, Q5);
}
function Jy(n, e) {
  return typeof e == "string" ? qy(n, e) : e instanceof Ds ? e._internalPath : e._delegate._internalPath;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Xo {
}
function J5(n, ...e) {
  for (const t of e)
    n = t._apply(n);
  return n;
}
class OD extends Xo {
  constructor(e, t, r) {
    super(), this._t = e, this.gt = t, this.vt = r, this.type = "where";
  }
  _apply(e) {
    const t = Ga(e.firestore), r = function(i, s, a, o, u, l, c) {
      let p;
      if (u.isKeyField()) {
        if (l === "array-contains" || l === "array-contains-any")
          throw new Z(se, `Invalid Query. You can't perform '${l}' queries on documentId().`);
        if (l === "in" || l === "not-in") {
          _1(c, l);
          const A = [];
          for (const g of c)
            A.push(E1(o, i, g));
          p = {
            arrayValue: {
              values: A
            }
          };
        } else
          p = E1(o, i, c);
      } else
        l !== "in" && l !== "not-in" && l !== "array-contains-any" || _1(c, l), p = z5(
          a,
          s,
          c,
          l === "in" || l === "not-in"
        );
      const b = di.create(u, l, p);
      return function(A, g) {
        if (g.q()) {
          const T = $y(A);
          if (T !== null && !T.isEqual(g.field))
            throw new Z(se, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${T.toString()}' and '${g.field.toString()}'`);
          const _ = Ly(A);
          _ !== null && nT(A, g.field, _);
        }
        const w = function(T, _) {
          for (const I of T.filters)
            if (_.indexOf(I.op) >= 0)
              return I.op;
          return null;
        }(
          A,
          function(T) {
            switch (T) {
              case "!=":
                return ["!=", "not-in"];
              case "array-contains":
                return ["array-contains", "array-contains-any", "not-in"];
              case "in":
                return ["array-contains-any", "in", "not-in"];
              case "array-contains-any":
                return ["array-contains", "array-contains-any", "in", "not-in"];
              case "not-in":
                return ["array-contains", "array-contains-any", "in", "not-in", "!="];
              default:
                return [];
            }
          }(g.op)
        );
        if (w !== null)
          throw w === g.op ? new Z(se, `Invalid query. You cannot use more than one '${g.op.toString()}' filter.`) : new Z(se, `Invalid query. You cannot use '${g.op.toString()}' filters with '${w.toString()}' filters.`);
      }(i, b), b;
    }(e._query, "where", t, e.firestore._databaseId, this._t, this.gt, this.vt);
    return new er(e.firestore, e.converter, function(i, s) {
      const a = i.filters.concat([s]);
      return new ja(i.path, i.collectionGroup, i.explicitOrderBy.slice(), a, i.limit, i.limitType, i.startAt, i.endAt);
    }(e._query, r));
  }
}
function Y5(n, e, t) {
  const r = e, i = Jy("where", n);
  return new OD(i, r, t);
}
class ID extends Xo {
  constructor(e, t) {
    super(), this._t = e, this.bt = t, this.type = "orderBy";
  }
  _apply(e) {
    const t = function(r, i, s) {
      if (r.startAt !== null)
        throw new Z(se, "Invalid query. You must not call startAt() or startAfter() before calling orderBy().");
      if (r.endAt !== null)
        throw new Z(se, "Invalid query. You must not call endAt() or endBefore() before calling orderBy().");
      const a = new Iu(i, s);
      return function(o, u) {
        if (Ly(o) === null) {
          const l = $y(o);
          l !== null && nT(o, l, u.field);
        }
      }(r, a), a;
    }(e._query, this._t, this.bt);
    return new er(e.firestore, e.converter, function(r, i) {
      const s = r.explicitOrderBy.concat([i]);
      return new ja(r.path, r.collectionGroup, s, r.filters.slice(), r.limit, r.limitType, r.startAt, r.endAt);
    }(e._query, t));
  }
}
function kD(n, e = "asc") {
  const t = e, r = Jy("orderBy", n);
  return new ID(r, t);
}
class X5 extends Xo {
  constructor(e, t, r) {
    super(), this.type = e, this.Et = t, this.It = r;
  }
  _apply(e) {
    return new er(e.firestore, e.converter, function(t, r, i) {
      return new ja(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), r, i, t.startAt, t.endAt);
    }(e._query, this.Et, this.It));
  }
}
function DD(n) {
  return T5("limit", n), new X5("limit", n, "F");
}
function BD(n) {
  return T5("limitToLast", n), new X5("limitToLast", n, "L");
}
class Z5 extends Xo {
  constructor(e, t, r) {
    super(), this.type = e, this.Tt = t, this.At = r;
  }
  _apply(e) {
    const t = tT(e, this.type, this.Tt, this.At);
    return new er(e.firestore, e.converter, function(r, i) {
      return new ja(r.path, r.collectionGroup, r.explicitOrderBy.slice(), r.filters.slice(), r.limit, r.limitType, i, r.endAt);
    }(e._query, t));
  }
}
function ND(...n) {
  return new Z5(
    "startAt",
    n,
    !0
  );
}
function FD(...n) {
  return new Z5(
    "startAfter",
    n,
    !1
  );
}
class eT extends Xo {
  constructor(e, t, r) {
    super(), this.type = e, this.Tt = t, this.At = r;
  }
  _apply(e) {
    const t = tT(e, this.type, this.Tt, this.At);
    return new er(e.firestore, e.converter, function(r, i) {
      return new ja(r.path, r.collectionGroup, r.explicitOrderBy.slice(), r.filters.slice(), r.limit, r.limitType, r.startAt, i);
    }(e._query, t));
  }
}
function LD(...n) {
  return new eT(
    "endBefore",
    n,
    !1
  );
}
function $D(...n) {
  return new eT("endAt", n, !0);
}
function tT(n, e, t, r) {
  if (t[0] = Ht(t[0]), t[0] instanceof _s)
    return function(i, s, a, o, u) {
      if (!o)
        throw new Z(Oy, `Can't use a DocumentSnapshot that doesn't exist for ${a}().`);
      const l = [];
      for (const c of Dh(i))
        if (c.field.isKeyField())
          l.push(Pd(s, o.key));
        else {
          const p = o.data.field(c.field);
          if (Fy(p))
            throw new Z(se, 'Invalid query. You are trying to start or end a query using a document for which the field "' + c.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');
          if (p === null) {
            const b = c.field.canonicalString();
            throw new Z(se, `Invalid query. You are trying to start or end a query using a document for which the field '${b}' (used as the orderBy) does not exist.`);
          }
          l.push(p);
        }
      return new Od(l, u);
    }(n._query, n.firestore._databaseId, e, t[0]._document, r);
  {
    const i = Ga(n.firestore);
    return function(s, a, o, u, l, c) {
      const p = s.explicitOrderBy;
      if (l.length > p.length)
        throw new Z(se, `Too many arguments provided to ${u}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);
      const b = [];
      for (let A = 0; A < l.length; A++) {
        const g = l[A];
        if (p[A].field.isKeyField()) {
          if (typeof g != "string")
            throw new Z(se, `Invalid query. Expected a string for document ID in ${u}(), but got a ${typeof g}`);
          if (!_5(s) && g.indexOf("/") !== -1)
            throw new Z(se, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${u}() must be a plain document ID, but '${g}' contains a slash.`);
          const w = s.path.child(Bt.fromString(g));
          if (!Ut.isDocumentKey(w))
            throw new Z(se, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${u}() must result in a valid document path, but '${w}' is not because it contains an odd number of segments.`);
          const T = new Ut(w);
          b.push(Pd(a, T));
        } else {
          const w = z5(o, u, g);
          b.push(w);
        }
      }
      return new Od(b, c);
    }(n._query, n.firestore._databaseId, i, e, t, r);
  }
}
function E1(n, e, t) {
  if (typeof (t = Ht(t)) == "string") {
    if (t === "")
      throw new Z(se, "Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.");
    if (!_5(e) && t.indexOf("/") !== -1)
      throw new Z(se, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${t}' contains a '/' character.`);
    const r = e.path.child(Bt.fromString(t));
    if (!Ut.isDocumentKey(r))
      throw new Z(se, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);
    return Pd(n, new Ut(r));
  }
  if (t instanceof Wt)
    return Pd(n, t._key);
  throw new Z(se, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${hf(t)}.`);
}
function _1(n, e) {
  if (!Array.isArray(n) || n.length === 0)
    throw new Z(se, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);
  if (n.length > 10)
    throw new Z(se, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);
}
function nT(n, e, t) {
  if (!t.isEqual(e))
    throw new Z(se, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${t.toString()}' instead.`);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Tf(n, e, t) {
  let r;
  return r = n ? t && (t.merge || t.mergeFields) ? n.toFirestore(e, t) : n.toFirestore(e) : e, r;
}
class Af extends class {
  convertValue(e, t = "none") {
    switch (Ea(e)) {
      case 0:
        return null;
      case 1:
        return e.booleanValue;
      case 2:
        return jt(e.integerValue || e.doubleValue);
      case 3:
        return this.convertTimestamp(e.timestampValue);
      case 4:
        return this.convertServerTimestamp(e, t);
      case 5:
        return e.stringValue;
      case 6:
        return this.convertBytes(cl(e.bytesValue));
      case 7:
        return this.convertReference(e.referenceValue);
      case 8:
        return this.convertGeoPoint(e.geoPointValue);
      case 9:
        return this.convertArray(e.arrayValue, t);
      case 10:
        return this.convertObject(e.mapValue, t);
      default:
        throw Fe();
    }
  }
  convertObject(e, t) {
    const r = {};
    return Ll(e.fields, (i, s) => {
      r[i] = this.convertValue(s, t);
    }), r;
  }
  convertGeoPoint(e) {
    return new vf(jt(e.latitude), jt(e.longitude));
  }
  convertArray(e, t) {
    return (e.values || []).map((r) => this.convertValue(r, t));
  }
  convertServerTimestamp(e, t) {
    switch (t) {
      case "previous":
        const r = C5(e);
        return r == null ? null : this.convertValue(r, t);
      case "estimate":
        return this.convertTimestamp(dl(e));
      default:
        return null;
    }
  }
  convertTimestamp(e) {
    const t = Sa(e);
    return new Un(t.seconds, t.nanos);
  }
  convertDocumentKey(e, t) {
    const r = Bt.fromString(e);
    xn(F5(r));
    const i = new ul(r.get(1), r.get(3)), s = new Ut(r.popFirst(5));
    return i.isEqual(t) || pf(`Document ${s} contains a document reference within a different database (${i.projectId}/${i.database}) which is not supported. It will be treated as a reference in the current database (${t.projectId}/${t.database}) instead.`), s;
  }
} {
  constructor(e) {
    super(), this.firestore = e;
  }
  convertBytes(e) {
    return new _a(e);
  }
  convertReference(e) {
    const t = this.convertDocumentKey(e, this.firestore._databaseId);
    return new Wt(this.firestore, null, t);
  }
}
function UD(n) {
  const e = Hi((n = wr(n, Wt)).firestore), t = new Af(n.firestore);
  return $5(e, [n._key]).then((r) => {
    xn(r.length === 1);
    const i = r[0];
    return new _s(n.firestore, t, n._key, i.isFoundDocument() ? i : null, n.converter);
  });
}
function Uh(n) {
  (function(r) {
    if (r.limitType === "L" && r.explicitOrderBy.length === 0)
      throw new Z(ky, "limitToLast() queries require specifying at least one orderBy() clause");
  })((n = wr(n, er))._query);
  const e = Hi(n.firestore), t = new Af(n.firestore);
  return hD(e, n._query).then((r) => {
    const i = r.map((s) => new Qy(n.firestore, t, s.key, s, n.converter));
    return n._query.limitType === "L" && i.reverse(), new Bd(n, i);
  });
}
function Vh(n, e, t) {
  const r = Tf((n = wr(n, Wt)).converter, e, t), i = wf(Ga(n.firestore), "setDoc", n._key, r, n.converter !== null, t);
  return Yo(Hi(n.firestore), [i.toMutation(n._key, bn.none())]);
}
function VD(n, e, t, ...r) {
  const i = Ga((n = wr(n, Wt)).firestore);
  let s;
  return s = typeof (e = Ht(e)) == "string" || e instanceof Ds ? Hy(i, "updateDoc", n._key, e, t, r) : zy(i, "updateDoc", n._key, e), Yo(Hi(n.firestore), [s.toMutation(n._key, bn.exists(!0))]);
}
function rT(n) {
  return Yo(Hi((n = wr(n, Wt)).firestore), [new gf(n._key, bn.none())]);
}
function jD(n, e) {
  const t = Du(n = wr(n, pr)), r = Tf(n.converter, e), i = wf(Ga(n.firestore), "addDoc", t._key, r, t.converter !== null, {});
  return Yo(Hi(n.firestore), [i.toMutation(t._key, bn.exists(!1))]).then(() => t);
}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function GD(n) {
  const e = wr(n.firestore, fi), t = Hi(e), r = new Af(e);
  return new xD(n, t, r).run();
}
function WD(n, e) {
  return Gy(n.query, e.query) && wd(n.data(), e.data());
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function zD() {
  return new $l("deleteField");
}
function HD() {
  return new Wy("serverTimestamp");
}
function KD(...n) {
  return new _D("arrayUnion", n);
}
function qD(...n) {
  return new MD("arrayRemove", n);
}
function QD(n) {
  return new RD("increment", n);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class iT {
  constructor(e, t) {
    this._firestore = e, this._commitHandler = t, this._mutations = [], this._committed = !1, this._dataReader = Ga(e);
  }
  set(e, t, r) {
    this._verifyNotCommitted();
    const i = ua(e, this._firestore), s = Tf(i.converter, t, r), a = wf(this._dataReader, "WriteBatch.set", i._key, s, i.converter !== null, r);
    return this._mutations.push(a.toMutation(i._key, bn.none())), this;
  }
  update(e, t, r, ...i) {
    this._verifyNotCommitted();
    const s = ua(e, this._firestore);
    let a;
    return a = typeof (t = Ht(t)) == "string" || t instanceof Ds ? Hy(this._dataReader, "WriteBatch.update", s._key, t, r, i) : zy(this._dataReader, "WriteBatch.update", s._key, t), this._mutations.push(a.toMutation(s._key, bn.exists(!0))), this;
  }
  delete(e) {
    this._verifyNotCommitted();
    const t = ua(e, this._firestore);
    return this._mutations = this._mutations.concat(new gf(t._key, bn.none())), this;
  }
  commit() {
    return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();
  }
  _verifyNotCommitted() {
    if (this._committed)
      throw new Z(Fi, "A write batch can no longer be used after commit() has been called.");
  }
}
function ua(n, e) {
  if ((n = Ht(n)).firestore !== e)
    throw new Z(se, "Provided document reference is from a different Firestore instance.");
  return n;
}
function sT(n) {
  const e = Hi(n = wr(n, fi));
  return new iT(n, (t) => Yo(e, t));
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class JD {
  constructor(e) {
    this.datastore = e, this.readVersions = /* @__PURE__ */ new Map(), this.mutations = [], this.committed = !1, this.lastWriteError = null, this.writtenDocs = /* @__PURE__ */ new Set();
  }
  async lookup(e) {
    if (this.ensureCommitNotCalled(), this.mutations.length > 0)
      throw new Z(se, "Firestore transactions require all reads to be executed before all writes.");
    const t = await $5(this.datastore, e);
    return t.forEach((r) => this.recordVersion(r)), t;
  }
  set(e, t) {
    this.write(t.toMutation(e, this.precondition(e))), this.writtenDocs.add(e.toString());
  }
  update(e, t) {
    try {
      this.write(t.toMutation(e, this.preconditionForUpdate(e)));
    } catch (r) {
      this.lastWriteError = r;
    }
    this.writtenDocs.add(e.toString());
  }
  delete(e) {
    this.write(new gf(e, this.precondition(e))), this.writtenDocs.add(e.toString());
  }
  async commit() {
    if (this.ensureCommitNotCalled(), this.lastWriteError)
      throw this.lastWriteError;
    const e = this.readVersions;
    this.mutations.forEach((t) => {
      e.delete(t.key.toString());
    }), e.forEach((t, r) => {
      const i = Ut.fromPath(r);
      this.mutations.push(new D5(i, this.precondition(i)));
    }), await Yo(this.datastore, this.mutations), this.committed = !0;
  }
  recordVersion(e) {
    let t;
    if (e.isFoundDocument())
      t = e.version;
    else {
      if (!e.isNoDocument())
        throw Fe();
      t = Nn.min();
    }
    const r = this.readVersions.get(e.key.toString());
    if (r) {
      if (!t.isEqual(r))
        throw new Z(Iy, "Document version changed between two reads.");
    } else
      this.readVersions.set(e.key.toString(), t);
  }
  precondition(e) {
    const t = this.readVersions.get(e.toString());
    return !this.writtenDocs.has(e.toString()) && t ? t.isEqual(Nn.min()) ? bn.exists(!1) : bn.updateTime(t) : bn.none();
  }
  preconditionForUpdate(e) {
    const t = this.readVersions.get(e.toString());
    if (!this.writtenDocs.has(e.toString()) && t) {
      if (t.isEqual(Nn.min()))
        throw new Z(se, "Can't update a document that doesn't exist.");
      return bn.updateTime(t);
    }
    return bn.exists(!0);
  }
  write(e) {
    this.ensureCommitNotCalled(), this.mutations.push(e);
  }
  ensureCommitNotCalled() {
  }
}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const YD = {
  maxAttempts: 5
};
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class XD {
  constructor(e, t, r, i, s) {
    this.asyncQueue = e, this.datastore = t, this.options = r, this.updateFunction = i, this.deferred = s, this.Rt = r.maxAttempts, this.Pt = new L5(this.asyncQueue, "transaction_retry");
  }
  run() {
    this.Rt -= 1, this.Vt();
  }
  Vt() {
    this.Pt.J(async () => {
      const e = new JD(this.datastore), t = this.Nt(e);
      t && t.then((r) => {
        this.asyncQueue.enqueueAndForget(() => e.commit().then(() => {
          this.deferred.resolve(r);
        }).catch((i) => {
          this.$t(i);
        }));
      }).catch((r) => {
        this.$t(r);
      });
    });
  }
  Nt(e) {
    try {
      const t = this.updateFunction(e);
      return !A5(t) && t.catch && t.then ? t : (this.deferred.reject(Error("Transaction callback must return a Promise")), null);
    } catch (t) {
      return this.deferred.reject(t), null;
    }
  }
  $t(e) {
    this.Rt > 0 && this.Dt(e) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget(() => (this.Vt(), Promise.resolve()))) : this.deferred.reject(e);
  }
  Dt(e) {
    if (e.name === "FirebaseError") {
      const t = e.code;
      return t === "aborted" || t === "failed-precondition" || t === "already-exists" || !function(r) {
        switch (r) {
          default:
            return Fe();
          case Py:
          case mo:
          case y5:
          case b5:
          case v5:
          case x5:
          case Sd:
            return !1;
          case se:
          case Oy:
          case Ok:
          case m5:
          case Fi:
          case Iy:
          case g5:
          case ky:
          case Ik:
            return !0;
        }
      }(t);
    }
    return !1;
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Bp() {
  return typeof document < "u" ? document : null;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Yy {
  constructor(e, t, r, i, s) {
    this.asyncQueue = e, this.timerId = t, this.targetTimeMs = r, this.op = i, this.removalCallback = s, this.deferred = new Dy(), this.then = this.deferred.promise.then.bind(this.deferred.promise), this.deferred.promise.catch((a) => {
    });
  }
  static createAndSchedule(e, t, r, i, s) {
    const a = Date.now() + r, o = new Yy(e, t, a, i, s);
    return o.start(r), o;
  }
  start(e) {
    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), e);
  }
  skipDelay() {
    return this.handleDelayElapsed();
  }
  cancel(e) {
    this.timerHandle !== null && (this.clearTimeout(), this.deferred.reject(new Z(Py, "Operation cancelled" + (e ? ": " + e : ""))));
  }
  handleDelayElapsed() {
    this.asyncQueue.enqueueAndForget(() => this.timerHandle !== null ? (this.clearTimeout(), this.op().then((e) => this.deferred.resolve(e))) : Promise.resolve());
  }
  clearTimeout() {
    this.timerHandle !== null && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ZD {
  constructor() {
    this.xt = Promise.resolve(), this.Ft = [], this.St = !1, this.qt = [], this.Ot = null, this.kt = !1, this.Ct = !1, this.Lt = [], this.Pt = new L5(this, "async_queue_retry"), this.Mt = () => {
      const t = Bp();
      t && Aa("AsyncQueue", "Visibility state changed to " + t.visibilityState), this.Pt.Z();
    };
    const e = Bp();
    e && typeof e.addEventListener == "function" && e.addEventListener("visibilitychange", this.Mt);
  }
  get isShuttingDown() {
    return this.St;
  }
  enqueueAndForget(e) {
    this.enqueue(e);
  }
  enqueueAndForgetEvenWhileRestricted(e) {
    this.Ut(), this.jt(e);
  }
  enterRestrictedMode(e) {
    if (!this.St) {
      this.St = !0, this.Ct = e || !1;
      const t = Bp();
      t && typeof t.removeEventListener == "function" && t.removeEventListener("visibilitychange", this.Mt);
    }
  }
  enqueue(e) {
    if (this.Ut(), this.St)
      return new Promise(() => {
      });
    const t = new Dy();
    return this.jt(() => this.St && this.Ct ? Promise.resolve() : (e().then(t.resolve, t.reject), t.promise)).then(() => t.promise);
  }
  enqueueRetryable(e) {
    this.enqueueAndForget(() => (this.Ft.push(e), this.Bt()));
  }
  async Bt() {
    if (this.Ft.length !== 0) {
      try {
        await this.Ft[0](), this.Ft.shift(), this.Pt.reset();
      } catch (e) {
        if (!function(t) {
          return t.name === "IndexedDbTransactionError";
        }(e))
          throw e;
        Aa("AsyncQueue", "Operation failed with retryable error: " + e);
      }
      this.Ft.length > 0 && this.Pt.J(() => this.Bt());
    }
  }
  jt(e) {
    const t = this.xt.then(() => (this.kt = !0, e().catch((r) => {
      this.Ot = r, this.kt = !1;
      const i = function(s) {
        let a = s.message || "";
        return s.stack && (a = s.stack.includes(s.message) ? s.stack : s.message + `
` + s.stack), a;
      }(r);
      throw pf("INTERNAL UNHANDLED ERROR: ", i), r;
    }).then((r) => (this.kt = !1, r))));
    return this.xt = t, t;
  }
  enqueueAfterDelay(e, t, r) {
    this.Ut(), this.Lt.indexOf(e) > -1 && (t = 0);
    const i = Yy.createAndSchedule(this, e, t, r, (s) => this.Qt(s));
    return this.qt.push(i), i;
  }
  Ut() {
    this.Ot && Fe();
  }
  verifyOperationInProgress() {
  }
  async zt() {
    let e;
    do
      e = this.xt, await e;
    while (e !== this.xt);
  }
  Gt(e) {
    for (const t of this.qt)
      if (t.timerId === e)
        return !0;
    return !1;
  }
  Wt(e) {
    return this.zt().then(() => {
      this.qt.sort((t, r) => t.targetTimeMs - r.targetTimeMs);
      for (const t of this.qt)
        if (t.skipDelay(), e !== "all" && t.timerId === e)
          break;
      return this.zt();
    });
  }
  Kt(e) {
    this.Lt.push(e);
  }
  Qt(e) {
    const t = this.qt.indexOf(e);
    this.qt.splice(t, 1);
  }
}
class aT {
  constructor(e, t) {
    this._firestore = e, this._transaction = t, this._dataReader = Ga(e);
  }
  get(e) {
    const t = ua(e, this._firestore), r = new Af(this._firestore);
    return this._transaction.lookup([t._key]).then((i) => {
      if (!i || i.length !== 1)
        return Fe();
      const s = i[0];
      if (s.isFoundDocument())
        return new _s(this._firestore, r, s.key, s, t.converter);
      if (s.isNoDocument())
        return new _s(this._firestore, r, t._key, null, t.converter);
      throw Fe();
    });
  }
  set(e, t, r) {
    const i = ua(e, this._firestore), s = Tf(i.converter, t, r), a = wf(this._dataReader, "Transaction.set", i._key, s, i.converter !== null, r);
    return this._transaction.set(i._key, a), this;
  }
  update(e, t, r, ...i) {
    const s = ua(e, this._firestore);
    let a;
    return a = typeof (t = Ht(t)) == "string" || t instanceof Ds ? Hy(this._dataReader, "Transaction.update", s._key, t, r, i) : zy(this._dataReader, "Transaction.update", s._key, t), this._transaction.update(s._key, a), this;
  }
  delete(e) {
    const t = ua(e, this._firestore);
    return this._transaction.delete(t._key), this;
  }
}
function eB(n, e, t) {
  const r = Hi(n = wr(n, fi)), i = Object.assign(Object.assign({}, YD), t);
  (function(a) {
    if (a.maxAttempts < 1)
      throw new Z(se, "Max attempts must be at least 1");
  })(i);
  const s = new Dy();
  return new XD(new ZD(), r, i, (a) => e(new aT(n, a)), s).run(), s.promise;
}
(function(n) {
  Qo = n;
})(`${bk}_lite`), Cd(new al("firestore/lite", (n, { instanceIdentifier: e, options: t }) => {
  const r = n.getProvider("app").getImmediate(), i = new fi(new Bk(n.getProvider("auth-internal")), new $k(n.getProvider("app-check-internal")), function(s, a) {
    if (!Object.prototype.hasOwnProperty.apply(s.options, ["projectId"]))
      throw new Z(se, '"projectId" not provided in firebase.initializeApp.');
    return new ul(s.options.projectId, a);
  }(r, e), r);
  return t && i._setSettings(t), i;
}, "PUBLIC").setMultipleInstances(!0)), yo("firestore-lite", "3.7.3", ""), yo("firestore-lite", "3.7.3", "esm2017");
const M1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AggregateField: vD,
  AggregateQuerySnapshot: V5,
  Bytes: _a,
  CollectionReference: pr,
  DocumentReference: Wt,
  DocumentSnapshot: _s,
  FieldPath: Ds,
  FieldValue: Bs,
  Firestore: fi,
  FirestoreError: Z,
  GeoPoint: vf,
  Query: er,
  QueryConstraint: Xo,
  QueryDocumentSnapshot: Qy,
  QuerySnapshot: Bd,
  Timestamp: Un,
  Transaction: aT,
  WriteBatch: iT,
  addDoc: jD,
  aggregateQuerySnapshotEqual: WD,
  arrayRemove: qD,
  arrayUnion: KD,
  collection: Lh,
  collectionGroup: wD,
  connectFirestoreEmulator: U5,
  deleteDoc: rT,
  deleteField: zD,
  doc: Du,
  documentId: AD,
  endAt: $D,
  endBefore: LD,
  getCount: GD,
  getDoc: UD,
  getDocs: Uh,
  getFirestore: bD,
  increment: QD,
  initializeFirestore: mD,
  limit: DD,
  limitToLast: BD,
  orderBy: kD,
  query: J5,
  queryEqual: Gy,
  refEqual: TD,
  runTransaction: eB,
  serverTimestamp: HD,
  setDoc: Vh,
  setLogLevel: Pk,
  snapshotEqual: Q5,
  startAfter: FD,
  startAt: ND,
  terminate: gD,
  updateDoc: VD,
  where: Y5,
  writeBatch: sT
}, Symbol.toStringTag, { value: "Module" }));
var Ic = /* @__PURE__ */ ((n) => (n.low = "Low Risk", n.moderate = "Moderate Risk", n.high = "High Risk", n))(Ic || {}), tB = Object.defineProperty, nB = Object.getOwnPropertyDescriptor, Cf = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? nB(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && tB(e, t, i), i;
}, lc = (n, e) => (t, r) => e(t, r, n);
const oT = he.createInterface("ReserveStore");
let Ma = class {
  constructor(n, e, t, r) {
    this.contractStore = n, this.contractService = e, this.numberService = t, this.dataStore = r;
  }
  reserveValue;
  kCurMarketCap;
  backing;
  kCurPrice;
  kCurSupply;
  transactions = [];
  reserveAssets = [];
  kCurReserveDistribution;
  kCurMentoDistribution;
  kCurPrimaryPoolDistribution;
  minBacking;
  kGuilderCurrentPrice;
  kGuilderTotalSupply;
  kGuilderSpread;
  kGuilderInflationRate;
  kGuilderTobinTax;
  static register(n) {
    n.register(pe.singleton(oT, Ma));
  }
  get kCurCirculatingDistribution() {
    return !this.kCurReserveDistribution || !this.kCurMentoDistribution || !this.kCurPrimaryPoolDistribution ? 0 : 1 - (this.kCurReserveDistribution + this.kCurMentoDistribution + this.kCurPrimaryPoolDistribution);
  }
  get currentCollateralizationRatio() {
    return this.numberService.fromString(Qt(this.backing ?? 0, 2));
  }
  get currentLeverageRatio() {
    return this.backing ? this.calculateLeverage(this.backing) : 0;
  }
  get maxLeverageRatio() {
    return 1 / this.numberService.fromString(Qt(this.minBacking ?? 0, 4)) * 100;
  }
  get minCollateralizationRatio() {
    return this.numberService.fromString(Qt(this.minBacking ?? 0, 4));
  }
  get minCollateralizationValue() {
    return this.kCurMarketCap ? this.minCollateralizationRatio * this.numberService.fromString(Qt(this.kCurMarketCap, 18)) : 0;
  }
  get maxLeverageMultiplier() {
    return `${Math.round(this.maxLeverageRatio / 100 * 100) / 100}x`;
  }
  get kCurTotalValue() {
    return this.numberService.fromString(Qt(this.kCurMarketCap ?? 0, 18));
  }
  get kGuilderMarketCap() {
    return this.kGuilderCurrentPrice ? this.kGuilderCurrentPrice * this.numberService.fromString(Qt(this.kGuilderTotalSupply ?? 0, 18)) : 0;
  }
  get kCurPriceFloor() {
    return !this.reserveValue || !this.kCurSupply ? 0 : this.numberService.fromString(Qt(this.reserveValue, 18)) / this.numberService.fromString(Qt(this.kCurSupply, 18));
  }
  get kCurPriceCeiling() {
    return !this.reserveValue || !this.kCurSupply ? 0 : this.kCurPriceFloor * 1.9;
  }
  get lowRiskAssets() {
    return this.reserveAssets?.filter((n) => n.type === us.Stablecoin) ?? [];
  }
  get moderateRiskAssets() {
    return this.reserveAssets?.filter((n) => n.type === us.NonStablecoin) ?? [];
  }
  get highRiskAssets() {
    return this.reserveAssets?.filter((n) => n.type === us.Ecological) ?? [];
  }
  get kGuilderValueRatio() {
    return this.kCurPrice ? 4 / this.kCurPrice : 0;
  }
  getRiskClass(n) {
    switch (n) {
      case us.Ecological:
        return Ic.high;
      case us.NonStablecoin:
        return Ic.moderate;
      case us.Stablecoin:
        return Ic.low;
    }
  }
  async loadAssets() {
    const n = await this.getReserveContract(), e = n.address;
    if (!e)
      return;
    const t = (await Promise.all([
      n.allRegisteredERC20s().then((i) => i.map((s) => ({ tokenId: void 0, address: s }))),
      n.allRegisteredERC721Ids().then((i) => i.map((s) => ({ tokenId: s.id, address: s.erc721 })))
    ])).flatMap((i) => i);
    this.reserveAssets = (await Promise.all(
      t.map(
        (i) => this.contractStore.getAsset(i.address, i.tokenId, n, e, this.transactions).catch()
      )
    )).filter(Boolean), this.loadkCurData();
    const r = await n.reserveStatus();
    this.reserveValue = r[0], this.kCurMarketCap = r[1], this.backing = r[2], this.minBacking = await n.minBacking();
  }
  async loadkCur() {
    await this.loadkCurData();
    const n = await this.getReserveContract();
    if (!this.kCurSupply)
      return;
    const t = await (await this.contractService.getContract("monetary", "Kolektivo Curacao Reserve Token")).balanceOf(n.address);
    this.kCurReserveDistribution = this.numberService.fromString(Qt(t, 18)) / this.numberService.fromString(Qt(this.kCurSupply, 18)), this.kCurMentoDistribution = 0, this.kCurPrimaryPoolDistribution = 0;
  }
  async loadkGuilder() {
    !(await this.getReserveContract()).address || (this.kGuilderCurrentPrice = 4, this.kGuilderTotalSupply = W.from(1934223345231232342413213n), this.kGuilderSpread = 0.2, this.kGuilderInflationRate = 0.01, this.kGuilderTobinTax = 0.05);
  }
  async loadkCurData() {
    if (this.kCurPrice || this.kCurSupply)
      return;
    const n = await this.getReserveContract(), e = await n.token();
    if (!e)
      return;
    const t = n.address;
    if (!t)
      return;
    const r = await n.tokenOracle();
    if (!r)
      return;
    const i = await this.contractStore.getAsset(e, void 0, n, t, void 0, r);
    this.kCurPrice = i?.token.price, this.kCurSupply = i?.totalSupply;
  }
  getReserveContract() {
    return this.contractService.getContract("monetary", "Reserve");
  }
  async getReserveValueOverTime(n) {
    const [e, t] = await Promise.all([
      this.getData("reserve", n),
      this.getReserveContract().then((r) => r.reserveStatus())
    ]);
    return e.push({
      createdAt: new Date(),
      value: t[0]
    }), e;
  }
  async getkGuilderValueRatioOverTime(n) {
    const [e] = await Promise.all([this.getData("kGuilder", n), this.loadkCurData()]);
    return e.push({
      createdAt: new Date(),
      value: this.kGuilderValueRatio
    }), e;
  }
  async getLeverageRatioValueOverTime(n) {
    const [e, [t, r]] = await Promise.all([
      this.getData("kCurRatio", n),
      this.getReserveContract().then((i) => Promise.all([i.reserveStatus(), i.minBacking()]))
    ]);
    return e.push({
      createdAt: new Date(),
      currentLeverageRatio: this.calculateLeverage(t[2]),
      maxLeverageRatio: 1 / (this.numberService.fromString(Qt(r, 2)) / 100) * 100
    }), e;
  }
  async getkCurSupplyData(n) {
    const [e] = await Promise.all([this.getData("kCurSupply", n), this.loadkCur()]);
    return e.push({
      createdAt: new Date(),
      kCurCirculatingDistribution: this.kCurCirculatingDistribution,
      kCurMentoDistribution: this.kCurMentoDistribution,
      kCurPrimaryPoolDistribution: this.kCurPrimaryPoolDistribution,
      kCurReserveDistribution: this.kCurReserveDistribution
    }), e;
  }
  async getkCurPriceOverTime(n) {
    const [e] = await Promise.all([this.getData("kCurPrice", n), this.loadkCurData(), this.loadAssets()]);
    return e.push({
      createdAt: new Date(),
      kCurPrice: this.kCurPrice,
      kCurPriceCeiling: this.kCurPriceCeiling,
      kCurPriceFloor: this.kCurPriceFloor
    }), e;
  }
  async getRiskOverTime(n) {
    const [e, [t, r]] = await Promise.all([
      this.getData("risk", n),
      this.getReserveContract().then((i) => Promise.all([i.reserveStatus(), i.minBacking()])),
      this.loadAssets()
    ]);
    return this.kCurMarketCap = t[1], this.minBacking = r, e.push({
      createdAt: new Date(),
      minCollateralValue: this.minCollateralizationValue,
      marketCap: this.kCurTotalValue,
      lowRisk: this.lowRiskAssets.map((i) => i.total).sum(),
      moderateRisk: this.moderateRiskAssets.map((i) => i.total).sum(),
      highRisk: this.highRiskAssets.map((i) => i.total).sum()
    }), e;
  }
  async getData(n, e) {
    const t = W6(e), r = await this.dataStore.getDocs(`chartData/${n}/${G6(e)}`, "createdAt", "desc", {
      fieldPath: "createdAt",
      opStr: ">=",
      value: t
    });
    return r.sort((i, s) => new Date(i.createdAt).getTime() - new Date(s.createdAt).getTime()), r;
  }
  calculateLeverage(n) {
    return 1 / this.numberService.fromString(Qt(n, 4)) * 100;
  }
};
Cf([
  ff()
], Ma.prototype, "loadAssets", 1);
Cf([
  ff()
], Ma.prototype, "loadkCur", 1);
Cf([
  ff()
], Ma.prototype, "loadkGuilder", 1);
Ma = Cf([
  lc(0, Sy),
  lc(1, Ko),
  lc(2, Bl),
  lc(3, Ey)
], Ma);
var rB = Object.defineProperty, iB = Object.getOwnPropertyDescriptor, sB = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? iB(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && rB(e, t, i), i;
}, aB = (n, e) => (t, r) => e(t, r, n);
const oB = he.createInterface();
let R1 = class {
  constructor(n) {
    this.walletConnector = n;
  }
  provider;
  async connect(n) {
    this.provider = n ? await this.walletConnector.connectTo(n) : await this.walletConnector.connect();
  }
};
R1 = sB([
  aB(0, Ay)
], R1);
var Kt = /* @__PURE__ */ ((n) => (n[n.minute = 0] = "minute", n[n.hour = 1] = "hour", n[n.day = 2] = "day", n))(Kt || {});
const Np = he.createContainer().register(pe.instance(g6, d5({ ...nI, apiKey: globalThis.process.env.FIREBASE_API_KEY }))).register(pe.instance(fy, {})).register(So).register(il).register(pe.instance(oB, {})).register(pe.instance(Ay, {})).register(pe.instance(py, { lsGet: () => "", lsSet: () => "" })).register(Zu).register(gd).register(Eo).register(vd).register(
  pe.instance(
    Yd,
    new tI(
      { url: Jg, skipFetchSetup: !0 },
      {
        name: Yg.toLowerCase(),
        chainId: Qg
      }
    )
  )
).register(
  pe.instance(Nl, {
    chainId: Qg,
    ipfsGateway: t8,
    chainUrl: Jg,
    chain: Yg,
    isDevelopment: { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_49136_EKEVELYUTXLNXMPA", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", FPS_BROWSER_APP_PROFILE_STRING: "Internet Explorer", FPS_BROWSER_USER_PROFILE_STRING: "Default", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Program Files (x86)\\IncrediBuild;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\.dotnet\\tools", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" }.NODE_ENV !== "production",
    scanLink: n8
  })
).register(Jd).register(sl).register(Ma).register(
  pe.instance(v6, {
    tokens: JO.tokens
  })
).register(el).register(pe.instance(Ba, { uf: (n) => Number(n) })).register(
  pe.instance(Pa, {}),
  pe.instance(Ud, {}),
  pe.instance(Ra, {
    scopeTo: () => {
    }
  })
), uB = async () => {
  let n = !1;
  const e = 5, t = 1, r = 1;
  let i = "";
  const s = Np.get(oT);
  let a = "", o = 0, u = 0, l = 0, c = 0, p = 0, b = 0, A = 0, g = 0, w = 0, T = 0, _, I = 0, N = 0, B = 0, D = 0, $ = 0;
  const j = await Np.get(cy).connect(), Q = Object.values(Kt).filter((C) => typeof C == "number").map((C) => C), oe = async (C) => {
    const M = Lh(j, `chartData/lastSync/${C}`);
    return (await Uh(M)).docs[0]?.id;
  }, J = async (C, M, P) => {
    P && await rT(Du(j, `chartData/lastSync/${C}/${P}`)), await Vh(Du(j, `chartData/lastSync/${C}`, M.toString()), {});
  }, ue = async (C, M, P, m) => {
    let f = m;
    typeof f != "object" && (f = { value: m }), f.createdAt = P, await Vh(Du(j, `chartData/${C}/${M}`, P.toString()), f);
  }, E = async (C, M, P) => {
    const m = sT(j);
    (await Uh(J5(Lh(j, `chartData/${C}/${M}`), Y5("createdAt", "<", P)))).forEach((v) => m.delete(v.ref)), await m.commit();
  }, d = async () => (await (await Np.get(r5).getTreasuryContract()).totalValuation()).toHexString(), y = async () => {
    await s.loadAssets(), await s.loadkCur();
  }, x = (C) => {
    const M = new Date();
    switch (C) {
      case 0:
        M.setMinutes(M.getMinutes() - 60, 0, 0);
        break;
      case 1:
        M.setHours(M.getHours() - 24, 0, 0, 0);
        break;
      case 2:
        return Number.MIN_VALUE;
    }
    return M.getTime();
  }, S = async () => {
    i = await d(), await y(), a = s.reserveValue?.toHexString() ?? "", o = s.currentLeverageRatio, u = s.maxLeverageRatio, l = s.kCurPrice ?? 0, c = s.kCurPriceCeiling, p = s.kCurPriceFloor, b = s.kCurReserveDistribution ?? 0, A = s.kCurMentoDistribution ?? 0, g = s.kCurPrimaryPoolDistribution ?? 0, w = s.kCurCirculatingDistribution, I = s.minCollateralizationValue, N = s.kCurTotalValue, B = s.lowRiskAssets.map((C) => C.total).sum(), D = s.moderateRiskAssets.map((C) => C.total).sum(), $ = s.highRiskAssets.map((C) => C.total).sum(), T = s.kGuilderValueRatio;
  };
  await Promise.all(
    Q.map(async (C) => {
      const M = await oe(Kt[C]), P = new Date();
      let m = new Date();
      if (M && (m = new Date(Number(M))), C === 0 ? (m.setUTCMinutes(m.getUTCMinutes() + e), m.setUTCSeconds(0, 0)) : C === 1 ? (m.setUTCHours(m.getUTCHours() + t), m.setUTCMinutes(0, 0, 0)) : (m.setUTCDate(m.getUTCDate() + r), m.setUTCHours(0, 0, 0, 0)), P >= m || !M) {
        let f = new Date();
        if (C === 0) {
          const v = 6e4 * e;
          f = new Date(Math.floor(P.getTime() / v) * v);
        } else
          C === 1 ? f.setUTCMinutes(0, 0, 0) : f.setUTCHours(0, 0, 0, 0);
        n || (n = !0, _ = S()), _?.then(async () => {
          await ue("kCurPrice", Kt[C], f.getTime(), { kCurPrice: l, kCurPriceCeiling: c, kCurPriceFloor: p }), await ue("kCurRatio", Kt[C], f.getTime(), { currentLeverageRatio: o, maxLeverageRatio: u }), await ue("kCurSupply", Kt[C], f.getTime(), {
            kCurReserveDistribution: b,
            kCurMentoDistribution: A,
            kCurPrimaryPoolDistribution: g,
            kCurCirculatingDistribution: w
          }), await ue("ktt", Kt[C], f.getTime(), i), await ue("reserve", Kt[C], f.getTime(), a), await ue("risk", Kt[C], f.getTime(), {
            minCollateralValue: I,
            marketCap: N,
            lowRisk: B,
            moderateRisk: D,
            highRisk: $
          }), await ue("kGuilder", Kt[C], f.getTime(), T), await J(Kt[C], f.getTime(), M);
          const v = x(C);
          await E("kCurPrice", Kt[C], v), await E("kCurRatio", Kt[C], v), await E("kCurSupply", Kt[C], v), await E("ktt", Kt[C], v), await E("reserve", Kt[C], v), await E("risk", Kt[C], v), await E("kGuilder", Kt[C], v);
        });
      }
    })
  );
};
await uB();

export {
  uB as seed
};
