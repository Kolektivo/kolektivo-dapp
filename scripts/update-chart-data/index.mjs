const n5 = "celo", r5 = 42220, i5 = {
  monetaryBadger: {
    abi: "Badger",
    address: "0xac0c9314f008047228B18Aa0f2B0f69349B7cE15"
  },
  kolektivoBadger: {
    abi: "Badger",
    address: "0x4D7116B96a7A2dE170fe40e2dF59617aBcF56018"
  },
  bacMD: {
    abi: "BACRoles",
    address: "0x92ca28643FC27b35D7B706f373ba76aD675BeADa"
  },
  bacFFD: {
    abi: "BACRoles",
    address: "0x615857388C1314Ee771643F1537307D5729facbA"
  },
  bacMC: {
    abi: "BACRoles",
    address: "0x75E62731F9c9BB76989269f151bA9A049B615632"
  },
  bacK: {
    abi: "BACRoles",
    address: "0xda7316eBd1c475d79059b2C08337d53C23cCa0Ba"
  },
  reserveDelegateScope: {
    abi: "ScopeGuard",
    address: "0xe134419f1955F254956A9E436005F60849f6a6c5"
  },
  foodForestDelegateScope: {
    abi: "ScopeGuard",
    address: "0xa578E29E64aa47a270f86d43623083e7FdEF84D4"
  },
  monetaryMultisigScope: {
    abi: "ScopeGuard",
    address: "0x61171BB19fA468793856a7Ef23e62e263b5Ce8A2"
  },
  monetaryDelay: {
    abi: "SecretDelay",
    address: "0xAF5614E1577b85A3fd725532ce01D51881089945"
  },
  foodForestDelay: {
    abi: "SecretDelay",
    address: "0xeaae16F74A4851f2655289f6074f6457a4C7b033"
  },
  kolektivoDelay: {
    abi: "SecretDelay",
    address: "0xce3614A5C6a3F15d71ED1AF70bcd1a113c3252ee"
  }
}, Nk = {
  name: n5,
  chainId: r5,
  contracts: i5
}, $k = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: n5,
  chainId: r5,
  contracts: i5,
  default: Nk
}, Symbol.toStringTag, { value: "Module" })), s5 = "celo", a5 = "42220", o5 = {
  GeoNFT: {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    abi: [
      {
        inputs: [
          {
            internalType: "string",
            name: "_name",
            type: "string"
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidIdentifier",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidLatitude",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidLongitude",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidTokenId",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "ApprovalForAll",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "TokenModified",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "getApproved",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isApprovedForAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "int32",
            name: "latitude",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "longitude",
            type: "int32"
          },
          {
            internalType: "string",
            name: "identifier",
            type: "string"
          }
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "int32",
            name: "latitude",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "longitude",
            type: "int32"
          },
          {
            internalType: "string",
            name: "identifier",
            type: "string"
          }
        ],
        name: "modify",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ownerOf",
        outputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes4",
            name: "interfaceId",
            type: "bytes4"
          }
        ],
        name: "supportsInterface",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "tokenData",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "int32",
            name: "",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "",
            type: "int32"
          },
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "tokenURI",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Oracle: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "uint256",
            name: "reportExpirationTime_",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "reportDelay_",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minimumProviders_",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "invalidProvider",
            type: "address"
          }
        ],
        name: "Oracle__InvalidProvider",
        type: "error"
      },
      {
        inputs: [],
        name: "Oracle__NewReportTooSoonAfterPastReport",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldMinimumProviders",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newMinimumProviders",
            type: "uint256"
          }
        ],
        name: "MinimumProvidersChanged",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [],
        name: "OracleMarkedAsInvalid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [],
        name: "OracleMarkedAsValid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          }
        ],
        name: "ProviderReportPushed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "purger",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderReportsPurged",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "addProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "getData",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "isValid",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "minimumProviders",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "providerReports",
        outputs: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "providers",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "providersSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "purgeReports",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "purgeReportsFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          }
        ],
        name: "pushReport",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "removeProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "reportDelay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "reportExpirationTime",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bool",
            name: "isValid_",
            type: "bool"
          }
        ],
        name: "setIsValid",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "minimumProviders_",
            type: "uint256"
          }
        ],
        name: "setMinimumProviders",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Mento Exchange": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "goldBucket",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "stableBucket",
            type: "uint256"
          }
        ],
        name: "BucketsUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchanger",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "bool",
            name: "soldGold",
            type: "bool"
          }
        ],
        name: "Exchanged",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "minSupplyForStableBucketCap",
            type: "uint256"
          }
        ],
        name: "MinSupplyForStableBucketCapSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "minimumReports",
            type: "uint256"
          }
        ],
        name: "MinimumReportsSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "reserveFraction",
            type: "uint256"
          }
        ],
        name: "ReserveFractionSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "spread",
            type: "uint256"
          }
        ],
        name: "SpreadSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "stableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "StableBucketMaxFractionSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "stable",
            type: "address"
          }
        ],
        name: "StableTokenSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "updateFrequency",
            type: "uint256"
          }
        ],
        name: "UpdateFrequencySet",
        type: "event"
      },
      {
        constant: !1,
        inputs: [],
        name: "activateStable",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "maxSellAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "buyGold",
            type: "bool"
          }
        ],
        name: "buy",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minBuyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "exchange",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getBuyAndSellBuckets",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getBuyTokenAmount",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getSellTokenAmount",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getStableBucketCap",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "goldBucket",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "string",
            name: "stableTokenIdentifier",
            type: "string"
          },
          {
            internalType: "uint256",
            name: "_spread",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_reserveFraction",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_updateFrequency",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_minimumReports",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_minSupplyForStableBucketCap",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_stableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "lastBucketUpdate",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minSupplyForStableBucketCap",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minimumReports",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "reserveFraction",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minBuyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "sell",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newMinSupplyForStableBucketCap",
            type: "uint256"
          }
        ],
        name: "setMinSupplyForStableBucketCap",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newMininumReports",
            type: "uint256"
          }
        ],
        name: "setMinimumReports",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newReserveFraction",
            type: "uint256"
          }
        ],
        name: "setReserveFraction",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newSpread",
            type: "uint256"
          }
        ],
        name: "setSpread",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newStableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "setStableBucketMaxFraction",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newStableToken",
            type: "address"
          }
        ],
        name: "setStableToken",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newUpdateFrequency",
            type: "uint256"
          }
        ],
        name: "setUpdateFrequency",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "spread",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stable",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableBucket",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableBucketMaxFraction",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableTokenRegistryId",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "updateFrequency",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      }
    ]
  },
  "Mento Reserve": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "bytes32[]",
            name: "symbols",
            type: "bytes32[]"
          },
          {
            indexed: !1,
            internalType: "uint256[]",
            name: "weights",
            type: "uint256[]"
          }
        ],
        name: "AssetAllocationSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "ratio",
            type: "uint256"
          }
        ],
        name: "DailySpendingRatioSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchangeSpender",
            type: "address"
          }
        ],
        name: "ExchangeSpenderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchangeSpender",
            type: "address"
          }
        ],
        name: "ExchangeSpenderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "otherReserveAddress",
            type: "address"
          }
        ],
        name: "OtherReserveAddressAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "otherReserveAddress",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "OtherReserveAddressRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "ReserveGoldTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "SpenderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "SpenderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxReserveRatioSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxStalenessThresholdSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "token",
            type: "address"
          }
        ],
        name: "TokenAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "TokenRemoved",
        type: "event"
      },
      {
        payable: !0,
        stateMutability: "payable",
        type: "fallback"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "addExchangeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "reserveAddress",
            type: "address"
          }
        ],
        name: "addOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "addSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          }
        ],
        name: "addToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "assetAllocationSymbols",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        name: "assetAllocationWeights",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "exchangeSpenderAddresses",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldDays",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldStartBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldStartDay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getAssetAllocationSymbols",
        outputs: [
          {
            internalType: "bytes32[]",
            name: "",
            type: "bytes32[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getAssetAllocationWeights",
        outputs: [
          {
            internalType: "uint256[]",
            name: "",
            type: "uint256[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getDailySpendingRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getExchangeSpenders",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getFrozenReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "getOrComputeTobinTax",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getOtherReserveAddresses",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getOtherReserveAddressesGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getReserveRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getTokens",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getUnfrozenBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getUnfrozenReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "_tobinTaxStalenessThreshold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_spendingRatio",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_frozenGold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_frozenDays",
            type: "uint256"
          },
          {
            internalType: "bytes32[]",
            name: "_assetAllocationSymbols",
            type: "bytes32[]"
          },
          {
            internalType: "uint256[]",
            name: "_assetAllocationWeights",
            type: "uint256[]"
          },
          {
            internalType: "uint256",
            name: "_tobinTax",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_tobinTaxReserveRatio",
            type: "uint256"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isExchangeSpender",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isSpender",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "lastSpendingDay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "otherReserveAddresses",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeExchangeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "reserveAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "removeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "bytes32[]",
            name: "symbols",
            type: "bytes32[]"
          },
          {
            internalType: "uint256[]",
            name: "weights",
            type: "uint256[]"
          }
        ],
        name: "setAssetAllocations",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "ratio",
            type: "uint256"
          }
        ],
        name: "setDailySpendingRatio",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "frozenGold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "frozenDays",
            type: "uint256"
          }
        ],
        name: "setFrozenGold",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTax",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTaxReserveRatio",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTaxStalenessThreshold",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "spendingLimit",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTax",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxCache",
        outputs: [
          {
            internalType: "uint128",
            name: "numerator",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "timestamp",
            type: "uint128"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxReserveRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxStalenessThreshold",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address payable",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferExchangeGold",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address payable",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferGold",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Kolektivo Curacao Guilder Token": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "factor",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256"
          }
        ],
        name: "InflationFactorUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "rate",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "updatePeriod",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256"
          }
        ],
        name: "InflationParametersUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "string",
            name: "comment",
            type: "string"
          }
        ],
        name: "TransferComment",
        type: "event"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "accountOwner",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "accountOwner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "burn",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "blsKey",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "blsPop",
            type: "bytes"
          }
        ],
        name: "checkProofOfPossession",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          },
          {
            internalType: "address",
            name: "gatewayFeeRecipient",
            type: "address"
          },
          {
            internalType: "address",
            name: "communityFund",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "tipTxFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gatewayFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "baseTxFee",
            type: "uint256"
          }
        ],
        name: "creditGasFees",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "debitGasFees",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "aNumerator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "aDenominator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "bNumerator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "bDenominator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "exponent",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_decimals",
            type: "uint256"
          }
        ],
        name: "fractionMulExp",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "getBlockNumberFromHeader",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getEpochNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "getEpochNumberOfBlock",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getEpochSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getExchangeRegistryId",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getInflationParameters",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "getParentSealBitmap",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "getVerifiedSealBitmapFromHeader",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "hashHeader",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "string",
            name: "_name",
            type: "string"
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string"
          },
          {
            internalType: "uint8",
            name: "_decimals",
            type: "uint8"
          },
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "inflationRate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "inflationFactorUpdatePeriod",
            type: "uint256"
          },
          {
            internalType: "address[]",
            name: "initialBalanceAddresses",
            type: "address[]"
          },
          {
            internalType: "uint256[]",
            name: "initialBalanceValues",
            type: "uint256[]"
          },
          {
            internalType: "string",
            name: "exchangeIdentifier",
            type: "string"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "minQuorumSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minQuorumSizeInCurrentSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "mint",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "numberValidatorsInCurrentSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "numberValidatorsInSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "updatePeriod",
            type: "uint256"
          }
        ],
        name: "setInflationParameters",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "totalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "comment",
            type: "string"
          }
        ],
        name: "transferWithComment",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "units",
            type: "uint256"
          }
        ],
        name: "unitsToValue",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "validatorSignerAddressFromCurrentSet",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "validatorSignerAddressFromSet",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "valueToUnits",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      }
    ]
  },
  Reserve: {
    address: "0xdb2B19C8e3ce01E7f5101652B9dEb500D1298716",
    abi: [
      {
        inputs: [
          {
            internalType: "address",
            name: "token_",
            type: "address"
          },
          {
            internalType: "address",
            name: "tokenOracle_",
            type: "address"
          },
          {
            internalType: "address",
            name: "vestingVault_",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "minBacking_",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20BalanceNotSufficient",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20BondingLimitExceeded",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotBondable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotRedeemable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotRegistered",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20RedeemLimitExceeded",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotBondable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotRedeemable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotRegistered",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidAmount",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidOracle",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__MinimumBackingLimitExceeded",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldBacking",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newBacking",
            type: "uint256"
          }
        ],
        name: "BackingUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sBonded",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensMinted",
            type: "uint256"
          }
        ],
        name: "BondedERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensMinted",
            type: "uint256"
          }
        ],
        name: "BondedERC721",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "DebtIncurred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "DebtPaid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20Deregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "enum IReserve.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            indexed: !1,
            internalType: "enum IReserve.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "ERC20Registered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDeregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdRegistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sRedeemed",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensBurned",
            type: "uint256"
          }
        ],
        name: "RedeemedERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensBurned",
            type: "uint256"
          }
        ],
        name: "RedeemedERC721Id",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldDiscount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newDiscount",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingDiscount",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldVestingDuration",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newVestingDuration",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingVesting",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetERC20Oracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20RedeemLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldDiscount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newDiscount",
            type: "uint256"
          }
        ],
        name: "SetERC721IdBondingDiscount",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldVestingDuration",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newVestingDuration",
            type: "uint256"
          }
        ],
        name: "SetERC721IdBondingVesting",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetERC721IdOracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldMinBacking",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newMinBacking",
            type: "uint256"
          }
        ],
        name: "SetMinBacking",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetTokenOracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "oldVestingVault",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newVestingVault",
            type: "address"
          }
        ],
        name: "SetVestingVault",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sWithdrawn",
            type: "uint256"
          }
        ],
        name: "WithdrewERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "WithdrewERC721Id",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC20s",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC721Ids",
        outputs: [
          {
            components: [
              {
                internalType: "address",
                name: "erc721",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              }
            ],
            internalType: "struct IReserve.ERC721Id[]",
            name: "",
            type: "tuple[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "assetTypeOfERC20",
        outputs: [
          {
            internalType: "enum IReserve.AssetType",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "bondERC20All",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "bondERC20AllFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC20AllFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC20AllTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20From",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20FromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "bondERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "bondERC721IdFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC721IdFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC721IdTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingDiscountPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "bondingDiscountPerERC721Id",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingVestingDurationPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "bondingVestingDurationPerERC721Id",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "deregisterERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "deregisterERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "executeTx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "incurDebt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Bondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Redeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdBondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdRedeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "minBacking",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        name: "onERC721Received",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "oraclePerERC20",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "oraclePerERC721Id",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "payDebt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "redeemERC20All",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "redeemERC20AllFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC20AllFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC20AllTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20From",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20FromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "redeemERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "redeemERC721IdFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC721IdFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC721IdTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "redeemLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            internalType: "enum IReserve.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            internalType: "enum IReserve.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "registerERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "registerERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC20s",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC721Ids",
        outputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "reserveStatus",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "riskLevelOfERC20",
        outputs: [
          {
            internalType: "enum IReserve.RiskLevel",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          }
        ],
        name: "setBondingDiscountForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          }
        ],
        name: "setBondingDiscountForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setBondingVestingForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setBondingVestingForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20BondingLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20RedeemLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "minBacking_",
            type: "uint256"
          }
        ],
        name: "setMinBacking",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "tokenOracle_",
            type: "address"
          }
        ],
        name: "setTokenOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "vestingVault_",
            type: "address"
          }
        ],
        name: "setVestingVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Bond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Redemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setupAndListERC721IdBond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "setupAndListERC721IdRedemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "token",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "tokenOracle",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateOracleForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateOracleForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "vestingVault",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "withdrawERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Treasury: {
    address: "0x74b06277Cd1efaA9f6595D25AdB54b4530d15BF5",
    abi: [
      {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidAmount",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "MaxSupplyReached",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20BondingLimitExceeded",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotBondable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotRedeemable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotRegistered",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20RedeemLimitExceeded",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotBondable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotRedeemable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotRegistered",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "Treasury__StaleERC20PriceDeliveredByOracle",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "Treasury__StaleERC721IdPriceDeliveredByOracle",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20Deregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "ERC20OracleUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldPrice",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newPrice",
            type: "uint256"
          }
        ],
        name: "ERC20PriceUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "enum Treasury.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            indexed: !1,
            internalType: "enum Treasury.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "ERC20Registered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sWithdrawn",
            type: "uint256"
          }
        ],
        name: "ERC20Withdrawn",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsMinted",
            type: "uint256"
          }
        ],
        name: "ERC20sBonded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsBurned",
            type: "uint256"
          }
        ],
        name: "ERC20sRedeemed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDeregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "ERC721IdOracleUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldPrice",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newPrice",
            type: "uint256"
          }
        ],
        name: "ERC721IdPriceUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "ERC721IdRegistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "ERC721IdWithdrawn",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsMinted",
            type: "uint256"
          }
        ],
        name: "ERC721IdsBonded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsBurned",
            type: "uint256"
          }
        ],
        name: "ERC721IdsRedeemed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "uint256",
            name: "epoch",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newScalar",
            type: "uint256"
          }
        ],
        name: "Rebase",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20RedeemLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "EIP712_DOMAIN",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "EIP712_REVISION",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "PERMIT_TYPEHASH",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC20s",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC721Ids",
        outputs: [
          {
            components: [
              {
                internalType: "address",
                name: "erc721",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              }
            ],
            internalType: "struct Treasury.ERC721Id[]",
            name: "",
            type: "tuple[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner_",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "assetTypeOfERC20",
        outputs: [
          {
            internalType: "enum Treasury.AssetType",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "bondERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "bondERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "deregisterERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "deregisterERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "executeTx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Bondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Redeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdBondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdRedeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "lastRebase",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "nonces",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        name: "onERC721Received",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "oraclePerERC20",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "oraclePerERC721Id",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8"
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32"
          }
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "rebase",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "kttWad",
            type: "uint256"
          }
        ],
        name: "redeemERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "redeemERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "redeemLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            internalType: "enum Treasury.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            internalType: "enum Treasury.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "registerERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "registerERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC20s",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC721Ids",
        outputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "riskLevelOfERC20",
        outputs: [
          {
            internalType: "enum Treasury.RiskLevel",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "scaledBalanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "scaledTotalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20BondingLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20RedeemLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Bond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Redemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalValuation",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "transferAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "transferAllFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateERC20Oracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateERC721IdOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "withdrawERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Kolektivo Curacao Reserve Token": {
    address: "0xf4cb43D02842c65101e5DA329ED01dFeC2280EdA",
    abi: "ERC20"
  },
  "Kolektivo Treasury Token": {
    address: "0x74b06277Cd1efaA9f6595D25AdB54b4530d15BF5",
    abi: "ERC20"
  },
  "Test Token #1": {
    address: "0x4cB13ED364bd2c212B694921CdAca979DCA76054",
    abi: "ERC20"
  },
  "Test Token #2": {
    address: "0x5bFE78b0d15eF0cdcA4077336e0bEbEc15CFb142",
    abi: "ERC20"
  },
  "Test Token #3": {
    address: "0xd312bCeA257799a39e0C85d7EC45031612e4dd50",
    abi: "ERC20"
  },
  "GeoNFT #1": {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    id: 1,
    abi: "ERC721"
  },
  "GeoNFT #2": {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    id: 2,
    abi: "ERC721"
  },
  VestingVault: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "claim",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "depositFor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "token",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "unvestedFor",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "vestedFor",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      }
    ]
  }
}, Lk = {
  name: s5,
  chainId: a5,
  contracts: o5
}, Uk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: s5,
  chainId: a5,
  contracts: o5,
  default: Lk
}, Symbol.toStringTag, { value: "Module" })), u5 = "celo", l5 = 42220, c5 = {}, Vk = {
  name: u5,
  chainId: l5,
  contracts: c5
}, jk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: u5,
  chainId: l5,
  contracts: c5,
  default: Vk
}, Symbol.toStringTag, { value: "Module" })), d5 = "celo", p5 = "42220", f5 = {}, zk = {
  name: d5,
  chainId: p5,
  contracts: f5
}, Gk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: d5,
  chainId: p5,
  contracts: f5,
  default: zk
}, Symbol.toStringTag, { value: "Module" })), h5 = "celo", y5 = "42220", m5 = {
  GeoNFT: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "string",
            name: "_name",
            type: "string"
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidIdentifier",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidLatitude",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidLongitude",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "GeoNFT__InvalidTokenId",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "ApprovalForAll",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "TokenModified",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "getApproved",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isApprovedForAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "int32",
            name: "latitude",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "longitude",
            type: "int32"
          },
          {
            internalType: "string",
            name: "identifier",
            type: "string"
          }
        ],
        name: "mint",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "int32",
            name: "latitude",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "longitude",
            type: "int32"
          },
          {
            internalType: "string",
            name: "identifier",
            type: "string"
          }
        ],
        name: "modify",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ownerOf",
        outputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "safeTransferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "operator",
            type: "address"
          },
          {
            internalType: "bool",
            name: "approved",
            type: "bool"
          }
        ],
        name: "setApprovalForAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bytes4",
            name: "interfaceId",
            type: "bytes4"
          }
        ],
        name: "supportsInterface",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "tokenData",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "int32",
            name: "",
            type: "int32"
          },
          {
            internalType: "int32",
            name: "",
            type: "int32"
          },
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "tokenURI",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Oracle: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "uint256",
            name: "reportExpirationTime_",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "reportDelay_",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minimumProviders_",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "invalidProvider",
            type: "address"
          }
        ],
        name: "Oracle__InvalidProvider",
        type: "error"
      },
      {
        inputs: [],
        name: "Oracle__NewReportTooSoonAfterPastReport",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldMinimumProviders",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newMinimumProviders",
            type: "uint256"
          }
        ],
        name: "MinimumProvidersChanged",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [],
        name: "OracleMarkedAsInvalid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [],
        name: "OracleMarkedAsValid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          }
        ],
        name: "ProviderReportPushed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "purger",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "ProviderReportsPurged",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "addProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "getData",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "isValid",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "minimumProviders",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "providerReports",
        outputs: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "providers",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "providersSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "purgeReports",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "purgeReportsFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "payload",
            type: "uint256"
          }
        ],
        name: "pushReport",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "provider",
            type: "address"
          }
        ],
        name: "removeProvider",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "reportDelay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "reportExpirationTime",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "bool",
            name: "isValid_",
            type: "bool"
          }
        ],
        name: "setIsValid",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "minimumProviders_",
            type: "uint256"
          }
        ],
        name: "setMinimumProviders",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Reserve: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "address",
            name: "token_",
            type: "address"
          },
          {
            internalType: "address",
            name: "tokenOracle_",
            type: "address"
          },
          {
            internalType: "address",
            name: "vestingVault_",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "minBacking_",
            type: "uint256"
          }
        ],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20BalanceNotSufficient",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20BondingLimitExceeded",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotBondable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotRedeemable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20NotRegistered",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC20RedeemLimitExceeded",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotBondable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotRedeemable",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__ERC721IdNotRegistered",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidAmount",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidOracle",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "Reserve__MinimumBackingLimitExceeded",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldBacking",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newBacking",
            type: "uint256"
          }
        ],
        name: "BackingUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sBonded",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensMinted",
            type: "uint256"
          }
        ],
        name: "BondedERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensMinted",
            type: "uint256"
          }
        ],
        name: "BondedERC721",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "DebtIncurred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "DebtPaid",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20Deregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "enum IReserve.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            indexed: !1,
            internalType: "enum IReserve.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "ERC20Registered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDeregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdRegistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sRedeemed",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensBurned",
            type: "uint256"
          }
        ],
        name: "RedeemedERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "tokensBurned",
            type: "uint256"
          }
        ],
        name: "RedeemedERC721Id",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldDiscount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newDiscount",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingDiscount",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldVestingDuration",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newVestingDuration",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingVesting",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetERC20Oracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20RedeemLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldDiscount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newDiscount",
            type: "uint256"
          }
        ],
        name: "SetERC721IdBondingDiscount",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldVestingDuration",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newVestingDuration",
            type: "uint256"
          }
        ],
        name: "SetERC721IdBondingVesting",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetERC721IdOracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldMinBacking",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newMinBacking",
            type: "uint256"
          }
        ],
        name: "SetMinBacking",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "SetTokenOracle",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "oldVestingVault",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newVestingVault",
            type: "address"
          }
        ],
        name: "SetVestingVault",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sWithdrawn",
            type: "uint256"
          }
        ],
        name: "WithdrewERC20",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "WithdrewERC721Id",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC20s",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC721Ids",
        outputs: [
          {
            components: [
              {
                internalType: "address",
                name: "erc721",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              }
            ],
            internalType: "struct IReserve.ERC721Id[]",
            name: "",
            type: "tuple[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "assetTypeOfERC20",
        outputs: [
          {
            internalType: "enum IReserve.AssetType",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "bondERC20All",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "bondERC20AllFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC20AllFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC20AllTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20From",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20FromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "erc20Amount",
            type: "uint256"
          }
        ],
        name: "bondERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "bondERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "bondERC721IdFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC721IdFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "bondERC721IdTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingDiscountPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "bondingDiscountPerERC721Id",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingVestingDurationPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "bondingVestingDurationPerERC721Id",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "deregisterERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "deregisterERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "executeTx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "incurDebt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Bondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Redeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdBondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdRedeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "minBacking",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        name: "onERC721Received",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "oraclePerERC20",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "oraclePerERC721Id",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "payDebt",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "redeemERC20All",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "redeemERC20AllFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC20AllFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC20AllTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20From",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20FromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokenAmount",
            type: "uint256"
          }
        ],
        name: "redeemERC20To",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "redeemERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          }
        ],
        name: "redeemERC721IdFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC721IdFromTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "redeemERC721IdTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "redeemLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            internalType: "enum IReserve.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            internalType: "enum IReserve.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "registerERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "registerERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC20s",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC721Ids",
        outputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "reserveStatus",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "riskLevelOfERC20",
        outputs: [
          {
            internalType: "enum IReserve.RiskLevel",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          }
        ],
        name: "setBondingDiscountForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          }
        ],
        name: "setBondingDiscountForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setBondingVestingForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setBondingVestingForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20BondingLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20RedeemLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "minBacking_",
            type: "uint256"
          }
        ],
        name: "setMinBacking",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "tokenOracle_",
            type: "address"
          }
        ],
        name: "setTokenOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "vestingVault_",
            type: "address"
          }
        ],
        name: "setVestingVault",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Bond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Redemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "discount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "setupAndListERC721IdBond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "setupAndListERC721IdRedemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "token",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "tokenOracle",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateOracleForERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateOracleForERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "vestingVault",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "withdrawERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  Treasury: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        inputs: [],
        name: "InvalidAmount",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "InvalidRecipient",
        type: "error"
      },
      {
        inputs: [],
        name: "MaxSupplyReached",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20BondingLimitExceeded",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotBondable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotRedeemable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20IsNotRegistered",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "Treasury__ERC20RedeemLimitExceeded",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotBondable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotRedeemable",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "Treasury__ERC721IdIsNotRegistered",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "Treasury__StaleERC20PriceDeliveredByOracle",
        type: "error"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "Treasury__StaleERC721IdPriceDeliveredByOracle",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20DelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20Deregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "ERC20ListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "ERC20OracleUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldPrice",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newPrice",
            type: "uint256"
          }
        ],
        name: "ERC20PriceUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "enum Treasury.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            indexed: !1,
            internalType: "enum Treasury.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "ERC20Registered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "erc20sWithdrawn",
            type: "uint256"
          }
        ],
        name: "ERC20Withdrawn",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsMinted",
            type: "uint256"
          }
        ],
        name: "ERC20sBonded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsBurned",
            type: "uint256"
          }
        ],
        name: "ERC20sRedeemed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDelistedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdDeregistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsBondable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "ERC721IdListedAsRedeemable",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "oldOracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "address",
            name: "newOracle",
            type: "address"
          }
        ],
        name: "ERC721IdOracleUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldPrice",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newPrice",
            type: "uint256"
          }
        ],
        name: "ERC721IdPriceUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "ERC721IdRegistered",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "ERC721IdWithdrawn",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsMinted",
            type: "uint256"
          }
        ],
        name: "ERC721IdsBonded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "who",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "kttsBurned",
            type: "uint256"
          }
        ],
        name: "ERC721IdsRedeemed",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "uint256",
            name: "epoch",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newScalar",
            type: "uint256"
          }
        ],
        name: "Rebase",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20BondingLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "oldLimit",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "newLimit",
            type: "uint256"
          }
        ],
        name: "SetERC20RedeemLimit",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        inputs: [],
        name: "DOMAIN_SEPARATOR",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "EIP712_DOMAIN",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "EIP712_REVISION",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "PERMIT_TYPEHASH",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC20s",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "allRegisteredERC721Ids",
        outputs: [
          {
            components: [
              {
                internalType: "address",
                name: "erc721",
                type: "address"
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256"
              }
            ],
            internalType: "struct Treasury.ERC721Id[]",
            name: "",
            type: "tuple[]"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner_",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "assetTypeOfERC20",
        outputs: [
          {
            internalType: "enum Treasury.AssetType",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "bondERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "bondERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "bondingLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "delistERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "delistERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "deregisterERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "deregisterERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "target",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes"
          }
        ],
        name: "executeTx",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Bondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isERC20Redeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdBondable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "isERC721IdRedeemable",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "lastRebase",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          }
        ],
        name: "listERC20AsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsBondable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "listERC721IdAsRedeemable",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "nonces",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "bytes",
            name: "",
            type: "bytes"
          }
        ],
        name: "onERC721Received",
        outputs: [
          {
            internalType: "bytes4",
            name: "",
            type: "bytes4"
          }
        ],
        stateMutability: "pure",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "oraclePerERC20",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "oraclePerERC721Id",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8"
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32"
          }
        ],
        name: "permit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "rebase",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "kttWad",
            type: "uint256"
          }
        ],
        name: "redeemERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        name: "redeemERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "redeemLimitPerERC20",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          },
          {
            internalType: "enum Treasury.AssetType",
            name: "assetType",
            type: "uint8"
          },
          {
            internalType: "enum Treasury.RiskLevel",
            name: "riskLevel",
            type: "uint8"
          }
        ],
        name: "registerERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "registerERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC20s",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "registeredERC721Ids",
        outputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "riskLevelOfERC20",
        outputs: [
          {
            internalType: "enum Treasury.RiskLevel",
            name: "",
            type: "uint8"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "who",
            type: "address"
          }
        ],
        name: "scaledBalanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "scaledTotalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20BondingLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setERC20RedeemLimit",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Bond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256"
          }
        ],
        name: "setupAndListERC20Redemption",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "totalValuation",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "transferAll",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          }
        ],
        name: "transferAllFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "tokens",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateERC20Oracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "oracle",
            type: "address"
          }
        ],
        name: "updateERC721IdOracle",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc20",
            type: "address"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          }
        ],
        name: "withdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "erc721",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "withdrawERC721Id",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Mento Exchange": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "goldBucket",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "stableBucket",
            type: "uint256"
          }
        ],
        name: "BucketsUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchanger",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "bool",
            name: "soldGold",
            type: "bool"
          }
        ],
        name: "Exchanged",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "minSupplyForStableBucketCap",
            type: "uint256"
          }
        ],
        name: "MinSupplyForStableBucketCapSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "minimumReports",
            type: "uint256"
          }
        ],
        name: "MinimumReportsSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "reserveFraction",
            type: "uint256"
          }
        ],
        name: "ReserveFractionSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "spread",
            type: "uint256"
          }
        ],
        name: "SpreadSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "stableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "StableBucketMaxFractionSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "stable",
            type: "address"
          }
        ],
        name: "StableTokenSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "updateFrequency",
            type: "uint256"
          }
        ],
        name: "UpdateFrequencySet",
        type: "event"
      },
      {
        constant: !1,
        inputs: [],
        name: "activateStable",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "maxSellAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "buyGold",
            type: "bool"
          }
        ],
        name: "buy",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minBuyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "exchange",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getBuyAndSellBuckets",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getBuyTokenAmount",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "getSellTokenAmount",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getStableBucketCap",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "goldBucket",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "string",
            name: "stableTokenIdentifier",
            type: "string"
          },
          {
            internalType: "uint256",
            name: "_spread",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_reserveFraction",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_updateFrequency",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_minimumReports",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_minSupplyForStableBucketCap",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_stableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "lastBucketUpdate",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minSupplyForStableBucketCap",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minimumReports",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "reserveFraction",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "minBuyAmount",
            type: "uint256"
          },
          {
            internalType: "bool",
            name: "sellGold",
            type: "bool"
          }
        ],
        name: "sell",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newMinSupplyForStableBucketCap",
            type: "uint256"
          }
        ],
        name: "setMinSupplyForStableBucketCap",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newMininumReports",
            type: "uint256"
          }
        ],
        name: "setMinimumReports",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newReserveFraction",
            type: "uint256"
          }
        ],
        name: "setReserveFraction",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newSpread",
            type: "uint256"
          }
        ],
        name: "setSpread",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newStableBucketMaxFraction",
            type: "uint256"
          }
        ],
        name: "setStableBucketMaxFraction",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newStableToken",
            type: "address"
          }
        ],
        name: "setStableToken",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "newUpdateFrequency",
            type: "uint256"
          }
        ],
        name: "setUpdateFrequency",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "spread",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stable",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableBucket",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableBucketMaxFraction",
        outputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "stableTokenRegistryId",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "updateFrequency",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      }
    ]
  },
  "Mento Reserve": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "bytes32[]",
            name: "symbols",
            type: "bytes32[]"
          },
          {
            indexed: !1,
            internalType: "uint256[]",
            name: "weights",
            type: "uint256[]"
          }
        ],
        name: "AssetAllocationSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "ratio",
            type: "uint256"
          }
        ],
        name: "DailySpendingRatioSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchangeSpender",
            type: "address"
          }
        ],
        name: "ExchangeSpenderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "exchangeSpender",
            type: "address"
          }
        ],
        name: "ExchangeSpenderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "otherReserveAddress",
            type: "address"
          }
        ],
        name: "OtherReserveAddressAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "otherReserveAddress",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "OtherReserveAddressRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "ReserveGoldTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "SpenderAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "SpenderRemoved",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxReserveRatioSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "TobinTaxStalenessThresholdSet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "token",
            type: "address"
          }
        ],
        name: "TokenAdded",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "TokenRemoved",
        type: "event"
      },
      {
        payable: !0,
        stateMutability: "payable",
        type: "fallback"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "addExchangeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "reserveAddress",
            type: "address"
          }
        ],
        name: "addOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "addSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          }
        ],
        name: "addToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "assetAllocationSymbols",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        name: "assetAllocationWeights",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "exchangeSpenderAddresses",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldDays",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldStartBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "frozenReserveGoldStartDay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getAssetAllocationSymbols",
        outputs: [
          {
            internalType: "bytes32[]",
            name: "",
            type: "bytes32[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getAssetAllocationWeights",
        outputs: [
          {
            internalType: "uint256[]",
            name: "",
            type: "uint256[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getDailySpendingRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getExchangeSpenders",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getFrozenReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "getOrComputeTobinTax",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getOtherReserveAddresses",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getOtherReserveAddressesGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getReserveRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getTokens",
        outputs: [
          {
            internalType: "address[]",
            name: "",
            type: "address[]"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getUnfrozenBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getUnfrozenReserveGoldBalance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "_tobinTaxStalenessThreshold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_spendingRatio",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_frozenGold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_frozenDays",
            type: "uint256"
          },
          {
            internalType: "bytes32[]",
            name: "_assetAllocationSymbols",
            type: "bytes32[]"
          },
          {
            internalType: "uint256[]",
            name: "_assetAllocationWeights",
            type: "uint256[]"
          },
          {
            internalType: "uint256",
            name: "_tobinTax",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_tobinTaxReserveRatio",
            type: "uint256"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isExchangeSpender",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isSpender",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        name: "isToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "lastSpendingDay",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        name: "otherReserveAddresses",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeExchangeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "reserveAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeOtherReserveAddress",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "removeSpender",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "token",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "removeToken",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "bytes32[]",
            name: "symbols",
            type: "bytes32[]"
          },
          {
            internalType: "uint256[]",
            name: "weights",
            type: "uint256[]"
          }
        ],
        name: "setAssetAllocations",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "ratio",
            type: "uint256"
          }
        ],
        name: "setDailySpendingRatio",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "frozenGold",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "frozenDays",
            type: "uint256"
          }
        ],
        name: "setFrozenGold",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTax",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTaxReserveRatio",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "setTobinTaxStalenessThreshold",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "spendingLimit",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTax",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxCache",
        outputs: [
          {
            internalType: "uint128",
            name: "numerator",
            type: "uint128"
          },
          {
            internalType: "uint128",
            name: "timestamp",
            type: "uint128"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxReserveRatio",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "tobinTaxStalenessThreshold",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address payable",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferExchangeGold",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address payable",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferGold",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      }
    ]
  },
  "Kolektivo Curacao Guilder Token": {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [
          {
            internalType: "bool",
            name: "test",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "constructor"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "owner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Approval",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "factor",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256"
          }
        ],
        name: "InflationFactorUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "uint256",
            name: "rate",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "updatePeriod",
            type: "uint256"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "lastUpdated",
            type: "uint256"
          }
        ],
        name: "InflationParametersUpdated",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "OwnershipTransferred",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "RegistrySet",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            indexed: !1,
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "Transfer",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !1,
            internalType: "string",
            name: "comment",
            type: "string"
          }
        ],
        name: "TransferComment",
        type: "event"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "accountOwner",
            type: "address"
          },
          {
            internalType: "address",
            name: "spender",
            type: "address"
          }
        ],
        name: "allowance",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "approve",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "accountOwner",
            type: "address"
          }
        ],
        name: "balanceOf",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "burn",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "address",
            name: "sender",
            type: "address"
          },
          {
            internalType: "bytes",
            name: "blsKey",
            type: "bytes"
          },
          {
            internalType: "bytes",
            name: "blsPop",
            type: "bytes"
          }
        ],
        name: "checkProofOfPossession",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "feeRecipient",
            type: "address"
          },
          {
            internalType: "address",
            name: "gatewayFeeRecipient",
            type: "address"
          },
          {
            internalType: "address",
            name: "communityFund",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "refund",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "tipTxFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "gatewayFee",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "baseTxFee",
            type: "uint256"
          }
        ],
        name: "creditGasFees",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "debitGasFees",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "decimals",
        outputs: [
          {
            internalType: "uint8",
            name: "",
            type: "uint8"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "decreaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "aNumerator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "aDenominator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "bNumerator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "bDenominator",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "exponent",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "_decimals",
            type: "uint256"
          }
        ],
        name: "fractionMulExp",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "getBlockNumberFromHeader",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getEpochNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "getEpochNumberOfBlock",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getEpochSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getExchangeRegistryId",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getInflationParameters",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "getParentSealBitmap",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "getVerifiedSealBitmapFromHeader",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "getVersionNumber",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "pure",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "bytes",
            name: "header",
            type: "bytes"
          }
        ],
        name: "hashHeader",
        outputs: [
          {
            internalType: "bytes32",
            name: "",
            type: "bytes32"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "spender",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "increaseAllowance",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "string",
            name: "_name",
            type: "string"
          },
          {
            internalType: "string",
            name: "_symbol",
            type: "string"
          },
          {
            internalType: "uint8",
            name: "_decimals",
            type: "uint8"
          },
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "inflationRate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "inflationFactorUpdatePeriod",
            type: "uint256"
          },
          {
            internalType: "address[]",
            name: "initialBalanceAddresses",
            type: "address[]"
          },
          {
            internalType: "uint256[]",
            name: "initialBalanceValues",
            type: "uint256[]"
          },
          {
            internalType: "string",
            name: "exchangeIdentifier",
            type: "string"
          }
        ],
        name: "initialize",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "initialized",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "isOwner",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "minQuorumSize",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "minQuorumSizeInCurrentSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "mint",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "name",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "numberValidatorsInCurrentSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "numberValidatorsInSet",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "registry",
        outputs: [
          {
            internalType: "contract IRegistry",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "uint256",
            name: "rate",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "updatePeriod",
            type: "uint256"
          }
        ],
        name: "setInflationParameters",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "registryAddress",
            type: "address"
          }
        ],
        name: "setRegistry",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "symbol",
        outputs: [
          {
            internalType: "string",
            name: "",
            type: "string"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [],
        name: "totalSupply",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transfer",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "from",
            type: "address"
          },
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "transferFrom",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "transferOwnership",
        outputs: [],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !1,
        inputs: [
          {
            internalType: "address",
            name: "to",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          },
          {
            internalType: "string",
            name: "comment",
            type: "string"
          }
        ],
        name: "transferWithComment",
        outputs: [
          {
            internalType: "bool",
            name: "",
            type: "bool"
          }
        ],
        payable: !1,
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "units",
            type: "uint256"
          }
        ],
        name: "unitsToValue",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          }
        ],
        name: "validatorSignerAddressFromCurrentSet",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "blockNumber",
            type: "uint256"
          }
        ],
        name: "validatorSignerAddressFromSet",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      },
      {
        constant: !0,
        inputs: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256"
          }
        ],
        name: "valueToUnits",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        payable: !1,
        stateMutability: "view",
        type: "function"
      }
    ]
  },
  "Kolektivo Curacao Reserve Token": {
    address: "0x0000000000000000000000000000000000000000",
    abi: "ERC20"
  },
  "Kolektivo Treasury Token": {
    address: "0x0000000000000000000000000000000000000000",
    abi: "ERC20"
  },
  VestingVault: {
    address: "0x0000000000000000000000000000000000000000",
    abi: [
      {
        inputs: [],
        name: "InvalidPendingOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByOwner",
        type: "error"
      },
      {
        inputs: [],
        name: "OnlyCallableByPendingOwner",
        type: "error"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newOwner",
            type: "address"
          }
        ],
        name: "NewOwner",
        type: "event"
      },
      {
        anonymous: !1,
        inputs: [
          {
            indexed: !0,
            internalType: "address",
            name: "previousPendingOwner",
            type: "address"
          },
          {
            indexed: !0,
            internalType: "address",
            name: "newPendingOwner",
            type: "address"
          }
        ],
        name: "NewPendingOwner",
        type: "event"
      },
      {
        inputs: [],
        name: "acceptOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "claim",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256"
          }
        ],
        name: "depositFor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "owner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [],
        name: "pendingOwner",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "pendingOwner_",
            type: "address"
          }
        ],
        name: "setPendingOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
      },
      {
        inputs: [],
        name: "token",
        outputs: [
          {
            internalType: "address",
            name: "",
            type: "address"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "unvestedFor",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      },
      {
        inputs: [
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          }
        ],
        name: "vestedFor",
        outputs: [
          {
            internalType: "uint256",
            name: "",
            type: "uint256"
          }
        ],
        stateMutability: "view",
        type: "function"
      }
    ]
  }
}, Wk = {
  name: h5,
  chainId: y5,
  contracts: m5
}, Hk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  name: h5,
  chainId: y5,
  contracts: m5,
  default: Wk
}, Symbol.toStringTag, { value: "Module" })), b5 = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseUri",
        type: "string"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "TransferDisabled",
    type: "error"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "approved",
        type: "bool"
      }
    ],
    name: "ApprovalForAll",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "string",
        name: "uri",
        type: "string"
      }
    ],
    name: "TokenUriUpdated",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      },
      {
        indexed: !1,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]"
      }
    ],
    name: "TransferBatch",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      }
    ],
    name: "TransferSingle",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "string",
        name: "value",
        type: "string"
      },
      {
        indexed: !0,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "URI",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      }
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]"
      }
    ],
    name: "burnFromMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "address",
        name: "operator",
        type: "address"
      }
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]"
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]"
      }
    ],
    name: "mintToMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]"
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseUri",
        type: "string"
      }
    ],
    name: "setBaseUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256"
      },
      {
        internalType: "string",
        name: "newUri",
        type: "string"
      }
    ],
    name: "setUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "tokenUris",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256"
      }
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
], g5 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "_avatar",
        type: "address"
      },
      {
        internalType: "address",
        name: "_target",
        type: "address"
      },
      {
        internalType: "address",
        name: "_badger",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [],
    name: "ArraysDifferentLength",
    type: "error"
  },
  {
    inputs: [],
    name: "ModuleTransactionFailed",
    type: "error"
  },
  {
    inputs: [],
    name: "NoMembership",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard_",
        type: "address"
      }
    ],
    name: "NotIERC165Compliant",
    type: "error"
  },
  {
    inputs: [],
    name: "RedundantUpdateOfState",
    type: "error"
  },
  {
    inputs: [],
    name: "SetUpModulesAlreadyCalled",
    type: "error"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousAvatar",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newAvatar",
        type: "address"
      }
    ],
    name: "AvatarSet",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "badgerAddress",
        type: "address"
      }
    ],
    name: "BadgerUpdated",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "guard",
        type: "address"
      }
    ],
    name: "ChangedGuard",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "initiator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "avatar",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "RolesModSetup",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "multisendAddress",
        type: "address"
      }
    ],
    name: "SetMultisendAddress",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousTarget",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newTarget",
        type: "address"
      }
    ],
    name: "TargetSet",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "enum ExecutionOptions",
        name: "options",
        type: "uint8"
      }
    ],
    name: "allowTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "avatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "badger",
    outputs: [
      {
        internalType: "contract IBadger",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      }
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      }
    ],
    name: "execTransactionFromModuleReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "getGuard",
    outputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "multisend",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      }
    ],
    name: "revokeTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "enum ExecutionOptions",
        name: "options",
        type: "uint8"
      }
    ],
    name: "scopeAllowFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "bool[]",
        name: "isParamScoped",
        type: "bool[]"
      },
      {
        internalType: "enum ParameterType[]",
        name: "paramType",
        type: "uint8[]"
      },
      {
        internalType: "enum Comparison[]",
        name: "paramComp",
        type: "uint8[]"
      },
      {
        internalType: "bytes[]",
        name: "compValue",
        type: "bytes[]"
      },
      {
        internalType: "enum ExecutionOptions",
        name: "options",
        type: "uint8"
      }
    ],
    name: "scopeFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "enum ExecutionOptions",
        name: "options",
        type: "uint8"
      }
    ],
    name: "scopeFunctionExecutionOptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "uint256",
        name: "paramIndex",
        type: "uint256"
      },
      {
        internalType: "enum ParameterType",
        name: "paramType",
        type: "uint8"
      },
      {
        internalType: "enum Comparison",
        name: "paramComp",
        type: "uint8"
      },
      {
        internalType: "bytes",
        name: "compValue",
        type: "bytes"
      }
    ],
    name: "scopeParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "uint256",
        name: "paramIndex",
        type: "uint256"
      },
      {
        internalType: "enum ParameterType",
        name: "paramType",
        type: "uint8"
      },
      {
        internalType: "bytes[]",
        name: "compValues",
        type: "bytes[]"
      }
    ],
    name: "scopeParameterAsOneOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      }
    ],
    name: "scopeRevokeFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      }
    ],
    name: "scopeTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address"
      }
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address"
      }
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_multisend",
        type: "address"
      }
    ],
    name: "setMultisend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address"
      }
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes"
      }
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "badgeId",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "uint8",
        name: "paramIndex",
        type: "uint8"
      }
    ],
    name: "unscopeParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBadger",
        type: "address"
      }
    ],
    name: "updateBadger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
], x5 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "initiator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      }
    ],
    name: "ScopeGuardSetup",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetDelegateCallAllowedOnTarget",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetFallbackAllowedOnTarget",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetFunctionAllowedOnTarget",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetTargetAllowed",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "scoped",
        type: "bool"
      }
    ],
    name: "SetTargetScoped",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "allowed",
        type: "bool"
      }
    ],
    name: "SetValueAllowedOnTarget",
    type: "event"
  },
  {
    stateMutability: "nonpayable",
    type: "fallback"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "allowedTargets",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool"
      },
      {
        internalType: "bool",
        name: "scoped",
        type: "bool"
      },
      {
        internalType: "bool",
        name: "delegateCallAllowed",
        type: "bool"
      },
      {
        internalType: "bool",
        name: "fallbackAllowed",
        type: "bool"
      },
      {
        internalType: "bool",
        name: "valueAllowed",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      },
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    name: "checkAfterExecution",
    outputs: [],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "address payable",
        name: "",
        type: "address"
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "checkTransaction",
    outputs: [],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      }
    ],
    name: "isAllowedFunction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isAllowedTarget",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isAllowedToDelegateCall",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isScoped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isValueAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "isfallbackAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bytes4",
        name: "functionSig",
        type: "bytes4"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setAllowedFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setDelegateCallAllowedOnTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setFallbackAllowedOnTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "scoped",
        type: "bool"
      }
    ],
    name: "setScoped",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setTargetAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initializeParams",
        type: "bytes"
      }
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address"
      },
      {
        internalType: "bool",
        name: "allow",
        type: "bool"
      }
    ],
    name: "setValueAllowedOnTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
], v5 = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "_avatar",
        type: "address"
      },
      {
        internalType: "address",
        name: "_target",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "_cooldown",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_expiration",
        type: "uint256"
      }
    ],
    stateMutability: "nonpayable",
    type: "constructor"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "AlreadyDisabledModule",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "AlreadyEnabledModule",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "InvalidModule",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address"
      }
    ],
    name: "NotAuthorized",
    type: "error"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guard_",
        type: "address"
      }
    ],
    name: "NotIERC165Compliant",
    type: "error"
  },
  {
    inputs: [],
    name: "RedundantUpdateOfState",
    type: "error"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousAvatar",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newAvatar",
        type: "address"
      }
    ],
    name: "AvatarSet",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "guard",
        type: "address"
      }
    ],
    name: "ChangedGuard",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "initiator",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "avatar",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "address",
        name: "target",
        type: "address"
      }
    ],
    name: "DelaySetup",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "DisabledModule",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "EnabledModule",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "ExecutionFromModuleFailure",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "ExecutionFromModuleSuccess",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "uint8",
        name: "version",
        type: "uint8"
      }
    ],
    name: "Initialized",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousOwner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "OwnershipTransferred",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256"
      },
      {
        indexed: !0,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32"
      },
      {
        indexed: !1,
        internalType: "string",
        name: "uri",
        type: "string"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "salt",
        type: "uint256"
      }
    ],
    name: "SecretTransactionAdded",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        indexed: !1,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "_salt",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256"
      }
    ],
    name: "SecretTransactionExecuted",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "previousTarget",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "newTarget",
        type: "address"
      }
    ],
    name: "TargetSet",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256"
      },
      {
        indexed: !0,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32"
      },
      {
        indexed: !1,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        indexed: !1,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "TransactionAdded",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !1,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        indexed: !1,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256"
      }
    ],
    name: "TransactionExecuted",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "uint256",
        name: "startingApprovedTrxNonce",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "numberOfTrxApproved",
        type: "uint256"
      }
    ],
    name: "TransactionsApproved",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "uint256",
        name: "startingVetoedTrxNonce",
        type: "uint256"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "numberOfTrxVetoed",
        type: "uint256"
      }
    ],
    name: "TransactionsVetoed",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_transactions",
        type: "uint256"
      }
    ],
    name: "approveNext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "approved",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "avatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevModule",
        type: "address"
      },
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "disableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address"
      }
    ],
    name: "enableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedTransaction",
        type: "bytes32"
      },
      {
        internalType: "string",
        name: "uri",
        type: "string"
      }
    ],
    name: "enqueueSecretTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "execTransactionFromModuleReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool"
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256"
      }
    ],
    name: "executeNextSecretTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "executeNextTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "getGuard",
    outputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "start",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256"
      }
    ],
    name: "getModulesPaginated",
    outputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]"
      },
      {
        internalType: "address",
        name: "next",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256"
      }
    ],
    name: "getSecretTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8"
      }
    ],
    name: "getTransactionHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256"
      }
    ],
    name: "getTxCreatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256"
      }
    ],
    name: "getTxHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_module",
        type: "address"
      }
    ],
    name: "isModuleEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "queuePointer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "salt",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_avatar",
        type: "address"
      }
    ],
    name: "setAvatar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address"
      }
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address"
      }
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cooldown",
        type: "uint256"
      }
    ],
    name: "setTxCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256"
      }
    ],
    name: "setTxExpiration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes"
      }
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "skipExpired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address"
      }
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "txCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "txCreatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "txExpiration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "txHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "txNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newTxNonce",
        type: "uint256"
      }
    ],
    name: "vetoTransactionsTill",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newTxNonce",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_transactions",
        type: "uint256"
      }
    ],
    name: "vetoTransactionsTillAndApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
], Kk = {
  Badger: b5,
  BACRoles: g5,
  ScopeGuard: x5,
  SecretDelay: v5
}, qk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Badger: b5,
  BACRoles: g5,
  ScopeGuard: x5,
  SecretDelay: v5,
  default: Kk
}, Symbol.toStringTag, { value: "Module" })), Qk = {}, Jk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Qk
}, Symbol.toStringTag, { value: "Module" })), w5 = [
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256"
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8"
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32"
      }
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "nonpayable",
    type: "function"
  }
], T5 = [
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "Approval",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "owner",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        indexed: !1,
        internalType: "bool",
        name: "approved",
        type: "bool"
      }
    ],
    name: "ApprovalForAll",
    type: "event"
  },
  {
    anonymous: !1,
    inputs: [
      {
        indexed: !0,
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        indexed: !0,
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "Transfer",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      }
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address"
      },
      {
        internalType: "address",
        name: "",
        type: "address"
      }
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes"
      }
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address"
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool"
      }
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4"
      }
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address"
      },
      {
        internalType: "address",
        name: "to",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256"
      }
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  }
], Yk = {
  ERC20: w5,
  ERC721: T5
}, Xk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ERC20: w5,
  ERC721: T5,
  default: Yk
}, Symbol.toStringTag, { value: "Module" }));
var Zk = A5, P2 = 128, eD = 127, tD = ~eD, nD = Math.pow(2, 31);
function A5(n, e, t) {
  e = e || [], t = t || 0;
  for (var r = t; n >= nD; )
    e[t++] = n & 255 | P2, n /= 128;
  for (; n & tD; )
    e[t++] = n & 255 | P2, n >>>= 7;
  return e[t] = n | 0, A5.bytes = t - r + 1, e;
}
var rD = uh, iD = 128, O2 = 127;
function uh(n, r) {
  var t = 0, r = r || 0, i = 0, s = r, a, o = n.length;
  do {
    if (s >= o)
      throw uh.bytes = 0, new RangeError("Could not decode varint");
    a = n[s++], t += i < 28 ? (a & O2) << i : (a & O2) * Math.pow(2, i), i += 7;
  } while (a >= iD);
  return uh.bytes = s - r, t;
}
var sD = Math.pow(2, 7), aD = Math.pow(2, 14), oD = Math.pow(2, 21), uD = Math.pow(2, 28), lD = Math.pow(2, 35), cD = Math.pow(2, 42), dD = Math.pow(2, 49), pD = Math.pow(2, 56), fD = Math.pow(2, 63), hD = function(n) {
  return n < sD ? 1 : n < aD ? 2 : n < oD ? 3 : n < uD ? 4 : n < lD ? 5 : n < cD ? 6 : n < dD ? 7 : n < pD ? 8 : n < fD ? 9 : 10;
}, yD = {
  encode: Zk,
  decode: rD,
  encodingLength: hD
}, pd = yD;
const lh = (n, e = 0) => [
  pd.decode(n, e),
  pd.decode.bytes
], fd = (n, e, t = 0) => (pd.encode(n, e, t), e), hd = (n) => pd.encodingLength(n), mD = (n, e) => {
  if (n === e)
    return !0;
  if (n.byteLength !== e.byteLength)
    return !1;
  for (let t = 0; t < n.byteLength; t++)
    if (n[t] !== e[t])
      return !1;
  return !0;
}, yy = (n) => {
  if (n instanceof Uint8Array && n.constructor.name === "Uint8Array")
    return n;
  if (n instanceof ArrayBuffer)
    return new Uint8Array(n);
  if (ArrayBuffer.isView(n))
    return new Uint8Array(n.buffer, n.byteOffset, n.byteLength);
  throw new Error("Unknown type, must be binary type");
}, bD = (n, e) => {
  const t = e.byteLength, r = hd(n), i = r + hd(t), s = new Uint8Array(i + t);
  return fd(n, s, 0), fd(t, s, r), s.set(e, i), new my(n, t, e, s);
}, gD = (n) => {
  const e = yy(n), [t, r] = lh(e), [i, s] = lh(e.subarray(r)), a = e.subarray(r + s);
  if (a.byteLength !== i)
    throw new Error("Incorrect length");
  return new my(t, i, a, e);
}, xD = (n, e) => n === e ? !0 : n.code === e.code && n.size === e.size && mD(n.bytes, e.bytes);
class my {
  constructor(e, t, r, i) {
    this.code = e, this.size = t, this.digest = r, this.bytes = i;
  }
}
function vD(n, e) {
  if (n.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), r = 0; r < t.length; r++)
    t[r] = 255;
  for (var i = 0; i < n.length; i++) {
    var s = n.charAt(i), a = s.charCodeAt(0);
    if (t[a] !== 255)
      throw new TypeError(s + " is ambiguous");
    t[a] = i;
  }
  var o = n.length, u = n.charAt(0), l = Math.log(o) / Math.log(256), p = Math.log(256) / Math.log(o);
  function h(v) {
    if (v instanceof Uint8Array || (ArrayBuffer.isView(v) ? v = new Uint8Array(v.buffer, v.byteOffset, v.byteLength) : Array.isArray(v) && (v = Uint8Array.from(v))), !(v instanceof Uint8Array))
      throw new TypeError("Expected Uint8Array");
    if (v.length === 0)
      return "";
    for (var T = 0, w = 0, M = 0, I = v.length; M !== I && v[M] === 0; )
      M++, T++;
    for (var F = (I - M) * p + 1 >>> 0, k = new Uint8Array(F); M !== I; ) {
      for (var D = v[M], $ = 0, G = F - 1; (D !== 0 || $ < w) && G !== -1; G--, $++)
        D += 256 * k[G] >>> 0, k[G] = D % o >>> 0, D = D / o >>> 0;
      if (D !== 0)
        throw new Error("Non-zero carry");
      w = $, M++;
    }
    for (var V = F - w; V !== F && k[V] === 0; )
      V++;
    for (var K = u.repeat(T); V < F; ++V)
      K += n.charAt(k[V]);
    return K;
  }
  function b(v) {
    if (typeof v != "string")
      throw new TypeError("Expected String");
    if (v.length === 0)
      return new Uint8Array();
    var T = 0;
    if (v[T] !== " ") {
      for (var w = 0, M = 0; v[T] === u; )
        w++, T++;
      for (var I = (v.length - T) * l + 1 >>> 0, F = new Uint8Array(I); v[T]; ) {
        var k = t[v.charCodeAt(T)];
        if (k === 255)
          return;
        for (var D = 0, $ = I - 1; (k !== 0 || D < M) && $ !== -1; $--, D++)
          k += o * F[$] >>> 0, F[$] = k % 256 >>> 0, k = k / 256 >>> 0;
        if (k !== 0)
          throw new Error("Non-zero carry");
        M = D, T++;
      }
      if (v[T] !== " ") {
        for (var G = I - M; G !== I && F[G] === 0; )
          G++;
        for (var V = new Uint8Array(w + (I - G)), K = w; G !== I; )
          V[K++] = F[G++];
        return V;
      }
    }
  }
  function C(v) {
    var T = b(v);
    if (T)
      return T;
    throw new Error(`Non-${e} character`);
  }
  return {
    encode: h,
    decodeUnsafe: b,
    decode: C
  };
}
var wD = vD, TD = wD;
class AD {
  constructor(e, t, r) {
    this.name = e, this.prefix = t, this.baseEncode = r;
  }
  encode(e) {
    if (e instanceof Uint8Array)
      return `${this.prefix}${this.baseEncode(e)}`;
    throw Error("Unknown type, must be binary type");
  }
}
class CD {
  constructor(e, t, r) {
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0)
      throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r;
  }
  decode(e) {
    if (typeof e == "string") {
      if (e.codePointAt(0) !== this.prefixCodePoint)
        throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e.slice(this.prefix.length));
    } else
      throw Error("Can only multibase decode strings");
  }
  or(e) {
    return C5(this, e);
  }
}
class SD {
  constructor(e) {
    this.decoders = e;
  }
  or(e) {
    return C5(this, e);
  }
  decode(e) {
    const t = e[0], r = this.decoders[t];
    if (r)
      return r.decode(e);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
}
const C5 = (n, e) => new SD({
  ...n.decoders || { [n.prefix]: n },
  ...e.decoders || { [e.prefix]: e }
});
class ED {
  constructor(e, t, r, i) {
    this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = i, this.encoder = new AD(e, t, r), this.decoder = new CD(e, t, i);
  }
  encode(e) {
    return this.encoder.encode(e);
  }
  decode(e) {
    return this.decoder.decode(e);
  }
}
const S5 = ({ name: n, prefix: e, encode: t, decode: r }) => new ED(n, e, t, r), E5 = ({ prefix: n, name: e, alphabet: t }) => {
  const { encode: r, decode: i } = TD(t, e);
  return S5({
    prefix: n,
    name: e,
    encode: r,
    decode: (s) => yy(i(s))
  });
}, MD = (n, e, t, r) => {
  const i = {};
  for (let p = 0; p < e.length; ++p)
    i[e[p]] = p;
  let s = n.length;
  for (; n[s - 1] === "="; )
    --s;
  const a = new Uint8Array(s * t / 8 | 0);
  let o = 0, u = 0, l = 0;
  for (let p = 0; p < s; ++p) {
    const h = i[n[p]];
    if (h === void 0)
      throw new SyntaxError(`Non-${r} character`);
    u = u << t | h, o += t, o >= 8 && (o -= 8, a[l++] = 255 & u >> o);
  }
  if (o >= t || 255 & u << 8 - o)
    throw new SyntaxError("Unexpected end of data");
  return a;
}, _D = (n, e, t) => {
  const r = e[e.length - 1] === "=", i = (1 << t) - 1;
  let s = "", a = 0, o = 0;
  for (let u = 0; u < n.length; ++u)
    for (o = o << 8 | n[u], a += 8; a > t; )
      a -= t, s += e[i & o >> a];
  if (a && (s += e[i & o << t - a]), r)
    for (; s.length * t & 7; )
      s += "=";
  return s;
}, Ni = ({ name: n, prefix: e, bitsPerChar: t, alphabet: r }) => S5({
  prefix: e,
  name: n,
  encode(i) {
    return _D(i, r, t);
  },
  decode(i) {
    return MD(i, r, t, n);
  }
}), Zi = E5({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
E5({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});
const dc = Ni({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
Ni({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
Ni({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
Ni({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
Ni({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
Ni({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
Ni({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
Ni({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
Ni({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});
class en {
  constructor(e, t, r, i) {
    this.code = t, this.version = e, this.multihash = r, this.bytes = i, this.byteOffset = i.byteOffset, this.byteLength = i.byteLength, this.asCID = this, this._baseCache = /* @__PURE__ */ new Map(), Object.defineProperties(this, {
      byteOffset: Gl,
      byteLength: Gl,
      code: zl,
      version: zl,
      multihash: zl,
      bytes: zl,
      _baseCache: Gl,
      asCID: Gl
    });
  }
  toV0() {
    switch (this.version) {
      case 0:
        return this;
      default: {
        const { code: e, multihash: t } = this;
        if (e !== qo)
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        if (t.code !== ID)
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        return en.createV0(t);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: e, digest: t } = this.multihash, r = bD(e, t);
        return en.createV1(this.code, r);
      }
      case 1:
        return this;
      default:
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
    }
  }
  equals(e) {
    return e && this.code === e.code && this.version === e.version && xD(this.multihash, e.multihash);
  }
  toString(e) {
    const { bytes: t, version: r, _baseCache: i } = this;
    switch (r) {
      case 0:
        return PD(t, i, e || Zi.encoder);
      default:
        return OD(t, i, e || dc.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(e) {
    return DD(/^0\.0/, BD), !!(e && (e[k2] || e.asCID === e));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(e) {
    if (e instanceof en)
      return e;
    if (e != null && e.asCID === e) {
      const { version: t, code: r, multihash: i, bytes: s } = e;
      return new en(t, r, i, s || I2(t, r, i.bytes));
    } else if (e != null && e[k2] === !0) {
      const { version: t, multihash: r, code: i } = e, s = gD(r);
      return en.create(t, i, s);
    } else
      return null;
  }
  static create(e, t, r) {
    if (typeof t != "number")
      throw new Error("String codecs are no longer supported");
    switch (e) {
      case 0: {
        if (t !== qo)
          throw new Error(`Version 0 CID must use dag-pb (code: ${qo}) block encoding`);
        return new en(e, t, r, r.bytes);
      }
      case 1: {
        const i = I2(e, t, r.bytes);
        return new en(e, t, r, i);
      }
      default:
        throw new Error("Invalid version");
    }
  }
  static createV0(e) {
    return en.create(0, qo, e);
  }
  static createV1(e, t) {
    return en.create(1, e, t);
  }
  static decode(e) {
    const [t, r] = en.decodeFirst(e);
    if (r.length)
      throw new Error("Incorrect length");
    return t;
  }
  static decodeFirst(e) {
    const t = en.inspectBytes(e), r = t.size - t.multihashSize, i = yy(e.subarray(r, r + t.multihashSize));
    if (i.byteLength !== t.multihashSize)
      throw new Error("Incorrect length");
    const s = i.subarray(t.multihashSize - t.digestSize), a = new my(t.multihashCode, t.digestSize, s, i);
    return [
      t.version === 0 ? en.createV0(a) : en.createV1(t.codec, a),
      e.subarray(t.size)
    ];
  }
  static inspectBytes(e) {
    let t = 0;
    const r = () => {
      const [h, b] = lh(e.subarray(t));
      return t += b, h;
    };
    let i = r(), s = qo;
    if (i === 18 ? (i = 0, t = 0) : i === 1 && (s = r()), i !== 0 && i !== 1)
      throw new RangeError(`Invalid CID version ${i}`);
    const a = t, o = r(), u = r(), l = t + u, p = l - a;
    return {
      version: i,
      codec: s,
      multihashCode: o,
      digestSize: u,
      multihashSize: p,
      size: l
    };
  }
  static parse(e, t) {
    const [r, i] = RD(e, t), s = en.decode(i);
    return s._baseCache.set(r, e), s;
  }
}
const RD = (n, e) => {
  switch (n[0]) {
    case "Q": {
      const t = e || Zi;
      return [
        Zi.prefix,
        t.decode(`${Zi.prefix}${n}`)
      ];
    }
    case Zi.prefix: {
      const t = e || Zi;
      return [
        Zi.prefix,
        t.decode(n)
      ];
    }
    case dc.prefix: {
      const t = e || dc;
      return [
        dc.prefix,
        t.decode(n)
      ];
    }
    default: {
      if (e == null)
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      return [
        n[0],
        e.decode(n)
      ];
    }
  }
}, PD = (n, e, t) => {
  const { prefix: r } = t;
  if (r !== Zi.prefix)
    throw Error(`Cannot string encode V0 in ${t.name} encoding`);
  const i = e.get(r);
  if (i == null) {
    const s = t.encode(n).slice(1);
    return e.set(r, s), s;
  } else
    return i;
}, OD = (n, e, t) => {
  const { prefix: r } = t, i = e.get(r);
  if (i == null) {
    const s = t.encode(n);
    return e.set(r, s), s;
  } else
    return i;
}, qo = 112, ID = 18, I2 = (n, e, t) => {
  const r = hd(n), i = r + hd(e), s = new Uint8Array(i + t.byteLength);
  return fd(n, s, 0), fd(e, s, r), s.set(t, i), s;
}, k2 = Symbol.for("@ipld/js-cid/CID"), zl = {
  writable: !1,
  configurable: !1,
  enumerable: !0
}, Gl = {
  writable: !1,
  enumerable: !1,
  configurable: !1
}, kD = "0.0.0-dev", DD = (n, e) => {
  if (n.test(kD))
    console.warn(e);
  else
    throw new Error(e);
}, BD = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`, FD = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CID: en
}, Symbol.toStringTag, { value: "Module" }));
function M5(n) {
  return globalThis.Buffer != null ? new Uint8Array(n.buffer, n.byteOffset, n.byteLength) : n;
}
function _5(n = 0) {
  return globalThis.Buffer?.allocUnsafe != null ? M5(globalThis.Buffer.allocUnsafe(n)) : new Uint8Array(n);
}
function ND(n, e) {
  e == null && (e = n.reduce((i, s) => i + s.length, 0));
  const t = _5(e);
  let r = 0;
  for (const i of n)
    t.set(i, r), r += i.length;
  return M5(t);
}
const $D = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  concat: ND
}, Symbol.toStringTag, { value: "Module" }));
function LD(n, e) {
  if (n.length >= 255)
    throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), r = 0; r < t.length; r++)
    t[r] = 255;
  for (var i = 0; i < n.length; i++) {
    var s = n.charAt(i), a = s.charCodeAt(0);
    if (t[a] !== 255)
      throw new TypeError(s + " is ambiguous");
    t[a] = i;
  }
  var o = n.length, u = n.charAt(0), l = Math.log(o) / Math.log(256), p = Math.log(256) / Math.log(o);
  function h(v) {
    if (v instanceof Uint8Array || (ArrayBuffer.isView(v) ? v = new Uint8Array(v.buffer, v.byteOffset, v.byteLength) : Array.isArray(v) && (v = Uint8Array.from(v))), !(v instanceof Uint8Array))
      throw new TypeError("Expected Uint8Array");
    if (v.length === 0)
      return "";
    for (var T = 0, w = 0, M = 0, I = v.length; M !== I && v[M] === 0; )
      M++, T++;
    for (var F = (I - M) * p + 1 >>> 0, k = new Uint8Array(F); M !== I; ) {
      for (var D = v[M], $ = 0, G = F - 1; (D !== 0 || $ < w) && G !== -1; G--, $++)
        D += 256 * k[G] >>> 0, k[G] = D % o >>> 0, D = D / o >>> 0;
      if (D !== 0)
        throw new Error("Non-zero carry");
      w = $, M++;
    }
    for (var V = F - w; V !== F && k[V] === 0; )
      V++;
    for (var K = u.repeat(T); V < F; ++V)
      K += n.charAt(k[V]);
    return K;
  }
  function b(v) {
    if (typeof v != "string")
      throw new TypeError("Expected String");
    if (v.length === 0)
      return new Uint8Array();
    var T = 0;
    if (v[T] !== " ") {
      for (var w = 0, M = 0; v[T] === u; )
        w++, T++;
      for (var I = (v.length - T) * l + 1 >>> 0, F = new Uint8Array(I); v[T]; ) {
        var k = t[v.charCodeAt(T)];
        if (k === 255)
          return;
        for (var D = 0, $ = I - 1; (k !== 0 || D < M) && $ !== -1; $--, D++)
          k += o * F[$] >>> 0, F[$] = k % 256 >>> 0, k = k / 256 >>> 0;
        if (k !== 0)
          throw new Error("Non-zero carry");
        M = D, T++;
      }
      if (v[T] !== " ") {
        for (var G = I - M; G !== I && F[G] === 0; )
          G++;
        for (var V = new Uint8Array(w + (I - G)), K = w; G !== I; )
          V[K++] = F[G++];
        return V;
      }
    }
  }
  function C(v) {
    var T = b(v);
    if (T)
      return T;
    throw new Error(`Non-${e} character`);
  }
  return {
    encode: h,
    decodeUnsafe: b,
    decode: C
  };
}
var UD = LD, VD = UD;
const R5 = (n) => {
  if (n instanceof Uint8Array && n.constructor.name === "Uint8Array")
    return n;
  if (n instanceof ArrayBuffer)
    return new Uint8Array(n);
  if (ArrayBuffer.isView(n))
    return new Uint8Array(n.buffer, n.byteOffset, n.byteLength);
  throw new Error("Unknown type, must be binary type");
}, jD = (n) => new TextEncoder().encode(n), zD = (n) => new TextDecoder().decode(n);
class GD {
  constructor(e, t, r) {
    this.name = e, this.prefix = t, this.baseEncode = r;
  }
  encode(e) {
    if (e instanceof Uint8Array)
      return `${this.prefix}${this.baseEncode(e)}`;
    throw Error("Unknown type, must be binary type");
  }
}
class WD {
  constructor(e, t, r) {
    if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0)
      throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r;
  }
  decode(e) {
    if (typeof e == "string") {
      if (e.codePointAt(0) !== this.prefixCodePoint)
        throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e.slice(this.prefix.length));
    } else
      throw Error("Can only multibase decode strings");
  }
  or(e) {
    return P5(this, e);
  }
}
class HD {
  constructor(e) {
    this.decoders = e;
  }
  or(e) {
    return P5(this, e);
  }
  decode(e) {
    const t = e[0], r = this.decoders[t];
    if (r)
      return r.decode(e);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
}
const P5 = (n, e) => new HD({
  ...n.decoders || { [n.prefix]: n },
  ...e.decoders || { [e.prefix]: e }
});
class KD {
  constructor(e, t, r, i) {
    this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = i, this.encoder = new GD(e, t, r), this.decoder = new WD(e, t, i);
  }
  encode(e) {
    return this.encoder.encode(e);
  }
  decode(e) {
    return this.decoder.decode(e);
  }
}
const Xd = ({ name: n, prefix: e, encode: t, decode: r }) => new KD(n, e, t, r), wl = ({ prefix: n, name: e, alphabet: t }) => {
  const { encode: r, decode: i } = VD(t, e);
  return Xd({
    prefix: n,
    name: e,
    encode: r,
    decode: (s) => R5(i(s))
  });
}, qD = (n, e, t, r) => {
  const i = {};
  for (let p = 0; p < e.length; ++p)
    i[e[p]] = p;
  let s = n.length;
  for (; n[s - 1] === "="; )
    --s;
  const a = new Uint8Array(s * t / 8 | 0);
  let o = 0, u = 0, l = 0;
  for (let p = 0; p < s; ++p) {
    const h = i[n[p]];
    if (h === void 0)
      throw new SyntaxError(`Non-${r} character`);
    u = u << t | h, o += t, o >= 8 && (o -= 8, a[l++] = 255 & u >> o);
  }
  if (o >= t || 255 & u << 8 - o)
    throw new SyntaxError("Unexpected end of data");
  return a;
}, QD = (n, e, t) => {
  const r = e[e.length - 1] === "=", i = (1 << t) - 1;
  let s = "", a = 0, o = 0;
  for (let u = 0; u < n.length; ++u)
    for (o = o << 8 | n[u], a += 8; a > t; )
      a -= t, s += e[i & o >> a];
  if (a && (s += e[i & o << t - a]), r)
    for (; s.length * t & 7; )
      s += "=";
  return s;
}, Xt = ({ name: n, prefix: e, bitsPerChar: t, alphabet: r }) => Xd({
  prefix: e,
  name: n,
  encode(i) {
    return QD(i, r, t);
  },
  decode(i) {
    return qD(i, r, t, n);
  }
}), JD = Xd({
  prefix: "\0",
  name: "identity",
  encode: (n) => zD(n),
  decode: (n) => jD(n)
}), YD = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  identity: JD
}, Symbol.toStringTag, { value: "Module" })), XD = Xt({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
}), ZD = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base2: XD
}, Symbol.toStringTag, { value: "Module" })), eB = Xt({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
}), tB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base8: eB
}, Symbol.toStringTag, { value: "Module" })), nB = wl({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
}), rB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base10: nB
}, Symbol.toStringTag, { value: "Module" })), iB = Xt({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
}), sB = Xt({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
}), aB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base16: iB,
  base16upper: sB
}, Symbol.toStringTag, { value: "Module" })), oB = Xt({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
}), uB = Xt({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
}), lB = Xt({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
}), cB = Xt({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
}), dB = Xt({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
}), pB = Xt({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
}), fB = Xt({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
}), hB = Xt({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
}), yB = Xt({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
}), mB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base32: oB,
  base32upper: uB,
  base32pad: lB,
  base32padupper: cB,
  base32hex: dB,
  base32hexupper: pB,
  base32hexpad: fB,
  base32hexpadupper: hB,
  base32z: yB
}, Symbol.toStringTag, { value: "Module" })), bB = wl({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
}), gB = wl({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
}), xB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base36: bB,
  base36upper: gB
}, Symbol.toStringTag, { value: "Module" })), vB = wl({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
}), wB = wl({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
}), TB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base58btc: vB,
  base58flickr: wB
}, Symbol.toStringTag, { value: "Module" })), AB = Xt({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
}), CB = Xt({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
}), SB = Xt({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
}), EB = Xt({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
}), MB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base64: AB,
  base64pad: CB,
  base64url: SB,
  base64urlpad: EB
}, Symbol.toStringTag, { value: "Module" })), O5 = Array.from("\u{1F680}\u{1FA90}\u2604\u{1F6F0}\u{1F30C}\u{1F311}\u{1F312}\u{1F313}\u{1F314}\u{1F315}\u{1F316}\u{1F317}\u{1F318}\u{1F30D}\u{1F30F}\u{1F30E}\u{1F409}\u2600\u{1F4BB}\u{1F5A5}\u{1F4BE}\u{1F4BF}\u{1F602}\u2764\u{1F60D}\u{1F923}\u{1F60A}\u{1F64F}\u{1F495}\u{1F62D}\u{1F618}\u{1F44D}\u{1F605}\u{1F44F}\u{1F601}\u{1F525}\u{1F970}\u{1F494}\u{1F496}\u{1F499}\u{1F622}\u{1F914}\u{1F606}\u{1F644}\u{1F4AA}\u{1F609}\u263A\u{1F44C}\u{1F917}\u{1F49C}\u{1F614}\u{1F60E}\u{1F607}\u{1F339}\u{1F926}\u{1F389}\u{1F49E}\u270C\u2728\u{1F937}\u{1F631}\u{1F60C}\u{1F338}\u{1F64C}\u{1F60B}\u{1F497}\u{1F49A}\u{1F60F}\u{1F49B}\u{1F642}\u{1F493}\u{1F929}\u{1F604}\u{1F600}\u{1F5A4}\u{1F603}\u{1F4AF}\u{1F648}\u{1F447}\u{1F3B6}\u{1F612}\u{1F92D}\u2763\u{1F61C}\u{1F48B}\u{1F440}\u{1F62A}\u{1F611}\u{1F4A5}\u{1F64B}\u{1F61E}\u{1F629}\u{1F621}\u{1F92A}\u{1F44A}\u{1F973}\u{1F625}\u{1F924}\u{1F449}\u{1F483}\u{1F633}\u270B\u{1F61A}\u{1F61D}\u{1F634}\u{1F31F}\u{1F62C}\u{1F643}\u{1F340}\u{1F337}\u{1F63B}\u{1F613}\u2B50\u2705\u{1F97A}\u{1F308}\u{1F608}\u{1F918}\u{1F4A6}\u2714\u{1F623}\u{1F3C3}\u{1F490}\u2639\u{1F38A}\u{1F498}\u{1F620}\u261D\u{1F615}\u{1F33A}\u{1F382}\u{1F33B}\u{1F610}\u{1F595}\u{1F49D}\u{1F64A}\u{1F639}\u{1F5E3}\u{1F4AB}\u{1F480}\u{1F451}\u{1F3B5}\u{1F91E}\u{1F61B}\u{1F534}\u{1F624}\u{1F33C}\u{1F62B}\u26BD\u{1F919}\u2615\u{1F3C6}\u{1F92B}\u{1F448}\u{1F62E}\u{1F646}\u{1F37B}\u{1F343}\u{1F436}\u{1F481}\u{1F632}\u{1F33F}\u{1F9E1}\u{1F381}\u26A1\u{1F31E}\u{1F388}\u274C\u270A\u{1F44B}\u{1F630}\u{1F928}\u{1F636}\u{1F91D}\u{1F6B6}\u{1F4B0}\u{1F353}\u{1F4A2}\u{1F91F}\u{1F641}\u{1F6A8}\u{1F4A8}\u{1F92C}\u2708\u{1F380}\u{1F37A}\u{1F913}\u{1F619}\u{1F49F}\u{1F331}\u{1F616}\u{1F476}\u{1F974}\u25B6\u27A1\u2753\u{1F48E}\u{1F4B8}\u2B07\u{1F628}\u{1F31A}\u{1F98B}\u{1F637}\u{1F57A}\u26A0\u{1F645}\u{1F61F}\u{1F635}\u{1F44E}\u{1F932}\u{1F920}\u{1F927}\u{1F4CC}\u{1F535}\u{1F485}\u{1F9D0}\u{1F43E}\u{1F352}\u{1F617}\u{1F911}\u{1F30A}\u{1F92F}\u{1F437}\u260E\u{1F4A7}\u{1F62F}\u{1F486}\u{1F446}\u{1F3A4}\u{1F647}\u{1F351}\u2744\u{1F334}\u{1F4A3}\u{1F438}\u{1F48C}\u{1F4CD}\u{1F940}\u{1F922}\u{1F445}\u{1F4A1}\u{1F4A9}\u{1F450}\u{1F4F8}\u{1F47B}\u{1F910}\u{1F92E}\u{1F3BC}\u{1F975}\u{1F6A9}\u{1F34E}\u{1F34A}\u{1F47C}\u{1F48D}\u{1F4E3}\u{1F942}"), _B = O5.reduce((n, e, t) => (n[t] = e, n), []), RB = O5.reduce((n, e, t) => (n[e.codePointAt(0)] = t, n), []);
function PB(n) {
  return n.reduce((e, t) => (e += _B[t], e), "");
}
function OB(n) {
  const e = [];
  for (const t of n) {
    const r = RB[t.codePointAt(0)];
    if (r === void 0)
      throw new Error(`Non-base256emoji character: ${t}`);
    e.push(r);
  }
  return new Uint8Array(e);
}
const IB = Xd({
  prefix: "\u{1F680}",
  name: "base256emoji",
  encode: PB,
  decode: OB
}), kB = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  base256emoji: IB
}, Symbol.toStringTag, { value: "Module" }));
var DB = I5, D2 = 128, BB = 127, FB = ~BB, NB = Math.pow(2, 31);
function I5(n, e, t) {
  e = e || [], t = t || 0;
  for (var r = t; n >= NB; )
    e[t++] = n & 255 | D2, n /= 128;
  for (; n & FB; )
    e[t++] = n & 255 | D2, n >>>= 7;
  return e[t] = n | 0, I5.bytes = t - r + 1, e;
}
var $B = ch, LB = 128, B2 = 127;
function ch(n, r) {
  var t = 0, r = r || 0, i = 0, s = r, a, o = n.length;
  do {
    if (s >= o)
      throw ch.bytes = 0, new RangeError("Could not decode varint");
    a = n[s++], t += i < 28 ? (a & B2) << i : (a & B2) * Math.pow(2, i), i += 7;
  } while (a >= LB);
  return ch.bytes = s - r, t;
}
var UB = Math.pow(2, 7), VB = Math.pow(2, 14), jB = Math.pow(2, 21), zB = Math.pow(2, 28), GB = Math.pow(2, 35), WB = Math.pow(2, 42), HB = Math.pow(2, 49), KB = Math.pow(2, 56), qB = Math.pow(2, 63), QB = function(n) {
  return n < UB ? 1 : n < VB ? 2 : n < jB ? 3 : n < zB ? 4 : n < GB ? 5 : n < WB ? 6 : n < HB ? 7 : n < KB ? 8 : n < qB ? 9 : 10;
}, JB = {
  encode: DB,
  decode: $B,
  encodingLength: QB
}, k5 = JB;
const F2 = (n, e, t = 0) => (k5.encode(n, e, t), e), N2 = (n) => k5.encodingLength(n), dh = (n, e) => {
  const t = e.byteLength, r = N2(n), i = r + N2(t), s = new Uint8Array(i + t);
  return F2(n, s, 0), F2(t, s, r), s.set(e, i), new YB(n, t, e, s);
};
class YB {
  constructor(e, t, r, i) {
    this.code = e, this.size = t, this.digest = r, this.bytes = i;
  }
}
const D5 = ({ name: n, code: e, encode: t }) => new XB(n, e, t);
class XB {
  constructor(e, t, r) {
    this.name = e, this.code = t, this.encode = r;
  }
  digest(e) {
    if (e instanceof Uint8Array) {
      const t = this.encode(e);
      return t instanceof Uint8Array ? dh(this.code, t) : t.then((r) => dh(this.code, r));
    } else
      throw Error("Unknown type, must be binary type");
  }
}
const B5 = (n) => async (e) => new Uint8Array(await crypto.subtle.digest(n, e)), ZB = D5({
  name: "sha2-256",
  code: 18,
  encode: B5("SHA-256")
}), eF = D5({
  name: "sha2-512",
  code: 19,
  encode: B5("SHA-512")
}), tF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  sha256: ZB,
  sha512: eF
}, Symbol.toStringTag, { value: "Module" })), F5 = 0, nF = "identity", N5 = R5, rF = (n) => dh(F5, N5(n)), iF = { code: F5, name: nF, encode: N5, digest: rF }, sF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  identity: iF
}, Symbol.toStringTag, { value: "Module" }));
new TextEncoder();
new TextDecoder();
const $2 = { ...YD, ...ZD, ...tB, ...rB, ...aB, ...mB, ...xB, ...TB, ...MB, ...kB };
({ ...tF, ...sF });
function $5(n, e, t, r) {
  return {
    name: n,
    prefix: e,
    encoder: {
      name: n,
      prefix: e,
      encode: t
    },
    decoder: {
      decode: r
    }
  };
}
const L2 = $5("utf8", "u", (n) => "u" + new TextDecoder("utf8").decode(n), (n) => new TextEncoder().encode(n.substring(1))), af = $5("ascii", "a", (n) => {
  let e = "a";
  for (let t = 0; t < n.length; t++)
    e += String.fromCharCode(n[t]);
  return e;
}, (n) => {
  n = n.substring(1);
  const e = _5(n.length);
  for (let t = 0; t < n.length; t++)
    e[t] = n.charCodeAt(t);
  return e;
}), aF = {
  utf8: L2,
  "utf-8": L2,
  hex: $2.base16,
  latin1: af,
  ascii: af,
  binary: af,
  ...$2
};
function oF(n, e = "utf8") {
  const t = aF[e];
  if (t == null)
    throw new Error(`Unsupported encoding "${e}"`);
  return (e === "utf8" || e === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(n.buffer, n.byteOffset, n.byteLength).toString("utf8") : t.encoder.encode(n).substring(1);
}
const uF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  toString: oF
}, Symbol.toStringTag, { value: "Module" }));

function kn(n) {
  return typeof n == "object" && n !== null || typeof n == "function";
}
function ph(n) {
  return n == null;
}
let mu = /* @__PURE__ */ new WeakMap();
const an = (n, e, t, r, i) => new TypeError(`${n}(${e.map(String).join(",")}) - Expected '${t}' to be of type ${i}, but got: ${Object.prototype.toString.call(r)} (${String(r)})`);
function bs(n) {
  switch (typeof n) {
    case "undefined":
    case "string":
    case "symbol":
      return n;
    default:
      return `${n}`;
  }
}
function L5(n) {
  switch (typeof n) {
    case "string":
    case "symbol":
      return n;
    default:
      return `${n}`;
  }
}
function U5(n) {
  switch (typeof n) {
    case "undefined":
    case "string":
    case "symbol":
      return n;
    default:
      throw new TypeError(`Invalid metadata propertyKey: ${n}.`);
  }
}
function qu(n, e, t) {
  let r = mu.get(n);
  if (r === void 0) {
    if (!t)
      return;
    r = /* @__PURE__ */ new Map(), mu.set(n, r);
  }
  let i = r.get(e);
  if (i === void 0) {
    if (!t)
      return;
    i = /* @__PURE__ */ new Map(), r.set(e, i);
  }
  return i;
}
function fh(n, e, t) {
  const r = qu(e, t, !1);
  return r === void 0 ? !1 : r.has(n);
}
function U2(n, e, t) {
  if (fh(n, e, t))
    return !0;
  const r = hh(e);
  return r !== null ? U2(n, r, t) : !1;
}
function V2(n, e, t) {
  const r = qu(e, t, !1);
  if (r !== void 0)
    return r.get(n);
}
function j2(n, e, t) {
  if (fh(n, e, t))
    return V2(n, e, t);
  const r = hh(e);
  if (r !== null)
    return j2(n, r, t);
}
function z2(n, e, t, r) {
  qu(t, r, !0).set(n, e);
}
function G2(n, e) {
  const t = [], r = qu(n, e, !1);
  if (r === void 0)
    return t;
  const i = r.keys();
  let s = 0;
  for (const a of i)
    t[s] = a, ++s;
  return t;
}
function W2(n, e) {
  const t = G2(n, e), r = hh(n);
  if (r === null)
    return t;
  const i = W2(r, e), s = t.length;
  if (s === 0)
    return i;
  const a = i.length;
  if (a === 0)
    return t;
  const o = /* @__PURE__ */ new Set(), u = [];
  let l = 0, p;
  for (let h = 0; h < s; ++h)
    p = t[h], o.has(p) || (o.add(p), u[l] = p, ++l);
  for (let h = 0; h < a; ++h)
    p = i[h], o.has(p) || (o.add(p), u[l] = p, ++l);
  return u;
}
function V5(n, e, t) {
  const r = qu(n, t, !1);
  return r === void 0 ? !1 : r.delete(e);
}
function j5(n, e) {
  function t(r, i) {
    if (!kn(r))
      throw an("@metadata", [n, e, r, i], "target", r, "Object or Function");
    z2(n, e, r, U5(i));
  }
  return t;
}
function z5(n, e, t, r) {
  if (t !== void 0) {
    if (!Array.isArray(n))
      throw an("Metadata.decorate", [n, e, t, r], "decorators", n, "Array");
    if (!kn(e))
      throw an("Metadata.decorate", [n, e, t, r], "target", e, "Object or Function");
    if (!kn(r) && !ph(r))
      throw an("Metadata.decorate", [n, e, t, r], "attributes", r, "Object, Function, null, or undefined");
    return r === null && (r = void 0), t = L5(t), W5(n, e, t, r);
  } else {
    if (!Array.isArray(n))
      throw an("Metadata.decorate", [n, e, t, r], "decorators", n, "Array");
    if (typeof e != "function")
      throw an("Metadata.decorate", [n, e, t, r], "target", e, "Function");
    return G5(n, e);
  }
}
function G5(n, e) {
  for (let t = n.length - 1; t >= 0; --t) {
    const r = n[t], i = r(e);
    if (!ph(i)) {
      if (typeof i != "function")
        throw an("DecorateConstructor", [n, e], "decorated", i, "Function, null, or undefined");
      e = i;
    }
  }
  return e;
}
function W5(n, e, t, r) {
  for (let i = n.length - 1; i >= 0; --i) {
    const s = n[i], a = s(e, t, r);
    if (!ph(a)) {
      if (!kn(a))
        throw an("DecorateProperty", [n, e, t, r], "decorated", a, "Object, Function, null, or undefined");
      r = a;
    }
  }
  return r;
}
function H2(n, e, t, r) {
  if (!kn(t))
    throw an("Metadata.define", [n, e, t, r], "target", t, "Object or Function");
  return z2(n, e, t, bs(r));
}
function K2(n, e, t) {
  if (!kn(e))
    throw an("Metadata.has", [n, e, t], "target", e, "Object or Function");
  return U2(n, e, bs(t));
}
function q2(n, e, t) {
  if (!kn(e))
    throw an("Metadata.hasOwn", [n, e, t], "target", e, "Object or Function");
  return fh(n, e, bs(t));
}
function Q2(n, e, t) {
  if (!kn(e))
    throw an("Metadata.get", [n, e, t], "target", e, "Object or Function");
  return j2(n, e, bs(t));
}
function J2(n, e, t) {
  if (!kn(e))
    throw an("Metadata.getOwn", [n, e, t], "target", e, "Object or Function");
  return V2(n, e, bs(t));
}
function Y2(n, e) {
  if (!kn(n))
    throw an("Metadata.getKeys", [n, e], "target", n, "Object or Function");
  return W2(n, bs(e));
}
function X2(n, e) {
  if (!kn(n))
    throw an("Metadata.getOwnKeys", [n, e], "target", n, "Object or Function");
  return G2(n, bs(e));
}
function Z2(n, e, t) {
  if (!kn(e))
    throw an("Metadata.delete", [n, e, t], "target", e, "Object or Function");
  return V5(e, n, bs(t));
}
const Zr = {
  define: H2,
  has: K2,
  hasOwn: q2,
  get: Q2,
  getOwn: J2,
  getKeys: Y2,
  getOwnKeys: X2,
  delete: Z2
}, H5 = (n, e, t, r, i) => {
  if (!Reflect.defineProperty(n, e, {
    writable: r,
    enumerable: !1,
    configurable: i,
    value: t
  }))
    throw of(`AUR1000:${e}`);
}, Xo = "[[$au]]", K5 = (n) => Xo in n, by = (n, e, t) => [[Xo, mu], ["metadata", j5], ["decorate", z5], ["defineMetadata", H2], ["hasMetadata", K2], ["hasOwnMetadata", q2], ["getMetadata", Q2], ["getOwnMetadata", J2], ["getMetadataKeys", Y2], ["getOwnMetadataKeys", X2], ["deleteMetadata", Z2]].forEach(([r, i]) => H5(n, r, i, e, t)), q5 = (n, e = !0, t = !1, r = !0, i = !0) => {
  if (K5(n)) {
    if (n[Xo] === mu)
      return;
    if (n[Xo] instanceof WeakMap) {
      mu = n[Xo];
      return;
    }
    throw of("AUR1001");
  }
  const s = "metadata decorate defineMetadata hasMetadata hasOwnMetadata getMetadata getOwnMetadata getMetadataKeys getOwnMetadataKeys deleteMetadata".split(" ").filter((a) => a in Reflect);
  if (s.length > 0)
    if (e) {
      const a = s.map(function(o) {
        const u = `${Reflect[o].toString().slice(0, 100)}...`;
        return `${o}:
${u}`;
      }).join(`

`);
      throw of(`AUR1002:${a}`);
    } else
      t && by(n, r, i);
  else
    by(n, r, i);
}, of = (n) => new Error(n), hh = Object.getPrototypeOf, bo = String, Pn = Zr.getOwn, Q5 = Zr.hasOwn, ps = Zr.define, xi = (n) => typeof n == "function", pc = (n) => typeof n == "string", yi = () => /* @__PURE__ */ Object.create(null), Nt = (n) => new Error(n), Tl = {}, bu = (n) => {
  switch (typeof n) {
    case "number":
      return n >= 0 && (0 | n) === n;
    case "string": {
      const e = Tl[n];
      if (e !== void 0)
        return e;
      const t = n.length;
      if (t === 0)
        return Tl[n] = !1;
      let r = 0, i = 0;
      for (; i < t; ++i)
        if (r = Zt(n, i), i === 0 && r === 48 && t > 1 || r < 48 || r > 57)
          return Tl[n] = !1;
      return Tl[n] = !0;
    }
    default:
      return !1;
  }
}, e1 = function() {
  const n = Object.assign(yi(), {
    0: !0,
    1: !0,
    2: !0,
    3: !0,
    4: !0,
    5: !0,
    6: !0,
    7: !0,
    8: !0,
    9: !0
  }), e = (t) => t === "" ? 0 : t !== t.toUpperCase() ? 3 : t !== t.toLowerCase() ? 2 : n[t] === !0 ? 1 : 0;
  return (t, r) => {
    const i = t.length;
    if (i === 0)
      return t;
    let s = !1, a = "", o, u = "", l = 0, p = t.charAt(0), h = e(p), b = 0;
    for (; b < i; ++b)
      o = l, u = p, l = h, p = t.charAt(b + 1), h = e(p), l === 0 ? a.length > 0 && (s = !0) : (!s && a.length > 0 && l === 2 && (s = o === 3 || h === 3), a += r(u, s), s = !1);
    return a;
  };
}(), Wn = function() {
  const n = yi(), e = (t, r) => r ? t.toUpperCase() : t.toLowerCase();
  return (t) => {
    let r = n[t];
    return r === void 0 && (r = n[t] = e1(t, e)), r;
  };
}(), J5 = function() {
  const n = yi();
  return (e) => {
    let t = n[e];
    return t === void 0 && (t = Wn(e), t.length > 0 && (t = t[0].toUpperCase() + t.slice(1)), n[e] = t), t;
  };
}(), t1 = function() {
  const n = yi(), e = (t, r) => r ? `-${t.toLowerCase()}` : t.toLowerCase();
  return (t) => {
    let r = n[t];
    return r === void 0 && (r = n[t] = e1(t, e)), r;
  };
}(), fp = (n) => {
  const e = n.length, t = Array(e);
  let r = 0;
  for (; r < e; ++r)
    t[r] = n[r];
  return t;
}, go = (n, e, t) => ({
  configurable: !0,
  enumerable: t.enumerable,
  get() {
    const r = t.value.bind(this);
    return Reflect.defineProperty(this, e, {
      value: r,
      writable: !0,
      configurable: !0,
      enumerable: t.enumerable
    }), r;
  }
}), Ot = (...n) => {
  const e = [];
  let t = 0;
  const r = n.length;
  let i = 0, s, a = 0;
  for (; a < r; ++a)
    if (s = n[a], s !== void 0) {
      i = s.length;
      let o = 0;
      for (; o < i; ++o)
        e[t++] = s[o];
    }
  return e;
}, rn = (...n) => {
  const e = n.length;
  let t, r = 0;
  for (; e > r; ++r)
    if (t = n[r], t !== void 0)
      return t;
  throw Nt("No default value found");
}, n1 = function() {
  const n = Function.prototype, e = Object.getPrototypeOf, t = /* @__PURE__ */ new WeakMap();
  let r = n, i = 0, s;
  return function(a) {
    if (s = t.get(a), s === void 0)
      for (t.set(a, s = [r = a]), i = 0; (r = e(r)) !== n; )
        s[++i] = r;
    return s;
  };
}();
function gu(...n) {
  return Object.assign(yi(), ...n);
}
const gy = function() {
  const n = /* @__PURE__ */ new WeakMap();
  let e = !1, t = "", r = 0;
  return (i) => (e = n.get(i), e === void 0 && (t = i.toString(), r = t.length, e = r >= 29 && r <= 100 && Zt(t, r - 1) === 125 && Zt(t, r - 2) <= 32 && Zt(t, r - 3) === 93 && Zt(t, r - 4) === 101 && Zt(t, r - 5) === 100 && Zt(t, r - 6) === 111 && Zt(t, r - 7) === 99 && Zt(t, r - 8) === 32 && Zt(t, r - 9) === 101 && Zt(t, r - 10) === 118 && Zt(t, r - 11) === 105 && Zt(t, r - 12) === 116 && Zt(t, r - 13) === 97 && Zt(t, r - 14) === 110 && Zt(t, r - 15) === 88, n.set(i, e)), e);
}(), Ce = (n, e) => n instanceof Promise ? n.then(e) : e(n), Ut = (...n) => {
  let e, t, r, i = 0, s = n.length;
  for (; i < s; ++i)
    e = n[i], (e = n[i]) instanceof Promise && (t === void 0 ? t = e : r === void 0 ? r = [t, e] : r.push(e));
  return r === void 0 ? t : Promise.all(r);
}, Zt = (n, e) => n.charCodeAt(e), Js = "au:annotation", mi = (n, e) => e === void 0 ? `${Js}:${n}` : `${Js}:${n}:${e}`, yh = (n, e) => {
  const t = Pn(Js, n);
  t === void 0 ? ps(Js, [e], n) : t.push(e);
}, Y5 = Object.freeze({
  name: "au:annotation",
  appendTo: yh,
  set(n, e, t) {
    ps(mi(e), t, n);
  },
  get: (n, e) => Pn(mi(e), n),
  getKeys(n) {
    let e = Pn(Js, n);
    return e === void 0 && ps(Js, e = [], n), e;
  },
  isKey: (n) => n.startsWith(Js),
  keyFor: mi
}), Ir = "au:resource", X5 = Object.freeze({
  name: Ir,
  appendTo(n, e) {
    const t = Pn(Ir, n);
    t === void 0 ? ps(Ir, [e], n) : t.push(e);
  },
  has: (n) => Q5(Ir, n),
  getAll(n) {
    const e = Pn(Ir, n);
    return e === void 0 ? Ie : e.map((t) => Pn(t, n));
  },
  getKeys(n) {
    let e = Pn(Ir, n);
    return e === void 0 && ps(Ir, e = [], n), e;
  },
  isKey: (n) => n.startsWith(Ir),
  keyFor(n, e) {
    return e === void 0 ? `${Ir}:${n}` : `${Ir}:${n}:${e}`;
  }
}), Ar = {
  annotation: Y5,
  resource: X5
}, r1 = Object.prototype.hasOwnProperty;
function yr(n, e, t, r) {
  let i = Pn(mi(n), t);
  return i === void 0 ? (i = e[n], i === void 0 ? (i = t[n], i === void 0 || !r1.call(t, n) ? r() : i) : i) : i;
}
function Yn(n, e, t) {
  let r = Pn(mi(n), e);
  return r === void 0 ? (r = e[n], r === void 0 || !r1.call(e, n) ? t() : r) : r;
}
function Cn(n, e, t) {
  const r = e[n];
  return r === void 0 ? t() : r;
}
const Z5 = new Set("Array ArrayBuffer Boolean DataView Date Error EvalError Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Number Object Promise RangeError ReferenceError RegExp Set SharedArrayBuffer String SyntaxError TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array URIError WeakMap WeakSet".split(" "));
let eT = 0;
class Zo {
  constructor(e, t) {
    this.parent = e, this.config = t, this.id = ++eT, this.t = 0, this.i = /* @__PURE__ */ new Map(), e === null ? (this.root = this, this.u = /* @__PURE__ */ new Map(), this.h = /* @__PURE__ */ new Map(), this.res = yi()) : (this.root = e.root, this.u = /* @__PURE__ */ new Map(), this.h = e.h, t.inheritParentResources ? this.res = Object.assign(yi(), e.res, this.root.res) : this.res = yi()), this.u.set(xo, tT);
  }
  get depth() {
    return this.parent === null ? 0 : this.parent.depth + 1;
  }
  register(...e) {
    if (++this.t === 100)
      throw sT(e);
    let t, r, i, s, a, o = 0, u = e.length;
    for (; o < u; ++o)
      if (t = e[o], !!kn(t))
        if (Wl(t))
          t.register(this);
        else if (Ar.resource.has(t)) {
          const l = Ar.resource.getAll(t);
          if (l.length === 1)
            l[0].register(this);
          else
            for (s = 0, a = l.length; a > s; )
              l[s].register(this), ++s;
        } else if (rT(t))
          de.singleton(t, t).register(this);
        else
          for (r = Object.keys(t), s = 0, a = r.length; s < a; ++s)
            i = t[r[s]], kn(i) && (Wl(i) ? i.register(this) : this.register(i));
    return --this.t, this;
  }
  registerResolver(e, t, r = !1) {
    Al(e);
    const i = this.u, s = i.get(e);
    if (s == null) {
      if (i.set(e, t), iT(e)) {
        if (this.res[e] !== void 0)
          throw aT(e);
        this.res[e] = t;
      }
    } else
      s instanceof or && s.R === 4 ? s._state.push(t) : i.set(e, new or(e, 4, [s, t]));
    return r && this.i.set(e, t), t;
  }
  registerTransformer(e, t) {
    const r = this.getResolver(e);
    if (r == null)
      return !1;
    if (r.getFactory) {
      const i = r.getFactory(this);
      return i == null ? !1 : (i.registerTransformer(t), !0);
    }
    return !1;
  }
  getResolver(e, t = !0) {
    if (Al(e), e.resolve !== void 0)
      return e;
    let r = this, i, s;
    for (; r != null; )
      if (i = r.u.get(e), i == null) {
        if (r.parent == null)
          return s = vy(e) ? this : r, t ? this.$(e, s) : null;
        r = r.parent;
      } else
        return i;
    return null;
  }
  has(e, t = !1) {
    return this.u.has(e) ? !0 : t && this.parent != null ? this.parent.has(e, !0) : !1;
  }
  get(e) {
    if (Al(e), e.$isResolver)
      return e.resolve(this, this);
    let t = this, r, i;
    for (; t != null; )
      if (r = t.u.get(e), r == null) {
        if (t.parent == null)
          return i = vy(e) ? this : t, r = this.$(e, i), r.resolve(t, this);
        t = t.parent;
      } else
        return r.resolve(t, this);
    throw oT(e);
  }
  getAll(e, t = !1) {
    Al(e);
    const r = this;
    let i = r, s;
    if (t) {
      let a = Ie;
      for (; i != null; )
        s = i.u.get(e), s != null && (a = a.concat(xy(s, i, r))), i = i.parent;
      return a;
    } else
      for (; i != null; )
        if (s = i.u.get(e), s == null) {
          if (i = i.parent, i == null)
            return Ie;
        } else
          return xy(s, i, r);
    return Ie;
  }
  invoke(e, t) {
    if (gy(e))
      throw Ty(e);
    return t === void 0 ? new e(...eu(e).map(fc, this)) : new e(...eu(e).map(fc, this), ...t);
  }
  getFactory(e) {
    let t = this.h.get(e);
    if (t === void 0) {
      if (gy(e))
        throw Ty(e);
      this.h.set(e, t = new PT(e, eu(e)));
    }
    return t;
  }
  registerFactory(e, t) {
    this.h.set(e, t);
  }
  createChild(e) {
    return e === void 0 && this.config.inheritParentResources ? this.config === zr.DEFAULT ? new Zo(this, this.config) : new Zo(this, zr.from({
      ...this.config,
      inheritParentResources: !1
    })) : new Zo(this, zr.from(e ?? this.config));
  }
  disposeResolvers() {
    const e = this.u, t = this.i;
    let r, i;
    for ([i, r] of t.entries())
      r.dispose(), e.delete(i);
    t.clear();
  }
  find(e, t) {
    const r = e.keyFrom(t);
    let i = this.res[r];
    if (i === void 0 && (i = this.root.res[r], i === void 0) || i === null)
      return null;
    if (xi(i.getFactory)) {
      const s = i.getFactory(this);
      if (s == null)
        return null;
      const a = Pn(e.name, s.Type);
      return a === void 0 ? null : a;
    }
    return null;
  }
  create(e, t) {
    const r = e.keyFrom(t);
    let i = this.res[r];
    return i === void 0 ? (i = this.root.res[r], i === void 0 ? null : i.resolve(this.root, this) ?? null) : i.resolve(this, this) ?? null;
  }
  dispose() {
    this.i.size > 0 && this.disposeResolvers(), this.u.clear();
  }
  $(e, t) {
    if (!xi(e))
      throw uT(e);
    if (Z5.has(e.name))
      throw lT(e);
    if (Wl(e)) {
      const r = e.register(t, e);
      if (!(r instanceof Object) || r.resolve == null) {
        const i = t.u.get(e);
        if (i != null)
          return i;
        throw wy();
      }
      return r;
    } else if (Ar.resource.has(e)) {
      const r = Ar.resource.getAll(e);
      if (r.length === 1)
        r[0].register(t);
      else {
        const s = r.length;
        for (let a = 0; a < s; ++a)
          r[a].register(t);
      }
      const i = t.u.get(e);
      if (i != null)
        return i;
      throw wy();
    } else {
      if (e.$isInterface)
        throw cT(e.friendlyName);
      {
        const r = this.config.defaultResolver(e, t);
        return t.u.set(e, r), r;
      }
    }
  }
}
function Al(n) {
  if (n == null)
    throw Nt("AUR0014");
}
const xy = (n, e, t) => {
  if (n instanceof or && n.R === 4) {
    const r = n._state;
    let i = r.length;
    const s = new Array(i);
    for (; i--; )
      s[i] = r[i].resolve(e, t);
    return s;
  }
  return [n.resolve(e, t)];
}, tT = {
  $isResolver: !0,
  resolve(n, e) {
    return e;
  }
}, Wl = (n) => xi(n.register), nT = (n) => Wl(n) && typeof n.registerInRequestor == "boolean", vy = (n) => nT(n) && n.registerInRequestor, rT = (n) => n.prototype !== void 0, iT = (n) => pc(n) && n.indexOf(":") > 0, sT = (n) => Nt(`AUR0006:${n.map(bo)}`), aT = (n) => Nt(`AUR0007:${bo(n)}`), oT = (n) => Nt(`AUR0008:${bo(n)}`), uT = (n) => Nt(`AUR0009:${bo(n)}`), lT = (n) => Nt(`AUR0010:${n.name}`), wy = () => Nt("AUR0011"), cT = (n) => Nt(`AUR0012:${n}`), Ty = (n) => Nt(`AUR0015:${n.name}`), i1 = (n, e) => new or(n, 0, e), mh = (n, e) => new or(n, 1, e), dT = (n, e) => new or(n, 2, e), pT = (n, e) => new or(n, 3, e), fT = (n, e) => new or(n, 3, s1(e)), hT = (n, e) => new or(e, 5, n), yT = (n, ...e) => new OT(n, e), Ay = /* @__PURE__ */ new WeakMap(), s1 = (n) => (e, t, r) => {
  let i = Ay.get(e);
  if (i === void 0 && Ay.set(e, i = /* @__PURE__ */ new WeakMap()), i.has(r))
    return i.get(r);
  const s = n(e, t, r);
  return i.set(r, s), s;
};
q5(Reflect, !1, !1);
class mT {
  constructor(e, t) {
    this.c = e, this.k = t;
  }
  instance(e) {
    return this.C(0, e);
  }
  singleton(e) {
    return this.C(1, e);
  }
  transient(e) {
    return this.C(2, e);
  }
  callback(e) {
    return this.C(3, e);
  }
  cachedCallback(e) {
    return this.C(3, s1(e));
  }
  aliasTo(e) {
    return this.C(5, e);
  }
  C(e, t) {
    const { c: r, k: i } = this;
    return this.c = this.k = void 0, r.registerResolver(i, new or(i, e, t));
  }
}
const Uo = (n) => {
  const e = n.slice(), t = Object.keys(n), r = t.length;
  let i;
  for (let s = 0; s < r; ++s)
    i = t[s], bu(i) || (e[i] = n[i]);
  return e;
}, bT = {
  none(n) {
    throw gT(n);
  },
  singleton: (n) => new or(n, 1, n),
  transient: (n) => new or(n, 2, n)
}, gT = (n) => Nt(`AUR0002:${bo(n)}`);
class zr {
  constructor(e, t) {
    this.inheritParentResources = e, this.defaultResolver = t;
  }
  static from(e) {
    return e === void 0 || e === zr.DEFAULT ? zr.DEFAULT : new zr(e.inheritParentResources ?? !1, e.defaultResolver ?? bT.singleton);
  }
}
zr.DEFAULT = zr.from({});
const xT = (n) => new Zo(null, zr.from(n)), a1 = (n) => {
  const e = mi("di:paramtypes");
  return Pn(e, n);
}, vT = (n) => Pn("design:paramtypes", n), La = (n) => {
  const e = mi("di:paramtypes");
  let t = Pn(e, n);
  return t === void 0 && (ps(e, t = [], n), yh(n, e)), t;
}, eu = (n) => {
  const e = mi("di:dependencies");
  let t = Pn(e, n);
  if (t === void 0) {
    const r = n.inject;
    if (r === void 0) {
      const i = pe.getDesignParamtypes(n), s = a1(n);
      if (i === void 0)
        if (s === void 0) {
          const a = Object.getPrototypeOf(n);
          xi(a) && a !== Function.prototype ? t = Uo(eu(a)) : t = [];
        } else
          t = Uo(s);
      else if (s === void 0)
        t = Uo(i);
      else {
        t = Uo(i);
        let a = s.length, o, u = 0;
        for (; u < a; ++u)
          o = s[u], o !== void 0 && (t[u] = o);
        const l = Object.keys(s);
        let p;
        for (u = 0, a = l.length, u = 0; u < a; ++u)
          p = l[u], bu(p) || (t[p] = s[p]);
      }
    } else
      t = Uo(r);
    ps(e, t, n), yh(n, e);
  }
  return t;
}, ei = (n, e) => {
  const t = xi(n) ? n : e, r = pc(n) ? n : void 0, i = function(s, a, o) {
    if (s == null || new.target !== void 0)
      throw wT(i.friendlyName);
    const u = La(s);
    u[o] = i;
  };
  return i.$isInterface = !0, i.friendlyName = r ?? "(anonymous)", t != null && (i.register = (s, a) => t(new mT(s, a ?? i))), i.toString = () => `InterfaceSymbol<${i.friendlyName}>`, i;
}, wT = (n) => Nt(`AUR0001:${n}`), pe = {
  createContainer: xT,
  getDesignParamtypes: vT,
  getAnnotationParamtypes: a1,
  getOrCreateAnnotationParamTypes: La,
  getDependencies: eu,
  createInterface: ei,
  inject(...n) {
    return (e, t, r) => {
      if (typeof r == "number") {
        const i = La(e), s = n[0];
        s !== void 0 && (i[r] = s);
      } else if (t) {
        const i = La(e.constructor), s = n[0];
        s !== void 0 && (i[t] = s);
      } else if (r) {
        const i = r.value, s = La(i);
        let a, o = 0;
        for (; o < n.length; ++o)
          a = n[o], a !== void 0 && (s[o] = a);
      } else {
        const i = La(e);
        let s, a = 0;
        for (; a < n.length; ++a)
          s = n[a], s !== void 0 && (i[a] = s);
      }
    };
  },
  transient(n) {
    return n.register = function(e) {
      return de.transient(n, n).register(e, n);
    }, n.registerInRequestor = !1, n;
  },
  singleton(n, e = CT) {
    return n.register = function(t) {
      return de.singleton(n, n).register(t, n);
    }, n.registerInRequestor = e.scoped, n;
  }
}, xo = ei("IContainer"), TT = xo;
function AT(n) {
  return function(e) {
    const t = function(r, i, s) {
      bh(t)(r, i, s);
    };
    return t.$isResolver = !0, t.resolve = function(r, i) {
      return n(e, r, i);
    }, t;
  };
}
const bh = pe.inject;
function Cy(n) {
  return pe.transient(n);
}
function o1(n) {
  return n == null ? Cy : Cy(n);
}
const CT = {
  scoped: !1
}, ST = (n) => (e, t) => {
  t = !!t;
  const r = function(i, s, a) {
    bh(r)(i, s, a);
  };
  return r.$isResolver = !0, r.resolve = function(i, s) {
    return n(e, i, s, t);
  }, r;
}, u1 = ST((n, e, t, r) => t.getAll(n, r)), l1 = AT((n, e, t) => {
  if (t.has(n, !0))
    return t.get(n);
}), yd = (n, e, t) => {
  bh(yd)(n, e, t);
};
yd.$isResolver = !0;
yd.resolve = () => {
};
class or {
  constructor(e, t, r) {
    this.k = e, this.R = t, this._state = r, this.resolving = !1;
  }
  get $isResolver() {
    return !0;
  }
  register(e, t) {
    return e.registerResolver(t || this.k, this);
  }
  resolve(e, t) {
    switch (this.R) {
      case 0:
        return this._state;
      case 1:
        if (this.resolving)
          throw ET(this._state.name);
        return this.resolving = !0, this._state = e.getFactory(this._state).construct(t), this.R = 0, this.resolving = !1, this._state;
      case 2: {
        const r = e.getFactory(this._state);
        if (r === null)
          throw MT(this.k);
        return r.construct(t);
      }
      case 3:
        return this._state(e, t, this);
      case 4:
        return this._state[0].resolve(e, t);
      case 5:
        return t.get(this._state);
      default:
        throw _T(this.R);
    }
  }
  getFactory(e) {
    switch (this.R) {
      case 1:
      case 2:
        return e.getFactory(this._state);
      case 5:
        return e.getResolver(this._state)?.getFactory?.(e) ?? null;
      default:
        return null;
    }
  }
}
const ET = (n) => Nt(`AUR0003:${n}`), MT = (n) => Nt(`AUR0004:${bo(n)}`), _T = (n) => Nt(`AUR0005:${n}`);
function fc(n) {
  return this.get(n);
}
function RT(n, e) {
  return e(n);
}
class PT {
  constructor(e, t) {
    this.Type = e, this.dependencies = t, this.transformers = null;
  }
  construct(e, t) {
    let r;
    return t === void 0 ? r = new this.Type(...this.dependencies.map(fc, e)) : r = new this.Type(...this.dependencies.map(fc, e), ...t), this.transformers == null ? r : this.transformers.reduce(RT, r);
  }
  registerTransformer(e) {
    (this.transformers ?? (this.transformers = [])).push(e);
  }
}
class OT {
  constructor(e, t) {
    this.key = e, this.params = t;
  }
  register(e) {
    e.has(this.key, !0) ? e.get(this.key).register(e, ...this.params) : e.register(...this.params.filter((t) => typeof t == "object"));
  }
}
const de = {
  instance: i1,
  singleton: mh,
  transient: dT,
  callback: pT,
  cachedCallback: fT,
  aliasTo: hT,
  defer: yT
};
class on {
  constructor(e, t) {
    this.A = null, this.j = e, t !== void 0 && (this.A = t);
  }
  get friendlyName() {
    return this.j;
  }
  prepare(e) {
    this.A = e;
  }
  get $isResolver() {
    return !0;
  }
  resolve() {
    if (this.A == null)
      throw IT(this.j);
    return this.A;
  }
  dispose() {
    this.A = null;
  }
}
const IT = (n) => Nt(`AUR0013:${n}`), Ie = Object.freeze([]), kT = Object.freeze({});
function bi() {
}
const Qu = ei("IPlatform");
function Ri(n, e, t, r) {
  var i = arguments.length, s = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, a;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    s = Reflect.decorate(n, e, t, r);
  else
    for (var o = n.length - 1; o >= 0; o--)
      (a = n[o]) && (s = (i < 3 ? a(s) : i > 3 ? a(e, t, s) : a(e, t)) || s);
  return i > 3 && s && Object.defineProperty(e, t, s), s;
}
function Hs(n, e) {
  return function(t, r) {
    e(t, r, n);
  };
}
var Sy;
(function(n) {
  n[n.trace = 0] = "trace", n[n.debug = 1] = "debug", n[n.info = 2] = "info", n[n.warn = 3] = "warn", n[n.error = 4] = "error", n[n.fatal = 5] = "fatal", n[n.none = 6] = "none";
})(Sy || (Sy = {}));
var Ey;
(function(n) {
  n[n.noColors = 0] = "noColors", n[n.colors = 1] = "colors";
})(Ey || (Ey = {}));
const gh = ei("ILogConfig", (n) => n.instance(new c1(0, 3))), xh = ei("ISink"), DT = ei("ILogEventFactory", (n) => n.singleton(uf)), xa = ei("ILogger", (n) => n.singleton(vi)), BT = ei("ILogScope"), FT = Object.freeze({
  key: mi("logger-sink-handles"),
  define(n, e) {
    return ps(this.key, e.handles, n.prototype), n;
  },
  getHandles(n) {
    return Zr.get(this.key, n);
  }
}), oi = gu({
  red(n) {
    return `\x1B[31m${n}\x1B[39m`;
  },
  green(n) {
    return `\x1B[32m${n}\x1B[39m`;
  },
  yellow(n) {
    return `\x1B[33m${n}\x1B[39m`;
  },
  blue(n) {
    return `\x1B[34m${n}\x1B[39m`;
  },
  magenta(n) {
    return `\x1B[35m${n}\x1B[39m`;
  },
  cyan(n) {
    return `\x1B[36m${n}\x1B[39m`;
  },
  white(n) {
    return `\x1B[37m${n}\x1B[39m`;
  },
  grey(n) {
    return `\x1B[90m${n}\x1B[39m`;
  }
});
class c1 {
  constructor(e, t) {
    this.colorOptions = e, this.level = t;
  }
}
const My = function() {
  const n = [gu({
    TRC: "TRC",
    DBG: "DBG",
    INF: "INF",
    WRN: "WRN",
    ERR: "ERR",
    FTL: "FTL",
    QQQ: "???"
  }), gu({
    TRC: oi.grey("TRC"),
    DBG: oi.grey("DBG"),
    INF: oi.white("INF"),
    WRN: oi.yellow("WRN"),
    ERR: oi.red("ERR"),
    FTL: oi.red("FTL"),
    QQQ: oi.grey("???")
  })];
  return (e, t) => e <= 0 ? n[t].TRC : e <= 1 ? n[t].DBG : e <= 2 ? n[t].INF : e <= 3 ? n[t].WRN : e <= 4 ? n[t].ERR : e <= 5 ? n[t].FTL : n[t].QQQ;
}(), NT = (n, e) => e === 0 ? n.join(".") : n.map(oi.cyan).join("."), _y = (n, e) => e === 0 ? new Date(n).toISOString() : oi.grey(new Date(n).toISOString());
class $T {
  constructor(e, t, r, i, s, a) {
    this.severity = e, this.message = t, this.optionalParams = r, this.scope = i, this.colorOptions = s, this.timestamp = a;
  }
  toString() {
    const { severity: e, message: t, scope: r, colorOptions: i, timestamp: s } = this;
    return r.length === 0 ? `${_y(s, i)} [${My(e, i)}] ${t}` : `${_y(s, i)} [${My(e, i)} ${NT(r, i)}] ${t}`;
  }
}
let uf = class {
  constructor(e) {
    this.config = e;
  }
  createLogEvent(e, t, r, i) {
    return new $T(t, r, i, e.scope, this.config.colorOptions, Date.now());
  }
};
uf = Ri([Hs(0, gh)], uf);
let Ry = class d1 {
  constructor(e) {
    const t = e.console;
    this.handleEvent = function(i) {
      const s = i.optionalParams;
      if (s === void 0 || s.length === 0) {
        const a = i.toString();
        switch (i.severity) {
          case 0:
          case 1:
            return t.debug(a);
          case 2:
            return t.info(a);
          case 3:
            return t.warn(a);
          case 4:
          case 5:
            return t.error(a);
        }
      } else {
        let a = i.toString(), o = 0;
        for (; a.includes("%s"); )
          a = a.replace("%s", String(s[o++]));
        switch (i.severity) {
          case 0:
          case 1:
            return t.debug(a, ...s.slice(o));
          case 2:
            return t.info(a, ...s.slice(o));
          case 3:
            return t.warn(a, ...s.slice(o));
          case 4:
          case 5:
            return t.error(a, ...s.slice(o));
        }
      }
    };
  }
  static register(e) {
    mh(xh, d1).register(e);
  }
};
Ry = Ri([Hs(0, Qu)], Ry);
let vi = class p1 {
  constructor(e, t, r, i = [], s = null) {
    this.scope = i, this.I = yi();
    let a, o, u, l, p, h;
    if (this.config = e, this.f = t, this.sinks = r, s === null) {
      this.root = this, this.parent = this, a = this.O = [], o = this.M = [], u = this.F = [], l = this.L = [], p = this.U = [], h = this.T = [];
      for (const b of r) {
        const C = FT.getHandles(b);
        (C?.includes(0) ?? !0) && a.push(b), (C?.includes(1) ?? !0) && o.push(b), (C?.includes(2) ?? !0) && u.push(b), (C?.includes(3) ?? !0) && l.push(b), (C?.includes(4) ?? !0) && p.push(b), (C?.includes(5) ?? !0) && h.push(b);
      }
    } else
      this.root = s.root, this.parent = s, a = this.O = s.O, o = this.M = s.M, u = this.F = s.F, l = this.L = s.L, p = this.U = s.U, h = this.T = s.T;
  }
  trace(e, ...t) {
    this.config.level <= 0 && this.P(this.O, 0, e, t);
  }
  debug(e, ...t) {
    this.config.level <= 1 && this.P(this.M, 1, e, t);
  }
  info(e, ...t) {
    this.config.level <= 2 && this.P(this.F, 2, e, t);
  }
  warn(e, ...t) {
    this.config.level <= 3 && this.P(this.L, 3, e, t);
  }
  error(e, ...t) {
    this.config.level <= 4 && this.P(this.U, 4, e, t);
  }
  fatal(e, ...t) {
    this.config.level <= 5 && this.P(this.T, 5, e, t);
  }
  scopeTo(e) {
    const t = this.I;
    let r = t[e];
    return r === void 0 && (r = t[e] = new p1(this.config, this.f, void 0, this.scope.concat(e), this)), r;
  }
  P(e, t, r, i) {
    const s = xi(r) ? r() : r, a = this.f.createLogEvent(this, t, s, i);
    for (let o = 0, u = e.length; o < u; ++o)
      e[o].handleEvent(a);
  }
};
Ri([go], vi.prototype, "trace", null);
Ri([go], vi.prototype, "debug", null);
Ri([go], vi.prototype, "info", null);
Ri([go], vi.prototype, "warn", null);
Ri([go], vi.prototype, "error", null);
Ri([go], vi.prototype, "fatal", null);
vi = Ri([Hs(0, gh), Hs(1, DT), Hs(2, u1(xh)), Hs(3, l1(BT)), Hs(4, yd)], vi);
gu({
  create({ level: n = 3, colorOptions: e = 0, sinks: t = [] } = {}) {
    return gu({
      register(r) {
        r.register(i1(gh, new c1(e, n)));
        for (const i of t)
          xi(i) ? r.register(mh(xh, i)) : r.register(i);
        return r;
      }
    });
  }
});
ei((n) => n.singleton(VT));
const LT = (n) => n;
class UT {
  constructor(e) {
    this.N = /* @__PURE__ */ new Map(), this.W = /* @__PURE__ */ new Map(), this.B = e;
  }
  transform(e) {
    if (e instanceof Promise)
      return this._(e);
    if (typeof e == "object" && e !== null)
      return this.G(e);
    throw Nt(`Invalid input: ${String(e)}. Expected Promise or Object.`);
  }
  _(e) {
    if (this.N.has(e))
      return this.N.get(e);
    const t = e.then((r) => this.G(r));
    return this.N.set(e, t), t.then((r) => {
      this.N.set(e, r);
    }), t;
  }
  G(e) {
    if (this.W.has(e))
      return this.W.get(e);
    const t = this.B(this.K(e));
    return this.W.set(e, t), t instanceof Promise && t.then((r) => {
      this.W.set(e, r);
    }), t;
  }
  K(e) {
    if (e == null)
      throw new Error(`Invalid input: ${String(e)}. Expected Object.`);
    if (typeof e != "object")
      return new Py(e, []);
    let t, r, i, s;
    const a = [];
    for (const o in e) {
      switch (typeof (t = e[o])) {
        case "object":
          if (t === null)
            continue;
          r = xi(t.register), i = !1, s = Ie;
          break;
        case "function":
          r = xi(t.register), i = t.prototype !== void 0, s = Ar.resource.getAll(t);
          break;
        default:
          continue;
      }
      a.push(new jT(o, t, r, i, s));
    }
    return new Py(e, a);
  }
}
class VT {
  constructor() {
    this.transformers = /* @__PURE__ */ new Map();
  }
  load(e, t = LT) {
    const r = this.transformers;
    let i = r.get(t);
    return i === void 0 && r.set(t, i = new UT(t)), i.transform(e);
  }
  dispose() {
    this.transformers.clear();
  }
}
class Py {
  constructor(e, t) {
    this.raw = e, this.items = t;
  }
}
class jT {
  constructor(e, t, r, i, s) {
    this.key = e, this.value = t, this.isRegistry = r, this.isConstructable = i, this.definitions = s;
  }
}
class zT {
  constructor(e, t) {
    this.type = e, this.cb = t;
  }
  handle(e) {
    e instanceof this.type && this.cb.call(null, e);
  }
}
const md = ei("IEventAggregator", (n) => n.singleton(GT));
class GT {
  constructor() {
    this.eventLookup = {}, this.messageHandlers = [];
  }
  publish(e, t) {
    if (!e)
      throw Nt(`Invalid channel name or instance: ${e}.`);
    if (pc(e)) {
      let r = this.eventLookup[e];
      if (r !== void 0) {
        r = r.slice();
        let i = r.length;
        for (; i-- > 0; )
          r[i](t, e);
      }
    } else {
      const r = this.messageHandlers.slice();
      let i = r.length;
      for (; i-- > 0; )
        r[i].handle(e);
    }
  }
  subscribe(e, t) {
    if (!e)
      throw Nt(`Invalid channel name or type: ${e}.`);
    let r, i;
    return pc(e) ? (this.eventLookup[e] === void 0 && (this.eventLookup[e] = []), r = t, i = this.eventLookup[e]) : (r = new zT(e, t), i = this.messageHandlers), i.push(r), {
      dispose() {
        const s = i.indexOf(r);
        s !== -1 && i.splice(s, 1);
      }
    };
  }
  subscribeOnce(e, t) {
    const r = this.subscribe(e, (i, s) => {
      r.dispose(), t(i, s);
    });
    return r;
  }
}
const bd = Object, WT = bd.prototype.hasOwnProperty, ur = Reflect.defineProperty, se = (n) => new Error(n), rr = (n) => typeof n == "function", tu = (n) => n instanceof bd, fs = (n) => n instanceof Array, Ju = (n) => n instanceof Set, is = (n) => n instanceof Map, vh = bd.is;
function gd(n, e, t) {
  return ur(n, e, {
    enumerable: !1,
    configurable: !0,
    writable: !0,
    value: t
  }), t;
}
function ci(n, e, t) {
  e in n || gd(n, e, t);
}
const wh = String, vo = pe.createInterface, nu = () => bd.create(null), wo = Zr.getOwn, To = Zr.define;
Ar.annotation.keyFor;
Ar.resource.keyFor;
Ar.resource.appendTo;
var Oy;
(function(n) {
  n[n.AccessThis = 0] = "AccessThis", n[n.AccessScope = 1] = "AccessScope", n[n.ArrayLiteral = 2] = "ArrayLiteral", n[n.ObjectLiteral = 3] = "ObjectLiteral", n[n.PrimitiveLiteral = 4] = "PrimitiveLiteral", n[n.Template = 5] = "Template", n[n.Unary = 6] = "Unary", n[n.CallScope = 7] = "CallScope", n[n.CallMember = 8] = "CallMember", n[n.CallFunction = 9] = "CallFunction", n[n.AccessMember = 10] = "AccessMember", n[n.AccessKeyed = 11] = "AccessKeyed", n[n.TaggedTemplate = 12] = "TaggedTemplate", n[n.Binary = 13] = "Binary", n[n.Conditional = 14] = "Conditional", n[n.Assign = 15] = "Assign", n[n.ArrowFunction = 16] = "ArrowFunction", n[n.ValueConverter = 17] = "ValueConverter", n[n.BindingBehavior = 18] = "BindingBehavior", n[n.ArrayBindingPattern = 19] = "ArrayBindingPattern", n[n.ObjectBindingPattern = 20] = "ObjectBindingPattern", n[n.BindingIdentifier = 21] = "BindingIdentifier", n[n.ForOfStatement = 22] = "ForOfStatement", n[n.Interpolation = 23] = "Interpolation", n[n.ArrayDestructuring = 24] = "ArrayDestructuring", n[n.ObjectDestructuring = 25] = "ObjectDestructuring", n[n.DestructuringAssignmentLeaf = 26] = "DestructuringAssignmentLeaf", n[n.DestructuringAssignmentRestLeaf = 27] = "DestructuringAssignmentRestLeaf", n[n.Custom = 28] = "Custom";
})(Oy || (Oy = {}));
class Th {
  constructor(e) {
    this.value = e, this.$kind = 28;
  }
  evaluate(e, t, r) {
    return this.value;
  }
  assign(e, t, r) {
    return r;
  }
  bind(e, t) {
  }
  unbind(e, t) {
  }
  accept(e) {
  }
}
class HT {
  constructor(e, t, r) {
    this.expression = e, this.name = t, this.args = r, this.$kind = 18, this.key = `_bb_${t}`;
  }
}
class xu {
  constructor(e, t, r) {
    this.expression = e, this.name = t, this.args = r, this.$kind = 17;
  }
}
class KT {
  constructor(e, t) {
    this.target = e, this.value = t, this.$kind = 15;
  }
}
class qT {
  constructor(e, t, r) {
    this.condition = e, this.yes = t, this.no = r, this.$kind = 14;
  }
}
class gi {
  constructor(e = 0) {
    this.ancestor = e, this.$kind = 0;
  }
}
gi.$this = new gi(0);
gi.$parent = new gi(1);
class Hl {
  constructor(e, t = 0) {
    this.name = e, this.ancestor = t, this.$kind = 1;
  }
}
class lf {
  constructor(e, t, r = !1) {
    this.object = e, this.name = t, this.optional = r, this.$kind = 10;
  }
}
class f1 {
  constructor(e, t, r = !1) {
    this.object = e, this.key = t, this.optional = r, this.$kind = 11;
  }
}
class h1 {
  constructor(e, t, r = 0, i = !1) {
    this.name = e, this.args = t, this.ancestor = r, this.optional = i, this.$kind = 7;
  }
}
class hc {
  constructor(e, t, r, i = !1, s = !1) {
    this.object = e, this.name = t, this.args = r, this.optionalMember = i, this.optionalCall = s, this.$kind = 8;
  }
}
class Kl {
  constructor(e, t, r = !1) {
    this.func = e, this.args = t, this.optional = r, this.$kind = 9;
  }
}
class QT {
  constructor(e, t, r) {
    this.operation = e, this.left = t, this.right = r, this.$kind = 13;
  }
}
class JT {
  constructor(e, t) {
    this.operation = e, this.expression = t, this.$kind = 6;
  }
}
class Qt {
  constructor(e) {
    this.value = e, this.$kind = 4;
  }
}
Qt.$undefined = new Qt(void 0);
Qt.$null = new Qt(null);
Qt.$true = new Qt(!0);
Qt.$false = new Qt(!1);
Qt.$empty = new Qt("");
class cf {
  constructor(e) {
    this.elements = e, this.$kind = 2;
  }
}
cf.$empty = new cf(Ie);
class df {
  constructor(e, t) {
    this.keys = e, this.values = t, this.$kind = 3;
  }
}
df.$empty = new df(Ie, Ie);
class yc {
  constructor(e, t = Ie) {
    this.cooked = e, this.expressions = t, this.$kind = 5;
  }
}
yc.$empty = new yc([""]);
class y1 {
  constructor(e, t, r, i = Ie) {
    this.cooked = e, this.func = r, this.expressions = i, this.$kind = 12, e.raw = t;
  }
}
class YT {
  constructor(e) {
    this.elements = e, this.$kind = 19;
  }
}
class XT {
  constructor(e, t) {
    this.keys = e, this.values = t, this.$kind = 20;
  }
}
class mc {
  constructor(e) {
    this.name = e, this.$kind = 21;
  }
}
class ZT {
  constructor(e, t, r) {
    this.declaration = e, this.iterable = t, this.semiIdx = r, this.$kind = 22;
  }
}
class m1 {
  constructor(e, t = Ie) {
    this.parts = e, this.expressions = t, this.$kind = 23, this.isMulti = t.length > 1, this.firstExpression = t[0];
  }
}
class e3 {
  constructor(e, t, r, i) {
    this.$kind = e, this.list = t, this.source = r, this.initializer = i;
  }
}
class b1 {
  constructor(e, t, r) {
    this.target = e, this.source = t, this.initializer = r, this.$kind = 26;
  }
}
class pf {
  constructor(e, t, r = !1) {
    this.args = e, this.body = t, this.rest = r, this.$kind = 16;
  }
}
class Iy {
  constructor(e, t) {
    e !== void 0 && (this[e] = t);
  }
}
class Jt {
  constructor(e, t, r, i) {
    this.parent = e, this.bindingContext = t, this.overrideContext = r, this.isBoundary = i;
  }
  static getContext(e, t, r) {
    if (e == null)
      throw ky();
    let i = e.overrideContext, s = e;
    if (r > 0) {
      for (; r > 0; )
        if (r--, s = s.parent, s == null)
          return;
      return i = s.overrideContext, t in i ? i : s.bindingContext;
    }
    for (; s != null && !s.isBoundary && !(t in s.overrideContext) && !(t in s.bindingContext); )
      s = s.parent;
    return s == null ? e.bindingContext : (i = s.overrideContext, t in i ? i : s.bindingContext);
  }
  static create(e, t, r) {
    if (e == null)
      throw t3();
    return new Jt(null, e, t ?? new Dy(), r ?? !1);
  }
  static fromParent(e, t) {
    if (e == null)
      throw ky();
    return new Jt(e, t, new Dy(), !1);
  }
}
const ky = () => se("AUR0203"), t3 = () => se("AUR0204");
class Dy {
}
const ff = Jt.getContext;
function j(n, e, t, r) {
  switch (n.$kind) {
    case 0: {
      let i = e.overrideContext, s = e, a = n.ancestor;
      for (; a-- && i; )
        s = s.parent, i = s?.overrideContext ?? null;
      return a < 1 && s ? s.bindingContext : void 0;
    }
    case 1: {
      const i = ff(e, n.name, n.ancestor);
      r !== null && r.observe(i, n.name);
      const s = i[n.name];
      if (s == null && n.name === "$host")
        throw se("AUR0105");
      return t?.strict ? t?.boundFn && rr(s) ? s.bind(i) : s : s == null ? "" : t?.boundFn && rr(s) ? s.bind(i) : s;
    }
    case 2:
      return n.elements.map((i) => j(i, e, t, r));
    case 3: {
      const i = {};
      for (let s = 0; s < n.keys.length; ++s)
        i[n.keys[s]] = j(n.values[s], e, t, r);
      return i;
    }
    case 4:
      return n.value;
    case 5: {
      let i = n.cooked[0];
      for (let s = 0; s < n.expressions.length; ++s)
        i += String(j(n.expressions[s], e, t, r)), i += n.cooked[s + 1];
      return i;
    }
    case 6:
      switch (n.operation) {
        case "void":
          return void j(n.expression, e, t, r);
        case "typeof":
          return typeof j(n.expression, e, t, r);
        case "!":
          return !j(n.expression, e, t, r);
        case "-":
          return -j(n.expression, e, t, r);
        case "+":
          return +j(n.expression, e, t, r);
        default:
          throw se(`AUR0109:${n.operation}`);
      }
    case 7: {
      const i = n.args.map((o) => j(o, e, t, r)), s = ff(e, n.name, n.ancestor), a = By(t?.strictFnCall, s, n.name);
      return a ? a.apply(s, i) : void 0;
    }
    case 8: {
      const i = j(n.object, e, t, r), s = n.args.map((u) => j(u, e, t, r)), a = By(t?.strictFnCall, i, n.name);
      let o;
      return a && (o = a.apply(i, s), fs(i) && i3.includes(n.name) && r?.observeCollection(i)), o;
    }
    case 9: {
      const i = j(n.func, e, t, r);
      if (rr(i))
        return i(...n.args.map((s) => j(s, e, t, r)));
      if (!t?.strictFnCall && i == null)
        return;
      throw se("AUR0107");
    }
    case 16:
      return (...s) => {
        const a = n.args, o = n.rest, u = a.length - 1, l = a.reduce((h, b, C) => (o && C === u ? h[b.name] = s.slice(C) : h[b.name] = s[C], h), {}), p = Jt.fromParent(e, l);
        return j(n.body, p, t, r);
      };
    case 10: {
      const i = j(n.object, e, t, r);
      let s;
      return t?.strict ? i == null ? i : (r !== null && r.observe(i, n.name), s = i[n.name], t?.boundFn && rr(s) ? s.bind(i) : s) : (r !== null && tu(i) && r.observe(i, n.name), i ? (s = i[n.name], t?.boundFn && rr(s) ? s.bind(i) : s) : "");
    }
    case 11: {
      const i = j(n.object, e, t, r);
      if (tu(i)) {
        const s = j(n.key, e, t, r);
        return r !== null && r.observe(i, s), i[s];
      }
      return;
    }
    case 12: {
      const i = n.expressions.map((a) => j(a, e, t, r)), s = j(n.func, e, t, r);
      if (!rr(s))
        throw se("AUR0110");
      return s(n.cooked, ...i);
    }
    case 13: {
      const i = n.left, s = n.right;
      switch (n.operation) {
        case "&&":
          return j(i, e, t, r) && j(s, e, t, r);
        case "||":
          return j(i, e, t, r) || j(s, e, t, r);
        case "??":
          return j(i, e, t, r) ?? j(s, e, t, r);
        case "==":
          return j(i, e, t, r) == j(s, e, t, r);
        case "===":
          return j(i, e, t, r) === j(s, e, t, r);
        case "!=":
          return j(i, e, t, r) != j(s, e, t, r);
        case "!==":
          return j(i, e, t, r) !== j(s, e, t, r);
        case "instanceof": {
          const a = j(s, e, t, r);
          return rr(a) ? j(i, e, t, r) instanceof a : !1;
        }
        case "in": {
          const a = j(s, e, t, r);
          return tu(a) ? j(i, e, t, r) in a : !1;
        }
        case "+": {
          const a = j(i, e, t, r), o = j(s, e, t, r);
          if (t?.strict)
            return a + o;
          if (!a || !o) {
            if (Fy(a) || Fy(o))
              return (a || 0) + (o || 0);
            if (Ny(a) || Ny(o))
              return (a || "") + (o || "");
          }
          return a + o;
        }
        case "-":
          return j(i, e, t, r) - j(s, e, t, r);
        case "*":
          return j(i, e, t, r) * j(s, e, t, r);
        case "/":
          return j(i, e, t, r) / j(s, e, t, r);
        case "%":
          return j(i, e, t, r) % j(s, e, t, r);
        case "<":
          return j(i, e, t, r) < j(s, e, t, r);
        case ">":
          return j(i, e, t, r) > j(s, e, t, r);
        case "<=":
          return j(i, e, t, r) <= j(s, e, t, r);
        case ">=":
          return j(i, e, t, r) >= j(s, e, t, r);
        default:
          throw se(`AUR0108:${n.operation}`);
      }
    }
    case 14:
      return j(n.condition, e, t, r) ? j(n.yes, e, t, r) : j(n.no, e, t, r);
    case 15:
      return tn(n.target, e, t, j(n.value, e, t, r));
    case 17: {
      const i = t?.getConverter?.(n.name);
      if (i == null)
        throw se(`AUR0103:${n.name}`);
      return "toView" in i ? i.toView(j(n.expression, e, t, r), ...n.args.map((s) => j(s, e, t, r))) : j(n.expression, e, t, r);
    }
    case 18:
      return j(n.expression, e, t, r);
    case 21:
      return n.name;
    case 22:
      return j(n.iterable, e, t, r);
    case 23:
      if (n.isMulti) {
        let i = n.parts[0], s = 0;
        for (; s < n.expressions.length; ++s)
          i += wh(j(n.expressions[s], e, t, r)), i += n.parts[s + 1];
        return i;
      } else
        return `${n.parts[0]}${j(n.firstExpression, e, t, r)}${n.parts[1]}`;
    case 26:
      return j(n.target, e, t, r);
    case 24:
      return n.list.map((i) => j(i, e, t, r));
    case 19:
    case 20:
    case 25:
    default:
      return;
    case 28:
      return n.evaluate(e, t, r);
  }
}
function tn(n, e, t, r) {
  switch (n.$kind) {
    case 1: {
      if (n.name === "$host")
        throw se("AUR0106");
      const i = ff(e, n.name, n.ancestor);
      return i[n.name] = r;
    }
    case 10: {
      const i = j(n.object, e, t, null);
      return tu(i) ? n.name === "length" && fs(i) && !isNaN(r) ? i.splice(r) : i[n.name] = r : tn(n.object, e, t, {
        [n.name]: r
      }), r;
    }
    case 11: {
      const i = j(n.object, e, t, null), s = j(n.key, e, t, null);
      if (fs(i)) {
        if (s === "length" && !isNaN(r))
          return i.splice(r), r;
        if (bu(s))
          return i.splice(s, 1, r), r;
      }
      return i[s] = r;
    }
    case 15:
      return tn(n.value, e, t, r), tn(n.target, e, t, r);
    case 17: {
      const i = t?.getConverter?.(n.name);
      if (i == null)
        throw g1(n.name);
      return "fromView" in i && (r = i.fromView(r, ...n.args.map((s) => j(s, e, t, null)))), tn(n.expression, e, t, r);
    }
    case 18:
      return tn(n.expression, e, t, r);
    case 24:
    case 25: {
      const i = n.list, s = i.length;
      let a, o;
      for (a = 0; a < s; a++)
        switch (o = i[a], o.$kind) {
          case 26:
            tn(o, e, t, r);
            break;
          case 24:
          case 25: {
            if (typeof r != "object" || r === null)
              throw se("AUR0112");
            let u = j(o.source, Jt.create(r), t, null);
            u === void 0 && o.initializer && (u = j(o.initializer, e, t, null)), tn(o, e, t, u);
            break;
          }
        }
      break;
    }
    case 26:
      if (n instanceof b1) {
        if (r == null)
          return;
        if (typeof r != "object")
          throw se("AUR0112");
        let i = j(n.source, Jt.create(r), t, null);
        i === void 0 && n.initializer && (i = j(n.initializer, e, t, null)), tn(n.target, e, t, i);
      } else {
        if (r == null)
          return;
        if (typeof r != "object")
          throw se("AUR0112");
        const i = n.indexOrProperties;
        let s;
        if (bu(i)) {
          if (!Array.isArray(r))
            throw se("AUR0112");
          s = r.slice(i);
        } else
          s = Object.entries(r).reduce((a, [o, u]) => (i.includes(o) || (a[o] = u), a), {});
        tn(n.target, e, t, s);
      }
      break;
    case 28:
      return n.assign(e, t, r);
    default:
      return;
  }
}
function Er(n, e, t) {
  switch (n.$kind) {
    case 18: {
      const r = n.name, i = n.key, s = t.getBehavior?.(r);
      if (s == null)
        throw n3(r);
      if (t[i] === void 0)
        t[i] = s, s.bind?.(e, t, ...n.args.map((a) => j(a, e, t, null)));
      else
        throw r3(r);
      Er(n.expression, e, t);
      return;
    }
    case 17: {
      const r = n.name, i = t.getConverter?.(r);
      if (i == null)
        throw g1(r);
      const s = i.signals;
      if (s != null) {
        const a = t.getSignaler?.(), o = s.length;
        let u = 0;
        for (; u < o; ++u)
          a?.addSignalListener(s[u], t);
      }
      Er(n.expression, e, t);
      return;
    }
    case 22:
      Er(n.iterable, e, t);
      break;
    case 28:
      n.bind?.(e, t);
  }
}
function sr(n, e, t) {
  switch (n.$kind) {
    case 18: {
      const r = n.key, i = t;
      i[r] !== void 0 && (i[r].unbind?.(e, t), i[r] = void 0), sr(n.expression, e, t);
      break;
    }
    case 17: {
      const r = t.getConverter?.(n.name);
      if (r?.signals === void 0)
        return;
      const i = t.getSignaler?.();
      let s = 0;
      for (; s < r.signals.length; ++s)
        i?.removeSignalListener(r.signals[s], t);
      sr(n.expression, e, t);
      break;
    }
    case 22:
      sr(n.iterable, e, t);
      break;
    case 28:
      n.unbind?.(e, t);
  }
}
const n3 = (n) => se(`AUR0101:${n}`), r3 = (n) => se(`AUR0102:${n}`), g1 = (n) => se(`AUR0103:${n}`), By = (n, e, t) => {
  const r = e == null ? null : e[t];
  if (rr(r))
    return r;
  if (!n && r == null)
    return null;
  throw se(`AUR0111:${t}`);
}, Fy = (n) => {
  switch (typeof n) {
    case "number":
    case "bigint":
      return !0;
    default:
      return !1;
  }
}, Ny = (n) => {
  switch (typeof n) {
    case "string":
      return !0;
    case "object":
      return n instanceof Date;
    default:
      return !1;
  }
}, i3 = "at map filter includes indexOf lastIndexOf findIndex find flat flatMap join reduce reduceRight slice every some sort".split(" "), $y = pe.createInterface("ICoercionConfiguration");
var Ly;
(function(n) {
  n[n.indexed = 8] = "indexed", n[n.keyed = 4] = "keyed", n[n.array = 9] = "array", n[n.map = 6] = "map", n[n.set = 7] = "set";
})(Ly || (Ly = {}));
var Uy;
(function(n) {
  n[n.None = 0] = "None", n[n.Observer = 1] = "Observer", n[n.Node = 2] = "Node", n[n.Layout = 4] = "Layout", n[n.Primtive = 8] = "Primtive", n[n.Array = 18] = "Array", n[n.Set = 34] = "Set", n[n.Map = 66] = "Map";
})(Uy || (Uy = {}));
function ea(n = 0) {
  const e = Array(n);
  let t = 0;
  for (; t < n; )
    e[t] = t++;
  return e.deletedIndices = [], e.deletedItems = [], e.isIndexMap = !0, e;
}
function s3(n) {
  const e = n.slice();
  return e.deletedIndices = n.deletedIndices.slice(), e.deletedItems = n.deletedItems.slice(), e.isIndexMap = !0, e;
}
function Tn(n) {
  return n == null ? Vy : Vy(n);
}
function Vy(n) {
  const e = n.prototype;
  ur(e, "subs", {
    get: o3
  }), ci(e, "subscribe", u3), ci(e, "unsubscribe", l3);
}
class a3 {
  constructor() {
    this.count = 0, this.t = [];
  }
  add(e) {
    return this.t.includes(e) ? !1 : (this.t[this.t.length] = e, ++this.count, !0);
  }
  remove(e) {
    const t = this.t.indexOf(e);
    return t !== -1 ? (this.t.splice(t, 1), --this.count, !0) : !1;
  }
  notify(e, t) {
    const r = this.t.slice(0), i = r.length;
    let s = 0;
    for (; s < i; ++s)
      r[s].handleChange(e, t);
  }
  notifyCollection(e, t) {
    const r = this.t.slice(0), i = r.length;
    let s = 0;
    for (; s < i; ++s)
      r[s].handleCollectionChange(e, t);
  }
}
function o3() {
  return gd(this, "subs", new a3());
}
function u3(n) {
  return this.subs.add(n);
}
function l3(n) {
  return this.subs.remove(n);
}
class x1 {
  constructor(e) {
    this.owner = e, this.type = 18, this.v = (this.o = e.collection).length;
  }
  getValue() {
    return this.o.length;
  }
  setValue(e) {
    e !== this.v && (Number.isNaN(e) || (this.o.splice(e), this.v = this.o.length));
  }
  handleCollectionChange(e, t) {
    const r = this.v, i = this.o.length;
    (this.v = i) !== r && this.subs.notify(this.v, r);
  }
}
class Ah {
  constructor(e) {
    this.owner = e, this.v = (this.o = e.collection).size, this.type = is(this.o) ? 66 : 34;
  }
  getValue() {
    return this.o.size;
  }
  setValue() {
    throw se("AUR02");
  }
  handleCollectionChange(e, t) {
    const r = this.v, i = this.o.size;
    (this.v = i) !== r && this.subs.notify(this.v, r);
  }
}
function v1(n) {
  const e = n.prototype;
  ci(e, "subscribe", c3), ci(e, "unsubscribe", d3), Tn(n);
}
function c3(n) {
  this.subs.add(n) && this.subs.count === 1 && this.owner.subscribe(this);
}
function d3(n) {
  this.subs.remove(n) && this.subs.count === 0 && this.owner.subscribe(this);
}
v1(x1);
v1(Ah);
const jy = "__au_array_obs__", ui = (() => {
  let n = wo(jy, Array);
  return n == null && To(jy, n = /* @__PURE__ */ new WeakMap(), Array), n;
})();
function p3(n, e) {
  return n === e ? 0 : (n = n === null ? "null" : n.toString(), e = e === null ? "null" : e.toString(), n < e ? -1 : 1);
}
function f3(n, e) {
  return n === void 0 ? e === void 0 ? 0 : 1 : e === void 0 ? -1 : 0;
}
function h3(n, e, t, r, i) {
  let s, a, o, u, l, p, h;
  for (p = t + 1; p < r; p++) {
    for (s = n[p], a = e[p], h = p - 1; h >= t && (o = n[h], u = e[h], l = i(o, s), l > 0); h--)
      n[h + 1] = o, e[h + 1] = u;
    n[h + 1] = s, e[h + 1] = a;
  }
}
function bc(n, e, t, r, i) {
  let s = 0, a = 0, o, u, l, p, h, b, C, v, T, w, M, I, F, k, D, $, G, V, K;
  for (; ; ) {
    if (r - t <= 10) {
      h3(n, e, t, r, i);
      return;
    }
    s = t + (r - t >> 1), o = n[t], p = e[t], u = n[r - 1], h = e[r - 1], l = n[s], b = e[s], C = i(o, u), C > 0 && (w = o, M = p, o = u, p = h, u = w, h = M), v = i(o, l), v >= 0 ? (w = o, M = p, o = l, p = b, l = u, b = h, u = w, h = M) : (T = i(u, l), T > 0 && (w = u, M = h, u = l, h = b, l = w, b = M)), n[t] = o, e[t] = p, n[r - 1] = l, e[r - 1] = b, I = u, F = h, k = t + 1, D = r - 1, n[s] = n[k], e[s] = e[k], n[k] = I, e[k] = F;
    e:
      for (a = k + 1; a < D; a++)
        if ($ = n[a], G = e[a], V = i($, I), V < 0)
          n[a] = n[k], e[a] = e[k], n[k] = $, e[k] = G, k++;
        else if (V > 0) {
          do {
            if (D--, D == a)
              break e;
            K = n[D], V = i(K, I);
          } while (V > 0);
          n[a] = n[D], e[a] = e[D], n[D] = $, e[D] = G, V < 0 && ($ = n[a], G = e[a], n[a] = n[k], e[a] = e[k], n[k] = $, e[k] = G, k++);
        }
    r - D < k - t ? (bc(n, e, D, r, i), r = k) : (bc(n, e, t, k, i), t = D);
  }
}
const wi = Array.prototype, y3 = wi.push, hp = wi.unshift, yp = wi.pop, mp = wi.shift, Cl = wi.splice, m3 = wi.reverse, b3 = wi.sort, w1 = ["push", "unshift", "pop", "shift", "splice", "reverse", "sort"], T1 = {
  push: function(...n) {
    const e = ui.get(this);
    if (e === void 0)
      return y3.apply(this, n);
    const t = this.length, r = n.length;
    if (r === 0)
      return t;
    this.length = e.indexMap.length = t + r;
    let i = t;
    for (; i < this.length; )
      this[i] = n[i - t], e.indexMap[i] = -2, i++;
    return e.notify(), this.length;
  },
  unshift: function(...n) {
    const e = ui.get(this);
    if (e === void 0)
      return hp.apply(this, n);
    const t = n.length, r = new Array(t);
    let i = 0;
    for (; i < t; )
      r[i++] = -2;
    hp.apply(e.indexMap, r);
    const s = hp.apply(this, n);
    return e.notify(), s;
  },
  pop: function() {
    const n = ui.get(this);
    if (n === void 0)
      return yp.call(this);
    const e = n.indexMap, t = yp.call(this), r = e.length - 1;
    return e[r] > -1 && (e.deletedIndices.push(e[r]), e.deletedItems.push(t)), yp.call(e), n.notify(), t;
  },
  shift: function() {
    const n = ui.get(this);
    if (n === void 0)
      return mp.call(this);
    const e = n.indexMap, t = mp.call(this);
    return e[0] > -1 && (e.deletedIndices.push(e[0]), e.deletedItems.push(t)), mp.call(e), n.notify(), t;
  },
  splice: function(...n) {
    const e = n[0], t = n[1], r = ui.get(this);
    if (r === void 0)
      return Cl.apply(this, n);
    const i = this.length, s = 0 | e, a = s < 0 ? Math.max(i + s, 0) : Math.min(s, i), o = r.indexMap, u = n.length, l = u === 0 ? 0 : u === 1 ? i - a : t;
    let p = a;
    if (l > 0) {
      const b = p + l;
      for (; p < b; )
        o[p] > -1 && (o.deletedIndices.push(o[p]), o.deletedItems.push(this[p])), p++;
    }
    if (p = 0, u > 2) {
      const b = u - 2, C = new Array(b);
      for (; p < b; )
        C[p++] = -2;
      Cl.call(o, e, t, ...C);
    } else
      Cl.apply(o, n);
    const h = Cl.apply(this, n);
    return (l > 0 || p > 0) && r.notify(), h;
  },
  reverse: function() {
    const n = ui.get(this);
    if (n === void 0)
      return m3.call(this), this;
    const e = this.length, t = e / 2 | 0;
    let r = 0;
    for (; r !== t; ) {
      const i = e - r - 1, s = this[r], a = n.indexMap[r], o = this[i], u = n.indexMap[i];
      this[r] = o, n.indexMap[r] = u, this[i] = s, n.indexMap[i] = a, r++;
    }
    return n.notify(), this;
  },
  sort: function(n) {
    const e = ui.get(this);
    if (e === void 0)
      return b3.call(this, n), this;
    let t = this.length;
    if (t < 2)
      return this;
    bc(this, e.indexMap, 0, t, f3);
    let r = 0;
    for (; r < t && this[r] !== void 0; )
      r++;
    (n === void 0 || !rr(n)) && (n = p3), bc(this, e.indexMap, 0, r, n);
    let i = !1;
    for (r = 0, t = e.indexMap.length; t > r; ++r)
      if (e.indexMap[r] !== r) {
        i = !0;
        break;
      }
    return i && e.notify(), this;
  }
};
for (const n of w1)
  ur(T1[n], "observing", {
    value: !0,
    writable: !1,
    configurable: !1,
    enumerable: !1
  });
let zy = !1;
const Gy = "__au_arr_on__";
function g3() {
  if (!(wo(Gy, Array) ?? !1)) {
    To(Gy, !0, Array);
    for (const n of w1)
      wi[n].observing !== !0 && gd(wi, n, T1[n]);
  }
}
class A1 {
  constructor(e) {
    this.type = 18, zy || (zy = !0, g3()), this.indexObservers = {}, this.collection = e, this.indexMap = ea(e.length), this.lenObs = void 0, ui.set(e, this);
  }
  notify() {
    this.subs;
    const e = this.indexMap, t = this.collection, r = t.length;
    this.indexMap = ea(r), this.subs.notifyCollection(t, e);
  }
  getLengthObserver() {
    return this.lenObs ?? (this.lenObs = new x1(this));
  }
  getIndexObserver(e) {
    var t;
    return (t = this.indexObservers)[e] ?? (t[e] = new C1(this, e));
  }
}
class C1 {
  constructor(e, t) {
    this.owner = e, this.index = t, this.doNotCache = !0, this.value = this.getValue();
  }
  getValue() {
    return this.owner.collection[this.index];
  }
  setValue(e) {
    if (e === this.getValue())
      return;
    const t = this.owner, r = this.index, i = t.indexMap;
    i[r] > -1 && i.deletedIndices.push(i[r]), i[r] = -2, t.collection[r] = e, t.notify();
  }
  handleCollectionChange(e, t) {
    const r = this.index;
    if (t[r] === r)
      return;
    const s = this.value, a = this.value = this.getValue();
    s !== a && this.subs.notify(a, s);
  }
  subscribe(e) {
    this.subs.add(e) && this.subs.count === 1 && this.owner.subscribe(this);
  }
  unsubscribe(e) {
    this.subs.remove(e) && this.subs.count === 0 && this.owner.unsubscribe(this);
  }
}
Tn(A1);
Tn(C1);
function ru(n) {
  let e = ui.get(n);
  return e === void 0 && (e = new A1(n)), e;
}
const x3 = (n, e) => n - e;
function v3(n) {
  let e = 0, t = 0, r = 0;
  const i = s3(n);
  i.deletedIndices.length > 1 && i.deletedIndices.sort(x3);
  const s = i.length;
  for (; r < s; ++r) {
    for (; i.deletedIndices[t] <= r - e; )
      ++t, --e;
    i[r] === -2 ? ++e : i[r] += e;
  }
  return i;
}
function w3(n, e) {
  const t = n.slice(), r = e.length;
  let i = 0, s = 0;
  for (; i < r; )
    s = e[i], s !== -2 && (n[i] = t[s]), ++i;
}
const Wy = "__au_set_obs__", iu = (() => {
  let n = wo(Wy, Set);
  return n == null && To(Wy, n = /* @__PURE__ */ new WeakMap(), Set), n;
})(), vu = Set.prototype, Hy = vu.add, Ky = vu.clear, qy = vu.delete, S1 = ["add", "clear", "delete"], E1 = {
  add: function(n) {
    const e = iu.get(this);
    if (e === void 0)
      return Hy.call(this, n), this;
    const t = this.size;
    return Hy.call(this, n), this.size === t ? this : (e.indexMap[t] = -2, e.notify(), this);
  },
  clear: function() {
    const n = iu.get(this);
    if (n === void 0)
      return Ky.call(this);
    if (this.size > 0) {
      const t = n.indexMap;
      let r = 0;
      for (const i of this.keys())
        t[r] > -1 && (t.deletedIndices.push(t[r]), t.deletedItems.push(i)), r++;
      Ky.call(this), t.length = 0, n.notify();
    }
  },
  delete: function(n) {
    const e = iu.get(this);
    if (e === void 0)
      return qy.call(this, n);
    if (this.size === 0)
      return !1;
    let r = 0;
    const i = e.indexMap;
    for (const s of this.keys()) {
      if (s === n) {
        i[r] > -1 && (i.deletedIndices.push(i[r]), i.deletedItems.push(s)), i.splice(r, 1);
        const a = qy.call(this, n);
        return a === !0 && e.notify(), a;
      }
      r++;
    }
    return !1;
  }
}, T3 = {
  writable: !0,
  enumerable: !1,
  configurable: !0
};
for (const n of S1)
  ur(E1[n], "observing", {
    value: !0,
    writable: !1,
    configurable: !1,
    enumerable: !1
  });
let Qy = !1;
const Jy = "__au_set_on__";
function A3() {
  if (!(wo(Jy, Set) ?? !1)) {
    To(Jy, !0, Set);
    for (const n of S1)
      vu[n].observing !== !0 && ur(vu, n, {
        ...T3,
        value: E1[n]
      });
  }
}
class M1 {
  constructor(e) {
    this.type = 34, Qy || (Qy = !0, A3()), this.collection = e, this.indexMap = ea(e.size), this.lenObs = void 0, iu.set(e, this);
  }
  notify() {
    this.subs;
    const e = this.indexMap, t = this.collection, r = t.size;
    this.indexMap = ea(r), this.subs.notifyCollection(t, e);
  }
  getLengthObserver() {
    return this.lenObs ?? (this.lenObs = new Ah(this));
  }
}
Tn(M1);
function gc(n) {
  let e = iu.get(n);
  return e === void 0 && (e = new M1(n)), e;
}
const Yy = "__au_map_obs__", su = (() => {
  let n = wo(Yy, Map);
  return n == null && To(Yy, n = /* @__PURE__ */ new WeakMap(), Map), n;
})(), wu = Map.prototype, Xy = wu.set, Zy = wu.clear, em = wu.delete, _1 = ["set", "clear", "delete"], R1 = {
  set: function(n, e) {
    const t = su.get(this);
    if (t === void 0)
      return Xy.call(this, n, e), this;
    const r = this.get(n), i = this.size;
    if (Xy.call(this, n, e), this.size === i) {
      let a = 0;
      for (const o of this.entries()) {
        if (o[0] === n)
          return o[1] !== r && (t.indexMap.deletedIndices.push(t.indexMap[a]), t.indexMap.deletedItems.push(o), t.indexMap[a] = -2, t.notify()), this;
        a++;
      }
      return this;
    }
    return t.indexMap[i] = -2, t.notify(), this;
  },
  clear: function() {
    const n = su.get(this);
    if (n === void 0)
      return Zy.call(this);
    if (this.size > 0) {
      const t = n.indexMap;
      let r = 0;
      for (const i of this.keys())
        t[r] > -1 && (t.deletedIndices.push(t[r]), t.deletedItems.push(i)), r++;
      Zy.call(this), t.length = 0, n.notify();
    }
  },
  delete: function(n) {
    const e = su.get(this);
    if (e === void 0)
      return em.call(this, n);
    if (this.size === 0)
      return !1;
    let r = 0;
    const i = e.indexMap;
    for (const s of this.keys()) {
      if (s === n) {
        i[r] > -1 && (i.deletedIndices.push(i[r]), i.deletedItems.push(s)), i.splice(r, 1);
        const a = em.call(this, n);
        return a === !0 && e.notify(), a;
      }
      ++r;
    }
    return !1;
  }
}, C3 = {
  writable: !0,
  enumerable: !1,
  configurable: !0
};
for (const n of _1)
  ur(R1[n], "observing", {
    value: !0,
    writable: !1,
    configurable: !1,
    enumerable: !1
  });
let tm = !1;
const nm = "__au_map_on__";
function S3() {
  if (!(wo(nm, Map) ?? !1)) {
    To(nm, !0, Map);
    for (const n of _1)
      wu[n].observing !== !0 && ur(wu, n, {
        ...C3,
        value: R1[n]
      });
  }
}
class P1 {
  constructor(e) {
    this.type = 66, tm || (tm = !0, S3()), this.collection = e, this.indexMap = ea(e.size), this.lenObs = void 0, su.set(e, this);
  }
  notify() {
    const e = this.subs, t = this.indexMap, r = this.collection, i = r.size;
    this.indexMap = ea(i), e.notifyCollection(r, t);
  }
  getLengthObserver() {
    return this.lenObs ?? (this.lenObs = new Ah(this));
  }
}
Tn(P1);
function xc(n) {
  let e = su.get(n);
  return e === void 0 && (e = new P1(n)), e;
}
function E3() {
  return gd(this, "obs", new I3(this));
}
function M3(n, e) {
  this.obs.add(this.oL.getObserver(n, e));
}
function _3(n) {
  let e;
  if (fs(n))
    e = ru(n);
  else if (Ju(n))
    e = gc(n);
  else if (is(n))
    e = xc(n);
  else
    throw se("AUR0210");
  this.obs.add(e);
}
function R3(n) {
  this.obs.add(n);
}
function P3() {
  throw se("AUR2011:handleChange");
}
function O3() {
  throw se("AUR2011:handleCollectionChange");
}
class I3 {
  constructor(e) {
    this.version = 0, this.count = 0, this.o = /* @__PURE__ */ new Map(), this.b = e;
  }
  add(e) {
    this.o.has(e) || (e.subscribe(this.b), ++this.count), this.o.set(e, this.version);
  }
  clear() {
    this.o.forEach(D3, this), this.count = this.o.size;
  }
  clearAll() {
    this.o.forEach(k3, this), this.o.clear(), this.count = 0;
  }
}
function k3(n, e) {
  e.unsubscribe(this.b);
}
function D3(n, e) {
  this.version !== n && (e.unsubscribe(this.b), this.o.delete(e));
}
function rm(n) {
  const e = n.prototype;
  return ci(e, "observe", M3), ci(e, "observeCollection", _3), ci(e, "subscribeTo", R3), ur(e, "obs", {
    get: E3
  }), ci(e, "handleChange", P3), ci(e, "handleCollectionChange", O3), n;
}
function Pr(n) {
  return n == null ? rm : rm(n);
}
const Ch = vo("IExpressionParser", (n) => n.singleton(B3));
class B3 {
  constructor() {
    this.i = nu(), this.u = nu(), this.h = nu();
  }
  parse(e, t) {
    let r;
    switch (t) {
      case 32:
        return new Th(e);
      case 1:
        return r = this.h[e], r === void 0 && (r = this.h[e] = this.$parse(e, t)), r;
      case 2:
        return r = this.u[e], r === void 0 && (r = this.u[e] = this.$parse(e, t)), r;
      default:
        if (e.length === 0) {
          if ((t & 24) > 0)
            return Qt.$empty;
          throw X3();
        }
        return r = this.i[e], r === void 0 && (r = this.i[e] = this.$parse(e, t)), r;
    }
  }
  $parse(e, t) {
    return Se = e, ve = 0, qr = e.length, jn = 0, ta = 0, Z = 6291456, Be = "", ht = na(0), Ee = !0, we = !1, Eh = -1, Ct(61, t === void 0 ? 16 : t);
  }
}
function Sh(n) {
  switch (n) {
    case 98:
      return 8;
    case 116:
      return 9;
    case 110:
      return 10;
    case 118:
      return 11;
    case 102:
      return 12;
    case 114:
      return 13;
    case 34:
      return 34;
    case 39:
      return 39;
    case 92:
      return 92;
    default:
      return n;
  }
}
const F3 = Qt.$false, N3 = Qt.$true, $3 = Qt.$null, O1 = Qt.$undefined, au = gi.$this, bp = gi.$parent;
var im;
(function(n) {
  n[n.None = 0] = "None", n[n.Interpolation = 1] = "Interpolation", n[n.IsIterator = 2] = "IsIterator", n[n.IsChainable = 4] = "IsChainable", n[n.IsFunction = 8] = "IsFunction", n[n.IsProperty = 16] = "IsProperty", n[n.IsCustom = 32] = "IsCustom";
})(im || (im = {}));
let Se = "", ve = 0, qr = 0, jn = 0, ta = 0, Z = 6291456, Be = "", ht, Ee = !0, we = !1, Eh = -1;
const Tu = String.fromCharCode, na = (n) => Se.charCodeAt(n), Ja = () => Se.slice(ta, ve);
function Ct(n, e) {
  if (e === 32)
    return new Th(Se);
  if (ve === 0) {
    if (1 & e)
      return W3();
    if (ue(), 4194304 & Z)
      throw Q3();
  }
  Ee = 513 > n, we = !1;
  let t = !1, r, i = 0;
  if (131072 & Z) {
    const s = Jl[63 & Z];
    ue(), r = new JT(s, Ct(514, e)), Ee = !1;
  } else {
    e:
      switch (Z) {
        case 12294:
          i = jn, Ee = !1;
          do
            switch (ue(), ++i, Z) {
              case 65545:
                if (ue(), (12288 & Z) === 0)
                  throw ai();
                break;
              case 10:
              case 11:
                throw ai();
              case 2162700:
                if (we = !0, ue(), (12288 & Z) === 0) {
                  r = i === 0 ? au : i === 1 ? bp : new gi(i), t = !0;
                  break e;
                }
                break;
              default:
                if (2097152 & Z) {
                  r = i === 0 ? au : i === 1 ? bp : new gi(i);
                  break e;
                }
                throw J3();
            }
          while (Z === 12294);
        case 4096: {
          const s = Be;
          if (2 & e ? r = new mc(s) : r = new Hl(s, i), Ee = !we, ue(), xr(50)) {
            if (Z === 524296)
              throw $1();
            const a = we, o = jn;
            ++jn;
            const u = Ct(62, 0);
            we = a, jn = o, Ee = !1, r = new pf([new mc(s)], u);
          }
          break;
        }
        case 10:
          throw oA();
        case 11:
          throw hf();
        case 12292:
          switch (Ee = !1, ue(), jn) {
            case 0:
              r = au;
              break;
            case 1:
              r = bp;
              break;
            default:
              r = new gi(jn);
              break;
          }
          break;
        case 2688007:
          r = V3(e);
          break;
        case 2688016:
          r = Se.search(/\s+of\s+/) > ve ? L3() : j3(e);
          break;
        case 524296:
          r = G3(e);
          break;
        case 2163759:
          r = new yc([Be]), Ee = !1, ue();
          break;
        case 2163760:
          r = gp(e, r, !1);
          break;
        case 16384:
        case 32768:
          r = new Qt(Be), Ee = !1, ue();
          break;
        case 8194:
        case 8195:
        case 8193:
        case 8192:
          r = Jl[63 & Z], Ee = !1, ue();
          break;
        default:
          throw ve >= qr ? Y3() : xp();
      }
    if (2 & e)
      return z3(r);
    if (514 < n)
      return r;
    if (Z === 10 || Z === 11)
      throw ai();
    if (r.$kind === 0)
      switch (Z) {
        case 2162700:
          if (we = !0, Ee = !1, ue(), (13312 & Z) === 0)
            throw Mh();
          if (12288 & Z)
            r = new Hl(Be, r.ancestor), ue();
          else if (Z === 2688007)
            r = new Kl(r, Nr(), !0);
          else if (Z === 2688016)
            r = ql(r, !0);
          else
            throw Ql();
          break;
        case 65545:
          if (Ee = !we, ue(), (12288 & Z) === 0)
            throw ai();
          r = new Hl(Be, r.ancestor), ue();
          break;
        case 10:
        case 11:
          throw ai();
        case 2688007:
          r = new Kl(r, Nr(), t);
          break;
        case 2688016:
          r = ql(r, t);
          break;
        case 2163759:
          r = sm(r);
          break;
        case 2163760:
          r = gp(e, r, !0);
          break;
      }
    for (; (65536 & Z) > 0; )
      switch (Z) {
        case 2162700:
          r = U3(r);
          break;
        case 65545:
          if (ue(), (12288 & Z) === 0)
            throw ai();
          r = I1(r, !1);
          break;
        case 10:
        case 11:
          throw ai();
        case 2688007:
          r.$kind === 1 ? r = new h1(r.name, Nr(), r.ancestor, !1) : r.$kind === 10 ? r = new hc(r.object, r.name, Nr(), r.optional, !1) : r = new Kl(r, Nr(), !1);
          break;
        case 2688016:
          r = ql(r, !1);
          break;
        case 2163759:
          if (we)
            throw Ql();
          r = sm(r);
          break;
        case 2163760:
          if (we)
            throw Ql();
          r = gp(e, r, !0);
          break;
      }
  }
  if (Z === 10 || Z === 11)
    throw ai();
  if (513 < n)
    return r;
  for (; (262144 & Z) > 0; ) {
    const s = Z;
    if ((960 & s) <= n)
      break;
    ue(), r = new QT(Jl[63 & s], r, Ct(960 & s, e)), Ee = !1;
  }
  if (63 < n)
    return r;
  if (xr(6291478)) {
    const s = Ct(62, e);
    Mr(6291476), r = new qT(r, s, Ct(62, e)), Ee = !1;
  }
  if (62 < n)
    return r;
  if (xr(4194349)) {
    if (!Ee)
      throw Z3();
    r = new KT(r, Ct(62, e));
  }
  if (61 < n)
    return r;
  for (; xr(6291480); ) {
    if (Z === 6291456)
      throw eA();
    const s = Be;
    ue();
    const a = new Array();
    for (; xr(6291476); )
      a.push(Ct(62, e));
    r = new xu(r, s, a);
  }
  for (; xr(6291479); ) {
    if (Z === 6291456)
      throw tA();
    const s = Be;
    ue();
    const a = new Array();
    for (; xr(6291476); )
      a.push(Ct(62, e));
    r = new HT(r, s, a);
  }
  if (Z !== 6291456) {
    if ((1 & e) > 0 && Z === 7340045)
      return r;
    if ((4 & e) > 0 && Z === 6291477) {
      if (ve === qr)
        throw xp();
      return Eh = ve - 1, r;
    }
    throw Ja() === "of" ? nA() : xp();
  }
  return r;
}
function L3() {
  const n = [], e = new e3(24, n, void 0, void 0);
  let t = "", r = !0, i = 0;
  for (; r; )
    switch (ue(), Z) {
      case 7340051:
        r = !1, s();
        break;
      case 6291471:
        s();
        break;
      case 4096:
        t = Ja();
        break;
      default:
        throw sA();
    }
  return Mr(7340051), e;
  function s() {
    t !== "" ? (n.push(new b1(new lf(au, t), new f1(au, new Qt(i++)), void 0)), t = "") : i++;
  }
}
function Nr() {
  const n = we;
  ue();
  const e = [];
  for (; Z !== 7340046 && (e.push(Ct(62, 0)), !!xr(6291471)); )
    ;
  return Mr(7340046), Ee = !1, we = n, e;
}
function ql(n, e) {
  const t = we;
  return ue(), n = new f1(n, Ct(62, 0), e), Mr(7340051), Ee = !t, we = t, n;
}
function U3(n) {
  if (we = !0, Ee = !1, ue(), (13312 & Z) === 0)
    throw Mh();
  if (12288 & Z)
    return I1(n, !0);
  if (Z === 2688007)
    return n.$kind === 1 ? new h1(n.name, Nr(), n.ancestor, !0) : n.$kind === 10 ? new hc(n.object, n.name, Nr(), n.optional, !0) : new Kl(n, Nr(), !0);
  if (Z === 2688016)
    return ql(n, !0);
  throw Ql();
}
function I1(n, e) {
  const t = Be;
  switch (Z) {
    case 2162700: {
      we = !0, Ee = !1;
      const r = ve, i = ta, s = Z, a = ht, o = Be, u = Ee, l = we;
      if (ue(), (13312 & Z) === 0)
        throw Mh();
      return Z === 2688007 ? new hc(n, t, Nr(), e, !0) : (ve = r, ta = i, Z = s, ht = a, Be = o, Ee = u, we = l, new lf(n, t, e));
    }
    case 2688007:
      return Ee = !1, new hc(n, t, Nr(), e, !1);
    default:
      return Ee = !we, ue(), new lf(n, t, e);
  }
}
function V3(n) {
  ue();
  const e = ve, t = ta, r = Z, i = ht, s = Be, a = Ee, o = we, u = [];
  let l = 1, p = !1;
  e:
    for (; ; ) {
      if (Z === 11) {
        if (ue(), Z !== 4096)
          throw ai();
        if (u.push(new mc(Be)), ue(), Z === 6291471)
          throw aA();
        if (Z !== 7340046 || (ue(), Z !== 50))
          throw hf();
        ue();
        const C = we, v = jn;
        ++jn;
        const T = Ct(62, 0);
        return we = C, jn = v, Ee = !1, new pf(u, T, !0);
      }
      switch (Z) {
        case 4096:
          u.push(new mc(Be)), ue();
          break;
        case 7340046:
          ue();
          break e;
        case 524296:
        case 2688016:
          ue(), l = 4;
          break;
        case 6291471:
          l = 2, p = !0;
          break e;
        case 2688007:
          l = 2;
          break e;
        default:
          ue(), l = 2;
          break;
      }
      switch (Z) {
        case 6291471:
          if (ue(), p = !0, l === 1)
            break;
          break e;
        case 7340046:
          ue();
          break e;
        case 4194349:
          l === 1 && (l = 3);
          break e;
        case 50:
          if (p)
            throw Sl();
          ue(), l = 2;
          break e;
        default:
          l === 1 && (l = 2);
          break e;
      }
    }
  if (Z === 50) {
    if (l === 1) {
      if (ue(), Z === 524296)
        throw $1();
      const C = we, v = jn;
      ++jn;
      const T = Ct(62, 0);
      return we = C, jn = v, Ee = !1, new pf(u, T);
    }
    throw Sl();
  } else if (l === 1 && u.length === 0)
    throw F1(50);
  if (p)
    switch (l) {
      case 2:
        throw Sl();
      case 3:
        throw om();
      case 4:
        throw um();
    }
  ve = e, ta = t, Z = r, ht = i, Be = s, Ee = a, we = o;
  const h = we, b = Ct(62, n);
  if (we = h, Mr(7340046), Z === 50)
    switch (l) {
      case 2:
        throw Sl();
      case 3:
        throw om();
      case 4:
        throw um();
    }
  return b;
}
function j3(n) {
  const e = we;
  ue();
  const t = new Array();
  for (; Z !== 7340051; )
    if (xr(6291471)) {
      if (t.push(O1), Z === 7340051)
        break;
    } else if (t.push(Ct(62, -3 & n)), xr(6291471)) {
      if (Z === 7340051)
        break;
    } else
      break;
  return we = e, Mr(7340051), 2 & n ? new YT(t) : (Ee = !1, new cf(t));
}
function z3(n) {
  if ((n.$kind & 23) === 0 || Z !== 4204593)
    throw am();
  ue();
  const e = n, t = Ct(61, 4);
  return new ZT(e, t, Eh);
}
function G3(n) {
  const e = we, t = new Array(), r = new Array();
  for (ue(); Z !== 7340045; ) {
    if (t.push(Be), 49152 & Z)
      ue(), Mr(6291476), r.push(Ct(62, -3 & n));
    else if (12288 & Z) {
      const i = ht, s = Z, a = ve;
      ue(), xr(6291476) ? r.push(Ct(62, -3 & n)) : (ht = i, Z = s, ve = a, r.push(Ct(515, -3 & n)));
    } else
      throw rA();
    Z !== 7340045 && Mr(6291471);
  }
  return we = e, Mr(7340045), 2 & n ? new XT(t, r) : (Ee = !1, new df(t, r));
}
function W3() {
  const n = [], e = [], t = qr;
  let r = "";
  for (; ve < t; ) {
    switch (ht) {
      case 36:
        if (na(ve + 1) === 123) {
          n.push(r), r = "", ve += 2, ht = na(ve), ue();
          const i = Ct(61, 1);
          e.push(i);
          continue;
        } else
          r += "$";
        break;
      case 92:
        r += Tu(Sh(fe()));
        break;
      default:
        r += Tu(ht);
    }
    fe();
  }
  return e.length ? (n.push(r), new m1(n, e)) : null;
}
function gp(n, e, t) {
  const r = we, i = [Be];
  Mr(2163760);
  const s = [Ct(62, n)];
  for (; (Z = q3()) !== 2163759; )
    i.push(Be), Mr(2163760), s.push(Ct(62, n));
  return i.push(Be), Ee = !1, we = r, t ? (ue(), new y1(i, i, e, s)) : (ue(), new yc(i, s));
}
function sm(n) {
  Ee = !1;
  const e = [Be];
  return ue(), new y1(e, e, n);
}
function ue() {
  for (; ve < qr; )
    if (ta = ve, (Z = _e[ht]()) != null)
      return;
  Z = 6291456;
}
function fe() {
  return ht = na(++ve);
}
function H3() {
  for (; _h[fe()]; )
    ;
  const n = uA[Be = Ja()];
  return n === void 0 ? 4096 : n;
}
function k1(n) {
  let e = ht;
  if (n === !1) {
    do
      e = fe();
    while (e <= 57 && e >= 48);
    if (e !== 46)
      return Be = parseInt(Ja(), 10), 32768;
    if (e = fe(), ve >= qr)
      return Be = parseInt(Ja().slice(0, -1), 10), 32768;
  }
  if (e <= 57 && e >= 48)
    do
      e = fe();
    while (e <= 57 && e >= 48);
  else
    ht = na(--ve);
  return Be = parseFloat(Ja()), 32768;
}
function K3() {
  const n = ht;
  fe();
  let e = 0;
  const t = new Array();
  let r = ve;
  for (; ht !== n; )
    if (ht === 92)
      t.push(Se.slice(r, ve)), fe(), e = Sh(ht), fe(), t.push(Tu(e)), r = ve;
    else {
      if (ve >= qr)
        throw iA();
      fe();
    }
  const i = Se.slice(r, ve);
  return fe(), t.push(i), Be = t.join(""), 16384;
}
function D1() {
  let n = !0, e = "";
  for (; fe() !== 96; )
    if (ht === 36)
      if (ve + 1 < qr && na(ve + 1) === 123) {
        ve++, n = !1;
        break;
      } else
        e += "$";
    else if (ht === 92)
      e += Tu(Sh(fe()));
    else {
      if (ve >= qr)
        throw B1();
      e += Tu(ht);
    }
  return fe(), Be = e, n ? 2163759 : 2163760;
}
const q3 = () => {
  if (ve >= qr)
    throw B1();
  return ve--, D1();
}, xr = (n) => Z === n ? (ue(), !0) : !1, Mr = (n) => {
  if (Z === n)
    ue();
  else
    throw F1(n);
}, Q3 = () => se(`AUR0151:${Se}`), hf = () => se(`AUR0152:${Se}`), ai = () => se(`AUR0153:${Se}`), J3 = () => se(`AUR0154:${Se}`), Y3 = () => se(`AUR0155:${Se}`), xp = () => se(`AUR0156:${Se}`), X3 = () => se("AUR0157"), Z3 = () => se(`AUR0158:${Se}`), eA = () => se(`AUR0159:${Se}`), tA = () => se(`AUR0160:${Se}`), nA = () => se(`AUR0161:${Se}`), am = () => se(`AUR0163:${Se}`), rA = () => se(`AUR0164:${Se}`), iA = () => se(`AUR0165:${Se}`), B1 = () => se(`AUR0166:${Se}`), F1 = (n) => se(`AUR0167:${Se}<${Jl[63 & n]}`), N1 = () => {
  throw se(`AUR0168:${Se}`);
};
N1.notMapped = !0;
const sA = () => se(`AUR0170:${Se}`), Mh = () => se(`AUR0171:${Se}`), Ql = () => se(`AUR0172:${Se}`), Sl = () => se(`AUR0173:${Se}`), om = () => se(`AUR0174:${Se}`), um = () => se(`AUR0175:${Se}`), aA = () => se(`AUR0176:${Se}`), $1 = () => se(`AUR0178:${Se}`), oA = () => se(`AUR0179:${Se}`), Jl = [F3, N3, $3, O1, "$this", null, "$parent", "(", "{", ".", "..", "...", "?.", "}", ")", ",", "[", "]", ":", ";", "?", "'", '"', "&", "|", "??", "||", "&&", "==", "!=", "===", "!==", "<", ">", "<=", ">=", "in", "instanceof", "+", "-", "typeof", "void", "*", "%", "/", "=", "!", 2163759, 2163760, "of", "=>"], uA = Object.assign(/* @__PURE__ */ Object.create(null), {
  true: 8193,
  null: 8194,
  false: 8192,
  undefined: 8195,
  $this: 12292,
  $parent: 12294,
  in: 6562212,
  instanceof: 6562213,
  typeof: 139304,
  void: 139305,
  of: 4204593
}), Ao = {
  AsciiIdPart: [36, 0, 48, 58, 65, 91, 95, 0, 97, 123],
  IdStart: [36, 0, 65, 91, 95, 0, 97, 123, 170, 0, 186, 0, 192, 215, 216, 247, 248, 697, 736, 741, 7424, 7462, 7468, 7517, 7522, 7526, 7531, 7544, 7545, 7615, 7680, 7936, 8305, 0, 8319, 0, 8336, 8349, 8490, 8492, 8498, 0, 8526, 0, 8544, 8585, 11360, 11392, 42786, 42888, 42891, 42927, 42928, 42936, 42999, 43008, 43824, 43867, 43868, 43877, 64256, 64263, 65313, 65339, 65345, 65371],
  Digit: [48, 58],
  Skip: [0, 33, 127, 161]
}, Co = (n, e, t, r) => {
  const i = t.length;
  for (let s = 0; s < i; s += 2) {
    const a = t[s];
    let o = t[s + 1];
    if (o = o > 0 ? o : a + 1, n && n.fill(r, a, o), e)
      for (let u = a; u < o; u++)
        e.add(u);
  }
}, Bn = (n) => () => (fe(), n), lA = /* @__PURE__ */ new Set();
Co(null, lA, Ao.AsciiIdPart, !0);
const _h = new Uint8Array(65535);
Co(_h, null, Ao.IdStart, 1);
Co(_h, null, Ao.Digit, 1);
const _e = new Array(65535);
_e.fill(N1, 0, 65535);
Co(_e, null, Ao.Skip, () => (fe(), null));
Co(_e, null, Ao.IdStart, H3);
Co(_e, null, Ao.Digit, () => k1(!1));
_e[34] = _e[39] = () => K3();
_e[96] = () => D1();
_e[33] = () => fe() !== 61 ? 131118 : fe() !== 61 ? 6553949 : (fe(), 6553951);
_e[61] = () => fe() === 62 ? (fe(), 50) : ht !== 61 ? 4194349 : fe() !== 61 ? 6553948 : (fe(), 6553950);
_e[38] = () => fe() !== 38 ? 6291479 : (fe(), 6553883);
_e[124] = () => fe() !== 124 ? 6291480 : (fe(), 6553818);
_e[63] = () => {
  if (fe() === 46) {
    const n = na(ve + 1);
    return n <= 48 || n >= 57 ? (fe(), 2162700) : 6291478;
  }
  return ht !== 63 ? 6291478 : (fe(), 6553753);
};
_e[46] = () => fe() <= 57 && ht >= 48 ? k1(!0) : ht === 46 ? fe() !== 46 ? 10 : (fe(), 11) : 65545;
_e[60] = () => fe() !== 61 ? 6554016 : (fe(), 6554018);
_e[62] = () => fe() !== 61 ? 6554017 : (fe(), 6554019);
_e[37] = Bn(6554155);
_e[40] = Bn(2688007);
_e[41] = Bn(7340046);
_e[42] = Bn(6554154);
_e[43] = Bn(2490854);
_e[44] = Bn(6291471);
_e[45] = Bn(2490855);
_e[47] = Bn(6554156);
_e[58] = Bn(6291476);
_e[59] = Bn(6291477);
_e[91] = Bn(2688016);
_e[93] = Bn(7340051);
_e[123] = Bn(524296);
_e[125] = Bn(7340045);
let me = null;
const Wa = [];
let Ti = !1;
function cA() {
  Ti = !1;
}
function dA() {
  Ti = !0;
}
function Rh() {
  return me;
}
function Ph(n) {
  if (n == null)
    throw se("AUR0206");
  if (me == null) {
    me = n, Wa[0] = me, Ti = !0;
    return;
  }
  if (me === n)
    throw se("AUR0207");
  Wa.push(n), me = n, Ti = !0;
}
function Oh(n) {
  if (n == null)
    throw se("AUR0208");
  if (me !== n)
    throw se("AUR0209");
  Wa.pop(), me = Wa.length > 0 ? Wa[Wa.length - 1] : null, Ti = me != null;
}
const pA = Object.freeze({
  get current() {
    return me;
  },
  get connecting() {
    return Ti;
  },
  enter: Ph,
  exit: Oh,
  pause: cA,
  resume: dA
}), ro = Reflect.get, fA = Object.prototype.toString, L1 = /* @__PURE__ */ new WeakMap();
function U1(n) {
  switch (fA.call(n)) {
    case "[object Object]":
    case "[object Array]":
    case "[object Map]":
    case "[object Set]":
      return !0;
    default:
      return !1;
  }
}
const So = "__raw__";
function he(n) {
  return U1(n) ? xd(n) : n;
}
function xd(n) {
  return L1.get(n) ?? hA(n);
}
function Ae(n) {
  return n[So] ?? n;
}
function vn(n) {
  return U1(n) && n[So] || n;
}
function Ih(n) {
  return n === "constructor" || n === "__proto__" || n === "$observers" || n === Symbol.toPrimitive || n === Symbol.toStringTag;
}
function hA(n) {
  const e = fs(n) ? mA : is(n) || Ju(n) ? LA : yA, t = new Proxy(n, e);
  return L1.set(n, t), t;
}
const yA = {
  get(n, e, t) {
    if (e === So)
      return n;
    const r = Rh();
    return !Ti || Ih(e) || r == null ? ro(n, e, t) : (r.observe(n, e), he(ro(n, e, t)));
  }
}, mA = {
  get(n, e, t) {
    if (e === So)
      return n;
    if (!Ti || Ih(e) || me == null)
      return ro(n, e, t);
    switch (e) {
      case "length":
        return me.observe(n, "length"), n.length;
      case "map":
        return bA;
      case "includes":
        return vA;
      case "indexOf":
        return wA;
      case "lastIndexOf":
        return TA;
      case "every":
        return gA;
      case "filter":
        return xA;
      case "find":
        return CA;
      case "findIndex":
        return AA;
      case "flat":
        return SA;
      case "flatMap":
        return EA;
      case "join":
        return MA;
      case "push":
        return RA;
      case "pop":
        return _A;
      case "reduce":
        return NA;
      case "reduceRight":
        return $A;
      case "reverse":
        return kA;
      case "shift":
        return PA;
      case "unshift":
        return OA;
      case "slice":
        return FA;
      case "splice":
        return IA;
      case "some":
        return DA;
      case "sort":
        return BA;
      case "keys":
        return V1;
      case "values":
      case Symbol.iterator:
        return yf;
      case "entries":
        return mf;
    }
    return me.observe(n, e), he(ro(n, e, t));
  },
  ownKeys(n) {
    return Rh()?.observe(n, "length"), Reflect.ownKeys(n);
  }
};
function bA(n, e) {
  const t = Ae(this), r = t.map((i, s) => vn(n.call(e, he(i), s, this)));
  return Tt(me, t), he(r);
}
function gA(n, e) {
  const t = Ae(this), r = t.every((i, s) => n.call(e, he(i), s, this));
  return Tt(me, t), r;
}
function xA(n, e) {
  const t = Ae(this), r = t.filter((i, s) => vn(n.call(e, he(i), s, this)));
  return Tt(me, t), he(r);
}
function vA(n) {
  const e = Ae(this), t = e.includes(vn(n));
  return Tt(me, e), t;
}
function wA(n) {
  const e = Ae(this), t = e.indexOf(vn(n));
  return Tt(me, e), t;
}
function TA(n) {
  const e = Ae(this), t = e.lastIndexOf(vn(n));
  return Tt(me, e), t;
}
function AA(n, e) {
  const t = Ae(this), r = t.findIndex((i, s) => vn(n.call(e, he(i), s, this)));
  return Tt(me, t), r;
}
function CA(n, e) {
  const t = Ae(this), r = t.find((i, s) => n(he(i), s, this), e);
  return Tt(me, t), he(r);
}
function SA() {
  const n = Ae(this);
  return Tt(me, n), he(n.flat());
}
function EA(n, e) {
  const t = Ae(this);
  return Tt(me, t), xd(t.flatMap((r, i) => he(n.call(e, he(r), i, this))));
}
function MA(n) {
  const e = Ae(this);
  return Tt(me, e), e.join(n);
}
function _A() {
  return he(Ae(this).pop());
}
function RA(...n) {
  return Ae(this).push(...n);
}
function PA() {
  return he(Ae(this).shift());
}
function OA(...n) {
  return Ae(this).unshift(...n);
}
function IA(...n) {
  return he(Ae(this).splice(...n));
}
function kA(...n) {
  const e = Ae(this), t = e.reverse();
  return Tt(me, e), he(t);
}
function DA(n, e) {
  const t = Ae(this), r = t.some((i, s) => vn(n.call(e, he(i), s, this)));
  return Tt(me, t), r;
}
function BA(n) {
  const e = Ae(this), t = e.sort(n);
  return Tt(me, e), he(t);
}
function FA(n, e) {
  const t = Ae(this);
  return Tt(me, t), xd(t.slice(n, e));
}
function NA(n, e) {
  const t = Ae(this), r = t.reduce((i, s, a) => n(i, he(s), a, this), e);
  return Tt(me, t), he(r);
}
function $A(n, e) {
  const t = Ae(this), r = t.reduceRight((i, s, a) => n(i, he(s), a, this), e);
  return Tt(me, t), he(r);
}
const LA = {
  get(n, e, t) {
    if (e === So)
      return n;
    const r = Rh();
    if (!Ti || Ih(e) || r == null)
      return ro(n, e, t);
    switch (e) {
      case "size":
        return r.observe(n, "size"), n.size;
      case "clear":
        return WA;
      case "delete":
        return HA;
      case "forEach":
        return UA;
      case "add":
        if (Ju(n))
          return GA;
        break;
      case "get":
        if (is(n))
          return jA;
        break;
      case "set":
        if (is(n))
          return zA;
        break;
      case "has":
        return VA;
      case "keys":
        return V1;
      case "values":
        return yf;
      case "entries":
        return mf;
      case Symbol.iterator:
        return is(n) ? mf : yf;
    }
    return he(ro(n, e, t));
  }
};
function UA(n, e) {
  const t = Ae(this);
  return Tt(me, t), t.forEach((r, i) => {
    n.call(e, he(r), he(i), this);
  });
}
function VA(n) {
  const e = Ae(this);
  return Tt(me, e), e.has(vn(n));
}
function jA(n) {
  const e = Ae(this);
  return Tt(me, e), he(e.get(vn(n)));
}
function zA(n, e) {
  return he(Ae(this).set(vn(n), vn(e)));
}
function GA(n) {
  return he(Ae(this).add(vn(n)));
}
function WA() {
  return he(Ae(this).clear());
}
function HA(n) {
  return he(Ae(this).delete(vn(n)));
}
function V1() {
  const n = Ae(this);
  Tt(me, n);
  const e = n.keys();
  return {
    next() {
      const t = e.next(), r = t.value, i = t.done;
      return i ? {
        value: void 0,
        done: i
      } : {
        value: he(r),
        done: i
      };
    },
    [Symbol.iterator]() {
      return this;
    }
  };
}
function yf() {
  const n = Ae(this);
  Tt(me, n);
  const e = n.values();
  return {
    next() {
      const t = e.next(), r = t.value, i = t.done;
      return i ? {
        value: void 0,
        done: i
      } : {
        value: he(r),
        done: i
      };
    },
    [Symbol.iterator]() {
      return this;
    }
  };
}
function mf() {
  const n = Ae(this);
  Tt(me, n);
  const e = n.entries();
  return {
    next() {
      const t = e.next(), r = t.value, i = t.done;
      return i ? {
        value: void 0,
        done: i
      } : {
        value: [he(r[0]), he(r[1])],
        done: i
      };
    },
    [Symbol.iterator]() {
      return this;
    }
  };
}
const Tt = (n, e) => n?.observeCollection(e), KA = Object.freeze({
  getProxy: xd,
  getRaw: Ae,
  wrap: he,
  unwrap: vn,
  rawKey: So
});
class Yu {
  constructor(e, t, r, i, s) {
    this.type = 1, this.v = void 0, this.ov = void 0, this.ir = !1, this.D = !1, this.o = e, this.$get = t, this.$set = r, this.up = i, this.oL = s;
  }
  static create(e, t, r, i, s) {
    const a = r.get, o = r.set, u = new Yu(e, a, o, s, i), l = () => u.getValue();
    return l.getObserver = () => u, ur(e, t, {
      enumerable: r.enumerable,
      configurable: !0,
      get: l,
      set: (p) => {
        u.setValue(p);
      }
    }), u;
  }
  getValue() {
    return this.subs.count === 0 ? this.$get.call(this.o, this) : (this.D && (this.compute(), this.D = !1), this.v);
  }
  setValue(e) {
    if (rr(this.$set))
      e !== this.v && (this.ir = !0, this.$set.call(this.o, e), this.ir = !1, this.run());
    else
      throw se("AUR0221");
  }
  handleChange() {
    this.D = !0, this.subs.count > 0 && this.run();
  }
  handleCollectionChange() {
    this.D = !0, this.subs.count > 0 && this.run();
  }
  subscribe(e) {
    this.subs.add(e) && this.subs.count === 1 && (this.compute(), this.D = !1);
  }
  unsubscribe(e) {
    this.subs.remove(e) && this.subs.count === 0 && (this.D = !0, this.obs.clearAll());
  }
  run() {
    if (this.ir)
      return;
    const e = this.v, t = this.compute();
    this.D = !1, vh(t, e) || (this.ov = e, lm = this.ov, this.ov = this.v, this.subs.notify(this.v, lm));
  }
  compute() {
    this.ir = !0, this.obs.version++;
    try {
      return Ph(this), this.v = vn(this.$get.call(this.up ? he(this.o) : this.o, this));
    } finally {
      this.obs.clear(), this.ir = !1, Oh(this);
    }
  }
}
Pr(Yu);
Tn(Yu);
let lm;
const j1 = vo("IDirtyChecker", (n) => n.singleton(z1)), qA = {
  timeoutsPerCheck: 25,
  disabled: !1,
  throw: !1,
  resetToDefault() {
    this.timeoutsPerCheck = 6, this.disabled = !1, this.throw = !1;
  }
}, QA = {
  persistent: !0
};
class z1 {
  constructor(e) {
    this.p = e, this.tracked = [], this.A = null, this.O = 0, this.check = () => {
      if (++this.O < qA.timeoutsPerCheck)
        return;
      this.O = 0;
      const t = this.tracked, r = t.length;
      let i, s = 0;
      for (; s < r; ++s)
        i = t[s], i.isDirty() && i.flush();
    };
  }
  createProperty(e, t) {
    return new G1(this, e, t);
  }
  addProperty(e) {
    this.tracked.push(e), this.tracked.length === 1 && (this.A = this.p.taskQueue.queueTask(this.check, QA));
  }
  removeProperty(e) {
    this.tracked.splice(this.tracked.indexOf(e), 1), this.tracked.length === 0 && (this.A.cancel(), this.A = null);
  }
}
z1.inject = [Qu];
class G1 {
  constructor(e, t, r) {
    this.obj = t, this.key = r, this.type = 0, this.ov = void 0, this.C = e;
  }
  getValue() {
    return this.obj[this.key];
  }
  setValue(e) {
    throw se(`Trying to set value for property ${wh(this.key)} in dirty checker`);
  }
  isDirty() {
    return this.ov !== this.obj[this.key];
  }
  flush() {
    const e = this.ov, t = this.getValue();
    this.ov = t, this.subs.notify(t, e);
  }
  subscribe(e) {
    this.subs.add(e) && this.subs.count === 1 && (this.ov = this.obj[this.key], this.C.addProperty(this));
  }
  unsubscribe(e) {
    this.subs.remove(e) && this.subs.count === 0 && this.C.removeProperty(this);
  }
}
Tn(G1);
class JA {
  constructor(e, t) {
    this.type = 0, this.o = e, this.k = t;
  }
  get doNotCache() {
    return !0;
  }
  getValue() {
    return this.o[this.k];
  }
  setValue() {
  }
  subscribe() {
  }
  unsubscribe() {
  }
}
class W1 {
  constructor() {
    this.type = 0;
  }
  getValue(e, t) {
    return e[t];
  }
  setValue(e, t, r) {
    t[r] = e;
  }
}
class kh {
  constructor(e, t) {
    this.type = 1, this.v = void 0, this.iO = !1, this.o = e, this.k = t;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    if (this.iO) {
      if (vh(e, this.v))
        return;
      vc = this.v, this.v = e, this.subs.notify(e, vc);
    } else
      this.o[this.k] = e;
  }
  subscribe(e) {
    this.iO === !1 && this.start(), this.subs.add(e);
  }
  start() {
    return this.iO === !1 && (this.iO = !0, this.v = this.o[this.k], ur(this.o, this.k, {
      enumerable: !0,
      configurable: !0,
      get: () => this.getValue(),
      set: (e) => {
        this.setValue(e);
      }
    })), this;
  }
  stop() {
    return this.iO && (ur(this.o, this.k, {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: this.v
    }), this.iO = !1), this;
  }
}
class YA {
  constructor(e, t, r, i) {
    this.type = 1, this.v = void 0, this.ov = void 0, this.o = e, this.S = r, this.hs = rr(r);
    const s = e[t];
    this.cb = rr(s) ? s : void 0, this.v = i;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    this.hs && (e = this.S(e, null)), vh(e, this.v) || (this.ov = this.v, this.v = e, this.cb?.call(this.o, this.v, this.ov), vc = this.ov, this.ov = this.v, this.subs.notify(this.v, vc));
  }
}
Tn(kh);
Tn(YA);
let vc;
const bf = new W1(), va = vo("IObserverLocator", (n) => n.singleton(H1)), wc = vo("INodeObserverLocator", (n) => n.cachedCallback((e) => new XA()));
class XA {
  handles() {
    return !1;
  }
  getObserver() {
    return bf;
  }
  getAccessor() {
    return bf;
  }
}
class H1 {
  constructor(e, t) {
    this.$ = [], this.C = e, this.R = t;
  }
  addAdapter(e) {
    this.$.push(e);
  }
  getObserver(e, t) {
    if (e == null)
      throw eC(t);
    if (!tu(e))
      return new JA(e, t);
    const r = K1(e);
    let i = r[t];
    return i === void 0 && (i = this.createObserver(e, t), i.doNotCache || (r[t] = i)), i;
  }
  getAccessor(e, t) {
    const r = e.$observers?.[t];
    return r !== void 0 ? r : this.R.handles(e, t, this) ? this.R.getAccessor(e, t, this) : bf;
  }
  getArrayObserver(e) {
    return ru(e);
  }
  getMapObserver(e) {
    return xc(e);
  }
  getSetObserver(e) {
    return gc(e);
  }
  createObserver(e, t) {
    if (this.R.handles(e, t, this))
      return this.R.getObserver(e, t, this);
    switch (t) {
      case "length":
        if (fs(e))
          return ru(e).getLengthObserver();
        break;
      case "size":
        if (is(e))
          return xc(e).getLengthObserver();
        if (Ju(e))
          return gc(e).getLengthObserver();
        break;
      default:
        if (fs(e) && bu(t))
          return ru(e).getIndexObserver(Number(t));
        break;
    }
    let r = dm(e, t);
    if (r === void 0) {
      let i = cm(e);
      for (; i !== null && (r = dm(i, t), r === void 0); )
        i = cm(i);
    }
    if (r !== void 0 && !WT.call(r, "value")) {
      let i = this.U(e, t, r);
      return i == null && (i = (r.get?.getObserver ?? r.set?.getObserver)?.(e, this)), i ?? (r.configurable ? Yu.create(e, t, r, this, !0) : this.C.createProperty(e, t));
    }
    return new kh(e, t);
  }
  U(e, t, r) {
    if (this.$.length > 0)
      for (const i of this.$) {
        const s = i.getObserver(e, t, r, this);
        if (s != null)
          return s;
      }
    return null;
  }
}
H1.inject = [j1, wc];
const ZA = (n) => {
  let e;
  return fs(n) ? e = ru(n) : is(n) ? e = xc(n) : Ju(n) && (e = gc(n)), e;
}, cm = Object.getPrototypeOf, dm = Object.getOwnPropertyDescriptor, K1 = (n) => {
  let e = n.$observers;
  return e === void 0 && ur(n, "$observers", {
    enumerable: !1,
    value: e = nu()
  }), e;
}, eC = (n) => se(`AUR0199:${wh(n)}`);
vo("IObservation", (n) => n.singleton(tC));
class tC {
  constructor(e) {
    this.oL = e;
  }
  static get inject() {
    return [va];
  }
  run(e) {
    const t = new q1(this.oL, e);
    return t.run(), t;
  }
}
class q1 {
  constructor(e, t) {
    this.oL = e, this.fn = t, this.maxRunCount = 10, this.queued = !1, this.running = !1, this.runCount = 0, this.stopped = !1;
  }
  handleChange() {
    this.queued = !0, this.run();
  }
  handleCollectionChange() {
    this.queued = !0, this.run();
  }
  run() {
    if (this.stopped)
      throw se("AUR0225");
    if (!this.running) {
      ++this.runCount, this.running = !0, this.queued = !1, ++this.obs.version;
      try {
        Ph(this), this.fn(this);
      } finally {
        this.obs.clear(), this.running = !1, Oh(this);
      }
      if (this.queued) {
        if (this.runCount > this.maxRunCount)
          throw this.runCount = 0, se("AUR0226");
        this.run();
      } else
        this.runCount = 0;
    }
  }
  stop() {
    this.stopped = !0, this.obs.clearAll();
  }
}
Pr(q1);
const Dh = vo("ISignaler", (n) => n.singleton(nC));
class nC {
  constructor() {
    this.signals = nu();
  }
  dispatchSignal(e) {
    const t = this.signals[e];
    if (t === void 0)
      return;
    let r;
    for (r of t.keys())
      r.handleChange(void 0, void 0);
  }
  addSignalListener(e, t) {
    const r = this.signals, i = r[e];
    i === void 0 ? r[e] = /* @__PURE__ */ new Set([t]) : i.add(t);
  }
  removeSignalListener(e, t) {
    this.signals[e]?.delete(t);
  }
}
class rC extends Error {
  constructor(e) {
    super("Task was canceled."), this.task = e;
  }
}
var pm;
(function(n) {
  n[n.pending = 0] = "pending", n[n.running = 1] = "running", n[n.completed = 2] = "completed", n[n.canceled = 3] = "canceled";
})(pm || (pm = {}));
var fm;
(function(n) {
  n[n.render = 0] = "render", n[n.macroTask = 1] = "macroTask", n[n.postRender = 2] = "postRender";
})(fm || (fm = {}));
function Y(n, e, t, r) {
  var i = arguments.length, s = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, a;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    s = Reflect.decorate(n, e, t, r);
  else
    for (var o = n.length - 1; o >= 0; o--)
      (a = n[o]) && (s = (i < 3 ? a(s) : i > 3 ? a(e, t, s) : a(e, t)) || s);
  return i > 3 && s && Object.defineProperty(e, t, s), s;
}
function cn(n, e) {
  return function(t, r) {
    e(t, r, n);
  };
}
const fn = Zr.getOwn, Xu = Zr.hasOwn, wt = Zr.define, { annotation: Bh, resource: Q1 } = Ar, hn = Bh.keyFor, wa = Q1.keyFor, gs = Q1.appendTo, Fh = Bh.appendTo, J1 = Bh.getKeys, xs = Object, Nh = xs.prototype, nn = () => xs.create(null), re = (n) => new Error(n), ss = Nh.hasOwnProperty, qn = xs.freeze, $h = xs.assign, Lh = xs.getOwnPropertyNames, Uh = xs.keys, hm = nn(), gf = (n, e, t) => {
  if (hm[e] === !0)
    return !0;
  if (!yt(e))
    return !1;
  const r = e.slice(0, 5);
  return hm[e] = r === "aria-" || r === "data-" || t.isStandardSvgAttribute(n, e);
}, qt = (n) => n instanceof Promise, _r = (n) => n instanceof Array, On = (n) => typeof n == "function", yt = (n) => typeof n == "string", iC = xs.defineProperty, Tc = (n) => {
  throw n;
}, Zu = xs.is, xf = Reflect.defineProperty, Cr = (n, e, t) => (xf(n, e, {
  enumerable: !1,
  configurable: !0,
  writable: !0,
  value: t
}), t);
function De(n, e) {
  let t;
  function r(i, s) {
    arguments.length > 1 && (t.property = s), wt(Ji, es.create(s, i, t), i.constructor, s), Fh(i.constructor, di.keyFrom(s));
  }
  if (arguments.length > 1) {
    t = {}, r(n, e);
    return;
  } else if (yt(n))
    return t = {}, r;
  return t = n === void 0 ? {} : n, r;
}
function sC(n) {
  return n.startsWith(Ji);
}
const Ji = hn("bindable"), di = qn({
  name: Ji,
  keyFrom: (n) => `${Ji}:${n}`,
  from(n, ...e) {
    const t = {}, r = Array.isArray;
    function i(o) {
      t[o] = es.create(o, n);
    }
    function s(o, u) {
      t[o] = u instanceof es ? u : es.create(o, n, u);
    }
    function a(o) {
      r(o) ? o.forEach(i) : o instanceof es ? t[o.property] = o : o !== void 0 && Uh(o).forEach((u) => s(u, o[u]));
    }
    return e.forEach(a), t;
  },
  for(n) {
    let e;
    const t = {
      add(r) {
        let i, s;
        return yt(r) ? (i = r, s = {
          property: i
        }) : (i = r.property, s = r), e = es.create(i, n, s), Xu(Ji, n, i) || Fh(n, di.keyFrom(i)), wt(Ji, e, n, i), t;
      },
      mode(r) {
        return e.mode = r, t;
      },
      callback(r) {
        return e.callback = r, t;
      },
      attribute(r) {
        return e.attribute = r, t;
      },
      primary() {
        return e.primary = !0, t;
      },
      set(r) {
        return e.set = r, t;
      }
    };
    return t;
  },
  getAll(n) {
    const e = Ji.length + 1, t = [], r = n1(n);
    let i = r.length, s = 0, a, o, u, l;
    for (; --i >= 0; )
      for (u = r[i], a = J1(u).filter(sC), o = a.length, l = 0; l < o; ++l)
        t[s++] = fn(Ji, u, a[l].slice(e));
    return t;
  }
});
class es {
  constructor(e, t, r, i, s, a) {
    this.attribute = e, this.callback = t, this.mode = r, this.primary = i, this.property = s, this.set = a;
  }
  static create(e, t, r = {}) {
    return new es(rn(r.attribute, t1(e)), rn(r.callback, `${e}Changed`), rn(r.mode, 2), rn(r.primary, !1), rn(r.property, e), rn(r.set, aC(e, t, r)));
  }
}
const vf = {
  key: hn("coercer"),
  define(n, e) {
    wt(vf.key, n[e].bind(n), n);
  },
  for(n) {
    return fn(vf.key, n);
  }
};
function aC(n, e, t = {}) {
  const r = t.type ?? Zr.get("design:type", e, n) ?? null;
  if (r == null)
    return bi;
  let i;
  switch (r) {
    case Number:
    case Boolean:
    case String:
    case BigInt:
      i = r;
      break;
    default: {
      const s = r.coerce;
      i = typeof s == "function" ? s.bind(r) : vf.for(r) ?? bi;
      break;
    }
  }
  return i === bi ? i : oC(i, t.nullable);
}
function oC(n, e) {
  return function(t, r) {
    return r?.enableCoercion ? (e ?? !(r?.coerceNullish ?? !1)) && t == null ? t : n(t, r) : t;
  };
}
class Y1 {
  constructor(e, t, r, i, s, a) {
    this.set = i, this.$controller = s, this.i = a, this.v = void 0, this.ov = void 0;
    const o = e[r], u = e.propertyChanged, l = this.u = On(o), p = this.A = On(u), h = this.hs = i !== bi;
    let b;
    this.o = e, this.k = t, this.C = p ? u : bi, this.cb = l ? o : bi, this.cb === void 0 && !p && !h ? this.iO = !1 : (this.iO = !0, b = e[t], this.v = h && b !== void 0 ? i(b, this.i) : b, this.B());
  }
  get type() {
    return 1;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    this.hs && (e = this.set(e, this.i));
    const t = this.v;
    if (this.iO) {
      if (Zu(e, t))
        return;
      this.v = e, this.ov = t, (this.$controller == null || this.$controller.isBound) && (this.u && this.cb.call(this.o, e, t), this.A && this.C.call(this.o, this.k, e, t)), this.subs.notify(this.v, this.ov);
    } else
      this.o[this.k] = e;
  }
  subscribe(e) {
    this.iO && (this.iO = !0, this.v = this.hs ? this.set(this.o[this.k], this.i) : this.o[this.k], this.B()), this.subs.add(e);
  }
  B() {
    Reflect.defineProperty(this.o, this.k, {
      enumerable: !0,
      configurable: !0,
      get: () => this.v,
      set: (e) => {
        this.setValue(e);
      }
    });
  }
}
Tn(Y1);
const ym = function(n) {
  function e(t, r, i) {
    pe.inject(e)(t, r, i);
  }
  return e.$isResolver = !0, e.resolve = function(t, r) {
    return r.root === r || r.has(n, !1) ? r.get(n) : r.root.get(n);
  }, e;
}, Me = pe.createInterface, Ta = de.singleton, el = de.aliasTo, uC = de.instance, X1 = de.transient, xt = (n, e, t) => n.registerResolver(e, t);
function lC(...n) {
  return function(e) {
    const t = hn("aliases"), r = fn(t, e);
    r === void 0 ? wt(t, n, e) : r.push(...n);
  };
}
function tl(n, e, t, r) {
  for (let i = 0, s = n.length; i < s; ++i)
    de.aliasTo(t, e.keyFrom(n[i])).register(r);
}
class Vh {
  constructor(e, t, r, i) {
    if (this.chars = e, this.repeat = t, this.isSymbol = r, this.isInverted = i, i)
      switch (e.length) {
        case 0:
          this.has = this.R;
          break;
        case 1:
          this.has = this.I;
          break;
        default:
          this.has = this.T;
      }
    else
      switch (e.length) {
        case 0:
          this.has = this.P;
          break;
        case 1:
          this.has = this.L;
          break;
        default:
          this.has = this.U;
      }
  }
  equals(e) {
    return this.chars === e.chars && this.repeat === e.repeat && this.isSymbol === e.isSymbol && this.isInverted === e.isInverted;
  }
  U(e) {
    return this.chars.includes(e);
  }
  L(e) {
    return this.chars === e;
  }
  P(e) {
    return !1;
  }
  T(e) {
    return !this.chars.includes(e);
  }
  I(e) {
    return this.chars !== e;
  }
  R(e) {
    return !0;
  }
}
class cC {
  constructor() {
    this.parts = Ie, this.$ = "", this._ = {}, this.q = {};
  }
  get pattern() {
    const e = this.$;
    return e === "" ? null : e;
  }
  set pattern(e) {
    e == null ? (this.$ = "", this.parts = Ie) : (this.$ = e, this.parts = this.q[e]);
  }
  append(e, t) {
    const r = this._;
    r[e] === void 0 ? r[e] = t : r[e] += t;
  }
  next(e) {
    const t = this._;
    let r;
    t[e] !== void 0 && (r = this.q, r[e] === void 0 ? r[e] = [t[e]] : r[e].push(t[e]), t[e] = void 0);
  }
}
class jh {
  constructor(e, ...t) {
    this.charSpec = e, this.M = [], this.F = null, this.O = !1, this.V = t;
  }
  get $() {
    return this.O ? this.V[0] : null;
  }
  findChild(e) {
    const t = this.M, r = t.length;
    let i = null, s = 0;
    for (; s < r; ++s)
      if (i = t[s], e.equals(i.charSpec))
        return i;
    return null;
  }
  append(e, t) {
    const r = this.V;
    r.includes(t) || r.push(t);
    let i = this.findChild(e);
    return i == null && (i = new jh(e, t), this.M.push(i), e.repeat && i.M.push(i)), i;
  }
  findMatches(e, t) {
    const r = [], i = this.M, s = i.length;
    let a = 0, o = null, u = 0, l = 0;
    for (; u < s; ++u)
      if (o = i[u], o.charSpec.has(e))
        if (r.push(o), a = o.V.length, l = 0, o.charSpec.isSymbol)
          for (; l < a; ++l)
            t.next(o.V[l]);
        else
          for (; l < a; ++l)
            t.append(o.V[l], e);
    return r;
  }
}
class mm {
  constructor(e) {
    this.text = e;
    const t = this.N = e.length, r = this.j = [];
    let i = 0;
    for (; t > i; ++i)
      r.push(new Vh(e[i], !1, !1, !1));
  }
  eachChar(e) {
    const t = this.N, r = this.j;
    let i = 0;
    for (; t > i; ++i)
      e(r[i]);
  }
}
class dC {
  constructor(e) {
    this.text = "PART", this.H = new Vh(e, !0, !1, !0);
  }
  eachChar(e) {
    e(this.H);
  }
}
class pC {
  constructor(e) {
    this.text = e, this.H = new Vh(e, !1, !0, !1);
  }
  eachChar(e) {
    e(this.H);
  }
}
class fC {
  constructor() {
    this.statics = 0, this.dynamics = 0, this.symbols = 0;
  }
}
const hC = Me("ISyntaxInterpreter", (n) => n.singleton(yC));
class yC {
  constructor() {
    this.W = new jh(null), this.G = [this.W];
  }
  add(e) {
    e = e.slice(0).sort((b, C) => b.pattern > C.pattern ? 1 : -1);
    const t = e.length;
    let r, i, s, a, o, u, l, p = 0, h;
    for (; t > p; ) {
      for (r = this.W, i = e[p], s = i.pattern, a = new fC(), o = this.X(i, a), u = o.length, l = (b) => r = r.append(b, s), h = 0; u > h; ++h)
        o[h].eachChar(l);
      r.F = a, r.O = !0, ++p;
    }
  }
  interpret(e) {
    const t = new cC(), r = e.length;
    let i = this.G, s = 0, a;
    for (; s < r && (i = this.K(i, e.charAt(s), t), i.length !== 0); ++s)
      ;
    return i = i.filter(mC), i.length > 0 && (i.sort(bC), a = i[0], a.charSpec.isSymbol || t.next(a.$), t.pattern = a.$), t;
  }
  K(e, t, r) {
    const i = [];
    let s = null;
    const a = e.length;
    let o = 0;
    for (; o < a; ++o)
      s = e[o], i.push(...s.findMatches(t, r));
    return i;
  }
  X(e, t) {
    const r = [], i = e.pattern, s = i.length, a = e.symbols;
    let o = 0, u = 0, l = "";
    for (; o < s; )
      l = i.charAt(o), a.length === 0 || !a.includes(l) ? o === u && l === "P" && i.slice(o, o + 4) === "PART" ? (u = o += 4, r.push(new dC(a)), ++t.dynamics) : ++o : o !== u ? (r.push(new mm(i.slice(u, o))), ++t.statics, u = o) : (r.push(new pC(i.slice(u, o + 1))), ++t.symbols, u = ++o);
    return u !== o && (r.push(new mm(i.slice(u, o))), ++t.statics), r;
  }
}
function mC(n) {
  return n.O;
}
function bC(n, e) {
  const t = n.F, r = e.F;
  return t.statics !== r.statics ? r.statics - t.statics : t.dynamics !== r.dynamics ? r.dynamics - t.dynamics : t.symbols !== r.symbols ? r.symbols - t.symbols : 0;
}
class lr {
  constructor(e, t, r, i) {
    this.rawName = e, this.rawValue = t, this.target = r, this.command = i;
  }
}
const Z1 = Me("IAttributePattern"), gC = Me("IAttributeParser", (n) => n.singleton(ex));
class ex {
  constructor(e, t) {
    this.Y = {}, this.Z = e;
    const r = this.V = {}, i = t.reduce((s, a) => {
      const o = tx(a.constructor);
      return o.forEach((u) => r[u.pattern] = a), s.concat(o);
    }, Ie);
    e.add(i);
  }
  parse(e, t) {
    let r = this.Y[e];
    r == null && (r = this.Y[e] = this.Z.interpret(e));
    const i = r.pattern;
    return i == null ? new lr(e, t, e, null) : this.V[i][i](e, t, r.parts);
  }
}
ex.inject = [hC, u1(Z1)];
function Pi(...n) {
  return function(t) {
    return vC.define(n, t);
  };
}
class xC {
  constructor(e) {
    this.Type = e, this.name = void 0;
  }
  register(e) {
    Ta(Z1, this.Type).register(e);
  }
}
const vp = wa("attribute-pattern"), Yl = "attribute-pattern-definitions", tx = (n) => Ar.annotation.get(n, Yl), vC = qn({
  name: vp,
  definitionAnnotationKey: Yl,
  define(n, e) {
    const t = new xC(e);
    return wt(vp, t, e), gs(e, vp), Ar.annotation.set(e, Yl, n), Fh(e, Yl), e;
  },
  getPatternDefinitions: tx
});
let bm = class {
  "PART.PART"(e, t, r) {
    return new lr(e, t, r[0], r[1]);
  }
  "PART.PART.PART"(e, t, r) {
    return new lr(e, t, `${r[0]}.${r[1]}`, r[2]);
  }
};
bm = Y([Pi({
  pattern: "PART.PART",
  symbols: "."
}, {
  pattern: "PART.PART.PART",
  symbols: "."
})], bm);
let gm = class {
  ref(e, t, r) {
    return new lr(e, t, "element", "ref");
  }
  "PART.ref"(e, t, r) {
    return new lr(e, t, r[0], "ref");
  }
};
gm = Y([Pi({
  pattern: "ref",
  symbols: ""
}, {
  pattern: "PART.ref",
  symbols: "."
})], gm);
let xm = class {
  ":PART"(e, t, r) {
    return new lr(e, t, r[0], "bind");
  }
};
xm = Y([Pi({
  pattern: ":PART",
  symbols: ":"
})], xm);
let vm = class {
  "@PART"(e, t, r) {
    return new lr(e, t, r[0], "trigger");
  }
};
vm = Y([Pi({
  pattern: "@PART",
  symbols: "@"
})], vm);
let wm = class {
  "...$attrs"(e, t, r) {
    return new lr(e, t, "", "...$attrs");
  }
};
wm = Y([Pi({
  pattern: "...$attrs",
  symbols: ""
})], wm);
class nx {
  constructor(e, t, r) {
    this.type = 7, this.v = null, this.ov = null, this.J = !1, this.o = e, this.tt = t, this.et = r;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    this.v = e, this.J = e !== this.ov, this.it();
  }
  it() {
    if (this.J)
      switch (this.J = !1, this.ov = this.v, this.et) {
        case "class":
          this.o.classList.toggle(this.tt, !!this.v);
          break;
        case "style": {
          let e = "", t = this.v;
          yt(t) && t.includes("!important") && (e = "important", t = t.replace("!important", "")), this.o.style.setProperty(this.tt, t, e);
          break;
        }
        default:
          this.v == null ? this.o.removeAttribute(this.et) : this.o.setAttribute(this.et, String(this.v));
      }
  }
  handleMutation(e) {
    let t = !1;
    for (let r = 0, i = e.length; i > r; ++r) {
      const s = e[r];
      if (s.type === "attributes" && s.attributeName === this.tt) {
        t = !0;
        break;
      }
    }
    if (t) {
      let r;
      switch (this.et) {
        case "class":
          r = this.o.classList.contains(this.tt);
          break;
        case "style":
          r = this.o.style.getPropertyValue(this.tt);
          break;
        default:
          throw re(`AUR0651:${this.et}`);
      }
      r !== this.v && (this.ov = this.v, this.v = r, this.J = !1, this.st());
    }
  }
  subscribe(e) {
    this.subs.add(e) && this.subs.count === 1 && (this.v = this.ov = this.o.getAttribute(this.tt), wC(this.o.ownerDocument.defaultView.MutationObserver, this.o, this));
  }
  unsubscribe(e) {
    this.subs.remove(e) && this.subs.count === 0 && TC(this.o, this);
  }
  st() {
    Tm = this.ov, this.ov = this.v, this.subs.notify(this.v, Tm);
  }
}
Tn(nx);
const wC = (n, e, t) => {
  e.$eMObs === void 0 && (e.$eMObs = /* @__PURE__ */ new Set()), e.$mObs === void 0 && (e.$mObs = new n(AC)).observe(e, {
    attributes: !0
  }), e.$eMObs.add(t);
}, TC = (n, e) => {
  const t = n.$eMObs;
  return t && t.delete(e) ? (t.size === 0 && (n.$mObs.disconnect(), n.$mObs = void 0), !0) : !1;
}, AC = (n) => {
  n[0].target.$eMObs.forEach(CC, n);
};
function CC(n) {
  n.handleMutation(this);
}
let Tm;
function Fn(n) {
  return function(e) {
    return Ac.define(n, e);
  };
}
class zh {
  constructor(e, t, r, i) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i;
  }
  static create(e, t) {
    let r, i;
    return yt(e) ? (r = e, i = {
      name: r
    }) : (r = e.name, i = e), new zh(t, rn(wf(t, "name"), r), Ot(wf(t, "aliases"), i.aliases, t.aliases), Ac.keyFrom(r));
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    Ta(r, t).register(e), el(r, t).register(e), tl(i, Ac, r, e);
  }
}
const Ls = wa("binding-behavior"), wf = (n, e) => fn(hn(e), n), Ac = qn({
  name: Ls,
  keyFrom(n) {
    return `${Ls}:${n}`;
  },
  isType(n) {
    return On(n) && Xu(Ls, n);
  },
  define(n, e) {
    const t = zh.create(n, e);
    return wt(Ls, t, t.Type), wt(Ls, t, t), gs(e, Ls), t.Type;
  },
  getDefinition(n) {
    const e = fn(Ls, n);
    if (e === void 0)
      throw re(`AUR0151:${n.name}`);
    return e;
  },
  annotate(n, e, t) {
    wt(hn(e), t, n);
  },
  getAnnotation: wf
});
function nl(n) {
  return function(e) {
    return Cc.define(n, e);
  };
}
class Gh {
  constructor(e, t, r, i) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i;
  }
  static create(e, t) {
    let r, i;
    return yt(e) ? (r = e, i = {
      name: r
    }) : (r = e.name, i = e), new Gh(t, rn(Tf(t, "name"), r), Ot(Tf(t, "aliases"), i.aliases, t.aliases), Cc.keyFrom(r));
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    de.singleton(r, t).register(e), de.aliasTo(r, t).register(e), tl(i, Cc, r, e);
  }
}
const Us = wa("value-converter"), Tf = (n, e) => fn(hn(e), n), Cc = qn({
  name: Us,
  keyFrom: (n) => `${Us}:${n}`,
  isType(n) {
    return On(n) && Xu(Us, n);
  },
  define(n, e) {
    const t = Gh.create(n, e);
    return wt(Us, t, t.Type), wt(Us, t, t), gs(e, Us), t.Type;
  },
  getDefinition(n) {
    const e = fn(Us, n);
    if (e === void 0)
      throw re(`AUR0152:${n.name}`);
    return e;
  },
  annotate(n, e, t) {
    wt(hn(e), t, n);
  },
  getAnnotation: Tf
});
class SC {
  constructor(e, t) {
    this.v = void 0, this.b = e, this.nt = t;
  }
  flush() {
    this.b.updateSource(this.v);
  }
  handleChange(e, t) {
    const r = this.b;
    e !== j(r.ast, r.s, r, null) && (this.v = e, this.nt.add(this));
  }
}
const Eo = (n) => {
  Cr(n.prototype, "useScope", function(e) {
    this.s = e;
  });
}, ti = (n, e = !0) => (t) => {
  const r = t.prototype;
  n != null && xf(r, "strict", {
    enumerable: !0,
    get: function() {
      return n;
    }
  }), xf(r, "strictFnCall", {
    enumerable: !0,
    get: function() {
      return e;
    }
  }), Cr(r, "get", function(i) {
    return this.l.get(i);
  }), Cr(r, "getSignaler", function() {
    return this.l.root.get(Dh);
  }), Cr(r, "getConverter", function(i) {
    const s = Cc.keyFrom(i);
    let a = El.get(this);
    return a == null && El.set(this, a = new Am()), a[s] ?? (a[s] = this.l.get(ym(s)));
  }), Cr(r, "getBehavior", function(i) {
    const s = Ac.keyFrom(i);
    let a = El.get(this);
    return a == null && El.set(this, a = new Am()), a[s] ?? (a[s] = this.l.get(ym(s)));
  });
}, El = /* @__PURE__ */ new WeakMap();
class Am {
}
const EC = Me("IFlushQueue", (n) => n.singleton(MC));
class MC {
  constructor() {
    this.rt = !1, this.ot = /* @__PURE__ */ new Set();
  }
  get count() {
    return this.ot.size;
  }
  add(e) {
    if (this.ot.add(e), !this.rt) {
      this.rt = !0;
      try {
        this.ot.forEach(_C);
      } finally {
        this.rt = !1;
      }
    }
  }
  clear() {
    this.ot.clear(), this.rt = !1;
  }
}
function _C(n, e, t) {
  t.delete(n), n.flush();
}
const wp = /* @__PURE__ */ new WeakSet(), Aa = (n, e) => {
  Cr(n.prototype, "limit", function(t) {
    if (wp.has(this))
      throw re("AURXXXX: a rate limit has already been applied.");
    wp.add(this);
    const r = e(this, t), i = this[r], s = (...o) => i.call(this, ...o), a = t.type === "debounce" ? RC(t, s, this) : PC(t, s, this);
    return this[r] = a, {
      dispose: () => {
        wp.delete(this), a.dispose(), delete this[r];
      }
    };
  });
}, RC = (n, e, t) => {
  let r, i, s;
  const a = n.queue, o = (u) => {
    s = u, t.isBound ? (i = r, r = a.queueTask(() => e(s), {
      delay: n.delay,
      reusable: !1
    }), i?.cancel()) : e(s);
  };
  return o.dispose = () => {
    i?.cancel(), r?.cancel();
  }, o;
}, PC = (n, e, t) => {
  let r, i, s = 0, a = 0, o;
  const u = n.queue, l = () => n.now(), p = (h) => {
    o = h, t.isBound ? (a = l() - s, i = r, a > n.delay ? (s = l(), e(o)) : r = u.queueTask(() => {
      s = l(), e(o);
    }, {
      delay: n.delay - a,
      reusable: !1
    }), i?.cancel()) : e(o);
  };
  return p.dispose = () => {
    i?.cancel(), r?.cancel();
  }, p;
}, OC = {
  reusable: !1,
  preempt: !0
};
class rl {
  constructor(e, t, r, i, s, a, o, u, l) {
    this.targetAttribute = o, this.targetProperty = u, this.mode = l, this.isBound = !1, this.s = void 0, this.lt = null, this.v = void 0, this.boundFn = !1, this.l = t, this.ast = s, this.ht = e, this.target = a, this.oL = r, this.ct = i;
  }
  updateTarget(e) {
    this.ut.setValue(e, this.target, this.targetProperty);
  }
  handleChange() {
    if (!this.isBound)
      return;
    let e;
    this.obs.version++;
    const t = j(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    this.obs.clear(), t !== this.v && (this.v = t, this.ht.state !== 1 && (4 & this.ut.type) > 0 ? (e = this.lt, this.lt = this.ct.queueTask(() => {
      this.lt = null, this.updateTarget(t);
    }, OC), e?.cancel()) : this.updateTarget(t));
  }
  handleCollectionChange() {
    this.handleChange();
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Er(this.ast, e, this), this.ut ?? (this.ut = new nx(this.target, this.targetProperty, this.targetAttribute)), this.mode & 3 && this.updateTarget(this.v = j(this.ast, e, this, (2 & this.mode) > 0 ? this : null)), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, sr(this.ast, this.s, this), this.s = void 0, this.v = void 0, this.lt?.cancel(), this.lt = null, this.obs.clearAll());
  }
}
Eo(rl);
Aa(rl, () => "updateTarget");
Pr(rl);
ti(!0)(rl);
const rx = {
  reusable: !1,
  preempt: !0
};
class IC {
  constructor(e, t, r, i, s, a, o, u) {
    this.ast = s, this.target = a, this.targetProperty = o, this.mode = u, this.isBound = !1, this.s = void 0, this.lt = null, this.ht = e, this.oL = r, this.ct = i, this.ut = r.getAccessor(a, o);
    const l = s.expressions, p = this.partBindings = Array(l.length), h = l.length;
    let b = 0;
    for (; h > b; ++b)
      p[b] = new il(l[b], a, o, t, r, this);
  }
  ft() {
    this.updateTarget();
  }
  updateTarget() {
    const e = this.partBindings, t = this.ast.parts, r = e.length;
    let i = "", s = 0;
    if (r === 1)
      i = t[0] + e[0].v + t[1];
    else
      for (i = t[0]; r > s; ++s)
        i += e[s].v + t[s + 1];
    const a = this.ut, o = this.ht.state !== 1 && (4 & a.type) > 0;
    let u;
    o ? (u = this.lt, this.lt = this.ct.queueTask(() => {
      this.lt = null, a.setValue(i, this.target, this.targetProperty);
    }, rx), u?.cancel(), u = null) : a.setValue(i, this.target, this.targetProperty);
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e;
    const t = this.partBindings, r = t.length;
    let i = 0;
    for (; r > i; ++i)
      t[i].bind(e);
    this.updateTarget(), this.isBound = !0;
  }
  unbind() {
    if (!this.isBound)
      return;
    this.isBound = !1, this.s = void 0;
    const e = this.partBindings, t = e.length;
    let r = 0;
    for (; t > r; ++r)
      e[r].unbind();
    this.lt?.cancel(), this.lt = null;
  }
}
class il {
  constructor(e, t, r, i, s, a) {
    this.ast = e, this.target = t, this.targetProperty = r, this.owner = a, this.mode = 2, this.task = null, this.isBound = !1, this.v = "", this.boundFn = !1, this.l = i, this.oL = s;
  }
  updateTarget() {
    this.owner.ft();
  }
  handleChange() {
    if (!this.isBound)
      return;
    this.obs.version++;
    const e = j(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    this.obs.clear(), e != this.v && (this.v = e, _r(e) && this.observeCollection(e), this.updateTarget());
  }
  handleCollectionChange() {
    this.handleChange();
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Er(this.ast, e, this), this.v = j(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null), _r(this.v) && this.observeCollection(this.v), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, sr(this.ast, this.s, this), this.s = void 0, this.obs.clearAll());
  }
}
Eo(il);
Aa(il, () => "updateTarget");
Pr(il);
ti(!0)(il);
class sl {
  constructor(e, t, r, i, s, a, o, u) {
    this.p = s, this.ast = a, this.target = o, this.strict = u, this.isBound = !1, this.mode = 2, this.lt = null, this.v = "", this.boundFn = !1, this.l = t, this.ht = e, this.oL = r, this.ct = i;
  }
  updateTarget(e) {
    const t = this.target, r = this.p.Node, i = this.v;
    this.v = e, i instanceof r && i.parentNode?.removeChild(i), e instanceof r ? (t.textContent = "", t.parentNode?.insertBefore(e, t)) : t.textContent = String(e);
  }
  handleChange() {
    if (!this.isBound)
      return;
    this.obs.version++;
    const e = j(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    if (this.obs.clear(), e === this.v) {
      this.lt?.cancel(), this.lt = null;
      return;
    }
    this.ht.state !== 1 ? this.dt(e) : this.updateTarget(e);
  }
  handleCollectionChange() {
    if (!this.isBound)
      return;
    this.obs.version++;
    const e = this.v = j(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    this.obs.clear(), _r(e) && this.observeCollection(e), this.ht.state !== 1 ? this.dt(e) : this.updateTarget(e);
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Er(this.ast, e, this);
    const t = this.v = j(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    _r(t) && this.observeCollection(t), this.updateTarget(t), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, sr(this.ast, this.s, this), this.s = void 0, this.obs.clearAll(), this.lt?.cancel(), this.lt = null);
  }
  dt(e) {
    const t = this.lt;
    this.lt = this.ct.queueTask(() => {
      this.lt = null, this.updateTarget(e);
    }, rx), t?.cancel();
  }
}
Eo(sl);
Aa(sl, () => "updateTarget");
Pr()(sl);
ti(void 0, !1)(sl);
class al {
  constructor(e, t, r, i, s = !1) {
    this.ast = r, this.targetProperty = i, this.isBound = !1, this.s = void 0, this.target = null, this.boundFn = !1, this.l = e, this.oL = t, this.gt = s;
  }
  updateTarget() {
    this.target[this.targetProperty] = this.v;
  }
  handleChange() {
    !this.isBound || (this.obs.version++, this.v = j(this.ast, this.s, this, this), this.obs.clear(), this.updateTarget());
  }
  handleCollectionChange() {
    this.handleChange();
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, this.target = this.gt ? e.bindingContext : e.overrideContext, Er(this.ast, e, this), this.v = j(this.ast, this.s, this, this), this.updateTarget(), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, sr(this.ast, this.s, this), this.s = void 0, this.obs.clearAll());
  }
}
Eo(al);
Aa(al, () => "updateTarget");
Pr(al);
ti(!0)(al);
class Oi {
  constructor(e, t, r, i, s, a, o, u) {
    this.ast = s, this.target = a, this.targetProperty = o, this.mode = u, this.isBound = !1, this.s = void 0, this.ut = void 0, this.lt = null, this.vt = null, this.boundFn = !1, this.l = t, this.ht = e, this.ct = i, this.oL = r;
  }
  updateTarget(e) {
    this.ut.setValue(e, this.target, this.targetProperty);
  }
  updateSource(e) {
    tn(this.ast, this.s, this, e);
  }
  handleChange() {
    if (!this.isBound)
      return;
    this.obs.version++;
    const e = j(this.ast, this.s, this, (2 & this.mode) > 0 ? this : null);
    this.obs.clear(), this.ht.state !== 1 && (4 & this.ut.type) > 0 ? (Tp = this.lt, this.lt = this.ct.queueTask(() => {
      this.updateTarget(e), this.lt = null;
    }, kC), Tp?.cancel(), Tp = null) : this.updateTarget(e);
  }
  handleCollectionChange() {
    this.handleChange();
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Er(this.ast, e, this);
    const t = this.oL, r = this.mode;
    let i = this.ut;
    i || (4 & r ? i = t.getObserver(this.target, this.targetProperty) : i = t.getAccessor(this.target, this.targetProperty), this.ut = i);
    const s = (2 & r) > 0;
    r & 3 && this.updateTarget(j(this.ast, this.s, this, s ? this : null)), 4 & r && (i.subscribe(this.vt ?? (this.vt = new SC(this, this.l.get(EC)))), s || this.updateSource(i.getValue(this.target, this.targetProperty))), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, sr(this.ast, this.s, this), this.s = void 0, this.vt && (this.ut.unsubscribe(this.vt), this.vt = null), this.lt?.cancel(), this.lt = null, this.obs.clearAll());
  }
  useTargetObserver(e) {
    this.ut?.unsubscribe(this), (this.ut = e).subscribe(this);
  }
  useTargetSubscriber(e) {
    if (this.vt != null)
      throw re("AURxxxx: binding already has a target subscriber");
    this.vt = e;
  }
}
Eo(Oi);
Aa(Oi, (n) => 4 & n.mode ? "updateSource" : "updateTarget");
Pr(Oi);
ti(!0, !1)(Oi);
let Tp = null;
const kC = {
  reusable: !1,
  preempt: !0
};
class ix {
  constructor(e, t, r) {
    this.ast = t, this.target = r, this.isBound = !1, this.s = void 0, this.l = e;
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Er(this.ast, e, this), tn(this.ast, this.s, this, this.target), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, j(this.ast, this.s, this, null) === this.target && tn(this.ast, this.s, this, null), sr(this.ast, this.s, this), this.s = void 0);
  }
}
ti(!1)(ix);
class DC {
  constructor(e, t = !1) {
    this.prevent = e, this.capture = t;
  }
}
class ol {
  constructor(e, t, r, i, s) {
    this.ast = t, this.target = r, this.targetEvent = i, this.isBound = !1, this.self = !1, this.boundFn = !0, this.l = e, this.xt = s;
  }
  callSource(e) {
    const t = this.s.overrideContext;
    t.$event = e;
    let r = j(this.ast, this.s, this, null);
    return delete t.$event, On(r) && (r = r(e)), r !== !0 && this.xt.prevent && e.preventDefault(), r;
  }
  handleEvent(e) {
    this.self && this.target !== e.composedPath()[0] || this.callSource(e);
  }
  bind(e) {
    if (this.isBound) {
      if (this.s === e)
        return;
      this.unbind();
    }
    this.s = e, Er(this.ast, e, this), this.target.addEventListener(this.targetEvent, this, this.xt), this.isBound = !0;
  }
  unbind() {
    !this.isBound || (this.isBound = !1, sr(this.ast, this.s, this), this.s = void 0, this.target.removeEventListener(this.targetEvent, this, this.xt));
  }
}
Eo(ol);
Aa(ol, () => "callSource");
ti(!0, !0)(ol);
const BC = Me("IAppTask");
class Cm {
  constructor(e, t, r) {
    this.c = void 0, this.slot = e, this.k = t, this.cb = r;
  }
  register(e) {
    return this.c = e.register(uC(BC, this));
  }
  run() {
    const e = this.k, t = this.cb;
    return e === null ? t() : t(this.c.get(e));
  }
}
qn({
  creating: Vs("creating"),
  hydrating: Vs("hydrating"),
  hydrated: Vs("hydrated"),
  activating: Vs("activating"),
  activated: Vs("activated"),
  deactivating: Vs("deactivating"),
  deactivated: Vs("deactivated")
});
function Vs(n) {
  function e(t, r) {
    return On(r) ? new Cm(n, t, r) : new Cm(n, null, t);
  }
  return e;
}
const FC = Ie, Ml = hn("watch"), Af = qn({
  name: Ml,
  add(n, e) {
    let t = fn(Ml, n);
    t == null && wt(Ml, t = [], n), t.push(e);
  },
  getAnnotation(n) {
    return fn(Ml, n) ?? FC;
  }
});
function sx(n) {
  return function(e) {
    return Kh(n, e);
  };
}
function dr(n) {
  return function(e) {
    return Kh(yt(n) ? {
      isTemplateController: !0,
      name: n
    } : {
      isTemplateController: !0,
      ...n
    }, e);
  };
}
class Wh {
  constructor(e, t, r, i, s, a, o, u, l, p) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i, this.defaultBindingMode = s, this.isTemplateController = a, this.bindables = o, this.noMultiBindings = u, this.watches = l, this.dependencies = p;
  }
  get type() {
    return 2;
  }
  static create(e, t) {
    let r, i;
    return yt(e) ? (r = e, i = {
      name: r
    }) : (r = e.name, i = e), new Wh(t, rn(Ki(t, "name"), r), Ot(Ki(t, "aliases"), i.aliases, t.aliases), Hh(r), rn(Ki(t, "defaultBindingMode"), i.defaultBindingMode, t.defaultBindingMode, 2), rn(Ki(t, "isTemplateController"), i.isTemplateController, t.isTemplateController, !1), di.from(t, ...di.getAll(t), Ki(t, "bindables"), t.bindables, i.bindables), rn(Ki(t, "noMultiBindings"), i.noMultiBindings, t.noMultiBindings, !1), Ot(Af.getAnnotation(t), t.watches), Ot(Ki(t, "dependencies"), i.dependencies, t.dependencies));
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    X1(r, t).register(e), el(r, t).register(e), tl(i, qh, r, e);
  }
}
const Ys = wa("custom-attribute"), Hh = (n) => `${Ys}:${n}`, Ki = (n, e) => fn(hn(e), n), NC = (n) => On(n) && Xu(Ys, n), ax = (n, e) => Jo(n, Hh(e)) ?? void 0, Kh = (n, e) => {
  const t = Wh.create(n, e);
  return wt(Ys, t, t.Type), wt(Ys, t, t), gs(e, Ys), t.Type;
}, Cf = (n) => {
  const e = fn(Ys, n);
  if (e === void 0)
    throw re(`AUR0759:${n.name}`);
  return e;
}, qh = qn({
  name: Ys,
  keyFrom: Hh,
  isType: NC,
  for: ax,
  define: Kh,
  getDefinition: Cf,
  annotate(n, e, t) {
    wt(hn(e), t, n);
  },
  getAnnotation: Ki
});
function $C(n) {
  return n.startsWith(Qo);
}
const Qo = hn("children-observer"), Vo = qn({
  name: Qo,
  keyFrom: (n) => `${Qo}:${n}`,
  from(...n) {
    const e = {};
    function t(s) {
      e[s] = ou.create(s);
    }
    function r(s, a) {
      e[s] = ou.create(s, a);
    }
    function i(s) {
      _r(s) ? s.forEach(t) : s instanceof ou ? e[s.property] = s : s !== void 0 && Uh(s).forEach((a) => r(a, s));
    }
    return n.forEach(i), e;
  },
  getAll(n) {
    const e = Qo.length + 1, t = [], r = n1(n);
    let i = r.length, s = 0, a, o, u;
    for (; --i >= 0; ) {
      u = r[i], a = J1(u).filter($C), o = a.length;
      for (let l = 0; l < o; ++l)
        t[s++] = fn(Qo, u, a[l].slice(e));
    }
    return t;
  }
}), LC = {
  childList: !0
};
class ou {
  constructor(e, t, r, i, s, a) {
    this.callback = e, this.property = t, this.options = r, this.query = i, this.filter = s, this.map = a;
  }
  static create(e, t = {}) {
    return new ou(rn(t.callback, `${e}Changed`), rn(t.property, e), t.options ?? LC, t.query, t.filter, t.map);
  }
}
class ox {
  constructor(e, t, r, i, s = UC, a = VC, o = jC, u) {
    this.controller = e, this.obj = t, this.propertyKey = r, this.query = s, this.filter = a, this.map = o, this.options = u, this.observing = !1, this.children = void 0, this.observer = void 0, this.callback = t[i], Reflect.defineProperty(this.obj, this.propertyKey, {
      enumerable: !0,
      configurable: !0,
      get: () => this.getValue(),
      set: () => {
      }
    });
  }
  getValue() {
    return this.observing ? this.children : this.get();
  }
  setValue(e) {
  }
  start() {
    this.observing || (this.observing = !0, this.children = this.get(), (this.observer ?? (this.observer = new this.controller.host.ownerDocument.defaultView.MutationObserver(() => {
      this.wt();
    }))).observe(this.controller.host, this.options));
  }
  stop() {
    this.observing && (this.observing = !1, this.observer.disconnect(), this.children = Ie);
  }
  wt() {
    this.children = this.get(), this.callback !== void 0 && this.callback.call(this.obj), this.subs.notify(this.children, void 0);
  }
  get() {
    return GC(this.controller, this.query, this.filter, this.map);
  }
}
Tn()(ox);
function UC(n) {
  return n.host.childNodes;
}
function VC(n, e, t) {
  return !!t;
}
function jC(n, e, t) {
  return t;
}
const zC = {
  optional: !0
};
function GC(n, e, t, r) {
  const i = e(n), s = i.length, a = [];
  let o, u, l, p = 0;
  for (; p < s; ++p)
    o = i[p], u = as(o, zC), l = u?.viewModel ?? null, t(o, u, l) && a.push(r(o, u, l));
  return a;
}
const An = Qu, Sm = (n, e, t, r) => {
  n.addEventListener(e, t, r);
}, Em = (n, e, t, r) => {
  n.removeEventListener(e, t, r);
}, Qh = (n) => {
  const e = n.prototype;
  Cr(e, "subscribe", function(t) {
    if (this.subs.add(t) && this.subs.count === 1) {
      for (zi of this.cf.events)
        Sm(this.bt, zi, this);
      this.yt = !0, this.kt?.();
    }
  }), Cr(e, "unsubscribe", function(t) {
    if (this.subs.remove(t) && this.subs.count === 0) {
      for (zi of this.cf.events)
        Em(this.bt, zi, this);
      this.yt = !1, this.At?.();
    }
  }), Cr(e, "useConfig", function(t) {
    if (this.cf = t, this.yt) {
      for (zi of this.cf.events)
        Em(this.bt, zi, this);
      for (zi of this.cf.events)
        Sm(this.bt, zi, this);
    }
  });
};
let zi;
const vd = (n) => {
  Cr(n.prototype, "subscribe", bi), Cr(n.prototype, "unsubscribe", bi);
};
class ux {
  constructor(e) {
    this.obj = e, this.type = 6, this.value = "", this.ov = "", this.Ct = {}, this.Bt = 0, this.J = !1;
  }
  get doNotCache() {
    return !0;
  }
  getValue() {
    return this.value;
  }
  setValue(e) {
    this.value = e, this.J = e !== this.ov, this.it();
  }
  it() {
    if (this.J) {
      this.J = !1;
      const e = this.value, t = this.Ct, r = lx(e);
      let i = this.Bt;
      if (this.ov = e, r.length > 0 && this.Rt(r), this.Bt += 1, i === 0)
        return;
      i -= 1;
      for (const s in t)
        !ss.call(t, s) || t[s] !== i || this.obj.classList.remove(s);
    }
  }
  Rt(e) {
    const t = this.obj, r = e.length;
    let i = 0, s;
    for (; i < r; i++)
      s = e[i], s.length !== 0 && (this.Ct[s] = this.Bt, t.classList.add(s));
  }
}
function lx(n) {
  if (yt(n))
    return Mm(n);
  if (typeof n != "object")
    return Ie;
  if (n instanceof Array) {
    const r = n.length;
    if (r > 0) {
      const i = [];
      let s = 0;
      for (; r > s; ++s)
        i.push(...lx(n[s]));
      return i;
    } else
      return Ie;
  }
  const e = [];
  let t;
  for (t in n)
    Boolean(n[t]) && (t.includes(" ") ? e.push(...Mm(t)) : e.push(t));
  return e;
}
function Mm(n) {
  const e = n.match(/\S+/g);
  return e === null ? Ie : e;
}
vd(ux);
Me("IShadowDOMStyleFactory", (n) => n.cachedCallback((e) => px.supported(e.get(An)) ? e.get(cx) : e.get(dx)));
class cx {
  constructor(e) {
    this.p = e, this.cache = /* @__PURE__ */ new Map();
  }
  createStyles(e, t) {
    return new px(this.p, e, this.cache, t);
  }
}
cx.inject = [An];
class dx {
  constructor(e) {
    this.p = e;
  }
  createStyles(e, t) {
    return new HC(this.p, e, t);
  }
}
dx.inject = [An];
const _m = Me("IShadowDOMStyles"), WC = Me("IShadowDOMGlobalStyles", (n) => n.instance({
  applyTo: bi
}));
class px {
  constructor(e, t, r, i = null) {
    this.sharedStyles = i, this.styleSheets = t.map((s) => {
      let a;
      return s instanceof e.CSSStyleSheet ? a = s : (a = r.get(s), a === void 0 && (a = new e.CSSStyleSheet(), a.replaceSync(s), r.set(s, a))), a;
    });
  }
  static supported(e) {
    return "adoptedStyleSheets" in e.ShadowRoot.prototype;
  }
  applyTo(e) {
    this.sharedStyles !== null && this.sharedStyles.applyTo(e), e.adoptedStyleSheets = [...e.adoptedStyleSheets, ...this.styleSheets];
  }
}
class HC {
  constructor(e, t, r = null) {
    this.p = e, this.localStyles = t, this.sharedStyles = r;
  }
  applyTo(e) {
    const t = this.localStyles, r = this.p;
    for (let i = t.length - 1; i > -1; --i) {
      const s = r.document.createElement("style");
      s.innerHTML = t[i], e.prepend(s);
    }
    this.sharedStyles !== null && this.sharedStyles.applyTo(e);
  }
}
const { enter: KC, exit: qC } = pA, { wrap: QC, unwrap: JC } = KA;
class fx {
  constructor(e, t, r, i, s) {
    this.obj = e, this.$get = r, this.useProxy = s, this.isBound = !1, this.running = !1, this.v = void 0, this.cb = i, this.oL = t;
  }
  get value() {
    return this.v;
  }
  handleChange() {
    this.run();
  }
  handleCollectionChange() {
    this.run();
  }
  bind() {
    this.isBound || (this.compute(), this.isBound = !0);
  }
  unbind() {
    !this.isBound || (this.isBound = !1, this.obs.clearAll());
  }
  run() {
    if (!this.isBound || this.running)
      return;
    const e = this.obj, t = this.v, r = this.compute();
    Zu(r, t) || this.cb.call(e, r, t, e);
  }
  compute() {
    this.running = !0, this.obs.version++;
    try {
      return KC(this), this.v = JC(this.$get.call(void 0, this.useProxy ? QC(this.obj) : this.obj, this));
    } finally {
      this.obs.clear(), this.running = !1, qC(this);
    }
  }
}
class Jh {
  constructor(e, t, r, i, s) {
    this.scope = e, this.l = t, this.oL = r, this.isBound = !1, this.boundFn = !1, this.obj = e.bindingContext, this.St = i, this.cb = s;
  }
  get value() {
    return this.v;
  }
  handleChange(e) {
    const t = this.St, r = this.obj, i = this.v;
    t.$kind === 1 && this.obs.count === 1 || (this.obs.version++, e = j(t, this.scope, this, this), this.obs.clear()), Zu(e, i) || (this.v = e, this.cb.call(r, e, i, r));
  }
  bind() {
    this.isBound || (this.obs.version++, this.v = j(this.St, this.scope, this, this), this.obs.clear(), this.isBound = !0);
  }
  unbind() {
    !this.isBound || (this.isBound = !1, this.obs.clearAll(), this.v = void 0);
  }
}
Pr(fx);
Pr(Jh);
ti(!0)(Jh);
const Ua = Me("ILifecycleHooks");
class YC {
  constructor(e, t) {
    this.definition = e, this.instance = t;
  }
}
class Yh {
  constructor(e, t) {
    this.Type = e, this.propertyNames = t;
  }
  static create(e, t) {
    const r = /* @__PURE__ */ new Set();
    let i = t.prototype;
    for (; i !== Nh; ) {
      for (const s of Lh(i))
        s !== "constructor" && r.add(s);
      i = Object.getPrototypeOf(i);
    }
    return new Yh(t, r);
  }
  register(e) {
    Ta(Ua, this.Type).register(e);
  }
}
const Rm = /* @__PURE__ */ new WeakMap(), _l = hn("lifecycle-hooks"), Pm = qn({
  name: _l,
  define(n, e) {
    const t = Yh.create(n, e);
    return wt(_l, t, e), gs(e, _l), t.Type;
  },
  resolve(n) {
    let e = Rm.get(n);
    if (e === void 0) {
      Rm.set(n, e = new XC());
      const t = n.root, r = t.id === n.id ? n.getAll(Ua) : n.has(Ua, !1) ? t.getAll(Ua).concat(n.getAll(Ua)) : t.getAll(Ua);
      let i, s, a, o, u;
      for (i of r) {
        s = fn(_l, i.constructor), a = new YC(s, i);
        for (o of s.propertyNames)
          u = e[o], u === void 0 ? e[o] = [a] : u.push(a);
      }
    }
    return e;
  }
});
class XC {
}
const Qn = Me("IViewFactory");
class wd {
  constructor(e, t) {
    this.isCaching = !1, this.Y = null, this.It = -1, this.name = t.name, this.container = e, this.def = t;
  }
  setCacheSize(e, t) {
    e && (e === "*" ? e = wd.maxCacheSize : yt(e) && (e = parseInt(e, 10)), (this.It === -1 || !t) && (this.It = e)), this.It > 0 ? this.Y = [] : this.Y = null, this.isCaching = this.It > 0;
  }
  canReturnToCache(e) {
    return this.Y != null && this.Y.length < this.It;
  }
  tryReturnToCache(e) {
    return this.canReturnToCache(e) ? (this.Y.push(e), !0) : !1;
  }
  create(e) {
    const t = this.Y;
    let r;
    return t != null && t.length > 0 ? (r = t.pop(), r) : (r = ir.$view(this, e), r);
  }
}
wd.maxCacheSize = 65535;
const Ca = Me("IRendering", (n) => n.singleton(hx));
class hx {
  constructor(e) {
    this.Tt = /* @__PURE__ */ new WeakMap(), this.Pt = /* @__PURE__ */ new WeakMap();
    const t = e.root;
    this.p = (this.Et = t).get(An), this.ep = t.get(Ch), this.oL = t.get(va), this.Lt = new Sp(this.p, this.p.document.createDocumentFragment());
  }
  get renderers() {
    return this.Dt ?? (this.Dt = this.Et.getAll(Cx, !1).reduce((e, t) => (e[t.target] = t, e), nn()));
  }
  compile(e, t, r) {
    if (e.needsCompile !== !1) {
      const i = this.Tt, s = t.get(Ax);
      let a = i.get(e);
      return a == null ? i.set(e, a = s.compile(e, t, r)) : t.register(...a.dependencies), a;
    }
    return e;
  }
  getViewFactory(e, t) {
    return new wd(t, $r.getOrCreate(e));
  }
  createNodes(e) {
    if (e.enhance === !0)
      return new Sp(this.p, e.template);
    let t;
    const r = this.Pt;
    if (r.has(e))
      t = r.get(e);
    else {
      const i = this.p, s = i.document, a = e.template;
      let o;
      a === null ? t = null : a instanceof i.Node ? a.nodeName === "TEMPLATE" ? t = s.adoptNode(a.content) : (t = s.adoptNode(s.createDocumentFragment())).appendChild(a.cloneNode(!0)) : (o = s.createElement("template"), yt(a) && (o.innerHTML = a), s.adoptNode(t = o.content)), r.set(e, t);
    }
    return t == null ? this.Lt : new Sp(this.p, t.cloneNode(!0));
  }
  render(e, t, r, i) {
    const s = r.instructions, a = this.renderers, o = t.length;
    if (t.length !== s.length)
      throw re(`AUR0757:${o}<>${s.length}`);
    let u = 0, l = 0, p = 0, h, b, C;
    if (o > 0)
      for (; o > u; ) {
        for (h = s[u], C = t[u], l = 0, p = h.length; p > l; )
          b = h[l], a[b.type].render(e, C, b, this.p, this.ep, this.oL), ++l;
        ++u;
      }
    if (i != null && (h = r.surrogates, (p = h.length) > 0))
      for (l = 0; p > l; )
        b = h[l], a[b.type].render(e, i, b, this.p, this.ep, this.oL), ++l;
  }
}
hx.inject = [xo];
var Om;
(function(n) {
  n[n.none = 0] = "none", n[n.fromBind = 1] = "fromBind", n[n.fromUnbind = 2] = "fromUnbind", n[n.dispose = 4] = "dispose";
})(Om || (Om = {}));
var Im;
(function(n) {
  n[n.none = 0] = "none", n[n.host = 1] = "host", n[n.shadowRoot = 2] = "shadowRoot", n[n.location = 3] = "location";
})(Im || (Im = {}));
const ZC = {
  optional: !0
}, Gi = /* @__PURE__ */ new WeakMap();
class ir {
  constructor(e, t, r, i, s, a, o) {
    this.container = e, this.vmKind = t, this.definition = r, this.viewFactory = i, this.host = a, this.head = null, this.tail = null, this.next = null, this.parent = null, this.bindings = null, this.children = null, this.hasLockedScope = !1, this.isStrictBinding = !1, this.scope = null, this.isBound = !1, this.hostController = null, this.mountTarget = 0, this.shadowRoot = null, this.nodes = null, this.location = null, this.Ut = null, this.state = 0, this.$t = !1, this._t = Ie, this.flags = 0, this.$initiator = null, this.$flags = 0, this.$resolve = void 0, this.$reject = void 0, this.$promise = void 0, this.qt = 0, this.Mt = 0, this.Ft = 0, this.Ot = s, this.Vt = t === 2 ? Ha.none : new Ha(s), this.location = o, this.r = e.root.get(Ca);
  }
  get lifecycleHooks() {
    return this.Ut;
  }
  get isActive() {
    return (this.state & 3) > 0 && (4 & this.state) === 0;
  }
  get name() {
    if (this.parent === null)
      switch (this.vmKind) {
        case 1:
          return `[${this.definition.name}]`;
        case 0:
          return this.definition.name;
        case 2:
          return this.viewFactory.name;
      }
    switch (this.vmKind) {
      case 1:
        return `${this.parent.name}>[${this.definition.name}]`;
      case 0:
        return `${this.parent.name}>${this.definition.name}`;
      case 2:
        return this.viewFactory.name === this.parent.definition?.name ? `${this.parent.name}[view]` : `${this.parent.name}[view:${this.viewFactory.name}]`;
    }
  }
  get hooks() {
    return this.Vt;
  }
  get viewModel() {
    return this.Ot;
  }
  set viewModel(e) {
    this.Ot = e, this.Vt = e == null || this.vmKind === 2 ? Ha.none : new Ha(e);
  }
  static getCached(e) {
    return Gi.get(e);
  }
  static getCachedOrThrow(e) {
    const t = ir.getCached(e);
    if (t === void 0)
      throw re(`AUR0500:${e}`);
    return t;
  }
  static $el(e, t, r, i, s = void 0, a = null) {
    if (Gi.has(t))
      return Gi.get(t);
    s = s ?? Mf(t.constructor);
    const o = new ir(e, 0, s, null, t, r, a), u = e.get(l1(Sc));
    return s.dependencies.length > 0 && e.register(...s.dependencies), xt(e, Sc, new on("IHydrationContext", new r4(o, i, u))), Gi.set(t, o), (i == null || i.hydrate !== !1) && o.hE(i, u), o;
  }
  static $attr(e, t, r, i) {
    if (Gi.has(t))
      return Gi.get(t);
    i = i ?? Cf(t.constructor);
    const s = new ir(e, 1, i, null, t, r, null);
    return i.dependencies.length > 0 && e.register(...i.dependencies), Gi.set(t, s), s.Nt(), s;
  }
  static $view(e, t = void 0) {
    const r = new ir(e.container, 2, null, e, null, null, null);
    return r.parent = t ?? null, r.jt(), r;
  }
  hE(e, t) {
    const r = this.container, i = this.flags, s = this.Ot;
    let a = this.definition;
    if (this.scope = Jt.create(s, null, !0), a.watches.length > 0 && Bm(this, r, a, s), km(this, a, i, s), this._t = e4(this, a, s), this.Vt.hasDefine) {
      const o = s.define(this, t, a);
      o !== void 0 && o !== a && (a = $r.getOrCreate(o));
    }
    this.Ut = Pm.resolve(r), a.register(r), a.injectable !== null && xt(r, a.injectable, new on("definition.injectable", s)), (e == null || e.hydrate !== !1) && (this.hS(e), this.hC());
  }
  hS(e) {
    this.Ut.hydrating !== void 0 && this.Ut.hydrating.forEach(s4, this), this.Vt.hasHydrating && this.Ot.hydrating(this);
    const t = this.Ht = this.r.compile(this.definition, this.container, e), { shadowOptions: r, isStrictBinding: i, hasSlots: s, containerless: a } = t;
    let o = this.location;
    if (this.isStrictBinding = i, (this.hostController = as(this.host, ZC)) !== null && (this.host = this.container.root.get(An).document.createElement(this.definition.name), a && o == null && (o = this.location = Xh(this.host))), mn(this.host, zt, this), mn(this.host, this.definition.key, this), r !== null || s) {
      if (o != null)
        throw re("AUR0501");
      mn(this.shadowRoot = this.host.attachShadow(r ?? n4), zt, this), mn(this.shadowRoot, this.definition.key, this), this.mountTarget = 2;
    } else
      o != null ? (mn(o, zt, this), mn(o, this.definition.key, this), this.mountTarget = 3) : this.mountTarget = 1;
    this.Ot.$controller = this, this.nodes = this.r.createNodes(t), this.Ut.hydrated !== void 0 && this.Ut.hydrated.forEach(a4, this), this.Vt.hasHydrated && this.Ot.hydrated(this);
  }
  hC() {
    this.r.render(this, this.nodes.findTargets(), this.Ht, this.host), this.Ut.created !== void 0 && this.Ut.created.forEach(Lm, this), this.Vt.hasCreated && this.Ot.created(this);
  }
  Nt() {
    const e = this.definition, t = this.Ot;
    e.watches.length > 0 && Bm(this, this.container, e, t), km(this, e, this.flags, t), t.$controller = this, this.Ut = Pm.resolve(this.container), this.Ut.created !== void 0 && this.Ut.created.forEach(Lm, this), this.Vt.hasCreated && this.Ot.created(this);
  }
  jt() {
    this.Ht = this.r.compile(this.viewFactory.def, this.container, null), this.isStrictBinding = this.Ht.isStrictBinding, this.r.render(this, (this.nodes = this.r.createNodes(this.Ht)).findTargets(), this.Ht, void 0);
  }
  activate(e, t, r, i) {
    switch (this.state) {
      case 0:
      case 8:
        if (!(t === null || t.isActive))
          return;
        this.state = 1;
        break;
      case 2:
        return;
      case 32:
        throw re(`AUR0502:${this.name}`);
      default:
        throw re(`AUR0503:${this.name} ${$m(this.state)}`);
    }
    switch (this.parent = t, r |= 1, this.vmKind) {
      case 0:
        this.scope.parent = i ?? null;
        break;
      case 1:
        this.scope = i ?? null;
        break;
      case 2:
        if (i == null)
          throw re("AUR0504");
        this.hasLockedScope || (this.scope = i);
        break;
    }
    this.isStrictBinding, this.$initiator = e, this.$flags = r, this.Wt();
    let s;
    return this.vmKind !== 2 && this.Ut.binding != null && (s = Ut(...this.Ut.binding.map(o4, this))), this.Vt.hasBinding && (s = Ut(s, this.Ot.binding(this.$initiator, this.parent, this.$flags))), qt(s) ? (this.zt(), s.then(() => {
      this.bind();
    }).catch((a) => {
      this.Gt(a);
    }), this.$promise) : (this.bind(), this.$promise);
  }
  bind() {
    let e = 0, t = this._t.length, r;
    if (t > 0)
      for (; t > e; )
        this._t[e].start(), ++e;
    if (this.bindings !== null)
      for (e = 0, t = this.bindings.length; t > e; )
        this.bindings[e].bind(this.scope), ++e;
    if (this.vmKind !== 2 && this.Ut.bound != null && (r = Ut(...this.Ut.bound.map(u4, this))), this.Vt.hasBound && (r = Ut(r, this.Ot.bound(this.$initiator, this.parent, this.$flags))), qt(r)) {
      this.zt(), r.then(() => {
        this.isBound = !0, this.Xt();
      }).catch((i) => {
        this.Gt(i);
      });
      return;
    }
    this.isBound = !0, this.Xt();
  }
  Kt(...e) {
    switch (this.mountTarget) {
      case 1:
        this.host.append(...e);
        break;
      case 2:
        this.shadowRoot.append(...e);
        break;
      case 3: {
        let t = 0;
        for (; t < e.length; ++t)
          this.location.parentNode.insertBefore(e[t], this.location);
        break;
      }
    }
  }
  Xt() {
    if (this.hostController !== null)
      switch (this.mountTarget) {
        case 1:
        case 2:
          this.hostController.Kt(this.host);
          break;
        case 3:
          this.hostController.Kt(this.location.$start, this.location);
          break;
      }
    switch (this.mountTarget) {
      case 1:
        this.nodes.appendTo(this.host, this.definition != null && this.definition.enhance);
        break;
      case 2: {
        const r = this.container;
        (r.has(_m, !1) ? r.get(_m) : r.get(WC)).applyTo(this.shadowRoot), this.nodes.appendTo(this.shadowRoot);
        break;
      }
      case 3:
        this.nodes.insertBefore(this.location);
        break;
    }
    let e = 0, t;
    if (this.vmKind !== 2 && this.Ut.attaching != null && (t = Ut(...this.Ut.attaching.map(l4, this))), this.Vt.hasAttaching && (t = Ut(t, this.Ot.attaching(this.$initiator, this.parent, this.$flags))), qt(t) && (this.zt(), this.Wt(), t.then(() => {
      this.Qt();
    }).catch((r) => {
      this.Gt(r);
    })), this.children !== null)
      for (; e < this.children.length; ++e)
        this.children[e].activate(this.$initiator, this, this.$flags, this.scope);
    this.Qt();
  }
  deactivate(e, t, r) {
    switch (-17 & this.state) {
      case 2:
        this.state = 4;
        break;
      case 0:
      case 8:
      case 32:
      case 40:
        return;
      default:
        throw re(`AUR0505:${this.name} ${$m(this.state)}`);
    }
    this.$initiator = e, this.$flags = r, e === this && this.Yt();
    let i = 0, s;
    if (this._t.length)
      for (; i < this._t.length; ++i)
        this._t[i].stop();
    if (this.children !== null)
      for (i = 0; i < this.children.length; ++i)
        this.children[i].deactivate(e, this, r);
    if (this.vmKind !== 2 && this.Ut.detaching != null && (s = Ut(...this.Ut.detaching.map(d4, this))), this.Vt.hasDetaching && (s = Ut(s, this.Ot.detaching(this.$initiator, this.parent, this.$flags))), qt(s) && (this.zt(), e.Yt(), s.then(() => {
      e.Zt();
    }).catch((a) => {
      e.Gt(a);
    })), e.head === null ? e.head = this : e.tail.next = this, e.tail = this, e === this)
      return this.Zt(), this.$promise;
  }
  removeNodes() {
    switch (this.vmKind) {
      case 0:
      case 2:
        this.nodes.remove(), this.nodes.unlink();
    }
    if (this.hostController !== null)
      switch (this.mountTarget) {
        case 1:
        case 2:
          this.host.remove();
          break;
        case 3:
          this.location.$start.remove(), this.location.remove();
          break;
      }
  }
  unbind() {
    const e = 2 | this.$flags;
    let t = 0;
    if (this.bindings !== null)
      for (; t < this.bindings.length; ++t)
        this.bindings[t].unbind();
    switch (this.parent = null, this.vmKind) {
      case 1:
        this.scope = null;
        break;
      case 2:
        this.hasLockedScope || (this.scope = null), (16 & this.state) === 16 && !this.viewFactory.tryReturnToCache(this) && this.$initiator === this && this.dispose();
        break;
      case 0:
        this.scope.parent = null;
        break;
    }
    (4 & e) === 4 && this.$initiator === this && this.dispose(), this.state = 32 & this.state | 8, this.$initiator = null, this.Jt();
  }
  zt() {
    this.$promise === void 0 && (this.$promise = new Promise((e, t) => {
      this.$resolve = e, this.$reject = t;
    }), this.$initiator !== this && this.parent.zt());
  }
  Jt() {
    this.$promise !== void 0 && (Ap = this.$resolve, this.$resolve = this.$reject = this.$promise = void 0, Ap(), Ap = void 0);
  }
  Gt(e) {
    this.$promise !== void 0 && (Cp = this.$reject, this.$resolve = this.$reject = this.$promise = void 0, Cp(e), Cp = void 0), this.$initiator !== this && this.parent.Gt(e);
  }
  Wt() {
    ++this.qt, this.$initiator !== this && this.parent.Wt();
  }
  Qt() {
    if (--this.qt === 0) {
      if (this.vmKind !== 2 && this.Ut.attached != null && (js = Ut(...this.Ut.attached.map(c4, this))), this.Vt.hasAttached && (js = Ut(js, this.Ot.attached(this.$initiator, this.$flags))), qt(js)) {
        this.zt(), js.then(() => {
          this.state = 2, this.Jt(), this.$initiator !== this && this.parent.Qt();
        }).catch((e) => {
          this.Gt(e);
        }), js = void 0;
        return;
      }
      js = void 0, this.state = 2, this.Jt();
    }
    this.$initiator !== this && this.parent.Qt();
  }
  Yt() {
    ++this.Mt;
  }
  Zt() {
    if (--this.Mt === 0) {
      this.te(), this.removeNodes();
      let e = this.$initiator.head, t;
      for (; e !== null; )
        e !== this && (e.debug && e.logger.trace("detach()"), e.removeNodes()), e.vmKind !== 2 && e.Ut.unbinding != null && (t = Ut(...e.Ut.unbinding.map(p4, this))), e.Vt.hasUnbinding && (e.debug && e.logger.trace("unbinding()"), t = Ut(t, e.viewModel.unbinding(e.$initiator, e.parent, e.$flags))), qt(t) && (this.zt(), this.te(), t.then(() => {
          this.ee();
        }).catch((r) => {
          this.Gt(r);
        })), t = void 0, e = e.next;
      this.ee();
    }
  }
  te() {
    ++this.Ft;
  }
  ee() {
    if (--this.Ft === 0) {
      let e = this.$initiator.head, t = null;
      for (; e !== null; )
        e !== this && (e.isBound = !1, e.unbind()), t = e.next, e.next = null, e = t;
      this.head = this.tail = null, this.isBound = !1, this.unbind();
    }
  }
  addBinding(e) {
    this.bindings === null ? this.bindings = [e] : this.bindings[this.bindings.length] = e;
  }
  addChild(e) {
    this.children === null ? this.children = [e] : this.children[this.children.length] = e;
  }
  is(e) {
    switch (this.vmKind) {
      case 1:
        return Cf(this.Ot.constructor).name === e;
      case 0:
        return Mf(this.Ot.constructor).name === e;
      case 2:
        return this.viewFactory.name === e;
    }
  }
  lockScope(e) {
    this.scope = e, this.hasLockedScope = !0;
  }
  setHost(e) {
    return this.vmKind === 0 && (mn(e, zt, this), mn(e, this.definition.key, this)), this.host = e, this.mountTarget = 1, this;
  }
  setShadowRoot(e) {
    return this.vmKind === 0 && (mn(e, zt, this), mn(e, this.definition.key, this)), this.shadowRoot = e, this.mountTarget = 2, this;
  }
  setLocation(e) {
    return this.vmKind === 0 && (mn(e, zt, this), mn(e, this.definition.key, this)), this.location = e, this.mountTarget = 3, this;
  }
  release() {
    this.state |= 16;
  }
  dispose() {
    (32 & this.state) !== 32 && (this.state |= 32, this.Vt.hasDispose && this.Ot.dispose(), this.children !== null && (this.children.forEach(i4), this.children = null), this.hostController = null, this.scope = null, this.nodes = null, this.location = null, this.viewFactory = null, this.Ot !== null && (Gi.delete(this.Ot), this.Ot = null), this.Ot = null, this.host = null, this.shadowRoot = null, this.container.disposeResolvers());
  }
  accept(e) {
    if (e(this) === !0 || this.Vt.hasAccept && this.Ot.accept(e) === !0)
      return !0;
    if (this.children !== null) {
      const { children: t } = this;
      for (let r = 0, i = t.length; r < i; ++r)
        if (t[r].accept(e) === !0)
          return !0;
    }
  }
}
function yx(n) {
  let e = n.$observers;
  return e === void 0 && Reflect.defineProperty(n, "$observers", {
    enumerable: !1,
    value: e = {}
  }), e;
}
function km(n, e, t, r) {
  const i = e.bindables, s = Lh(i), a = s.length;
  if (a > 0) {
    let o, u, l = 0;
    const p = yx(r), h = n.container, b = h.has($y, !0) ? h.get($y) : null;
    for (; l < a; ++l)
      o = s[l], p[o] === void 0 && (u = i[o], p[o] = new Y1(r, o, u.callback, u.set, n, b));
  }
}
function e4(n, e, t) {
  const r = e.childrenObservers, i = Lh(r), s = i.length;
  if (s > 0) {
    const a = yx(t), o = [];
    let u, l = 0, p;
    for (; l < s; ++l)
      u = i[l], a[u] == null && (p = r[u], o[o.length] = a[u] = new ox(n, t, u, p.callback, p.query, p.filter, p.map, p.options));
    return o;
  }
  return Ie;
}
const Dm = /* @__PURE__ */ new Map(), t4 = (n) => {
  let e = Dm.get(n);
  return e == null && (e = new Hl(n, 0), Dm.set(n, e)), e;
};
function Bm(n, e, t, r) {
  const i = e.get(va), s = e.get(Ch), a = t.watches, o = n.vmKind === 0 ? n.scope : Jt.create(r, null, !0), u = a.length;
  let l, p, h, b = 0;
  for (; u > b; ++b) {
    if ({ expression: l, callback: p } = a[b], p = On(p) ? p : Reflect.get(r, p), !On(p))
      throw re(`AUR0506:${String(p)}`);
    On(l) ? n.addBinding(new fx(r, i, l, p, !0)) : (h = yt(l) ? s.parse(l, 16) : t4(l), n.addBinding(new Jh(o, e, i, h, p)));
  }
}
class Ha {
  constructor(e) {
    this.hasDefine = "define" in e, this.hasHydrating = "hydrating" in e, this.hasHydrated = "hydrated" in e, this.hasCreated = "created" in e, this.hasBinding = "binding" in e, this.hasBound = "bound" in e, this.hasAttaching = "attaching" in e, this.hasAttached = "attached" in e, this.hasDetaching = "detaching" in e, this.hasUnbinding = "unbinding" in e, this.hasDispose = "dispose" in e, this.hasAccept = "accept" in e;
  }
}
Ha.none = new Ha({});
const n4 = {
  mode: "open"
};
var Fm;
(function(n) {
  n[n.customElement = 0] = "customElement", n[n.customAttribute = 1] = "customAttribute", n[n.synthetic = 2] = "synthetic";
})(Fm || (Fm = {}));
var Nm;
(function(n) {
  n[n.none = 0] = "none", n[n.activating = 1] = "activating", n[n.activated = 2] = "activated", n[n.deactivating = 4] = "deactivating", n[n.deactivated = 8] = "deactivated", n[n.released = 16] = "released", n[n.disposed = 32] = "disposed";
})(Nm || (Nm = {}));
function $m(n) {
  const e = [];
  return (1 & n) === 1 && e.push("activating"), (2 & n) === 2 && e.push("activated"), (4 & n) === 4 && e.push("deactivating"), (8 & n) === 8 && e.push("deactivated"), (16 & n) === 16 && e.push("released"), (32 & n) === 32 && e.push("disposed"), e.length === 0 ? "none" : e.join("|");
}
const Td = Me("IController"), Sc = Me("IHydrationContext");
class r4 {
  constructor(e, t, r) {
    this.instruction = t, this.parent = r, this.controller = e;
  }
}
function i4(n) {
  n.dispose();
}
function Lm(n) {
  n.instance.created(this.Ot, this);
}
function s4(n) {
  n.instance.hydrating(this.Ot, this);
}
function a4(n) {
  n.instance.hydrated(this.Ot, this);
}
function o4(n) {
  return n.instance.binding(this.Ot, this.$initiator, this.parent, this.$flags);
}
function u4(n) {
  return n.instance.bound(this.Ot, this.$initiator, this.parent, this.$flags);
}
function l4(n) {
  return n.instance.attaching(this.Ot, this.$initiator, this.parent, this.$flags);
}
function c4(n) {
  return n.instance.attached(this.Ot, this.$initiator, this.$flags);
}
function d4(n) {
  return n.instance.detaching(this.Ot, this.$initiator, this.parent, this.$flags);
}
function p4(n) {
  return n.instance.unbinding(this.Ot, this.$initiator, this.parent, this.$flags);
}
let Ap, Cp, js;
const Um = Me("IAppRoot"), f4 = "au-start", h4 = "au-end", Vm = (n, e) => n.document.createComment(e), y4 = (n) => {
  const e = Vm(n, h4);
  return e.$start = Vm(n, f4), e;
}, m4 = (n, e) => n.document.createTextNode(e), b4 = (n, e, t) => n.insertBefore(e, t), Rl = (n, e, t) => {
  if (n === null)
    return;
  const r = t.length;
  let i = 0;
  for (; r > i; )
    n.insertBefore(t[i], e), ++i;
}, g4 = (n) => {
  const e = n.previousSibling;
  let t;
  if (e?.nodeType === 8 && e.textContent === "au-end") {
    if (t = e, (t.$start = t.previousSibling) == null)
      throw jm();
    return n.parentNode?.removeChild(n), t;
  } else
    throw jm();
}, jm = () => re("AURxxxx");
class x4 {
}
function Jo(n, e) {
  return n.$au?.[e] ?? null;
}
function mn(n, e, t) {
  var r;
  ((r = n).$au ?? (r.$au = new x4()))[e] = t;
}
const io = Me("INode");
Me("IEventTarget", (n) => n.cachedCallback((e) => e.has(Um, !0) ? e.get(Um).host : e.get(An).document));
const wn = Me("IRenderLocation"), Ec = /* @__PURE__ */ new WeakMap();
function Sf(n) {
  if (Ec.has(n))
    return Ec.get(n);
  let e = 0, t = n.nextSibling;
  for (; t !== null; ) {
    if (t.nodeType === 8)
      switch (t.textContent) {
        case "au-start":
          ++e;
          break;
        case "au-end":
          if (e-- === 0)
            return t;
      }
    t = t.nextSibling;
  }
  if (n.parentNode === null && n.nodeType === 11) {
    const r = as(n);
    if (r === void 0)
      return null;
    if (r.mountTarget === 2)
      return Sf(r.host);
  }
  return n.parentNode;
}
function v4(n, e) {
  if (n.platform !== void 0 && !(n instanceof n.platform.Node)) {
    const t = n.childNodes;
    for (let r = 0, i = t.length; r < i; ++r)
      Ec.set(t[r], e);
  } else
    Ec.set(n, e);
}
function Xh(n) {
  if (Mc(n))
    return n;
  const e = n.ownerDocument.createComment("au-end"), t = e.$start = n.ownerDocument.createComment("au-start"), r = n.parentNode;
  return r !== null && (r.replaceChild(e, n), r.insertBefore(t, e)), e;
}
function Mc(n) {
  return n.textContent === "au-end";
}
class Sp {
  constructor(e, t) {
    this.platform = e, this.next = void 0, this.ne = !1, this.re = !1, this.ref = null, this.f = t;
    const r = t.querySelectorAll(".au");
    let i = 0, s = r.length, a, o = this.t = Array(s);
    for (; s > i; )
      a = r[i], a.nodeName === "AU-M" ? o[i] = g4(a) : o[i] = a, ++i;
    const u = t.childNodes, l = this.childNodes = Array(s = u.length);
    for (i = 0; s > i; )
      l[i] = u[i], ++i;
    this.oe = t.firstChild, this.le = t.lastChild;
  }
  get firstChild() {
    return this.oe;
  }
  get lastChild() {
    return this.le;
  }
  findTargets() {
    return this.t;
  }
  insertBefore(e) {
    if (this.re && !!this.ref)
      this.addToLinked();
    else {
      const t = e.parentNode;
      if (this.ne) {
        let r = this.oe, i;
        const s = this.le;
        for (; r != null && (i = r.nextSibling, t.insertBefore(r, e), r !== s); )
          r = i;
      } else
        this.ne = !0, e.parentNode.insertBefore(this.f, e);
    }
  }
  appendTo(e, t = !1) {
    if (this.ne) {
      let r = this.oe, i;
      const s = this.le;
      for (; r != null && (i = r.nextSibling, e.appendChild(r), r !== s); )
        r = i;
    } else
      this.ne = !0, t || e.appendChild(this.f);
  }
  remove() {
    if (this.ne) {
      this.ne = !1;
      const e = this.f, t = this.le;
      let r, i = this.oe;
      for (; i !== null && (r = i.nextSibling, e.appendChild(i), i !== t); )
        i = r;
    }
  }
  addToLinked() {
    const e = this.ref, t = e.parentNode;
    if (this.ne) {
      let r = this.oe, i;
      const s = this.le;
      for (; r != null && (i = r.nextSibling, t.insertBefore(r, e), r !== s); )
        r = i;
    } else
      this.ne = !0, t.insertBefore(this.f, e);
  }
  unlink() {
    this.re = !1, this.next = void 0, this.ref = void 0;
  }
  link(e) {
    this.re = !0, Mc(e) ? this.ref = e : (this.next = e, this.he());
  }
  he() {
    this.next !== void 0 ? this.ref = this.next.firstChild : this.ref = void 0;
  }
}
const mx = Me("IWindow", (n) => n.callback((e) => e.get(An).window));
Me("ILocation", (n) => n.callback((e) => e.get(mx).location));
Me("IHistory", (n) => n.callback((e) => e.get(mx).history));
function bx(n) {
  return function(e) {
    return gx(n, e);
  };
}
const Ep = /* @__PURE__ */ new WeakMap();
class $r {
  constructor(e, t, r, i, s, a, o, u, l, p, h, b, C, v, T, w, M, I, F, k, D) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i, this.cache = s, this.capture = a, this.template = o, this.instructions = u, this.dependencies = l, this.injectable = p, this.needsCompile = h, this.surrogates = b, this.bindables = C, this.childrenObservers = v, this.containerless = T, this.isStrictBinding = w, this.shadowOptions = M, this.hasSlots = I, this.enhance = F, this.watches = k, this.processContent = D;
  }
  get type() {
    return 1;
  }
  static create(e, t = null) {
    if (t === null) {
      const i = e;
      if (yt(i))
        throw re(`AUR0761:${e}`);
      const s = Cn("name", i, Ef);
      return On(i.Type) ? t = i.Type : t = xx(J5(s)), new $r(t, s, Ot(i.aliases), Cn("key", i, () => Xl(s)), Cn("cache", i, Mp), Cn("capture", i, yn), Cn("template", i, Xn), Ot(i.instructions), Ot(i.dependencies), Cn("injectable", i, Xn), Cn("needsCompile", i, _p), Ot(i.surrogates), di.from(t, i.bindables), Vo.from(i.childrenObservers), Cn("containerless", i, yn), Cn("isStrictBinding", i, yn), Cn("shadowOptions", i, Xn), Cn("hasSlots", i, yn), Cn("enhance", i, yn), Cn("watches", i, T4), Yn("processContent", t, Xn));
    }
    if (yt(e))
      return new $r(t, e, Ot(Ln(t, "aliases"), t.aliases), Xl(e), Yn("cache", t, Mp), Yn("capture", t, yn), Yn("template", t, Xn), Ot(Ln(t, "instructions"), t.instructions), Ot(Ln(t, "dependencies"), t.dependencies), Yn("injectable", t, Xn), Yn("needsCompile", t, _p), Ot(Ln(t, "surrogates"), t.surrogates), di.from(t, ...di.getAll(t), Ln(t, "bindables"), t.bindables), Vo.from(...Vo.getAll(t), Ln(t, "childrenObservers"), t.childrenObservers), Yn("containerless", t, yn), Yn("isStrictBinding", t, yn), Yn("shadowOptions", t, Xn), Yn("hasSlots", t, yn), Yn("enhance", t, yn), Ot(Af.getAnnotation(t), t.watches), Yn("processContent", t, Xn));
    const r = Cn("name", e, Ef);
    return new $r(t, r, Ot(Ln(t, "aliases"), e.aliases, t.aliases), Xl(r), yr("cache", e, t, Mp), yr("capture", e, t, yn), yr("template", e, t, Xn), Ot(Ln(t, "instructions"), e.instructions, t.instructions), Ot(Ln(t, "dependencies"), e.dependencies, t.dependencies), yr("injectable", e, t, Xn), yr("needsCompile", e, t, _p), Ot(Ln(t, "surrogates"), e.surrogates, t.surrogates), di.from(t, ...di.getAll(t), Ln(t, "bindables"), t.bindables, e.bindables), Vo.from(...Vo.getAll(t), Ln(t, "childrenObservers"), t.childrenObservers, e.childrenObservers), yr("containerless", e, t, yn), yr("isStrictBinding", e, t, yn), yr("shadowOptions", e, t, Xn), yr("hasSlots", e, t, yn), yr("enhance", e, t, yn), Ot(e.watches, Af.getAnnotation(t), t.watches), yr("processContent", e, t, Xn));
  }
  static getOrCreate(e) {
    if (e instanceof $r)
      return e;
    if (Ep.has(e))
      return Ep.get(e);
    const t = $r.create(e);
    return Ep.set(e, t), wt(zt, t, t.Type), t;
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    e.has(r, !1) || (X1(r, t).register(e), el(r, t).register(e), tl(i, Ya, r, e));
  }
}
const w4 = {
  name: void 0,
  searchParents: !1,
  optional: !1
}, Mp = () => 0, Xn = () => null, yn = () => !1, _p = () => !0, T4 = () => Ie, zt = wa("custom-element"), Xl = (n) => `${zt}:${n}`, Ef = (() => {
  let n = 0;
  return () => `unnamed-${++n}`;
})(), A4 = (n, e, t) => {
  wt(hn(e), t, n);
}, gx = (n, e) => {
  const t = $r.create(n, e);
  return wt(zt, t, t.Type), wt(zt, t, t), gs(t.Type, zt), t.Type;
}, C4 = (n) => On(n) && Xu(zt, n), as = (n, e = w4) => {
  if (e.name === void 0 && e.searchParents !== !0) {
    const r = Jo(n, zt);
    if (r === null) {
      if (e.optional === !0)
        return null;
      throw re("AUR0762");
    }
    return r;
  }
  if (e.name !== void 0) {
    if (e.searchParents !== !0) {
      const s = Jo(n, zt);
      if (s === null)
        throw re("AUR0763");
      return s.is(e.name) ? s : void 0;
    }
    let r = n, i = !1;
    for (; r !== null; ) {
      const s = Jo(r, zt);
      if (s !== null && (i = !0, s.is(e.name)))
        return s;
      r = Sf(r);
    }
    if (i)
      return;
    throw re("AUR0764");
  }
  let t = n;
  for (; t !== null; ) {
    const r = Jo(t, zt);
    if (r !== null)
      return r;
    t = Sf(t);
  }
  throw re("AUR0765");
}, Ln = (n, e) => fn(hn(e), n), Mf = (n) => {
  const e = fn(zt, n);
  if (e === void 0)
    throw re(`AUR0760:${n.name}`);
  return e;
}, S4 = () => {
  const n = function(e, t, r) {
    const i = pe.getOrCreateAnnotationParamTypes(e);
    return i[r] = n, e;
  };
  return n.register = function(e) {
    return {
      resolve(t, r) {
        return r.has(n, !0) ? r.get(n) : null;
      }
    };
  }, n;
}, xx = function() {
  const n = {
    value: "",
    writable: !1,
    enumerable: !1,
    configurable: !0
  }, e = {};
  return function(t, r = e) {
    const i = class {
    };
    return n.value = t, Reflect.defineProperty(i, "name", n), r !== e && $h(i.prototype, r), i;
  };
}(), Ya = qn({
  name: zt,
  keyFrom: Xl,
  isType: C4,
  for: as,
  define: gx,
  getDefinition: Mf,
  annotate: A4,
  getAnnotation: Ln,
  generateName: Ef,
  createInjectable: S4,
  generateType: xx
});
hn("processContent");
Me("IProjections");
const vx = Me("IAuSlotsInfo");
class wx {
  constructor(e) {
    this.projectedSlots = e;
  }
}
var zm;
(function(n) {
  n.hydrateElement = "ra", n.hydrateAttribute = "rb", n.hydrateTemplateController = "rc", n.hydrateLetElement = "rd", n.setProperty = "re", n.interpolation = "rf", n.propertyBinding = "rg", n.letBinding = "ri", n.refBinding = "rj", n.iteratorBinding = "rk", n.multiAttr = "rl", n.textBinding = "ha", n.listenerBinding = "hb", n.attributeBinding = "hc", n.stylePropertyBinding = "hd", n.setAttribute = "he", n.setClassAttribute = "hf", n.setStyleAttribute = "hg", n.spreadBinding = "hs", n.spreadElementProp = "hp";
})(zm || (zm = {}));
const Mo = Me("Instruction");
class ul {
  constructor(e, t, r) {
    this.from = e, this.to = t, this.mode = r, this.type = "rg";
  }
}
class E4 {
  constructor(e, t, r) {
    this.forOf = e, this.to = t, this.props = r, this.type = "rk";
  }
}
class M4 {
  constructor(e, t) {
    this.from = e, this.to = t, this.type = "rj";
  }
}
class _4 {
  constructor(e, t, r) {
    this.value = e, this.to = t, this.command = r, this.type = "rl";
  }
}
class Tx {
  constructor(e, t, r, i) {
    this.from = e, this.to = t, this.preventDefault = r, this.capture = i, this.type = "hb";
  }
}
class Zh {
  constructor(e, t, r) {
    this.attr = e, this.from = t, this.to = r, this.type = "hc";
  }
}
class R4 {
  constructor() {
    this.type = "hs";
  }
}
const Ax = Me("ITemplateCompiler"), Cx = Me("IRenderer");
function kt(n) {
  return function(t) {
    return t.register = function(r) {
      Ta(Cx, this).register(r);
    }, iC(t.prototype, "target", {
      configurable: !0,
      get: function() {
        return n;
      }
    }), t;
  };
}
function Ii(n, e, t) {
  return yt(e) ? n.parse(e, t) : e;
}
function Ad(n) {
  return n.viewModel != null ? n.viewModel : n;
}
function P4(n, e) {
  if (e === "element")
    return n;
  switch (e) {
    case "controller":
      return as(n);
    case "view":
      throw re("AUR0750");
    case "view-model":
      return as(n).viewModel;
    default: {
      const t = ax(n, e);
      if (t !== void 0)
        return t.viewModel;
      const r = as(n, {
        name: e
      });
      if (r === void 0)
        throw re(`AUR0751:${e}`);
      return r.viewModel;
    }
  }
}
let Gm = class {
  render(e, t, r) {
    const i = Ad(t);
    i.$observers?.[r.to] !== void 0 ? i.$observers[r.to].setValue(r.value) : i[r.to] = r.value;
  }
};
Gm = Y([kt("re")], Gm);
let Wm = class {
  constructor(e) {
    this.r = e;
  }
  static get inject() {
    return [Ca];
  }
  render(e, t, r, i, s, a) {
    let o, u, l, p;
    const h = r.res, b = r.projections, C = e.container;
    switch (typeof h) {
      case "string":
        if (o = C.find(Ya, h), o == null)
          throw re(`AUR0752:${h}@${e.name}`);
        break;
      default:
        o = h;
    }
    const T = r.containerless || o.containerless ? Xh(t) : null, w = B4(i, e, t, r, T, b == null ? void 0 : new wx(Uh(b)));
    u = o.Type, l = w.invoke(u), xt(w, u, new on(o.key, l)), p = ir.$el(w, l, t, r, o, T), mn(t, o.key, p);
    const M = this.r.renderers, I = r.props, F = I.length;
    let k = 0, D;
    for (; F > k; )
      D = I[k], M[D.type].render(e, p, D, i, s, a), ++k;
    e.addChild(p);
  }
};
Wm = Y([kt("ra")], Wm);
let Hm = class {
  constructor(e) {
    this.r = e;
  }
  static get inject() {
    return [Ca];
  }
  render(e, t, r, i, s, a) {
    let o = e.container, u;
    switch (typeof r.res) {
      case "string":
        if (u = o.find(qh, r.res), u == null)
          throw re(`AUR0753:${r.res}@${e.name}`);
        break;
      default:
        u = r.res;
    }
    const l = _x(i, u, e, t, r, void 0, void 0), p = ir.$attr(l.ctn, l.vm, t, u);
    mn(t, u.key, p);
    const h = this.r.renderers, b = r.props, C = b.length;
    let v = 0, T;
    for (; C > v; )
      T = b[v], h[T.type].render(e, p, T, i, s, a), ++v;
    e.addChild(p);
  }
};
Hm = Y([kt("rb")], Hm);
let Km = class {
  constructor(e, t) {
    this.r = e, this.p = t;
  }
  static get inject() {
    return [Ca, An];
  }
  render(e, t, r, i, s, a) {
    let o = e.container, u;
    switch (typeof r.res) {
      case "string":
        if (u = o.find(qh, r.res), u == null)
          throw re(`AUR0754:${r.res}@${e.name}`);
        break;
      default:
        u = r.res;
    }
    const l = this.r.getViewFactory(r.def, o), p = Xh(t), h = _x(this.p, u, e, t, r, l, p), b = ir.$attr(h.ctn, h.vm, t, u);
    mn(p, u.key, b), h.vm.link?.(e, b, t, r);
    const C = this.r.renderers, v = r.props, T = v.length;
    let w = 0, M;
    for (; T > w; )
      M = v[w], C[M.type].render(e, b, M, i, s, a), ++w;
    e.addChild(b);
  }
};
Km = Y([kt("rc")], Km);
let qm = class {
  render(e, t, r, i, s, a) {
    t.remove();
    const o = r.instructions, u = r.toBindingContext, l = e.container, p = o.length;
    let h, b, C = 0;
    for (; p > C; )
      h = o[C], b = Ii(s, h.from, 16), e.addBinding(new al(l, a, b, h.to, u)), ++C;
  }
};
qm = Y([kt("rd")], qm);
let Qm = class {
  render(e, t, r, i, s) {
    e.addBinding(new ix(e.container, Ii(s, r.from, 16), P4(t, r.to)));
  }
};
Qm = Y([kt("rj")], Qm);
let Jm = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new IC(e, e.container, a, i.domWriteQueue, Ii(s, r.from, 1), Ad(t), r.to, 2));
  }
};
Jm = Y([kt("rf")], Jm);
let Ym = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new Oi(e, e.container, a, i.domWriteQueue, Ii(s, r.from, 16), Ad(t), r.to, r.mode));
  }
};
Ym = Y([kt("rg")], Ym);
let Xm = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new Oi(e, e.container, a, i.domWriteQueue, Ii(s, r.forOf, 2), Ad(t), r.to, 2));
  }
};
Xm = Y([kt("rk")], Xm);
let Zm = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new sl(e, e.container, a, i.domWriteQueue, i, Ii(s, r.from, 16), b4(t.parentNode, m4(i, ""), t), r.strict));
  }
};
Zm = Y([kt("ha")], Zm);
let eb = class {
  render(e, t, r, i, s) {
    e.addBinding(new ol(e.container, Ii(s, r.from, 8), t, r.to, new DC(r.preventDefault, r.capture)));
  }
};
eb = Y([kt("hb")], eb);
let tb = class {
  render(e, t, r) {
    t.setAttribute(r.to, r.value);
  }
};
tb = Y([kt("he")], tb);
let nb = class {
  render(e, t, r) {
    I4(t.classList, r.value);
  }
};
nb = Y([kt("hf")], nb);
let rb = class {
  render(e, t, r) {
    t.style.cssText += r.value;
  }
};
rb = Y([kt("hg")], rb);
let ib = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new Oi(e, e.container, a, i.domWriteQueue, Ii(s, r.from, 16), t.style, r.to, 2));
  }
};
ib = Y([kt("hd")], ib);
let sb = class {
  render(e, t, r, i, s, a) {
    e.addBinding(new rl(e, e.container, a, i.domWriteQueue, Ii(s, r.from, 16), t, r.attr, r.to, 2));
  }
};
sb = Y([kt("hc")], sb);
let ab = class {
  constructor(e, t) {
    this.ae = e, this.r = t;
  }
  static get inject() {
    return [Ax, Ca];
  }
  render(e, t, r, i, s, a) {
    const u = e.container.get(Sc), l = this.r.renderers, p = (b) => {
      let C = b, v = u;
      for (; v != null && C > 0; )
        v = v.parent, --C;
      if (v == null)
        throw re("No scope context for spread binding.");
      return v;
    }, h = (b) => {
      const C = p(b), v = k4(C), T = this.ae.compileSpread(C.controller.definition, C.instruction?.captures ?? Ie, C.controller.container, t);
      let w;
      for (w of T)
        switch (w.type) {
          case "hs":
            h(b + 1);
            break;
          case "hp":
            l[w.instructions.type].render(v, as(t), w.instructions, i, s, a);
            break;
          default:
            l[w.type].render(v, t, w, i, s, a);
        }
      e.addBinding(v);
    };
    h(0);
  }
};
ab = Y([kt("hs")], ab);
class O4 {
  constructor(e, t) {
    this.ce = e, this.ue = t, this.isBound = !1, this.ctrl = t.controller, this.locator = this.ctrl.container;
  }
  get container() {
    return this.locator;
  }
  get definition() {
    return this.ctrl.definition;
  }
  get isStrictBinding() {
    return this.ctrl.isStrictBinding;
  }
  get state() {
    return this.ctrl.state;
  }
  get(e) {
    return this.locator.get(e);
  }
  bind(e) {
    if (this.isBound)
      return;
    this.isBound = !0;
    const t = this.scope = this.ue.controller.scope.parent ?? void 0;
    if (t == null)
      throw re("Invalid spreading. Context scope is null/undefined");
    this.ce.forEach((r) => r.bind(t));
  }
  unbind() {
    this.ce.forEach((e) => e.unbind()), this.isBound = !1;
  }
  addBinding(e) {
    this.ce.push(e);
  }
  addChild(e) {
    if (e.vmKind !== 1)
      throw re("Spread binding does not support spreading custom attributes/template controllers");
    this.ctrl.addChild(e);
  }
  limit() {
    throw re("not implemented");
  }
  useScope() {
    throw re("not implemented");
  }
}
function I4(n, e) {
  const t = e.length;
  let r = 0;
  for (let i = 0; i < t; ++i)
    e.charCodeAt(i) === 32 ? (i !== r && n.add(e.slice(r, i)), r = i + 1) : i + 1 === t && n.add(e.slice(r));
}
const k4 = (n) => new O4([], n), Sx = "IController", Ex = "IInstruction", D4 = "IRenderLocation", e0 = "IAuSlotsInfo";
function B4(n, e, t, r, i, s) {
  const a = e.container.createChild();
  return xt(a, n.HTMLElement, xt(a, n.Element, xt(a, io, new on("ElementResolver", t)))), xt(a, Td, new on(Sx, e)), xt(a, Mo, new on(Ex, r)), xt(a, wn, i == null ? Px : new Rx(i)), xt(a, Qn, Ox), xt(a, vx, s == null ? Ix : new on(e0, s)), a;
}
class Mx {
  constructor(e) {
    this.f = e;
  }
  get $isResolver() {
    return !0;
  }
  resolve() {
    const e = this.f;
    if (e === null)
      throw re("AUR7055");
    if (!yt(e.name) || e.name.length === 0)
      throw re("AUR0756");
    return e;
  }
}
function _x(n, e, t, r, i, s, a, o) {
  const u = t.container.createChild();
  return xt(u, n.HTMLElement, xt(u, n.Element, xt(u, io, new on("ElementResolver", r)))), t = t instanceof ir ? t : t.ctrl, xt(u, Td, new on(Sx, t)), xt(u, Mo, new on(Ex, i)), xt(u, wn, a == null ? Px : new on(D4, a)), xt(u, Qn, s == null ? Ox : new Mx(s)), xt(u, vx, o == null ? Ix : new on(e0, o)), {
    vm: u.invoke(e.Type),
    ctn: u
  };
}
class Rx {
  constructor(e) {
    this.l = e;
  }
  get name() {
    return "IRenderLocation";
  }
  get $isResolver() {
    return !0;
  }
  resolve() {
    return this.l;
  }
}
const Px = new Rx(null), Ox = new Mx(null), Ix = new on(e0, new wx(Ie));
var ob;
(function(n) {
  n[n.None = 0] = "None", n[n.IgnoreAttr = 1] = "IgnoreAttr";
})(ob || (ob = {}));
function Nn(n) {
  return function(e) {
    return Dx.define(n, e);
  };
}
class t0 {
  constructor(e, t, r, i, s) {
    this.Type = e, this.name = t, this.aliases = r, this.key = i, this.type = s;
  }
  static create(e, t) {
    let r, i;
    return yt(e) ? (r = e, i = {
      name: r
    }) : (r = e.name, i = e), new t0(t, rn(Zl(t, "name"), r), Ot(Zl(t, "aliases"), i.aliases, t.aliases), kx(r), rn(Zl(t, "type"), i.type, t.type, null));
  }
  register(e) {
    const { Type: t, key: r, aliases: i } = this;
    Ta(r, t).register(e), el(r, t).register(e), tl(i, Dx, r, e);
  }
}
const Yo = wa("binding-command"), kx = (n) => `${Yo}:${n}`, Zl = (n, e) => fn(hn(e), n), Dx = qn({
  name: Yo,
  keyFrom: kx,
  define(n, e) {
    const t = t0.create(n, e);
    return wt(Yo, t, t.Type), wt(Yo, t, t), gs(e, Yo), t.Type;
  },
  getAnnotation: Zl
});
let ub = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    let s = e.attr.target, a = e.attr.rawValue;
    return e.bindable == null ? s = r.map(e.node, s) ?? Wn(s) : (a === "" && e.def.type === 1 && (a = Wn(s)), s = e.bindable.property), new ul(t.parse(a, 16), s, 1);
  }
};
ub = Y([Nn("one-time")], ub);
let lb = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    let s = e.attr.target, a = e.attr.rawValue;
    return e.bindable == null ? s = r.map(e.node, s) ?? Wn(s) : (a === "" && e.def.type === 1 && (a = Wn(s)), s = e.bindable.property), new ul(t.parse(a, 16), s, 2);
  }
};
lb = Y([Nn("to-view")], lb);
let cb = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    const i = e.attr;
    let s = i.target, a = i.rawValue;
    return e.bindable == null ? s = r.map(e.node, s) ?? Wn(s) : (a === "" && e.def.type === 1 && (a = Wn(s)), s = e.bindable.property), new ul(t.parse(a, 16), s, 4);
  }
};
cb = Y([Nn("from-view")], cb);
let db = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    const i = e.attr;
    let s = i.target, a = i.rawValue;
    return e.bindable == null ? s = r.map(e.node, s) ?? Wn(s) : (a === "" && e.def.type === 1 && (a = Wn(s)), s = e.bindable.property), new ul(t.parse(a, 16), s, 6);
  }
};
db = Y([Nn("two-way")], db);
let pb = class {
  get type() {
    return 0;
  }
  build(e, t, r) {
    const i = e.attr, s = e.bindable;
    let a, o, u = i.target, l = i.rawValue;
    return s == null ? (o = r.isTwoWay(e.node, u) ? 6 : 2, u = r.map(e.node, u) ?? Wn(u)) : (l === "" && e.def.type === 1 && (l = Wn(u)), a = e.def.defaultBindingMode, o = s.mode === 8 || s.mode == null ? a == null || a === 8 ? 2 : a : s.mode, u = s.property), new ul(t.parse(l, 16), u, o);
  }
};
pb = Y([Nn("bind")], pb);
let fb = class {
  constructor(e) {
    this.fe = e;
  }
  get type() {
    return 0;
  }
  static get inject() {
    return [gC];
  }
  build(e, t) {
    const r = e.bindable === null ? Wn(e.attr.target) : e.bindable.property, i = t.parse(e.attr.rawValue, 2);
    let s = Ie;
    if (i.semiIdx > -1) {
      const a = e.attr.rawValue.slice(i.semiIdx + 1), o = a.indexOf(":");
      if (o > -1) {
        const u = a.slice(0, o).trim(), l = a.slice(o + 1).trim(), p = this.fe.parse(u, l);
        s = [new _4(l, p.target, p.command)];
      }
    }
    return new E4(i, r, s);
  }
};
fb = Y([Nn("for")], fb);
let hb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new Tx(t.parse(e.attr.rawValue, 8), e.attr.target, !0, !1);
  }
};
hb = Y([Nn("trigger")], hb);
let yb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new Tx(t.parse(e.attr.rawValue, 8), e.attr.target, !1, !0);
  }
};
yb = Y([Nn("capture")], yb);
let mb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new Zh(e.attr.target, t.parse(e.attr.rawValue, 16), e.attr.target);
  }
};
mb = Y([Nn("attr")], mb);
let bb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new Zh("style", t.parse(e.attr.rawValue, 16), e.attr.target);
  }
};
bb = Y([Nn("style")], bb);
let gb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new Zh("class", t.parse(e.attr.rawValue, 16), e.attr.target);
  }
};
gb = Y([Nn("class")], gb);
let xb = class {
  get type() {
    return 1;
  }
  build(e, t) {
    return new M4(t.parse(e.attr.rawValue, 16), e.attr.target);
  }
};
xb = Y([Nn("ref")], xb);
let vb = class {
  get type() {
    return 1;
  }
  build(e) {
    return new R4();
  }
};
vb = Y([Nn("...$attrs")], vb);
const Bx = Me("ISVGAnalyzer", (n) => n.singleton(F4));
class F4 {
  isStandardSvgAttribute(e, t) {
    return !1;
  }
}
Me("IAttrMapper", (n) => n.singleton(N4));
class N4 {
  constructor(e) {
    this.svg = e, this.fns = [], this.pe = nn(), this.ve = nn(), this.useMapping({
      LABEL: {
        for: "htmlFor"
      },
      IMG: {
        usemap: "useMap"
      },
      INPUT: {
        maxlength: "maxLength",
        minlength: "minLength",
        formaction: "formAction",
        formenctype: "formEncType",
        formmethod: "formMethod",
        formnovalidate: "formNoValidate",
        formtarget: "formTarget",
        inputmode: "inputMode"
      },
      TEXTAREA: {
        maxlength: "maxLength"
      },
      TD: {
        rowspan: "rowSpan",
        colspan: "colSpan"
      },
      TH: {
        rowspan: "rowSpan",
        colspan: "colSpan"
      }
    }), this.useGlobalMapping({
      accesskey: "accessKey",
      contenteditable: "contentEditable",
      tabindex: "tabIndex",
      textcontent: "textContent",
      innerhtml: "innerHTML",
      scrolltop: "scrollTop",
      scrollleft: "scrollLeft",
      readonly: "readOnly"
    });
  }
  static get inject() {
    return [Bx];
  }
  useMapping(e) {
    var t;
    let r, i, s, a;
    for (s in e) {
      r = e[s], i = (t = this.pe)[s] ?? (t[s] = nn());
      for (a in r) {
        if (i[a] !== void 0)
          throw wb(a, s);
        i[a] = r[a];
      }
    }
  }
  useGlobalMapping(e) {
    const t = this.ve;
    for (const r in e) {
      if (t[r] !== void 0)
        throw wb(r, "*");
      t[r] = e[r];
    }
  }
  useTwoWay(e) {
    this.fns.push(e);
  }
  isTwoWay(e, t) {
    return $4(e, t) || this.fns.length > 0 && this.fns.some((r) => r(e, t));
  }
  map(e, t) {
    return this.pe[e.nodeName]?.[t] ?? this.ve[t] ?? (gf(e, t, this.svg) ? t : null);
  }
}
function $4(n, e) {
  switch (n.nodeName) {
    case "INPUT":
      switch (n.type) {
        case "checkbox":
        case "radio":
          return e === "checked";
        default:
          return e === "value" || e === "files" || e === "value-as-number" || e === "value-as-date";
      }
    case "TEXTAREA":
    case "SELECT":
      return e === "value";
    default:
      switch (e) {
        case "textcontent":
        case "innerhtml":
          return n.hasAttribute("contenteditable");
        case "scrolltop":
        case "scrollleft":
          return !0;
        default:
          return !1;
      }
  }
}
function wb(n, e) {
  return re(`Attribute ${n} has been already registered for ${e === "*" ? "all elements" : `<${e}/>`}`);
}
Me("ITemplateElementFactory", (n) => n.singleton(Fx));
const Tb = {};
class Fx {
  constructor(e) {
    this.p = e, this.xe = Rp(this.p);
  }
  createTemplate(e) {
    if (yt(e)) {
      let t = Tb[e];
      if (t === void 0) {
        const r = this.xe;
        r.innerHTML = e;
        const i = r.content.firstElementChild;
        i == null || i.nodeName !== "TEMPLATE" || i.nextElementSibling != null ? (this.xe = Rp(this.p), t = r) : (r.content.removeChild(i), t = i), Tb[e] = t;
      }
      return t.cloneNode(!0);
    }
    if (e.nodeName !== "TEMPLATE") {
      const t = Rp(this.p);
      return t.content.appendChild(e), t;
    }
    return e.parentNode?.removeChild(e), e.cloneNode(!0);
  }
}
Fx.inject = [An];
const Rp = (n) => n.document.createElement("template");
$h(nn(), {
  id: !0,
  name: !0,
  "au-slot": !0,
  "as-element": !0
});
qn(["property", "attribute", "mode"]);
const L4 = Me("ITemplateCompilerHooks"), Ab = /* @__PURE__ */ new WeakMap(), Pp = wa("compiler-hooks");
qn({
  name: Pp,
  define(n) {
    let e = Ab.get(n);
    return e === void 0 && (Ab.set(n, e = new U4(n)), wt(Pp, e, n), gs(n, Pp)), n;
  }
});
class U4 {
  constructor(e) {
    this.Type = e;
  }
  get name() {
    return "";
  }
  register(e) {
    e.register(Ta(L4, this.Type));
  }
}
const Op = /* @__PURE__ */ new Map();
class Cd {
  bind(e, t) {
    Op.set(t, t.mode), t.mode = this.mode;
  }
  unbind(e, t) {
    t.mode = Op.get(t), Op.delete(t);
  }
}
class V4 extends Cd {
  get mode() {
    return 1;
  }
}
class j4 extends Cd {
  get mode() {
    return 2;
  }
}
class z4 extends Cd {
  get mode() {
    return 4;
  }
}
class G4 extends Cd {
  get mode() {
    return 6;
  }
}
Fn("oneTime")(V4);
Fn("toView")(j4);
Fn("fromView")(z4);
Fn("twoWay")(G4);
const Ip = /* @__PURE__ */ new WeakMap(), W4 = 200;
class Nx {
  constructor(e) {
    this.p = e;
  }
  bind(e, t, r) {
    r = Number(r);
    const i = {
      type: "debounce",
      delay: r > 0 ? r : W4,
      now: this.p.performanceNow,
      queue: this.p.taskQueue
    }, s = t.limit?.(i);
    s == null || Ip.set(t, s);
  }
  unbind(e, t) {
    Ip.get(t)?.dispose(), Ip.delete(t);
  }
}
Nx.inject = [Qu];
Fn("debounce")(Nx);
class $x {
  constructor(e) {
    this.Ve = /* @__PURE__ */ new Map(), this.Ne = e;
  }
  bind(e, t, ...r) {
    if (!("handleChange" in t))
      throw re("AUR0817");
    if (r.length === 0)
      throw re("AUR0818");
    this.Ve.set(t, r);
    let i;
    for (i of r)
      this.Ne.addSignalListener(i, t);
  }
  unbind(e, t) {
    const r = this.Ve.get(t);
    this.Ve.delete(t);
    let i;
    for (i of r)
      this.Ne.removeSignalListener(i, t);
  }
}
$x.inject = [Dh];
Fn("signal")($x);
const kp = /* @__PURE__ */ new WeakMap(), H4 = 200;
class Lx {
  constructor(e) {
    this.je = e.performanceNow, this.ct = e.taskQueue;
  }
  bind(e, t, r) {
    r = Number(r);
    const i = {
      type: "throttle",
      delay: r > 0 ? r : H4,
      now: this.je,
      queue: this.ct
    }, s = t.limit?.(i);
    s == null || kp.set(t, s);
  }
  unbind(e, t) {
    kp.get(t)?.dispose(), kp.delete(t);
  }
}
Lx.inject = [Qu];
Fn("throttle")(Lx);
class Ux {
  constructor() {
    this.type = 6;
  }
  getValue(e, t) {
    return e.getAttribute(t);
  }
  setValue(e, t, r) {
    e == null ? t.removeAttribute(r) : t.setAttribute(r, e);
  }
}
vd(Ux);
const ec = new Ux();
class K4 {
  bind(e, t) {
    if (!(t instanceof Oi))
      throw re("AURxxxx");
    t.useTargetObserver(ec);
  }
}
Fn("attr")(K4);
class q4 {
  bind(e, t) {
    if (!(t instanceof ol))
      throw re("AUR0801");
    t.self = !0;
  }
  unbind(e, t) {
    t.self = !1;
  }
}
Fn("self")(q4);
const Cb = nn();
class Au {
  constructor(e) {
    this.ns = e, this.type = 6;
  }
  static forNs(e) {
    return Cb[e] ?? (Cb[e] = new Au(e));
  }
  getValue(e, t) {
    return e.getAttributeNS(this.ns, t);
  }
  setValue(e, t, r) {
    e == null ? t.removeAttributeNS(this.ns, r) : t.setAttributeNS(this.ns, r, e);
  }
}
vd(Au);
function Sb(n, e) {
  return n === e;
}
class n0 {
  constructor(e, t, r, i) {
    this.type = 7, this.v = void 0, this.ov = void 0, this.He = void 0, this.We = void 0, this.yt = !1, this.bt = e, this.oL = i, this.cf = r;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    const t = this.v;
    e !== t && (this.v = e, this.ov = t, this.ze(), this.Ge(), this.st());
  }
  handleCollectionChange() {
    this.Ge();
  }
  handleChange(e, t) {
    this.Ge();
  }
  Ge() {
    const e = this.v, t = this.bt, r = ss.call(t, "model") ? t.model : t.value, i = t.type === "radio", s = t.matcher !== void 0 ? t.matcher : Sb;
    if (i)
      t.checked = !!s(e, r);
    else if (e === !0)
      t.checked = !0;
    else {
      let a = !1;
      if (_r(e))
        a = e.findIndex((o) => !!s(o, r)) !== -1;
      else if (e instanceof Set) {
        for (const o of e)
          if (s(o, r)) {
            a = !0;
            break;
          }
      } else if (e instanceof Map)
        for (const o of e) {
          const u = o[0], l = o[1];
          if (s(u, r) && l === !0) {
            a = !0;
            break;
          }
        }
      t.checked = a;
    }
  }
  handleEvent() {
    let e = this.ov = this.v;
    const t = this.bt, r = ss.call(t, "model") ? t.model : t.value, i = t.checked, s = t.matcher !== void 0 ? t.matcher : Sb;
    if (t.type === "checkbox") {
      if (_r(e)) {
        const a = e.findIndex((o) => !!s(o, r));
        i && a === -1 ? e.push(r) : !i && a !== -1 && e.splice(a, 1);
        return;
      } else if (e instanceof Set) {
        const a = {};
        let o = a;
        for (const u of e)
          if (s(u, r) === !0) {
            o = u;
            break;
          }
        i && o === a ? e.add(r) : !i && o !== a && e.delete(o);
        return;
      } else if (e instanceof Map) {
        let a;
        for (const o of e) {
          const u = o[0];
          if (s(u, r) === !0) {
            a = u;
            break;
          }
        }
        e.set(a, i);
        return;
      }
      e = i;
    } else if (i)
      e = r;
    else
      return;
    this.v = e, this.st();
  }
  kt() {
    this.ze();
  }
  At() {
    this.He?.unsubscribe(this), this.We?.unsubscribe(this), this.He = this.We = void 0;
  }
  st() {
    Eb = this.ov, this.ov = this.v, this.subs.notify(this.v, Eb);
  }
  ze() {
    const e = this.bt;
    (this.We ?? (this.We = e.$observers?.model ?? e.$observers?.value))?.subscribe(this), this.He?.unsubscribe(this), this.He = void 0, e.type === "checkbox" && (this.He = X4(this.v, this.oL))?.subscribe(this);
  }
}
Qh(n0);
Tn(n0);
let Eb;
const Q4 = {
  childList: !0,
  subtree: !0,
  characterData: !0
};
function Mb(n, e) {
  return n === e;
}
class r0 {
  constructor(e, t, r, i) {
    this.type = 7, this.v = void 0, this.ov = void 0, this.J = !1, this.Xe = void 0, this.Ke = void 0, this.iO = !1, this.yt = !1, this.bt = e, this.oL = i, this.cf = r;
  }
  getValue() {
    return this.iO ? this.v : this.bt.multiple ? J4(this.bt.options) : this.bt.value;
  }
  setValue(e) {
    this.ov = this.v, this.v = e, this.J = e !== this.ov, this.Qe(e instanceof Array ? e : null), this.it();
  }
  it() {
    this.J && (this.J = !1, this.syncOptions());
  }
  handleCollectionChange() {
    this.syncOptions();
  }
  syncOptions() {
    const e = this.v, t = this.bt, r = _r(e), i = t.matcher ?? Mb, s = t.options;
    let a = s.length;
    for (; a-- > 0; ) {
      const o = s[a], u = ss.call(o, "model") ? o.model : o.value;
      if (r) {
        o.selected = e.findIndex((l) => !!i(u, l)) !== -1;
        continue;
      }
      o.selected = !!i(u, e);
    }
  }
  syncValue() {
    const e = this.bt, t = e.options, r = t.length, i = this.v;
    let s = 0;
    if (e.multiple) {
      if (!(i instanceof Array))
        return !0;
      let u;
      const l = e.matcher || Mb, p = [];
      for (; s < r; )
        u = t[s], u.selected && p.push(ss.call(u, "model") ? u.model : u.value), ++s;
      let h;
      for (s = 0; s < i.length; )
        h = i[s], p.findIndex((b) => !!l(h, b)) === -1 ? i.splice(s, 1) : ++s;
      for (s = 0; s < p.length; )
        h = p[s], i.findIndex((b) => !!l(h, b)) === -1 && i.push(h), ++s;
      return !1;
    }
    let a = null, o;
    for (; s < r; ) {
      if (o = t[s], o.selected) {
        a = ss.call(o, "model") ? o.model : o.value;
        break;
      }
      ++s;
    }
    return this.ov = this.v, this.v = a, !0;
  }
  kt() {
    (this.Ke = new this.bt.ownerDocument.defaultView.MutationObserver(this.Ye.bind(this))).observe(this.bt, Q4), this.Qe(this.v instanceof Array ? this.v : null), this.iO = !0;
  }
  At() {
    this.Ke.disconnect(), this.Xe?.unsubscribe(this), this.Ke = this.Xe = void 0, this.iO = !1;
  }
  Qe(e) {
    if (this.Xe?.unsubscribe(this), this.Xe = void 0, e != null) {
      if (!this.bt.multiple)
        throw re("AUR0654");
      (this.Xe = this.oL.getArrayObserver(e)).subscribe(this);
    }
  }
  handleEvent() {
    this.syncValue() && this.st();
  }
  Ye(e) {
    this.syncOptions(), this.syncValue() && this.st();
  }
  st() {
    _b = this.ov, this.ov = this.v, this.subs.notify(this.v, _b);
  }
}
Qh(r0);
Tn(r0);
function J4(n) {
  const e = [];
  if (n.length === 0)
    return e;
  const t = n.length;
  let r = 0, i;
  for (; t > r; )
    i = n[r], i.selected && (e[e.length] = ss.call(i, "model") ? i.model : i.value), ++r;
  return e;
}
let _b;
const Y4 = "--";
class Vx {
  constructor(e) {
    this.obj = e, this.type = 6, this.v = "", this.ov = "", this.styles = {}, this.version = 0, this.J = !1;
  }
  getValue() {
    return this.obj.style.cssText;
  }
  setValue(e) {
    this.v = e, this.J = e !== this.ov, this.it();
  }
  Ze(e) {
    const t = [], r = /url\([^)]+$/;
    let i = 0, s = "", a, o, u, l;
    for (; i < e.length; ) {
      if (a = e.indexOf(";", i), a === -1 && (a = e.length), s += e.substring(i, a), i = a + 1, r.test(s)) {
        s += ";";
        continue;
      }
      o = s.indexOf(":"), u = s.substring(0, o).trim(), l = s.substring(o + 1).trim(), t.push([u, l]), s = "";
    }
    return t;
  }
  Je(e) {
    let t, r;
    const i = [];
    for (r in e)
      if (t = e[r], t != null) {
        if (yt(t)) {
          if (r.startsWith(Y4)) {
            i.push([r, t]);
            continue;
          }
          i.push([t1(r), t]);
          continue;
        }
        i.push(...this.ti(t));
      }
    return i;
  }
  ei(e) {
    const t = e.length;
    if (t > 0) {
      const r = [];
      let i = 0;
      for (; t > i; ++i)
        r.push(...this.ti(e[i]));
      return r;
    }
    return Ie;
  }
  ti(e) {
    return yt(e) ? this.Ze(e) : e instanceof Array ? this.ei(e) : e instanceof Object ? this.Je(e) : Ie;
  }
  it() {
    if (this.J) {
      this.J = !1;
      const e = this.v, t = this.styles, r = this.ti(e);
      let i, s = this.version;
      this.ov = e;
      let a, o, u, l = 0;
      const p = r.length;
      for (; l < p; ++l)
        a = r[l], o = a[0], u = a[1], this.setProperty(o, u), t[o] = s;
      if (this.styles = t, this.version += 1, s === 0)
        return;
      s -= 1;
      for (i in t)
        !ss.call(t, i) || t[i] !== s || this.obj.style.removeProperty(i);
    }
  }
  setProperty(e, t) {
    let r = "";
    t != null && On(t.indexOf) && t.includes("!important") && (r = "important", t = t.replace("!important", "")), this.obj.style.setProperty(e, t, r);
  }
  bind() {
    this.v = this.ov = this.obj.style.cssText;
  }
}
vd(Vx);
class i0 {
  constructor(e, t, r) {
    this.type = 7, this.v = "", this.ov = "", this.J = !1, this.yt = !1, this.bt = e, this.k = t, this.cf = r;
  }
  getValue() {
    return this.v;
  }
  setValue(e) {
    Zu(e, this.v) || (this.ov = this.v, this.v = e, this.J = !0, this.cf.readonly || this.it());
  }
  it() {
    this.J && (this.J = !1, this.bt[this.k] = this.v ?? this.cf.default, this.st());
  }
  handleEvent() {
    this.ov = this.v, this.v = this.bt[this.k], this.ov !== this.v && (this.J = !1, this.st());
  }
  kt() {
    this.v = this.ov = this.bt[this.k];
  }
  st() {
    Rb = this.ov, this.ov = this.v, this.subs.notify(this.v, Rb);
  }
}
Qh(i0);
Tn(i0);
let Rb;
const zs = "http://www.w3.org/1999/xlink", Pb = "http://www.w3.org/XML/1998/namespace", Ob = "http://www.w3.org/2000/xmlns/", Ib = $h(nn(), {
  "xlink:actuate": ["actuate", zs],
  "xlink:arcrole": ["arcrole", zs],
  "xlink:href": ["href", zs],
  "xlink:role": ["role", zs],
  "xlink:show": ["show", zs],
  "xlink:title": ["title", zs],
  "xlink:type": ["type", zs],
  "xml:lang": ["lang", Pb],
  "xml:space": ["space", Pb],
  xmlns: ["xmlns", Ob],
  "xmlns:xlink": ["xlink", Ob]
}), jx = new W1();
jx.type = 6;
class Cu {
  constructor(e, t, r, i) {
    this.locator = e, this.platform = t, this.dirtyChecker = r, this.svgAnalyzer = i, this.allowDirtyCheck = !0, this.ii = nn(), this.si = nn(), this.ni = nn(), this.ri = nn();
    const s = ["change", "input"], a = {
      events: s,
      default: ""
    };
    this.useConfig({
      INPUT: {
        value: a,
        valueAsNumber: {
          events: s,
          default: 0
        },
        checked: {
          type: n0,
          events: s
        },
        files: {
          events: s,
          readonly: !0
        }
      },
      SELECT: {
        value: {
          type: r0,
          events: ["change"],
          default: ""
        }
      },
      TEXTAREA: {
        value: a
      }
    });
    const o = {
      events: ["change", "input", "blur", "keyup", "paste"],
      default: ""
    }, u = {
      events: ["scroll"],
      default: 0
    };
    this.useConfigGlobal({
      scrollTop: u,
      scrollLeft: u,
      textContent: o,
      innerHTML: o
    }), this.overrideAccessorGlobal("css", "style", "class"), this.overrideAccessor({
      INPUT: ["value", "checked", "model"],
      SELECT: ["value"],
      TEXTAREA: ["value"]
    });
  }
  static register(e) {
    el(wc, Cu).register(e), Ta(wc, Cu).register(e);
  }
  handles(e, t) {
    return e instanceof this.platform.Node;
  }
  useConfig(e, t, r) {
    const i = this.ii;
    let s;
    if (yt(e))
      s = i[e] ?? (i[e] = nn()), s[t] == null ? s[t] = r : Pl(e, t);
    else
      for (const a in e) {
        s = i[a] ?? (i[a] = nn());
        const o = e[a];
        for (t in o)
          s[t] == null ? s[t] = o[t] : Pl(a, t);
      }
  }
  useConfigGlobal(e, t) {
    const r = this.si;
    if (typeof e == "object")
      for (const i in e)
        r[i] == null ? r[i] = e[i] : Pl("*", i);
    else
      r[e] == null ? r[e] = t : Pl("*", e);
  }
  getAccessor(e, t, r) {
    if (t in this.ri || t in (this.ni[e.tagName] ?? kT))
      return this.getObserver(e, t, r);
    switch (t) {
      case "src":
      case "href":
      case "role":
      case "minLength":
      case "maxLength":
      case "placeholder":
      case "size":
      case "pattern":
      case "title":
        return ec;
      default: {
        const i = Ib[t];
        return i !== void 0 ? Au.forNs(i[1]) : gf(e, t, this.svgAnalyzer) ? ec : jx;
      }
    }
  }
  overrideAccessor(e, t) {
    var r, i;
    let s;
    if (yt(e))
      s = (r = this.ni)[e] ?? (r[e] = nn()), s[t] = !0;
    else
      for (const a in e)
        for (const o of e[a])
          s = (i = this.ni)[a] ?? (i[a] = nn()), s[o] = !0;
  }
  overrideAccessorGlobal(...e) {
    for (const t of e)
      this.ri[t] = !0;
  }
  getNodeObserverConfig(e, t) {
    return this.ii[e.tagName]?.[t] ?? this.si[t];
  }
  getNodeObserver(e, t, r) {
    const i = this.ii[e.tagName]?.[t] ?? this.si[t];
    let s;
    return i != null ? (s = new (i.type ?? i0)(e, t, i, r, this.locator), s.doNotCache || (K1(e)[t] = s), s) : null;
  }
  getObserver(e, t, r) {
    switch (t) {
      case "class":
        return new ux(e);
      case "css":
      case "style":
        return new Vx(e);
    }
    const i = this.getNodeObserver(e, t, r);
    if (i != null)
      return i;
    const s = Ib[t];
    if (s !== void 0)
      return Au.forNs(s[1]);
    if (gf(e, t, this.svgAnalyzer))
      return ec;
    if (t in e.constructor.prototype) {
      if (this.allowDirtyCheck)
        return this.dirtyChecker.createProperty(e, t);
      throw re(`AUR0652:${String(t)}`);
    } else
      return new kh(e, t);
  }
}
Cu.inject = [TT, An, j1, Bx];
function X4(n, e) {
  if (n instanceof Array)
    return e.getArrayObserver(n);
  if (n instanceof Map)
    return e.getMapObserver(n);
  if (n instanceof Set)
    return e.getSetObserver(n);
}
function Pl(n, e) {
  throw re(`AUR0653:${String(e)}@${n}`);
}
class zx {
  constructor(e, t) {
    if (!(t instanceof Cu))
      throw re("AURxxxx: updateTrigger binding behavior only works with the default implementation of Aurelia HTML observation. Implement your own node observation + updateTrigger");
    this.oL = e, this.oi = t;
  }
  bind(e, t, ...r) {
    if (r.length === 0)
      throw re("AUR0802");
    if (!(t instanceof Oi) || !(4 & t.mode))
      throw re("AUR0803");
    const i = this.oi.getNodeObserverConfig(t.target, t.targetProperty);
    if (i == null)
      throw re("AURxxxx");
    const s = this.oi.getNodeObserver(t.target, t.targetProperty, this.oL);
    s.useConfig({
      readonly: i.readonly,
      default: i.default,
      events: r
    }), t.useTargetObserver(s);
  }
}
zx.inject = [va, wc];
Fn("updateTrigger")(zx);
class s0 {
  constructor(e, t) {
    this.li = !1, this.hi = e, this.p = t;
  }
  binding() {
    this.valueChanged();
  }
  valueChanged() {
    this.$controller.isActive ? this.ai() : this.li = !0;
  }
  attached() {
    this.li && (this.li = !1, this.ai()), this.hi.addEventListener("focus", this), this.hi.addEventListener("blur", this);
  }
  afterDetachChildren() {
    const e = this.hi;
    e.removeEventListener("focus", this), e.removeEventListener("blur", this);
  }
  handleEvent(e) {
    e.type === "focus" ? this.value = !0 : this.ui || (this.value = !1);
  }
  ai() {
    const e = this.hi, t = this.ui, r = this.value;
    r && !t ? e.focus() : !r && t && e.blur();
  }
  get ui() {
    return this.hi === this.p.document.activeElement;
  }
}
s0.inject = [io, An];
Y([De({
  mode: 6
})], s0.prototype, "value", void 0);
sx("focus")(s0);
let Su = class {
  constructor(e, t, r) {
    this.el = e, this.p = t, this.fi = !1, this.lt = null, this.$val = "", this.$prio = "", this.update = () => {
      this.lt = null, Boolean(this.value) !== this.di && (this.di === this.mi ? (this.di = !this.mi, this.$val = this.el.style.getPropertyValue("display"), this.$prio = this.el.style.getPropertyPriority("display"), this.el.style.setProperty("display", "none", "important")) : (this.di = this.mi, this.el.style.setProperty("display", this.$val, this.$prio), this.el.getAttribute("style") === "" && this.el.removeAttribute("style")));
    }, this.di = this.mi = r.alias !== "hide";
  }
  binding() {
    this.fi = !0, this.update();
  }
  detaching() {
    this.fi = !1, this.lt?.cancel(), this.lt = null;
  }
  valueChanged() {
    this.fi && this.lt === null && (this.lt = this.p.domWriteQueue.queueTask(this.update));
  }
};
Y([De], Su.prototype, "value", void 0);
Su = Y([cn(0, io), cn(1, An), cn(2, Mo)], Su);
lC("hide")(Su);
sx("show")(Su);
class Or {
  constructor(e, t, r) {
    this.position = "beforeend", this.strict = !1, this.p = r, this.gi = r.document.createElement("div"), (this.view = e.create()).setLocation(this.pi = y4(r)), v4(this.view.nodes, t);
  }
  attaching(e, t, r) {
    this.callbackContext == null && (this.callbackContext = this.$controller.scope.bindingContext);
    const i = this.gi = this.vi();
    return this.xi(i, this.position), this.wi(e, i, r);
  }
  detaching(e, t, r) {
    return this.bi(e, this.gi, r);
  }
  targetChanged() {
    const { $controller: e } = this;
    if (!e.isActive)
      return;
    const t = this.vi();
    if (this.gi === t)
      return;
    this.gi = t;
    const r = Ce(this.bi(null, t, e.flags), () => (this.xi(t, this.position), this.wi(null, t, e.flags)));
    qt(r) && r.catch(Tc);
  }
  positionChanged() {
    const { $controller: e, gi: t } = this;
    if (!e.isActive)
      return;
    const r = Ce(this.bi(null, t, e.flags), () => (this.xi(t, this.position), this.wi(null, t, e.flags)));
    qt(r) && r.catch(Tc);
  }
  wi(e, t, r) {
    const { activating: i, callbackContext: s, view: a } = this;
    return Ce(i?.call(s, t, a), () => this.yi(e, t, r));
  }
  yi(e, t, r) {
    const { $controller: i, view: s } = this;
    if (e === null)
      s.nodes.insertBefore(this.pi);
    else
      return Ce(s.activate(e ?? s, i, r, i.scope), () => this.ki(t));
    return this.ki(t);
  }
  ki(e) {
    const { activated: t, callbackContext: r, view: i } = this;
    return t?.call(r, e, i);
  }
  bi(e, t, r) {
    const { deactivating: i, callbackContext: s, view: a } = this;
    return Ce(i?.call(s, t, a), () => this.Ai(e, t, r));
  }
  Ai(e, t, r) {
    const { $controller: i, view: s } = this;
    if (e === null)
      s.nodes.remove();
    else
      return Ce(s.deactivate(e, i, r), () => this.Ci(t));
    return this.Ci(t);
  }
  Ci(e) {
    const { deactivated: t, callbackContext: r, view: i } = this;
    return t?.call(r, e, i);
  }
  vi() {
    const e = this.p, t = e.document;
    let r = this.target, i = this.renderContext;
    if (r === "") {
      if (this.strict)
        throw re("AUR0811");
      return t.body;
    }
    if (yt(r)) {
      let s = t;
      yt(i) && (i = t.querySelector(i)), i instanceof e.Node && (s = i), r = s.querySelector(r);
    }
    if (r instanceof e.Node)
      return r;
    if (r == null) {
      if (this.strict)
        throw re("AUR0812");
      return t.body;
    }
    return r;
  }
  xi(e, t) {
    const r = this.pi, i = r.$start, s = e.parentNode, a = [i, r];
    switch (t) {
      case "beforeend":
        Rl(e, null, a);
        break;
      case "afterbegin":
        Rl(e, e.firstChild, a);
        break;
      case "beforebegin":
        Rl(s, e, a);
        break;
      case "afterend":
        Rl(s, e.nextSibling, a);
        break;
      default:
        throw new Error("Invalid portal insertion position");
    }
  }
  dispose() {
    this.view.dispose(), this.view = void 0, this.callbackContext = null;
  }
  accept(e) {
    if (this.view?.accept(e) === !0)
      return !0;
  }
}
Or.inject = [Qn, wn, An];
Y([De({
  primary: !0
})], Or.prototype, "target", void 0);
Y([De()], Or.prototype, "position", void 0);
Y([De({
  callback: "targetChanged"
})], Or.prototype, "renderContext", void 0);
Y([De()], Or.prototype, "strict", void 0);
Y([De()], Or.prototype, "deactivating", void 0);
Y([De()], Or.prototype, "activating", void 0);
Y([De()], Or.prototype, "deactivated", void 0);
Y([De()], Or.prototype, "activated", void 0);
Y([De()], Or.prototype, "callbackContext", void 0);
dr("portal")(Or);
class so {
  constructor(e, t) {
    this.elseFactory = void 0, this.elseView = void 0, this.ifView = void 0, this.view = void 0, this.value = !1, this.cache = !0, this.pending = void 0, this.Bi = !1, this.Ri = 0, this.Si = e, this.l = t;
  }
  attaching(e, t, r) {
    let i;
    const s = this.$controller, a = this.Ri++, o = () => !this.Bi && this.Ri === a + 1;
    return Ce(this.pending, () => {
      !o() || (this.pending = void 0, this.value ? i = this.view = this.ifView = this.cache && this.ifView != null ? this.ifView : this.Si.create() : i = this.view = this.elseView = this.cache && this.elseView != null ? this.elseView : this.elseFactory?.create(), i != null && (i.setLocation(this.l), this.pending = Ce(i.activate(e, s, r, s.scope), () => {
        o() && (this.pending = void 0);
      })));
    });
  }
  detaching(e, t, r) {
    return this.Bi = !0, Ce(this.pending, () => {
      this.Bi = !1, this.pending = void 0, this.view?.deactivate(e, this.$controller, r);
    });
  }
  valueChanged(e, t, r) {
    if (!this.$controller.isActive || (e = !!e, t = !!t, e === t))
      return;
    const i = this.view, s = this.$controller, a = this.Ri++, o = () => !this.Bi && this.Ri === a + 1;
    let u;
    return Ce(this.pending, () => this.pending = Ce(i?.deactivate(i, s, r), () => {
      if (!!o() && (e ? u = this.view = this.ifView = this.cache && this.ifView != null ? this.ifView : this.Si.create() : u = this.view = this.elseView = this.cache && this.elseView != null ? this.elseView : this.elseFactory?.create(), u != null))
        return u.setLocation(this.l), Ce(u.activate(u, s, r, s.scope), () => {
          o() && (this.pending = void 0);
        });
    }));
  }
  dispose() {
    this.ifView?.dispose(), this.elseView?.dispose(), this.ifView = this.elseView = this.view = void 0;
  }
  accept(e) {
    if (this.view?.accept(e) === !0)
      return !0;
  }
}
so.inject = [Qn, wn];
Y([De], so.prototype, "value", void 0);
Y([De({
  set: (n) => n === "" || !!n && n !== "false"
})], so.prototype, "cache", void 0);
dr("if")(so);
class Gx {
  constructor(e) {
    this.f = e;
  }
  link(e, t, r, i) {
    const s = e.children, a = s[s.length - 1];
    if (a instanceof so)
      a.elseFactory = this.f;
    else if (a.viewModel instanceof so)
      a.viewModel.elseFactory = this.f;
    else
      throw re("AUR0810");
  }
}
Gx.inject = [Qn];
dr({
  name: "else"
})(Gx);
function Z4(n) {
  n.dispose();
}
const e8 = [18, 17];
class a0 {
  constructor(e, t, r, i, s) {
    this.views = [], this.key = null, this.Ii = /* @__PURE__ */ new Map(), this.Ti = /* @__PURE__ */ new Map(), this.Pi = void 0, this.Ei = !1, this.Li = !1, this.Di = null, this.Ui = void 0, this.$i = !1;
    const a = e.props[0].props[0];
    if (a !== void 0) {
      const { to: o, value: u, command: l } = a;
      if (o === "key")
        if (l === null)
          this.key = u;
        else if (l === "bind")
          this.key = t.parse(u, 16);
        else
          throw re(`AUR775:${l}`);
      else
        throw re(`AUR776:${o}`);
    }
    this.l = r, this._i = i, this.f = s;
  }
  binding(e, t, r) {
    const i = this._i.bindings, s = i.length;
    let a, o, u = 0;
    for (; s > u; ++u)
      if (a = i[u], a.target === this && a.targetProperty === "items") {
        o = this.forOf = a.ast, this.qi = a;
        let p = o.iterable;
        for (; p != null && e8.includes(p.$kind); )
          p = p.expression, this.Ei = !0;
        this.Di = p;
        break;
      }
    this.Mi();
    const l = o.declaration;
    (this.$i = l.$kind === 24 || l.$kind === 25) || (this.local = j(l, this.$controller.scope, a, null));
  }
  attaching(e, t, r) {
    return this.Fi(), this.Oi(e);
  }
  detaching(e, t, r) {
    return this.Mi(), this.Vi(e);
  }
  unbinding(e, t, r) {
    this.Ti.clear(), this.Ii.clear();
  }
  itemsChanged() {
    !this.$controller.isActive || (this.Mi(), this.Fi(), this.Ni(this.items, void 0));
  }
  handleCollectionChange(e, t) {
    const r = this.$controller;
    if (!!r.isActive) {
      if (this.Ei) {
        if (this.Li)
          return;
        this.Li = !0, this.items = j(this.forOf.iterable, r.scope, this.qi, null), this.Li = !1;
        return;
      }
      this.Fi(), this.Ni(e, t);
    }
  }
  Ni(e, t) {
    const r = this.views, i = r.length, s = this.key, a = s !== null;
    if (a || t === void 0) {
      const o = this.local, u = this.Ui, l = u.length, p = this.forOf, h = p.declaration, b = this.qi, C = this.$i;
      t = ea(l);
      let v = 0;
      if (i === 0)
        for (; v < l; ++v)
          t[v] = -2;
      else if (l === 0)
        if (C)
          for (v = 0; v < i; ++v)
            t.deletedIndices.push(v), t.deletedItems.push(j(h, r[v].scope, b, null));
        else
          for (v = 0; v < i; ++v)
            t.deletedIndices.push(v), t.deletedItems.push(r[v].scope.bindingContext[o]);
      else {
        const T = Array(i);
        if (C)
          for (v = 0; v < i; ++v)
            T[v] = j(h, r[v].scope, b, null);
        else
          for (v = 0; v < i; ++v)
            T[v] = r[v].scope.bindingContext[o];
        let w, M, I, F, k = 0;
        const D = i - 1, $ = l - 1, G = /* @__PURE__ */ new Map(), V = /* @__PURE__ */ new Map(), K = this.Ii, ae = this.Ti, q = this.$controller.scope;
        v = 0;
        e: {
          for (; ; ) {
            if (w = T[v], M = u[v], I = a ? Da(K, s, w, Gs(ae, T[v], p, q, b, o, C), b) : w, F = a ? Da(K, s, M, Gs(ae, u[v], p, q, b, o, C), b) : M, I !== F) {
              K.set(w, I), K.set(M, F);
              break;
            }
            if (++v, v > D || v > $)
              break e;
          }
          if (D !== $)
            break e;
          for (k = $; ; ) {
            if (w = T[k], M = u[k], I = a ? Da(K, s, w, Gs(ae, w, p, q, b, o, C), b) : w, F = a ? Da(K, s, M, Gs(ae, M, p, q, b, o, C), b) : M, I !== F) {
              K.set(w, I), K.set(M, F);
              break;
            }
            if (--k, v > k)
              break e;
          }
        }
        const oe = v, E = v;
        for (v = E; v <= $; ++v)
          K.has(M = u[v]) ? F = K.get(M) : (F = a ? Da(K, s, M, Gs(ae, M, p, q, b, o, C), b) : M, K.set(M, F)), V.set(F, v);
        for (v = oe; v <= D; ++v)
          K.has(w = T[v]) ? I = K.get(w) : I = a ? Da(K, s, w, r[v].scope, b) : w, G.set(I, v), V.has(I) ? t[V.get(I)] = v : (t.deletedIndices.push(v), t.deletedItems.push(w));
        for (v = E; v <= $; ++v)
          G.has(K.get(u[v])) || (t[v] = -2);
        G.clear(), V.clear();
      }
    }
    if (t === void 0) {
      const o = Ce(this.Vi(null), () => this.Oi(null));
      qt(o) && o.catch(Tc);
    } else {
      const o = v3(t);
      if (o.deletedIndices.length > 0) {
        const u = Ce(this.ji(o), () => this.Hi(i, o));
        qt(u) && u.catch(Tc);
      } else
        this.Hi(i, o);
    }
  }
  Mi() {
    const e = this.$controller.scope;
    let t = this.Wi, r = this.Ei, i;
    r && (t = this.Wi = j(this.Di, e, this.qi, null) ?? null, r = this.Ei = !Zu(this.items, t));
    const s = this.Pi;
    this.$controller.isActive ? (i = this.Pi = ZA(r ? t : this.items), s !== i && (s?.unsubscribe(this), i?.subscribe(this))) : (s?.unsubscribe(this), this.Pi = void 0);
  }
  Fi() {
    const { items: e } = this;
    if (_r(e)) {
      this.Ui = e;
      return;
    }
    const t = [];
    kb(e, (r, i) => {
      t[i] = r;
    }), this.Ui = t;
  }
  Oi(e) {
    let t, r, i, s;
    const { $controller: a, f: o, local: u, l, items: p, Ti: h, qi: b, forOf: C, $i: v } = this, T = a.scope, w = r8(p), M = this.views = Array(w);
    if (kb(p, (I, F) => {
      i = M[F] = o.create().setLocation(l), i.nodes.unlink(), s = Gs(h, I, C, T, b, u, v), Il(s.overrideContext, F, w), r = i.activate(e ?? i, a, 0, s), qt(r) && (t ?? (t = [])).push(r);
    }), t !== void 0)
      return t.length === 1 ? t[0] : Promise.all(t);
  }
  Vi(e) {
    let t, r, i, s = 0;
    const { views: a, $controller: o } = this, u = a.length;
    for (; u > s; ++s)
      i = a[s], i.release(), r = i.deactivate(e ?? i, o, 0), qt(r) && (t ?? (t = [])).push(r);
    if (t !== void 0)
      return t.length === 1 ? t[0] : Promise.all(t);
  }
  ji(e) {
    let t, r, i;
    const { $controller: s, views: a } = this, o = e.deletedIndices, u = o.length;
    let l = 0;
    for (; u > l; ++l)
      i = a[o[l]], i.release(), r = i.deactivate(i, s, 0), qt(r) && (t ?? (t = [])).push(r);
    l = 0;
    let p = 0;
    for (; u > l; ++l)
      p = o[l] - l, a.splice(p, 1);
    if (t !== void 0)
      return t.length === 1 ? t[0] : Promise.all(t);
  }
  Hi(e, t) {
    let r, i, s, a, o = 0;
    const { $controller: u, f: l, local: p, Ui: h, l: b, views: C, $i: v, qi: T, Ti: w, forOf: M } = this, I = t.length;
    for (; I > o; ++o)
      t[o] === -2 && (s = l.create(), C.splice(o, 0, s));
    if (C.length !== I)
      throw n8(C.length, I);
    const F = u.scope, k = t.length;
    w3(C, t);
    const D = t8(t), $ = D.length, G = M.declaration;
    let V, K = $ - 1;
    for (o = k - 1; o >= 0; --o)
      s = C[o], V = C[o + 1], s.nodes.link(V?.nodes ?? b), t[o] === -2 ? (a = Gs(w, h[o], M, F, T, p, v), Il(a.overrideContext, o, k), s.setLocation(b), i = s.activate(s, u, 0, a), qt(i) && (r ?? (r = [])).push(i)) : K < 0 || $ === 1 || o !== D[K] ? (v ? tn(G, s.scope, T, h[o]) : s.scope.bindingContext[p] = h[o], Il(s.scope.overrideContext, o, k), s.nodes.insertBefore(s.location)) : (v ? tn(G, s.scope, T, h[o]) : s.scope.bindingContext[p] = h[o], e !== k && Il(s.scope.overrideContext, o, k), --K);
    if (r !== void 0)
      return r.length === 1 ? r[0] : Promise.all(r);
  }
  dispose() {
    this.views.forEach(Z4), this.views = void 0;
  }
  accept(e) {
    const { views: t } = this;
    if (t !== void 0) {
      for (let r = 0, i = t.length; r < i; ++r)
        if (t[r].accept(e) === !0)
          return !0;
    }
  }
}
a0.inject = [Mo, Ch, wn, Td, Qn];
Y([De], a0.prototype, "items", void 0);
dr("repeat")(a0);
let _c = 16, si = new Int32Array(_c), Ol = new Int32Array(_c);
function t8(n) {
  const e = n.length;
  e > _c && (_c = e, si = new Int32Array(e), Ol = new Int32Array(e));
  let t = 0, r = 0, i = 0, s = 0, a = 0, o = 0, u = 0, l = 0;
  for (; s < e; s++)
    if (r = n[s], r !== -2) {
      if (a = si[t], i = n[a], i !== -2 && i < r) {
        Ol[s] = a, si[++t] = s;
        continue;
      }
      for (o = 0, u = t; o < u; )
        l = o + u >> 1, i = n[si[l]], i !== -2 && i < r ? o = l + 1 : u = l;
      i = n[si[o]], (r < i || i === -2) && (o > 0 && (Ol[s] = si[o - 1]), si[o] = s);
    }
  s = ++t;
  const p = new Int32Array(s);
  for (r = si[t - 1]; t-- > 0; )
    p[t] = r, r = Ol[r];
  for (; s-- > 0; )
    si[s] = 0;
  return p;
}
const n8 = (n, e) => re(`AUR0814:${n}!=${e}`), Il = (n, e, t) => {
  const r = e === 0, i = e === t - 1, s = e % 2 === 0;
  n.$index = e, n.$first = r, n.$last = i, n.$middle = !r && !i, n.$even = s, n.$odd = !s, n.$length = t;
}, Rc = Nh.toString, r8 = (n) => {
  switch (Rc.call(n)) {
    case "[object Array]":
      return n.length;
    case "[object Map]":
      return n.size;
    case "[object Set]":
      return n.size;
    case "[object Number]":
      return n;
    case "[object Null]":
      return 0;
    case "[object Undefined]":
      return 0;
    default:
      throw re(`Cannot count ${Rc.call(n)}`);
  }
}, kb = (n, e) => {
  switch (Rc.call(n)) {
    case "[object Array]":
      return i8(n, e);
    case "[object Map]":
      return s8(n, e);
    case "[object Set]":
      return a8(n, e);
    case "[object Number]":
      return o8(n, e);
    case "[object Null]":
      return;
    case "[object Undefined]":
      return;
    default:
      throw re(`Cannot iterate over ${Rc.call(n)}`);
  }
}, i8 = (n, e) => {
  const t = n.length;
  let r = 0;
  for (; r < t; ++r)
    e(n[r], r, n);
}, s8 = (n, e) => {
  let t = -0, r;
  for (r of n.entries())
    e(r, t++, n);
}, a8 = (n, e) => {
  let t = 0, r;
  for (r of n.keys())
    e(r, t++, n);
}, o8 = (n, e) => {
  let t = 0;
  for (; t < n; ++t)
    e(t, t, n);
}, Da = (n, e, t, r, i) => {
  let s = n.get(t);
  return s === void 0 && (typeof e == "string" ? s = t[e] : s = j(e, r, i, null), n.set(t, s)), s;
}, Gs = (n, e, t, r, i, s, a) => {
  let o = n.get(e);
  return o === void 0 && (a ? tn(t.declaration, o = Jt.fromParent(r, new Iy()), i, e) : o = Jt.fromParent(r, new Iy(s, e)), n.set(e, o)), o;
};
class o0 {
  constructor(e, t) {
    this.view = e.create().setLocation(t);
  }
  valueChanged(e, t, r) {
    const i = this.$controller, s = this.view.bindings;
    let a, o = 0, u = 0;
    if (i.isActive && s != null)
      for (a = Jt.fromParent(i.scope, e === void 0 ? {} : e), u = s.length; u > o; ++o)
        s[o].bind(a);
  }
  attaching(e, t, r) {
    const { $controller: i, value: s } = this, a = Jt.fromParent(i.scope, s === void 0 ? {} : s);
    return this.view.activate(e, i, r, a);
  }
  detaching(e, t, r) {
    return this.view.deactivate(e, this.$controller, r);
  }
  dispose() {
    this.view.dispose(), this.view = void 0;
  }
  accept(e) {
    if (this.view?.accept(e) === !0)
      return !0;
  }
}
o0.inject = [Qn, wn];
Y([De], o0.prototype, "value", void 0);
dr("with")(o0);
let Pc = class {
  constructor(e, t) {
    this.f = e, this.l = t, this.cases = [], this.activeCases = [], this.promise = void 0;
  }
  link(e, t, r, i) {
    this.view = this.f.create(this.$controller).setLocation(this.l);
  }
  attaching(e, t, r) {
    const i = this.view, s = this.$controller;
    return this.queue(() => i.activate(e, s, r, s.scope)), this.queue(() => this.swap(e, this.value)), this.promise;
  }
  detaching(e, t, r) {
    return this.queue(() => this.view.deactivate(e, this.$controller, r)), this.promise;
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
  valueChanged(e, t) {
    !this.$controller.isActive || this.queue(() => this.swap(null, this.value));
  }
  caseChanged(e) {
    this.queue(() => this.zi(e));
  }
  zi(e) {
    const t = e.isMatch(this.value), r = this.activeCases, i = r.length;
    if (!t)
      return i > 0 && r[0].id === e.id ? this.Gi(null) : void 0;
    if (i > 0 && r[0].id < e.id)
      return;
    const s = [];
    let a = e.fallThrough;
    if (!a)
      s.push(e);
    else {
      const o = this.cases, u = o.indexOf(e);
      for (let l = u, p = o.length; l < p && a; l++) {
        const h = o[l];
        s.push(h), a = h.fallThrough;
      }
    }
    return Ce(this.Gi(null, s), () => (this.activeCases = s, this.Xi(null)));
  }
  swap(e, t) {
    const r = [];
    let i = !1;
    for (const a of this.cases)
      if ((i || a.isMatch(t)) && (r.push(a), i = a.fallThrough), r.length > 0 && !i)
        break;
    const s = this.defaultCase;
    return r.length === 0 && s !== void 0 && r.push(s), Ce(this.activeCases.length > 0 ? this.Gi(e, r) : void 0, () => {
      if (this.activeCases = r, r.length !== 0)
        return this.Xi(e);
    });
  }
  Xi(e) {
    const t = this.$controller;
    if (!t.isActive)
      return;
    const r = this.activeCases, i = r.length;
    if (i === 0)
      return;
    const s = t.scope;
    return i === 1 ? r[0].activate(e, 0, s) : Ut(...r.map((a) => a.activate(e, 0, s)));
  }
  Gi(e, t = []) {
    const r = this.activeCases, i = r.length;
    if (i !== 0) {
      if (i === 1) {
        const s = r[0];
        return t.includes(s) ? void 0 : (r.length = 0, s.deactivate(e, 0));
      }
      return Ce(Ut(...r.reduce((s, a) => (t.includes(a) || s.push(a.deactivate(e, 0)), s), [])), () => {
        r.length = 0;
      });
    }
  }
  queue(e) {
    const t = this.promise;
    let r;
    r = this.promise = Ce(Ce(t, e), () => {
      this.promise === r && (this.promise = void 0);
    });
  }
  accept(e) {
    if (this.$controller.accept(e) === !0 || this.activeCases.some((t) => t.accept(e)))
      return !0;
  }
};
Y([De], Pc.prototype, "value", void 0);
Pc = Y([dr("switch"), cn(0, Qn), cn(1, wn)], Pc);
let u8 = 0, ao = class {
  constructor(e, t, r, i) {
    this.f = e, this.Ki = t, this.l = r, this.id = ++u8, this.fallThrough = !1, this.view = void 0, this.Qi = i.config.level <= 1, this.Oe = i.scopeTo(`${this.constructor.name}-#${this.id}`);
  }
  link(e, t, r, i) {
    const a = e.parent?.viewModel;
    if (a instanceof Pc)
      this.$switch = a, this.linkToSwitch(a);
    else
      throw re("AUR0815");
  }
  detaching(e, t, r) {
    return this.deactivate(e, r);
  }
  isMatch(e) {
    this.Oe.debug("isMatch()");
    const t = this.value;
    return _r(t) ? (this.Pi === void 0 && (this.Pi = this.Yi(t)), t.includes(e)) : t === e;
  }
  valueChanged(e, t) {
    _r(e) ? (this.Pi?.unsubscribe(this), this.Pi = this.Yi(e)) : this.Pi !== void 0 && this.Pi.unsubscribe(this), this.$switch.caseChanged(this);
  }
  handleCollectionChange() {
    this.$switch.caseChanged(this);
  }
  activate(e, t, r) {
    let i = this.view;
    if (i === void 0 && (i = this.view = this.f.create().setLocation(this.l)), !i.isActive)
      return i.activate(e ?? i, this.$controller, t, r);
  }
  deactivate(e, t) {
    const r = this.view;
    if (!(r === void 0 || !r.isActive))
      return r.deactivate(e ?? r, this.$controller, t);
  }
  dispose() {
    this.Pi?.unsubscribe(this), this.view?.dispose(), this.view = void 0;
  }
  linkToSwitch(e) {
    e.cases.push(this);
  }
  Yi(e) {
    const t = this.Ki.getArrayObserver(e);
    return t.subscribe(this), t;
  }
  accept(e) {
    return this.$controller.accept(e) === !0 ? !0 : this.view?.accept(e);
  }
};
ao.inject = [Qn, va, wn, xa];
Y([De], ao.prototype, "value", void 0);
Y([De({
  set: (n) => {
    switch (n) {
      case "true":
        return !0;
      case "false":
        return !1;
      default:
        return !!n;
    }
  },
  mode: 1
})], ao.prototype, "fallThrough", void 0);
ao = Y([dr("case")], ao);
let Db = class extends ao {
  linkToSwitch(e) {
    if (e.defaultCase !== void 0)
      throw re("AUR0816");
    e.defaultCase = this;
  }
};
Db = Y([dr("default-case")], Db);
let Oc = class {
  constructor(e, t, r, i) {
    this.f = e, this.l = t, this.p = r, this.preSettledTask = null, this.postSettledTask = null, this.logger = i.scopeTo("promise.resolve");
  }
  link(e, t, r, i) {
    this.view = this.f.create(this.$controller).setLocation(this.l);
  }
  attaching(e, t, r) {
    const i = this.view, s = this.$controller;
    return Ce(i.activate(e, s, r, this.viewScope = Jt.fromParent(s.scope, {})), () => this.swap(e, r));
  }
  valueChanged(e, t, r) {
    !this.$controller.isActive || this.swap(null, r);
  }
  swap(e, t) {
    const r = this.value;
    if (!qt(r)) {
      this.logger.warn(`The value '${String(r)}' is not a promise. No change will be done.`);
      return;
    }
    const i = this.p.domWriteQueue, s = this.fulfilled, a = this.rejected, o = this.pending, u = this.viewScope;
    let l;
    const p = {
      reusable: !1
    }, h = () => {
      Ut(l = (this.preSettledTask = i.queueTask(() => Ut(s?.deactivate(e, t), a?.deactivate(e, t), o?.activate(e, t, u)), p)).result.catch((b) => {
        if (!(b instanceof rC))
          throw b;
      }), r.then((b) => {
        if (this.value !== r)
          return;
        const C = () => {
          this.postSettlePromise = (this.postSettledTask = i.queueTask(() => Ut(o?.deactivate(e, t), a?.deactivate(e, t), s?.activate(e, t, u, b)), p)).result;
        };
        this.preSettledTask.status === 1 ? l.then(C) : (this.preSettledTask.cancel(), C());
      }, (b) => {
        if (this.value !== r)
          return;
        const C = () => {
          this.postSettlePromise = (this.postSettledTask = i.queueTask(() => Ut(o?.deactivate(e, t), s?.deactivate(e, t), a?.activate(e, t, u, b)), p)).result;
        };
        this.preSettledTask.status === 1 ? l.then(C) : (this.preSettledTask.cancel(), C());
      }));
    };
    this.postSettledTask?.status === 1 ? this.postSettlePromise.then(h) : (this.postSettledTask?.cancel(), h());
  }
  detaching(e, t, r) {
    return this.preSettledTask?.cancel(), this.postSettledTask?.cancel(), this.preSettledTask = this.postSettledTask = null, this.view.deactivate(e, this.$controller, r);
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
};
Y([De], Oc.prototype, "value", void 0);
Oc = Y([dr("promise"), cn(0, Qn), cn(1, wn), cn(2, An), cn(3, xa)], Oc);
let _f = class {
  constructor(e, t) {
    this.f = e, this.l = t, this.view = void 0;
  }
  link(e, t, r, i) {
    u0(e).pending = this;
  }
  activate(e, t, r) {
    let i = this.view;
    if (i === void 0 && (i = this.view = this.f.create().setLocation(this.l)), !i.isActive)
      return i.activate(i, this.$controller, t, r);
  }
  deactivate(e, t) {
    const r = this.view;
    if (!(r === void 0 || !r.isActive))
      return r.deactivate(r, this.$controller, t);
  }
  detaching(e, t, r) {
    return this.deactivate(e, r);
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
};
Y([De({
  mode: 2
})], _f.prototype, "value", void 0);
_f = Y([dr("pending"), cn(0, Qn), cn(1, wn)], _f);
let Rf = class {
  constructor(e, t) {
    this.f = e, this.l = t, this.view = void 0;
  }
  link(e, t, r, i) {
    u0(e).fulfilled = this;
  }
  activate(e, t, r, i) {
    this.value = i;
    let s = this.view;
    if (s === void 0 && (s = this.view = this.f.create().setLocation(this.l)), !s.isActive)
      return s.activate(s, this.$controller, t, r);
  }
  deactivate(e, t) {
    const r = this.view;
    if (!(r === void 0 || !r.isActive))
      return r.deactivate(r, this.$controller, t);
  }
  detaching(e, t, r) {
    return this.deactivate(e, r);
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
};
Y([De({
  mode: 4
})], Rf.prototype, "value", void 0);
Rf = Y([dr("then"), cn(0, Qn), cn(1, wn)], Rf);
let Pf = class {
  constructor(e, t) {
    this.f = e, this.l = t, this.view = void 0;
  }
  link(e, t, r, i) {
    u0(e).rejected = this;
  }
  activate(e, t, r, i) {
    this.value = i;
    let s = this.view;
    if (s === void 0 && (s = this.view = this.f.create().setLocation(this.l)), !s.isActive)
      return s.activate(s, this.$controller, t, r);
  }
  deactivate(e, t) {
    const r = this.view;
    if (!(r === void 0 || !r.isActive))
      return r.deactivate(r, this.$controller, t);
  }
  detaching(e, t, r) {
    return this.deactivate(e, r);
  }
  dispose() {
    this.view?.dispose(), this.view = void 0;
  }
};
Y([De({
  mode: 4
})], Pf.prototype, "value", void 0);
Pf = Y([dr("catch"), cn(0, Qn), cn(1, wn)], Pf);
function u0(n) {
  const t = n.parent?.viewModel;
  if (t instanceof Oc)
    return t;
  throw re("AUR0813");
}
let Bb = class {
  "promise.resolve"(e, t, r) {
    return new lr(e, t, "promise", "bind");
  }
};
Bb = Y([Pi({
  pattern: "promise.resolve",
  symbols: ""
})], Bb);
let Fb = class {
  then(e, t, r) {
    return new lr(e, t, "then", "from-view");
  }
};
Fb = Y([Pi({
  pattern: "then",
  symbols: ""
})], Fb);
let Nb = class {
  catch(e, t, r) {
    return new lr(e, t, "catch", "from-view");
  }
};
Nb = Y([Pi({
  pattern: "catch",
  symbols: ""
})], Nb);
class ll {
  constructor(e, t, r, i, s, a, o) {
    this.c = e, this.parent = t, this.host = r, this.l = i, this.p = s, this.scopeBehavior = "auto", this.Zi = void 0, this.r = e.get(Ca), this.Ji = a, this.ts = o;
  }
  static get inject() {
    return [xo, Td, io, wn, An, Mo, o1(c8)];
  }
  get pending() {
    return this.es;
  }
  get composition() {
    return this.Zi;
  }
  attaching(e, t, r) {
    return this.es = Ce(this.queue(new $b(this.view, this.viewModel, this.model, void 0), e), (i) => {
      this.ts.isCurrent(i) && (this.es = void 0);
    });
  }
  detaching(e) {
    const t = this.Zi, r = this.es;
    return this.ts.invalidate(), this.Zi = this.es = void 0, Ce(r, () => t?.deactivate(e));
  }
  propertyChanged(e) {
    if (e === "model" && this.Zi != null) {
      this.Zi.update(this.model);
      return;
    }
    this.es = Ce(this.es, () => Ce(this.queue(new $b(this.view, this.viewModel, this.model, e), void 0), (t) => {
      this.ts.isCurrent(t) && (this.es = void 0);
    }));
  }
  queue(e, t) {
    const r = this.ts, i = this.Zi;
    return Ce(r.create(e), (s) => r.isCurrent(s) ? Ce(this.compose(s), (a) => r.isCurrent(s) ? Ce(a.activate(t), () => r.isCurrent(s) ? (this.Zi = a, Ce(i?.deactivate(t), () => s)) : Ce(a.controller.deactivate(a.controller, this.$controller, 2), () => (a.controller.dispose(), s))) : (a.controller.dispose(), s)) : s);
  }
  compose(e) {
    let t, r, i;
    const { view: s, viewModel: a, model: o } = e.change, { c: u, host: l, $controller: p, l: h } = this, b = this.getDef(a), C = u.createChild(), v = h == null ? l.parentNode : h.parentNode;
    if (b !== null) {
      if (b.containerless)
        throw re("AUR0806");
      h == null ? (r = l, i = () => {
      }) : (r = v.insertBefore(this.p.document.createElement(b.name), h), i = () => {
        r.remove();
      }), t = this.getVm(C, a, r);
    } else
      r = h ?? l, t = this.getVm(C, a, r);
    const T = () => {
      if (b !== null) {
        const w = ir.$el(C, t, r, {
          projections: this.Ji.projections
        }, b);
        return new Ub(w, (M) => w.activate(M ?? w, p, 1, p.scope.parent), (M) => Ce(w.deactivate(M ?? w, p, 2), i), (M) => t.activate?.(M), e);
      } else {
        const w = $r.create({
          name: Ya.generateName(),
          template: s
        }), M = this.r.getViewFactory(w, C), I = ir.$view(M, p), F = this.scopeBehavior === "auto" ? Jt.fromParent(this.parent.scope, t) : Jt.create(t);
        return Mc(r) ? I.setLocation(r) : I.setHost(r), new Ub(I, (k) => I.activate(k ?? I, p, 1, F), (k) => I.deactivate(k ?? I, p, 2), (k) => t.activate?.(k), e);
      }
    };
    return "activate" in t ? Ce(t.activate(o), () => T()) : T();
  }
  getVm(e, t, r) {
    if (t == null)
      return new l8();
    if (typeof t == "object")
      return t;
    const i = this.p, s = Mc(r);
    xt(e, i.Element, xt(e, io, new on("ElementResolver", s ? null : r))), xt(e, wn, new on("IRenderLocation", s ? r : null));
    const a = e.invoke(t);
    return xt(e, t, new on("au-compose.viewModel", a)), a;
  }
  getDef(e) {
    const t = On(e) ? e : e?.constructor;
    return Ya.isType(t) ? Ya.getDefinition(t) : null;
  }
}
Y([De], ll.prototype, "view", void 0);
Y([De], ll.prototype, "viewModel", void 0);
Y([De], ll.prototype, "model", void 0);
Y([De({
  set: (n) => {
    if (n === "scoped" || n === "auto")
      return n;
    throw re("AUR0805");
  }
})], ll.prototype, "scopeBehavior", void 0);
bx("au-compose")(ll);
class l8 {
}
class c8 {
  constructor() {
    this.id = 0;
  }
  isCurrent(e) {
    return e.id === this.id;
  }
  create(e) {
    return Ce(e.load(), (t) => new d8(++this.id, t));
  }
  invalidate() {
    this.id++;
  }
}
class $b {
  constructor(e, t, r, i) {
    this.view = e, this.viewModel = t, this.model = r, this.src = i;
  }
  load() {
    return qt(this.view) || qt(this.viewModel) ? Promise.all([this.view, this.viewModel]).then(([e, t]) => new Lb(e, t, this.model, this.src)) : new Lb(this.view, this.viewModel, this.model, this.src);
  }
}
class Lb {
  constructor(e, t, r, i) {
    this.view = e, this.viewModel = t, this.model = r, this.src = i;
  }
}
class d8 {
  constructor(e, t) {
    this.id = e, this.change = t;
  }
}
class Ub {
  constructor(e, t, r, i, s) {
    this.controller = e, this.start = t, this.stop = r, this.update = i, this.context = s, this.state = 0;
  }
  activate(e) {
    if (this.state !== 0)
      throw re(`AUR0807:${this.controller.name}`);
    return this.state = 1, this.start(e);
  }
  deactivate(e) {
    switch (this.state) {
      case 1:
        return this.state = -1, this.stop(e);
      case -1:
        throw re("AUR0808");
      default:
        this.state = -1;
    }
  }
}
let Of = class {
  constructor(e, t, r, i) {
    this.ss = null, this.rs = null;
    let s;
    const a = t.auSlot, o = r.instruction?.projections?.[a.name];
    o == null ? (s = i.getViewFactory(a.fallback, r.controller.container), this.os = !1) : (s = i.getViewFactory(o, r.parent.controller.container), this.os = !0), this.ls = r, this.view = s.create().setLocation(e);
  }
  static get inject() {
    return [wn, Mo, Sc, Ca];
  }
  binding(e, t, r) {
    this.ss = this.$controller.scope.parent;
    let i;
    this.os && (i = this.ls.controller.scope.parent, (this.rs = Jt.fromParent(i, i.bindingContext)).overrideContext.$host = this.expose ?? this.ss.bindingContext);
  }
  attaching(e, t, r) {
    return this.view.activate(e, this.$controller, r, this.os ? this.rs : this.ss);
  }
  detaching(e, t, r) {
    return this.view.deactivate(e, this.$controller, r);
  }
  exposeChanged(e) {
    this.os && this.rs != null && (this.rs.overrideContext.$host = e);
  }
  dispose() {
    this.view.dispose(), this.view = void 0;
  }
  accept(e) {
    if (this.view?.accept(e) === !0)
      return !0;
  }
};
Y([De], Of.prototype, "expose", void 0);
Of = Y([bx({
  name: "au-slot",
  template: null,
  containerless: !0
})], Of);
const p8 = Me("ISanitizer", (n) => n.singleton(class {
  sanitize() {
    throw re('"sanitize" method not implemented');
  }
}));
let If = class {
  constructor(e) {
    this.cs = e;
  }
  toView(e) {
    return e == null ? null : this.cs.sanitize(e);
  }
};
If = Y([cn(0, p8)], If);
nl("sanitize")(If);
Me("IAurelia");
var Vb;
(function(n) {
  n[n.oneTime = 1] = "oneTime", n[n.toView = 2] = "toView", n[n.fromView = 4] = "fromView", n[n.twoWay = 6] = "twoWay", n[n.default = 8] = "default";
})(Vb || (Vb = {}));
var jb;
(function(n) {
  n[n.Element = 1] = "Element", n[n.Attribute = 2] = "Attribute";
})(jb || (jb = {}));
function os(n) {
  return os = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, os(n);
}
function f8(n, e, t) {
  return e in n ? Object.defineProperty(n, e, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : n[e] = t, n;
}
function Rn(n) {
  for (var e = 1; e < arguments.length; e++) {
    var t = arguments[e] != null ? Object(arguments[e]) : {}, r = Object.keys(t);
    typeof Object.getOwnPropertySymbols == "function" && r.push.apply(r, Object.getOwnPropertySymbols(t).filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), r.forEach(function(i) {
      f8(n, i, t[i]);
    });
  }
  return n;
}
function ki(n, e) {
  if (!(n instanceof e))
    throw new TypeError("Cannot call a class as a function");
}
function zb(n, e) {
  for (var t = 0; t < e.length; t++) {
    var r = e[t];
    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(n, r.key, r);
  }
}
function Di(n, e, t) {
  return e && zb(n.prototype, e), t && zb(n, t), Object.defineProperty(n, "prototype", {
    writable: !1
  }), n;
}
function ra(n) {
  if (n === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return n;
}
function Eu(n, e) {
  if (e && (os(e) === "object" || typeof e == "function"))
    return e;
  if (e !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return ra(n);
}
function oo(n) {
  return oo = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, oo(n);
}
function kf(n, e) {
  return kf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(r, i) {
    return r.__proto__ = i, r;
  }, kf(n, e);
}
function Sd(n, e) {
  if (typeof e != "function" && e !== null)
    throw new TypeError("Super expression must either be null or a function");
  n.prototype = Object.create(e && e.prototype, {
    constructor: {
      value: n,
      writable: !0,
      configurable: !0
    }
  }), Object.defineProperty(n, "prototype", {
    writable: !1
  }), e && kf(n, e);
}
function Df(n, e) {
  (e == null || e > n.length) && (e = n.length);
  for (var t = 0, r = new Array(e); t < e; t++)
    r[t] = n[t];
  return r;
}
function h8(n) {
  if (Array.isArray(n))
    return Df(n);
}
function y8(n) {
  if (typeof Symbol < "u" && n[Symbol.iterator] != null || n["@@iterator"] != null)
    return Array.from(n);
}
function Wx(n, e) {
  if (!!n) {
    if (typeof n == "string")
      return Df(n, e);
    var t = Object.prototype.toString.call(n).slice(8, -1);
    if (t === "Object" && n.constructor && (t = n.constructor.name), t === "Map" || t === "Set")
      return Array.from(n);
    if (t === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))
      return Df(n, e);
  }
}
function m8() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function b8(n) {
  return h8(n) || y8(n) || Wx(n) || m8();
}
function g8(n) {
  if (Array.isArray(n))
    return n;
}
function x8(n, e) {
  var t = n == null ? null : typeof Symbol < "u" && n[Symbol.iterator] || n["@@iterator"];
  if (t != null) {
    var r = [], i = !0, s = !1, a, o;
    try {
      for (t = t.call(n); !(i = (a = t.next()).done) && (r.push(a.value), !(e && r.length === e)); i = !0)
        ;
    } catch (u) {
      s = !0, o = u;
    } finally {
      try {
        !i && t.return != null && t.return();
      } finally {
        if (s)
          throw o;
      }
    }
    return r;
  }
}
function v8() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Gb(n, e) {
  return g8(n) || x8(n, e) || Wx(n, e) || v8();
}
var w8 = {
  type: "logger",
  log: function(e) {
    this.output("log", e);
  },
  warn: function(e) {
    this.output("warn", e);
  },
  error: function(e) {
    this.output("error", e);
  },
  output: function(e, t) {
    var r;
    console && console[e] && (r = console)[e].apply(r, b8(t));
  }
}, T8 = /* @__PURE__ */ function() {
  function n(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    ki(this, n), this.init(e, t);
  }
  return Di(n, [{
    key: "init",
    value: function(t) {
      var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      this.prefix = r.prefix || "i18next:", this.logger = t || w8, this.options = r, this.debug = r.debug;
    }
  }, {
    key: "setDebug",
    value: function(t) {
      this.debug = t;
    }
  }, {
    key: "log",
    value: function() {
      for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++)
        r[i] = arguments[i];
      return this.forward(r, "log", "", !0);
    }
  }, {
    key: "warn",
    value: function() {
      for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++)
        r[i] = arguments[i];
      return this.forward(r, "warn", "", !0);
    }
  }, {
    key: "error",
    value: function() {
      for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++)
        r[i] = arguments[i];
      return this.forward(r, "error", "");
    }
  }, {
    key: "deprecate",
    value: function() {
      for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++)
        r[i] = arguments[i];
      return this.forward(r, "warn", "WARNING DEPRECATED: ", !0);
    }
  }, {
    key: "forward",
    value: function(t, r, i, s) {
      return s && !this.debug ? null : (typeof t[0] == "string" && (t[0] = "".concat(i).concat(this.prefix, " ").concat(t[0])), this.logger[r](t));
    }
  }, {
    key: "create",
    value: function(t) {
      return new n(this.logger, Rn({}, {
        prefix: "".concat(this.prefix, ":").concat(t, ":")
      }, this.options));
    }
  }]), n;
}(), fi = new T8(), hs = /* @__PURE__ */ function() {
  function n() {
    ki(this, n), this.observers = {};
  }
  return Di(n, [{
    key: "on",
    value: function(t, r) {
      var i = this;
      return t.split(" ").forEach(function(s) {
        i.observers[s] = i.observers[s] || [], i.observers[s].push(r);
      }), this;
    }
  }, {
    key: "off",
    value: function(t, r) {
      if (!!this.observers[t]) {
        if (!r) {
          delete this.observers[t];
          return;
        }
        this.observers[t] = this.observers[t].filter(function(i) {
          return i !== r;
        });
      }
    }
  }, {
    key: "emit",
    value: function(t) {
      for (var r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), s = 1; s < r; s++)
        i[s - 1] = arguments[s];
      if (this.observers[t]) {
        var a = [].concat(this.observers[t]);
        a.forEach(function(u) {
          u.apply(void 0, i);
        });
      }
      if (this.observers["*"]) {
        var o = [].concat(this.observers["*"]);
        o.forEach(function(u) {
          u.apply(u, [t].concat(i));
        });
      }
    }
  }]), n;
}();
function jo() {
  var n, e, t = new Promise(function(r, i) {
    n = r, e = i;
  });
  return t.resolve = n, t.reject = e, t;
}
function Dp(n) {
  return n == null ? "" : "" + n;
}
function A8(n, e, t) {
  n.forEach(function(r) {
    e[r] && (t[r] = e[r]);
  });
}
function l0(n, e, t) {
  function r(o) {
    return o && o.indexOf("###") > -1 ? o.replace(/###/g, ".") : o;
  }
  function i() {
    return !n || typeof n == "string";
  }
  for (var s = typeof e != "string" ? [].concat(e) : e.split("."); s.length > 1; ) {
    if (i())
      return {};
    var a = r(s.shift());
    !n[a] && t && (n[a] = new t()), n = n[a];
  }
  return i() ? {} : {
    obj: n,
    k: r(s.shift())
  };
}
function Wb(n, e, t) {
  var r = l0(n, e, Object), i = r.obj, s = r.k;
  i[s] = t;
}
function C8(n, e, t, r) {
  var i = l0(n, e, Object), s = i.obj, a = i.k;
  s[a] = s[a] || [], r && (s[a] = s[a].concat(t)), r || s[a].push(t);
}
function Ic(n, e) {
  var t = l0(n, e), r = t.obj, i = t.k;
  if (!!r)
    return r[i];
}
function Hb(n, e, t) {
  var r = Ic(n, t);
  return r !== void 0 ? r : Ic(e, t);
}
function Hx(n, e, t) {
  for (var r in e)
    r in n ? typeof n[r] == "string" || n[r] instanceof String || typeof e[r] == "string" || e[r] instanceof String ? t && (n[r] = e[r]) : Hx(n[r], e[r], t) : n[r] = e[r];
  return n;
}
function Ba(n) {
  return n.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
}
var S8 = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;"
};
function E8(n) {
  return typeof n == "string" ? n.replace(/[&<>"'\/]/g, function(e) {
    return S8[e];
  }) : n;
}
var M8 = /* @__PURE__ */ function(n) {
  Sd(e, n);
  function e(t) {
    var r, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      ns: ["translation"],
      defaultNS: "translation"
    };
    return ki(this, e), r = Eu(this, oo(e).call(this)), hs.call(ra(r)), r.data = t || {}, r.options = i, r.options.keySeparator === void 0 && (r.options.keySeparator = "."), r;
  }
  return Di(e, [{
    key: "addNamespaces",
    value: function(r) {
      this.options.ns.indexOf(r) < 0 && this.options.ns.push(r);
    }
  }, {
    key: "removeNamespaces",
    value: function(r) {
      var i = this.options.ns.indexOf(r);
      i > -1 && this.options.ns.splice(i, 1);
    }
  }, {
    key: "getResource",
    value: function(r, i, s) {
      var a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, o = a.keySeparator !== void 0 ? a.keySeparator : this.options.keySeparator, u = [r, i];
      return s && typeof s != "string" && (u = u.concat(s)), s && typeof s == "string" && (u = u.concat(o ? s.split(o) : s)), r.indexOf(".") > -1 && (u = r.split(".")), Ic(this.data, u);
    }
  }, {
    key: "addResource",
    value: function(r, i, s, a) {
      var o = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
        silent: !1
      }, u = this.options.keySeparator;
      u === void 0 && (u = ".");
      var l = [r, i];
      s && (l = l.concat(u ? s.split(u) : s)), r.indexOf(".") > -1 && (l = r.split("."), a = i, i = l[1]), this.addNamespaces(i), Wb(this.data, l, a), o.silent || this.emit("added", r, i, s, a);
    }
  }, {
    key: "addResources",
    value: function(r, i, s) {
      var a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
        silent: !1
      };
      for (var o in s)
        (typeof s[o] == "string" || Object.prototype.toString.apply(s[o]) === "[object Array]") && this.addResource(r, i, o, s[o], {
          silent: !0
        });
      a.silent || this.emit("added", r, i, s);
    }
  }, {
    key: "addResourceBundle",
    value: function(r, i, s, a, o) {
      var u = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
        silent: !1
      }, l = [r, i];
      r.indexOf(".") > -1 && (l = r.split("."), a = s, s = i, i = l[1]), this.addNamespaces(i);
      var p = Ic(this.data, l) || {};
      a ? Hx(p, s, o) : p = Rn({}, p, s), Wb(this.data, l, p), u.silent || this.emit("added", r, i, s);
    }
  }, {
    key: "removeResourceBundle",
    value: function(r, i) {
      this.hasResourceBundle(r, i) && delete this.data[r][i], this.removeNamespaces(i), this.emit("removed", r, i);
    }
  }, {
    key: "hasResourceBundle",
    value: function(r, i) {
      return this.getResource(r, i) !== void 0;
    }
  }, {
    key: "getResourceBundle",
    value: function(r, i) {
      return i || (i = this.options.defaultNS), this.options.compatibilityAPI === "v1" ? Rn({}, {}, this.getResource(r, i)) : this.getResource(r, i);
    }
  }, {
    key: "getDataByLanguage",
    value: function(r) {
      return this.data[r];
    }
  }, {
    key: "toJSON",
    value: function() {
      return this.data;
    }
  }]), e;
}(hs), Kx = {
  processors: {},
  addPostProcessor: function(e) {
    this.processors[e.name] = e;
  },
  handle: function(e, t, r, i, s) {
    var a = this;
    return e.forEach(function(o) {
      a.processors[o] && (t = a.processors[o].process(t, r, i, s));
    }), t;
  }
}, Kb = /* @__PURE__ */ function(n) {
  Sd(e, n);
  function e(t) {
    var r, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return ki(this, e), r = Eu(this, oo(e).call(this)), hs.call(ra(r)), A8(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], t, ra(r)), r.options = i, r.options.keySeparator === void 0 && (r.options.keySeparator = "."), r.logger = fi.create("translator"), r;
  }
  return Di(e, [{
    key: "changeLanguage",
    value: function(r) {
      r && (this.language = r);
    }
  }, {
    key: "exists",
    value: function(r) {
      var i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
        interpolation: {}
      }, s = this.resolve(r, i);
      return s && s.res !== void 0;
    }
  }, {
    key: "extractFromKey",
    value: function(r, i) {
      var s = i.nsSeparator || this.options.nsSeparator;
      s === void 0 && (s = ":");
      var a = i.keySeparator !== void 0 ? i.keySeparator : this.options.keySeparator, o = i.ns || this.options.defaultNS;
      if (s && r.indexOf(s) > -1) {
        var u = r.split(s);
        (s !== a || s === a && this.options.ns.indexOf(u[0]) > -1) && (o = u.shift()), r = u.join(a);
      }
      return typeof o == "string" && (o = [o]), {
        key: r,
        namespaces: o
      };
    }
  }, {
    key: "translate",
    value: function(r, i) {
      var s = this;
      if (os(i) !== "object" && this.options.overloadTranslationOptionHandler && (i = this.options.overloadTranslationOptionHandler(arguments)), i || (i = {}), r == null)
        return "";
      Array.isArray(r) || (r = [String(r)]);
      var a = i.keySeparator !== void 0 ? i.keySeparator : this.options.keySeparator, o = this.extractFromKey(r[r.length - 1], i), u = o.key, l = o.namespaces, p = l[l.length - 1], h = i.lng || this.language, b = i.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
      if (h && h.toLowerCase() === "cimode") {
        if (b) {
          var C = i.nsSeparator || this.options.nsSeparator;
          return p + C + u;
        }
        return u;
      }
      var v = this.resolve(r, i), T = v && v.res, w = v && v.usedKey || u, M = v && v.exactUsedKey || u, I = Object.prototype.toString.apply(T), F = ["[object Number]", "[object Function]", "[object RegExp]"], k = i.joinArrays !== void 0 ? i.joinArrays : this.options.joinArrays, D = !this.i18nFormat || this.i18nFormat.handleAsObject, $ = typeof T != "string" && typeof T != "boolean" && typeof T != "number";
      if (D && T && $ && F.indexOf(I) < 0 && !(typeof k == "string" && I === "[object Array]")) {
        if (!i.returnObjects && !this.options.returnObjects)
          return this.logger.warn("accessing an object - but returnObjects options is not enabled!"), this.options.returnedObjectHandler ? this.options.returnedObjectHandler(w, T, i) : "key '".concat(u, " (").concat(this.language, ")' returned an object instead of string.");
        if (a) {
          var G = I === "[object Array]", V = G ? [] : {}, K = G ? M : w;
          for (var ae in T)
            if (Object.prototype.hasOwnProperty.call(T, ae)) {
              var q = "".concat(K).concat(a).concat(ae);
              V[ae] = this.translate(q, Rn({}, i, {
                joinArrays: !1,
                ns: l
              })), V[ae] === q && (V[ae] = T[ae]);
            }
          T = V;
        }
      } else if (D && typeof k == "string" && I === "[object Array]")
        T = T.join(k), T && (T = this.extendTranslation(T, r, i));
      else {
        var oe = !1, E = !1;
        if (!this.isValidLookup(T) && i.defaultValue !== void 0) {
          if (oe = !0, i.count !== void 0) {
            var c = this.pluralResolver.getSuffix(h, i.count);
            T = i["defaultValue".concat(c)];
          }
          T || (T = i.defaultValue);
        }
        this.isValidLookup(T) || (E = !0, T = u);
        var y = i.defaultValue && i.defaultValue !== T && this.options.updateMissing;
        if (E || oe || y) {
          this.logger.log(y ? "updateKey" : "missingKey", h, p, u, y ? i.defaultValue : T);
          var x = [], S = this.languageUtils.getFallbackCodes(this.options.fallbackLng, i.lng || this.language);
          if (this.options.saveMissingTo === "fallback" && S && S[0])
            for (var A = 0; A < S.length; A++)
              x.push(S[A]);
          else
            this.options.saveMissingTo === "all" ? x = this.languageUtils.toResolveHierarchy(i.lng || this.language) : x.push(i.lng || this.language);
          var _ = function(d, g) {
            s.options.missingKeyHandler ? s.options.missingKeyHandler(d, p, g, y ? i.defaultValue : T, y, i) : s.backendConnector && s.backendConnector.saveMissing && s.backendConnector.saveMissing(d, p, g, y ? i.defaultValue : T, y, i), s.emit("missingKey", d, p, g, T);
          };
          if (this.options.saveMissing) {
            var P = i.count !== void 0 && typeof i.count != "string";
            this.options.saveMissingPlurals && P ? x.forEach(function(m) {
              var d = s.pluralResolver.getPluralFormsOfKey(m, u);
              d.forEach(function(g) {
                return _([m], g);
              });
            }) : _(x, u);
          }
        }
        T = this.extendTranslation(T, r, i, v), E && T === u && this.options.appendNamespaceToMissingKey && (T = "".concat(p, ":").concat(u)), E && this.options.parseMissingKeyHandler && (T = this.options.parseMissingKeyHandler(T));
      }
      return T;
    }
  }, {
    key: "extendTranslation",
    value: function(r, i, s, a) {
      var o = this;
      if (this.i18nFormat && this.i18nFormat.parse)
        r = this.i18nFormat.parse(r, s, a.usedLng, a.usedNS, a.usedKey, {
          resolved: a
        });
      else if (!s.skipInterpolation) {
        s.interpolation && this.interpolator.init(Rn({}, s, {
          interpolation: Rn({}, this.options.interpolation, s.interpolation)
        }));
        var u = s.replace && typeof s.replace != "string" ? s.replace : s;
        this.options.interpolation.defaultVariables && (u = Rn({}, this.options.interpolation.defaultVariables, u)), r = this.interpolator.interpolate(r, u, s.lng || this.language, s), s.nest !== !1 && (r = this.interpolator.nest(r, function() {
          return o.translate.apply(o, arguments);
        }, s)), s.interpolation && this.interpolator.reset();
      }
      var l = s.postProcess || this.options.postProcess, p = typeof l == "string" ? [l] : l;
      return r != null && p && p.length && s.applyPostProcessor !== !1 && (r = Kx.handle(p, r, i, this.options && this.options.postProcessPassResolved ? Rn({
        i18nResolved: a
      }, s) : s, this)), r;
    }
  }, {
    key: "resolve",
    value: function(r) {
      var i = this, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, a, o, u, l, p;
      return typeof r == "string" && (r = [r]), r.forEach(function(h) {
        if (!i.isValidLookup(a)) {
          var b = i.extractFromKey(h, s), C = b.key;
          o = C;
          var v = b.namespaces;
          i.options.fallbackNS && (v = v.concat(i.options.fallbackNS));
          var T = s.count !== void 0 && typeof s.count != "string", w = s.context !== void 0 && typeof s.context == "string" && s.context !== "", M = s.lngs ? s.lngs : i.languageUtils.toResolveHierarchy(s.lng || i.language, s.fallbackLng);
          v.forEach(function(I) {
            i.isValidLookup(a) || (p = I, i.utils && i.utils.hasLoadedNamespace && !i.utils.hasLoadedNamespace(p) && i.logger.warn('key "'.concat(o, '" for namespace "').concat(p, `" won't get resolved as namespace was not yet loaded`), "This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"), M.forEach(function(F) {
              if (!i.isValidLookup(a)) {
                l = F;
                var k = C, D = [k];
                if (i.i18nFormat && i.i18nFormat.addLookupKeys)
                  i.i18nFormat.addLookupKeys(D, C, F, I, s);
                else {
                  var $;
                  T && ($ = i.pluralResolver.getSuffix(F, s.count)), T && w && D.push(k + $), w && D.push(k += "".concat(i.options.contextSeparator).concat(s.context)), T && D.push(k += $);
                }
                for (var G; G = D.pop(); )
                  i.isValidLookup(a) || (u = G, a = i.getResource(F, I, G, s));
              }
            }));
          });
        }
      }), {
        res: a,
        usedKey: o,
        exactUsedKey: u,
        usedLng: l,
        usedNS: p
      };
    }
  }, {
    key: "isValidLookup",
    value: function(r) {
      return r !== void 0 && !(!this.options.returnNull && r === null) && !(!this.options.returnEmptyString && r === "");
    }
  }, {
    key: "getResource",
    value: function(r, i, s) {
      var a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
      return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(r, i, s, a) : this.resourceStore.getResource(r, i, s, a);
    }
  }]), e;
}(hs);
function Bp(n) {
  return n.charAt(0).toUpperCase() + n.slice(1);
}
var _8 = /* @__PURE__ */ function() {
  function n(e) {
    ki(this, n), this.options = e, this.whitelist = this.options.whitelist || !1, this.logger = fi.create("languageUtils");
  }
  return Di(n, [{
    key: "getScriptPartFromCode",
    value: function(t) {
      if (!t || t.indexOf("-") < 0)
        return null;
      var r = t.split("-");
      return r.length === 2 ? null : (r.pop(), this.formatLanguageCode(r.join("-")));
    }
  }, {
    key: "getLanguagePartFromCode",
    value: function(t) {
      if (!t || t.indexOf("-") < 0)
        return t;
      var r = t.split("-");
      return this.formatLanguageCode(r[0]);
    }
  }, {
    key: "formatLanguageCode",
    value: function(t) {
      if (typeof t == "string" && t.indexOf("-") > -1) {
        var r = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"], i = t.split("-");
        return this.options.lowerCaseLng ? i = i.map(function(s) {
          return s.toLowerCase();
        }) : i.length === 2 ? (i[0] = i[0].toLowerCase(), i[1] = i[1].toUpperCase(), r.indexOf(i[1].toLowerCase()) > -1 && (i[1] = Bp(i[1].toLowerCase()))) : i.length === 3 && (i[0] = i[0].toLowerCase(), i[1].length === 2 && (i[1] = i[1].toUpperCase()), i[0] !== "sgn" && i[2].length === 2 && (i[2] = i[2].toUpperCase()), r.indexOf(i[1].toLowerCase()) > -1 && (i[1] = Bp(i[1].toLowerCase())), r.indexOf(i[2].toLowerCase()) > -1 && (i[2] = Bp(i[2].toLowerCase()))), i.join("-");
      }
      return this.options.cleanCode || this.options.lowerCaseLng ? t.toLowerCase() : t;
    }
  }, {
    key: "isWhitelisted",
    value: function(t) {
      return (this.options.load === "languageOnly" || this.options.nonExplicitWhitelist) && (t = this.getLanguagePartFromCode(t)), !this.whitelist || !this.whitelist.length || this.whitelist.indexOf(t) > -1;
    }
  }, {
    key: "getFallbackCodes",
    value: function(t, r) {
      if (!t)
        return [];
      if (typeof t == "string" && (t = [t]), Object.prototype.toString.apply(t) === "[object Array]")
        return t;
      if (!r)
        return t.default || [];
      var i = t[r];
      return i || (i = t[this.getScriptPartFromCode(r)]), i || (i = t[this.formatLanguageCode(r)]), i || (i = t.default), i || [];
    }
  }, {
    key: "toResolveHierarchy",
    value: function(t, r) {
      var i = this, s = this.getFallbackCodes(r || this.options.fallbackLng || [], t), a = [], o = function(l) {
        !l || (i.isWhitelisted(l) ? a.push(l) : i.logger.warn("rejecting non-whitelisted language code: ".concat(l)));
      };
      return typeof t == "string" && t.indexOf("-") > -1 ? (this.options.load !== "languageOnly" && o(this.formatLanguageCode(t)), this.options.load !== "languageOnly" && this.options.load !== "currentOnly" && o(this.getScriptPartFromCode(t)), this.options.load !== "currentOnly" && o(this.getLanguagePartFromCode(t))) : typeof t == "string" && o(this.formatLanguageCode(t)), s.forEach(function(u) {
        a.indexOf(u) < 0 && o(i.formatLanguageCode(u));
      }), a;
    }
  }]), n;
}(), R8 = [{
  lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "ti", "tr", "uz", "wa"],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ["ay", "bo", "cgg", "fa", "id", "ja", "jbo", "ka", "kk", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
  nr: [1],
  fc: 3
}, {
  lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ["ar"],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ["cs", "sk"],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ["csb", "pl"],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ["cy"],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ["fr"],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ["ga"],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ["gd"],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ["is"],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ["jv"],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ["kw"],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ["lt"],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ["lv"],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ["mk"],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ["mnk"],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ["mt"],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ["or"],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ["ro"],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ["sl"],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ["he"],
  nr: [1, 2, 20, 21],
  fc: 22
}], P8 = {
  1: function(e) {
    return Number(e > 1);
  },
  2: function(e) {
    return Number(e != 1);
  },
  3: function(e) {
    return 0;
  },
  4: function(e) {
    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2);
  },
  5: function(e) {
    return Number(e === 0 ? 0 : e == 1 ? 1 : e == 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5);
  },
  6: function(e) {
    return Number(e == 1 ? 0 : e >= 2 && e <= 4 ? 1 : 2);
  },
  7: function(e) {
    return Number(e == 1 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2);
  },
  8: function(e) {
    return Number(e == 1 ? 0 : e == 2 ? 1 : e != 8 && e != 11 ? 2 : 3);
  },
  9: function(e) {
    return Number(e >= 2);
  },
  10: function(e) {
    return Number(e == 1 ? 0 : e == 2 ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4);
  },
  11: function(e) {
    return Number(e == 1 || e == 11 ? 0 : e == 2 || e == 12 ? 1 : e > 2 && e < 20 ? 2 : 3);
  },
  12: function(e) {
    return Number(e % 10 != 1 || e % 100 == 11);
  },
  13: function(e) {
    return Number(e !== 0);
  },
  14: function(e) {
    return Number(e == 1 ? 0 : e == 2 ? 1 : e == 3 ? 2 : 3);
  },
  15: function(e) {
    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2);
  },
  16: function(e) {
    return Number(e % 10 == 1 && e % 100 != 11 ? 0 : e !== 0 ? 1 : 2);
  },
  17: function(e) {
    return Number(e == 1 || e % 10 == 1 ? 0 : 1);
  },
  18: function(e) {
    return Number(e == 0 ? 0 : e == 1 ? 1 : 2);
  },
  19: function(e) {
    return Number(e == 1 ? 0 : e === 0 || e % 100 > 1 && e % 100 < 11 ? 1 : e % 100 > 10 && e % 100 < 20 ? 2 : 3);
  },
  20: function(e) {
    return Number(e == 1 ? 0 : e === 0 || e % 100 > 0 && e % 100 < 20 ? 1 : 2);
  },
  21: function(e) {
    return Number(e % 100 == 1 ? 1 : e % 100 == 2 ? 2 : e % 100 == 3 || e % 100 == 4 ? 3 : 0);
  },
  22: function(e) {
    return Number(e === 1 ? 0 : e === 2 ? 1 : (e < 0 || e > 10) && e % 10 == 0 ? 2 : 3);
  }
};
function O8() {
  var n = {};
  return R8.forEach(function(e) {
    e.lngs.forEach(function(t) {
      n[t] = {
        numbers: e.nr,
        plurals: P8[e.fc]
      };
    });
  }), n;
}
var I8 = /* @__PURE__ */ function() {
  function n(e) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    ki(this, n), this.languageUtils = e, this.options = t, this.logger = fi.create("pluralResolver"), this.rules = O8();
  }
  return Di(n, [{
    key: "addRule",
    value: function(t, r) {
      this.rules[t] = r;
    }
  }, {
    key: "getRule",
    value: function(t) {
      return this.rules[t] || this.rules[this.languageUtils.getLanguagePartFromCode(t)];
    }
  }, {
    key: "needsPlural",
    value: function(t) {
      var r = this.getRule(t);
      return r && r.numbers.length > 1;
    }
  }, {
    key: "getPluralFormsOfKey",
    value: function(t, r) {
      var i = this, s = [], a = this.getRule(t);
      return a && a.numbers.forEach(function(o) {
        var u = i.getSuffix(t, o);
        s.push("".concat(r).concat(u));
      }), s;
    }
  }, {
    key: "getSuffix",
    value: function(t, r) {
      var i = this, s = this.getRule(t);
      if (s) {
        var a = s.noAbs ? s.plurals(r) : s.plurals(Math.abs(r)), o = s.numbers[a];
        this.options.simplifyPluralSuffix && s.numbers.length === 2 && s.numbers[0] === 1 && (o === 2 ? o = "plural" : o === 1 && (o = ""));
        var u = function() {
          return i.options.prepend && o.toString() ? i.options.prepend + o.toString() : o.toString();
        };
        return this.options.compatibilityJSON === "v1" ? o === 1 ? "" : typeof o == "number" ? "_plural_".concat(o.toString()) : u() : this.options.compatibilityJSON === "v2" || this.options.simplifyPluralSuffix && s.numbers.length === 2 && s.numbers[0] === 1 ? u() : this.options.prepend && a.toString() ? this.options.prepend + a.toString() : a.toString();
      }
      return this.logger.warn("no plural rule found for: ".concat(t)), "";
    }
  }]), n;
}(), k8 = /* @__PURE__ */ function() {
  function n() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    ki(this, n), this.logger = fi.create("interpolator"), this.options = e, this.format = e.interpolation && e.interpolation.format || function(t) {
      return t;
    }, this.init(e);
  }
  return Di(n, [{
    key: "init",
    value: function() {
      var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      t.interpolation || (t.interpolation = {
        escapeValue: !0
      });
      var r = t.interpolation;
      this.escape = r.escape !== void 0 ? r.escape : E8, this.escapeValue = r.escapeValue !== void 0 ? r.escapeValue : !0, this.useRawValueToEscape = r.useRawValueToEscape !== void 0 ? r.useRawValueToEscape : !1, this.prefix = r.prefix ? Ba(r.prefix) : r.prefixEscaped || "{{", this.suffix = r.suffix ? Ba(r.suffix) : r.suffixEscaped || "}}", this.formatSeparator = r.formatSeparator ? r.formatSeparator : r.formatSeparator || ",", this.unescapePrefix = r.unescapeSuffix ? "" : r.unescapePrefix || "-", this.unescapeSuffix = this.unescapePrefix ? "" : r.unescapeSuffix || "", this.nestingPrefix = r.nestingPrefix ? Ba(r.nestingPrefix) : r.nestingPrefixEscaped || Ba("$t("), this.nestingSuffix = r.nestingSuffix ? Ba(r.nestingSuffix) : r.nestingSuffixEscaped || Ba(")"), this.maxReplaces = r.maxReplaces ? r.maxReplaces : 1e3, this.resetRegExp();
    }
  }, {
    key: "reset",
    value: function() {
      this.options && this.init(this.options);
    }
  }, {
    key: "resetRegExp",
    value: function() {
      var t = "".concat(this.prefix, "(.+?)").concat(this.suffix);
      this.regexp = new RegExp(t, "g");
      var r = "".concat(this.prefix).concat(this.unescapePrefix, "(.+?)").concat(this.unescapeSuffix).concat(this.suffix);
      this.regexpUnescape = new RegExp(r, "g");
      var i = "".concat(this.nestingPrefix, "(.+?)").concat(this.nestingSuffix);
      this.nestingRegexp = new RegExp(i, "g");
    }
  }, {
    key: "interpolate",
    value: function(t, r, i, s) {
      var a = this, o, u, l, p = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};
      function h(w) {
        return w.replace(/\$/g, "$$$$");
      }
      var b = function(M) {
        if (M.indexOf(a.formatSeparator) < 0)
          return Hb(r, p, M);
        var I = M.split(a.formatSeparator), F = I.shift().trim(), k = I.join(a.formatSeparator).trim();
        return a.format(Hb(r, p, F), k, i);
      };
      this.resetRegExp();
      var C = s && s.missingInterpolationHandler || this.options.missingInterpolationHandler;
      for (l = 0; o = this.regexpUnescape.exec(t); ) {
        if (u = b(o[1].trim()), u === void 0)
          if (typeof C == "function") {
            var v = C(t, o, s);
            u = typeof v == "string" ? v : "";
          } else
            this.logger.warn("missed to pass in variable ".concat(o[1], " for interpolating ").concat(t)), u = "";
        else
          typeof u != "string" && !this.useRawValueToEscape && (u = Dp(u));
        if (t = t.replace(o[0], h(u)), this.regexpUnescape.lastIndex = 0, l++, l >= this.maxReplaces)
          break;
      }
      for (l = 0; o = this.regexp.exec(t); ) {
        if (u = b(o[1].trim()), u === void 0)
          if (typeof C == "function") {
            var T = C(t, o, s);
            u = typeof T == "string" ? T : "";
          } else
            this.logger.warn("missed to pass in variable ".concat(o[1], " for interpolating ").concat(t)), u = "";
        else
          typeof u != "string" && !this.useRawValueToEscape && (u = Dp(u));
        if (u = this.escapeValue ? h(this.escape(u)) : h(u), t = t.replace(o[0], u), this.regexp.lastIndex = 0, l++, l >= this.maxReplaces)
          break;
      }
      return t;
    }
  }, {
    key: "nest",
    value: function(t, r) {
      var i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, s, a, o = Rn({}, i);
      o.applyPostProcessor = !1, delete o.defaultValue;
      function u(l, p) {
        if (l.indexOf(",") < 0)
          return l;
        var h = l.split(",");
        l = h.shift();
        var b = h.join(",");
        b = this.interpolate(b, o), b = b.replace(/'/g, '"');
        try {
          o = JSON.parse(b), p && (o = Rn({}, p, o));
        } catch (C) {
          this.logger.error("failed parsing options string in nesting for key ".concat(l), C);
        }
        return delete o.defaultValue, l;
      }
      for (; s = this.nestingRegexp.exec(t); ) {
        if (a = r(u.call(this, s[1].trim(), o), o), a && s[0] === t && typeof a != "string")
          return a;
        typeof a != "string" && (a = Dp(a)), a || (this.logger.warn("missed to resolve ".concat(s[1], " for nesting ").concat(t)), a = ""), t = t.replace(s[0], a), this.regexp.lastIndex = 0;
      }
      return t;
    }
  }]), n;
}();
function D8(n, e) {
  for (var t = n.indexOf(e); t !== -1; )
    n.splice(t, 1), t = n.indexOf(e);
}
var B8 = /* @__PURE__ */ function(n) {
  Sd(e, n);
  function e(t, r, i) {
    var s, a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    return ki(this, e), s = Eu(this, oo(e).call(this)), hs.call(ra(s)), s.backend = t, s.store = r, s.services = i, s.languageUtils = i.languageUtils, s.options = a, s.logger = fi.create("backendConnector"), s.state = {}, s.queue = [], s.backend && s.backend.init && s.backend.init(i, a.backend, a), s;
  }
  return Di(e, [{
    key: "queueLoad",
    value: function(r, i, s, a) {
      var o = this, u = [], l = [], p = [], h = [];
      return r.forEach(function(b) {
        var C = !0;
        i.forEach(function(v) {
          var T = "".concat(b, "|").concat(v);
          !s.reload && o.store.hasResourceBundle(b, v) ? o.state[T] = 2 : o.state[T] < 0 || (o.state[T] === 1 ? l.indexOf(T) < 0 && l.push(T) : (o.state[T] = 1, C = !1, l.indexOf(T) < 0 && l.push(T), u.indexOf(T) < 0 && u.push(T), h.indexOf(v) < 0 && h.push(v)));
        }), C || p.push(b);
      }), (u.length || l.length) && this.queue.push({
        pending: l,
        loaded: {},
        errors: [],
        callback: a
      }), {
        toLoad: u,
        pending: l,
        toLoadLanguages: p,
        toLoadNamespaces: h
      };
    }
  }, {
    key: "loaded",
    value: function(r, i, s) {
      var a = r.split("|"), o = Gb(a, 2), u = o[0], l = o[1];
      i && this.emit("failedLoading", u, l, i), s && this.store.addResourceBundle(u, l, s), this.state[r] = i ? -1 : 2;
      var p = {};
      this.queue.forEach(function(h) {
        C8(h.loaded, [u], l), D8(h.pending, r), i && h.errors.push(i), h.pending.length === 0 && !h.done && (Object.keys(h.loaded).forEach(function(b) {
          p[b] || (p[b] = []), h.loaded[b].length && h.loaded[b].forEach(function(C) {
            p[b].indexOf(C) < 0 && p[b].push(C);
          });
        }), h.done = !0, h.errors.length ? h.callback(h.errors) : h.callback());
      }), this.emit("loaded", p), this.queue = this.queue.filter(function(h) {
        return !h.done;
      });
    }
  }, {
    key: "read",
    value: function(r, i, s) {
      var a = this, o = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, u = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 250, l = arguments.length > 5 ? arguments[5] : void 0;
      return r.length ? this.backend[s](r, i, function(p, h) {
        if (p && h && o < 5) {
          setTimeout(function() {
            a.read.call(a, r, i, s, o + 1, u * 2, l);
          }, u);
          return;
        }
        l(p, h);
      }) : l(null, {});
    }
  }, {
    key: "prepareLoading",
    value: function(r, i) {
      var s = this, a = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, o = arguments.length > 3 ? arguments[3] : void 0;
      if (!this.backend)
        return this.logger.warn("No backend was added via i18next.use. Will not load resources."), o && o();
      typeof r == "string" && (r = this.languageUtils.toResolveHierarchy(r)), typeof i == "string" && (i = [i]);
      var u = this.queueLoad(r, i, a, o);
      if (!u.toLoad.length)
        return u.pending.length || o(), null;
      u.toLoad.forEach(function(l) {
        s.loadOne(l);
      });
    }
  }, {
    key: "load",
    value: function(r, i, s) {
      this.prepareLoading(r, i, {}, s);
    }
  }, {
    key: "reload",
    value: function(r, i, s) {
      this.prepareLoading(r, i, {
        reload: !0
      }, s);
    }
  }, {
    key: "loadOne",
    value: function(r) {
      var i = this, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", a = r.split("|"), o = Gb(a, 2), u = o[0], l = o[1];
      this.read(u, l, "read", null, null, function(p, h) {
        p && i.logger.warn("".concat(s, "loading namespace ").concat(l, " for language ").concat(u, " failed"), p), !p && h && i.logger.log("".concat(s, "loaded namespace ").concat(l, " for language ").concat(u), h), i.loaded(r, p, h);
      });
    }
  }, {
    key: "saveMissing",
    value: function(r, i, s, a, o) {
      var u = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
      if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(i)) {
        this.logger.warn('did not save key "'.concat(s, '" for namespace "').concat(i, '" as the namespace was not yet loaded'), "This means something IS WRONG in your application setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
        return;
      }
      this.backend && this.backend.create && this.backend.create(
        r,
        i,
        s,
        a,
        null,
        Rn({}, u, {
          isUpdate: o
        })
      ), !(!r || !r[0]) && this.store.addResource(r[0], i, s, a);
    }
  }]), e;
}(hs);
function F8() {
  return {
    debug: !1,
    initImmediate: !0,
    ns: ["translation"],
    defaultNS: ["translation"],
    fallbackLng: ["dev"],
    fallbackNS: !1,
    whitelist: !1,
    nonExplicitWhitelist: !1,
    load: "all",
    preload: !1,
    simplifyPluralSuffix: !0,
    keySeparator: ".",
    nsSeparator: ":",
    pluralSeparator: "_",
    contextSeparator: "_",
    partialBundledLanguages: !1,
    saveMissing: !1,
    updateMissing: !1,
    saveMissingTo: "fallback",
    saveMissingPlurals: !0,
    missingKeyHandler: !1,
    missingInterpolationHandler: !1,
    postProcess: !1,
    postProcessPassResolved: !1,
    returnNull: !0,
    returnEmptyString: !0,
    returnObjects: !1,
    joinArrays: !1,
    returnedObjectHandler: !1,
    parseMissingKeyHandler: !1,
    appendNamespaceToMissingKey: !1,
    appendNamespaceToCIMode: !1,
    overloadTranslationOptionHandler: function(e) {
      var t = {};
      if (os(e[1]) === "object" && (t = e[1]), typeof e[1] == "string" && (t.defaultValue = e[1]), typeof e[2] == "string" && (t.tDescription = e[2]), os(e[2]) === "object" || os(e[3]) === "object") {
        var r = e[3] || e[2];
        Object.keys(r).forEach(function(i) {
          t[i] = r[i];
        });
      }
      return t;
    },
    interpolation: {
      escapeValue: !0,
      format: function(e, t, r) {
        return e;
      },
      prefix: "{{",
      suffix: "}}",
      formatSeparator: ",",
      unescapePrefix: "-",
      nestingPrefix: "$t(",
      nestingSuffix: ")",
      maxReplaces: 1e3
    }
  };
}
function qb(n) {
  return typeof n.ns == "string" && (n.ns = [n.ns]), typeof n.fallbackLng == "string" && (n.fallbackLng = [n.fallbackLng]), typeof n.fallbackNS == "string" && (n.fallbackNS = [n.fallbackNS]), n.whitelist && n.whitelist.indexOf("cimode") < 0 && (n.whitelist = n.whitelist.concat(["cimode"])), n;
}
function kl() {
}
var N8 = /* @__PURE__ */ function(n) {
  Sd(e, n);
  function e() {
    var t, r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0;
    if (ki(this, e), t = Eu(this, oo(e).call(this)), hs.call(ra(t)), t.options = qb(r), t.services = {}, t.logger = fi, t.modules = {
      external: []
    }, i && !t.isInitialized && !r.isClone) {
      if (!t.options.initImmediate)
        return t.init(r, i), Eu(t, ra(t));
      setTimeout(function() {
        t.init(r, i);
      }, 0);
    }
    return t;
  }
  return Di(e, [{
    key: "init",
    value: function() {
      var r = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, s = arguments.length > 1 ? arguments[1] : void 0;
      typeof i == "function" && (s = i, i = {}), this.options = Rn({}, F8(), this.options, qb(i)), this.format = this.options.interpolation.format, s || (s = kl);
      function a(b) {
        return b ? typeof b == "function" ? new b() : b : null;
      }
      if (!this.options.isClone) {
        this.modules.logger ? fi.init(a(this.modules.logger), this.options) : fi.init(null, this.options);
        var o = new _8(this.options);
        this.store = new M8(this.options.resources, this.options);
        var u = this.services;
        u.logger = fi, u.resourceStore = this.store, u.languageUtils = o, u.pluralResolver = new I8(o, {
          prepend: this.options.pluralSeparator,
          compatibilityJSON: this.options.compatibilityJSON,
          simplifyPluralSuffix: this.options.simplifyPluralSuffix
        }), u.interpolator = new k8(this.options), u.utils = {
          hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
        }, u.backendConnector = new B8(a(this.modules.backend), u.resourceStore, u, this.options), u.backendConnector.on("*", function(b) {
          for (var C = arguments.length, v = new Array(C > 1 ? C - 1 : 0), T = 1; T < C; T++)
            v[T - 1] = arguments[T];
          r.emit.apply(r, [b].concat(v));
        }), this.modules.languageDetector && (u.languageDetector = a(this.modules.languageDetector), u.languageDetector.init(u, this.options.detection, this.options)), this.modules.i18nFormat && (u.i18nFormat = a(this.modules.i18nFormat), u.i18nFormat.init && u.i18nFormat.init(this)), this.translator = new Kb(this.services, this.options), this.translator.on("*", function(b) {
          for (var C = arguments.length, v = new Array(C > 1 ? C - 1 : 0), T = 1; T < C; T++)
            v[T - 1] = arguments[T];
          r.emit.apply(r, [b].concat(v));
        }), this.modules.external.forEach(function(b) {
          b.init && b.init(r);
        });
      }
      var l = ["getResource", "addResource", "addResources", "addResourceBundle", "removeResourceBundle", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"];
      l.forEach(function(b) {
        r[b] = function() {
          var C;
          return (C = r.store)[b].apply(C, arguments);
        };
      });
      var p = jo(), h = function() {
        r.changeLanguage(r.options.lng, function(C, v) {
          r.isInitialized = !0, r.logger.log("initialized", r.options), r.emit("initialized", r.options), p.resolve(v), s(C, v);
        });
      };
      return this.options.resources || !this.options.initImmediate ? h() : setTimeout(h, 0), p;
    }
  }, {
    key: "loadResources",
    value: function() {
      var r = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : kl;
      if (!this.options.resources || this.options.partialBundledLanguages) {
        if (this.language && this.language.toLowerCase() === "cimode")
          return i();
        var s = [], a = function(l) {
          if (!!l) {
            var p = r.services.languageUtils.toResolveHierarchy(l);
            p.forEach(function(h) {
              s.indexOf(h) < 0 && s.push(h);
            });
          }
        };
        if (this.language)
          a(this.language);
        else {
          var o = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
          o.forEach(function(u) {
            return a(u);
          });
        }
        this.options.preload && this.options.preload.forEach(function(u) {
          return a(u);
        }), this.services.backendConnector.load(s, this.options.ns, i);
      } else
        i(null);
    }
  }, {
    key: "reloadResources",
    value: function(r, i, s) {
      var a = jo();
      return r || (r = this.languages), i || (i = this.options.ns), s || (s = kl), this.services.backendConnector.reload(r, i, function(o) {
        a.resolve(), s(o);
      }), a;
    }
  }, {
    key: "use",
    value: function(r) {
      return r.type === "backend" && (this.modules.backend = r), (r.type === "logger" || r.log && r.warn && r.error) && (this.modules.logger = r), r.type === "languageDetector" && (this.modules.languageDetector = r), r.type === "i18nFormat" && (this.modules.i18nFormat = r), r.type === "postProcessor" && Kx.addPostProcessor(r), r.type === "3rdParty" && this.modules.external.push(r), this;
    }
  }, {
    key: "changeLanguage",
    value: function(r, i) {
      var s = this, a = jo();
      this.emit("languageChanging", r);
      var o = function(p, h) {
        s.translator.changeLanguage(h), h && (s.emit("languageChanged", h), s.logger.log("languageChanged", h)), a.resolve(function() {
          return s.t.apply(s, arguments);
        }), i && i(p, function() {
          return s.t.apply(s, arguments);
        });
      }, u = function(p) {
        p && (s.language = p, s.languages = s.services.languageUtils.toResolveHierarchy(p), s.translator.language || s.translator.changeLanguage(p), s.services.languageDetector && s.services.languageDetector.cacheUserLanguage(p)), s.loadResources(function(h) {
          o(h, p);
        });
      };
      return !r && this.services.languageDetector && !this.services.languageDetector.async ? u(this.services.languageDetector.detect()) : !r && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect(u) : u(r), a;
    }
  }, {
    key: "getFixedT",
    value: function(r, i) {
      var s = this, a = function o(u, l) {
        var p;
        if (os(l) !== "object") {
          for (var h = arguments.length, b = new Array(h > 2 ? h - 2 : 0), C = 2; C < h; C++)
            b[C - 2] = arguments[C];
          p = s.options.overloadTranslationOptionHandler([u, l].concat(b));
        } else
          p = Rn({}, l);
        return p.lng = p.lng || o.lng, p.lngs = p.lngs || o.lngs, p.ns = p.ns || o.ns, s.t(u, p);
      };
      return typeof r == "string" ? a.lng = r : a.lngs = r, a.ns = i, a;
    }
  }, {
    key: "t",
    value: function() {
      var r;
      return this.translator && (r = this.translator).translate.apply(r, arguments);
    }
  }, {
    key: "exists",
    value: function() {
      var r;
      return this.translator && (r = this.translator).exists.apply(r, arguments);
    }
  }, {
    key: "setDefaultNamespace",
    value: function(r) {
      this.options.defaultNS = r;
    }
  }, {
    key: "hasLoadedNamespace",
    value: function(r) {
      var i = this;
      if (!this.isInitialized)
        return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1;
      if (!this.languages || !this.languages.length)
        return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1;
      var s = this.languages[0], a = this.options ? this.options.fallbackLng : !1, o = this.languages[this.languages.length - 1];
      if (s.toLowerCase() === "cimode")
        return !0;
      var u = function(p, h) {
        var b = i.services.backendConnector.state["".concat(p, "|").concat(h)];
        return b === -1 || b === 2;
      };
      return !!(this.hasResourceBundle(s, r) || !this.services.backendConnector.backend || u(s, r) && (!a || u(o, r)));
    }
  }, {
    key: "loadNamespaces",
    value: function(r, i) {
      var s = this, a = jo();
      return this.options.ns ? (typeof r == "string" && (r = [r]), r.forEach(function(o) {
        s.options.ns.indexOf(o) < 0 && s.options.ns.push(o);
      }), this.loadResources(function(o) {
        a.resolve(), i && i(o);
      }), a) : (i && i(), Promise.resolve());
    }
  }, {
    key: "loadLanguages",
    value: function(r, i) {
      var s = jo();
      typeof r == "string" && (r = [r]);
      var a = this.options.preload || [], o = r.filter(function(u) {
        return a.indexOf(u) < 0;
      });
      return o.length ? (this.options.preload = a.concat(o), this.loadResources(function(u) {
        s.resolve(), i && i(u);
      }), s) : (i && i(), Promise.resolve());
    }
  }, {
    key: "dir",
    value: function(r) {
      if (r || (r = this.languages && this.languages.length > 0 ? this.languages[0] : this.language), !r)
        return "rtl";
      var i = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam"];
      return i.indexOf(this.services.languageUtils.getLanguagePartFromCode(r)) >= 0 ? "rtl" : "ltr";
    }
  }, {
    key: "createInstance",
    value: function() {
      var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0;
      return new e(r, i);
    }
  }, {
    key: "cloneInstance",
    value: function() {
      var r = this, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, s = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : kl, a = Rn({}, this.options, i, {
        isClone: !0
      }), o = new e(a), u = ["store", "services", "language"];
      return u.forEach(function(l) {
        o[l] = r[l];
      }), o.translator = new Kb(o.services, o.options), o.translator.on("*", function(l) {
        for (var p = arguments.length, h = new Array(p > 1 ? p - 1 : 0), b = 1; b < p; b++)
          h[b - 1] = arguments[b];
        o.emit.apply(o, [l].concat(h));
      }), o.init(a, s), o.translator.options = o.options, o;
    }
  }]), e;
}(hs);
new N8();
function $n(n, e, t, r) {
  var i = arguments.length, s = i < 3 ? e : r === null ? r = Object.getOwnPropertyDescriptor(e, t) : r, a;
  if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
    s = Reflect.decorate(n, e, t, r);
  else
    for (var o = n.length - 1; o >= 0; o--)
      (a = n[o]) && (s = (i < 3 ? a(s) : i > 3 ? a(e, t, s) : a(e, t)) || s);
  return i > 3 && s && Object.defineProperty(e, t, s), s;
}
function ts(n, e) {
  return function(t, r) {
    e(t, r, n);
  };
}
var Qb;
(function(n) {
  n.I18N_EA_CHANNEL = "i18n:locale:changed", n.I18N_SIGNAL = "aurelia-translation-signal", n.RT_SIGNAL = "aurelia-relativetime-signal";
})(Qb || (Qb = {}));
var Jb;
(function(n) {
  n.translationValueConverterName = "t", n.dateFormatValueConverterName = "df", n.numberFormatValueConverterName = "nf", n.relativeTimeValueConverterName = "rt";
})(Jb || (Jb = {}));
function c0(n, e) {
  const t = e.ast.expression;
  if (!(t instanceof xu)) {
    const r = new xu(t, n, e.ast.args);
    e.ast.expression = r;
  }
}
let Yb = class {
  bind(e, t) {
    c0("df", t);
  }
};
Yb = $n([Fn("df")], Yb);
const $8 = pe.createInterface("I18nInitOptions"), L8 = pe.createInterface("I18nextWrapper");
var Xb;
(function(n) {
  n[n.Second = 1e3] = "Second", n[n.Minute = 6e4] = "Minute", n[n.Hour = 36e5] = "Hour", n[n.Day = 864e5] = "Day", n[n.Week = 6048e5] = "Week", n[n.Month = 2592e6] = "Month", n[n.Year = 31536e6] = "Year";
})(Xb || (Xb = {}));
class U8 {
  constructor(e) {
    this.value = void 0;
    const t = /\[([a-z\-, ]*)\]/gi;
    this.attributes = [];
    const r = t.exec(e);
    r && (e = e.replace(r[0], ""), this.attributes = r[1].split(",")), this.key = e;
  }
}
const Sa = pe.createInterface("I18N");
let Zb = class {
  constructor(e, t, r, i) {
    this.ea = r, this.i = /* @__PURE__ */ new Set(), this.i18next = e.i18next, this.initPromise = this.h(t), this.u = i;
  }
  evaluate(e, t) {
    const r = e.split(";"), i = [];
    for (const s of r) {
      const a = new U8(s), o = a.key, u = this.tr(o, t);
      this.options.skipTranslationOnMissingKey && u === o ? console.warn(`Couldn't find translation for key: ${o}`) : (a.value = u, i.push(a));
    }
    return i;
  }
  tr(e, t) {
    return this.i18next.t(e, t);
  }
  getLocale() {
    return this.i18next.language;
  }
  async setLocale(e) {
    const r = {
      oldLocale: this.getLocale(),
      newLocale: e
    };
    await this.i18next.changeLanguage(e), this.ea.publish("i18n:locale:changed", r), this.i.forEach((i) => i.handleLocaleChange(r)), this.u.dispatchSignal("aurelia-translation-signal");
  }
  createNumberFormat(e, t) {
    return Intl.NumberFormat(t || this.getLocale(), e);
  }
  nf(e, t, r) {
    return this.createNumberFormat(t, r).format(e);
  }
  createDateTimeFormat(e, t) {
    return Intl.DateTimeFormat(t || this.getLocale(), e);
  }
  df(e, t, r) {
    return this.createDateTimeFormat(t, r).format(e);
  }
  uf(e, t) {
    const r = this.nf(3333.3333333333335, void 0, t);
    let i = r[1];
    const s = r[5];
    i === "." && (i = "\\.");
    const a = e.replace(new RegExp(i, "g"), "").replace(/[^\d.,-]/g, "").replace(s, ".");
    return Number(a);
  }
  createRelativeTimeFormat(e, t) {
    return new Intl.RelativeTimeFormat(t || this.getLocale(), e);
  }
  rt(e, t, r) {
    let i = e.getTime() - this.now();
    const s = this.options.rtEpsilon * (i > 0 ? 1 : 0), a = this.createRelativeTimeFormat(t, r);
    let o = i / 31536e6;
    return Math.abs(o + s) >= 1 ? a.format(Math.round(o), "year") : (o = i / 2592e6, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "month") : (o = i / 6048e5, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "week") : (o = i / 864e5, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "day") : (o = i / 36e5, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "hour") : (o = i / 6e4, Math.abs(o + s) >= 1 ? a.format(Math.round(o), "minute") : (i = Math.abs(i) < 1e3 ? 1e3 : i, o = i / 1e3, a.format(Math.round(o), "second")))))));
  }
  subscribeLocaleChange(e) {
    this.i.add(e);
  }
  now() {
    return new Date().getTime();
  }
  async h(e) {
    const t = {
      lng: "en",
      fallbackLng: ["en"],
      debug: !1,
      plugins: [],
      rtEpsilon: 0.01,
      skipTranslationOnMissingKey: !1
    };
    this.options = {
      ...t,
      ...e
    };
    for (const r of this.options.plugins)
      this.i18next.use(r);
    await this.i18next.init(this.options);
  }
};
Zb = $n([ts(0, L8), ts(1, $8), ts(2, md), ts(3, Dh)], Zb);
let eg = class {
  constructor(e) {
    this.i18n = e, this.signals = ["aurelia-translation-signal"];
  }
  toView(e, t, r) {
    if (!e && e !== 0 || typeof e == "string" && e.trim() === "")
      return e;
    if (typeof e == "string") {
      const i = Number(e), s = new Date(Number.isInteger(i) ? i : e);
      if (isNaN(s.getTime()))
        return e;
      e = s;
    }
    return this.i18n.df(e, t, r);
  }
};
eg = $n([nl("df"), ts(0, Sa)], eg);
let tg = class {
  bind(e, t) {
    c0("nf", t);
  }
};
tg = $n([Fn("nf")], tg);
let ng = class {
  constructor(e) {
    this.i18n = e, this.signals = ["aurelia-translation-signal"];
  }
  toView(e, t, r) {
    return typeof e != "number" ? e : this.i18n.nf(e, t, r);
  }
};
ng = $n([nl("nf"), ts(0, Sa)], ng);
let rg = class {
  bind(e, t) {
    c0("rt", t);
  }
};
rg = $n([Fn("rt")], rg);
let ig = class {
  constructor(e) {
    this.i18n = e, this.signals = ["aurelia-translation-signal", "aurelia-relativetime-signal"];
  }
  toView(e, t, r) {
    return e instanceof Date ? this.i18n.rt(e, t, r) : e;
  }
};
ig = $n([nl("rt"), ts(0, Sa)], ig);
let sg = class {
  bind(e, t) {
    const r = t.ast.expression;
    if (!(r instanceof xu)) {
      const i = new xu(r, "t", t.ast.args);
      t.ast.expression = i;
    }
  }
};
sg = $n([Fn("t")], sg);
const V8 = ["textContent", "innerHTML", "prepend", "append"], j8 = /* @__PURE__ */ new Map([["text", "textContent"], ["html", "innerHTML"]]), z8 = {
  optional: !0
}, G8 = {
  reusable: !1,
  preempt: !0
};
class Ai {
  constructor(e, t, r, i, s) {
    this.isBound = !1, this.T = V8, this.B = null, this.parameter = null, this.boundFn = !1, this.l = t, this.C = e, this.target = s, this.i18n = t.get(Sa), this.p = i, this.I = /* @__PURE__ */ new Set(), this.oL = r, this.i18n.subscribeLocaleChange(this), this.P = i.domWriteQueue;
  }
  static create({ parser: e, observerLocator: t, context: r, controller: i, target: s, instruction: a, platform: o, isParameterContext: u }) {
    const l = this.M({
      observerLocator: t,
      context: r,
      controller: i,
      target: s,
      platform: o
    }), p = typeof a.from == "string" ? e.parse(a.from, 16) : a.from;
    if (u)
      l.useParameter(p);
    else {
      const h = p instanceof Th ? e.parse(p.value, 1) : void 0;
      l.ast = h || p;
    }
  }
  static M({ observerLocator: e, context: t, controller: r, target: i, platform: s }) {
    let a = r.bindings && r.bindings.find((o) => o instanceof Ai && o.target === i);
    return a || (a = new Ai(r, t, e, s, i), r.addBinding(a)), a;
  }
  bind(e) {
    if (!this.isBound) {
      if (!this.ast)
        throw new Error("key expression is missing");
      this.s = e, this.A = this.ast instanceof m1, this.L = j(this.ast, e, this, this), this.R(), this.parameter?.bind(e), this.updateTranslations(), this.isBound = !0;
    }
  }
  unbind() {
    !this.isBound || (sr(this.ast, this.s, this), this.parameter?.unbind(), this.I.clear(), this.B !== null && (this.B.cancel(), this.B = null), this.s = void 0, this.obs.clearAll());
  }
  handleChange(e, t) {
    this.obs.version++, this.L = this.A ? j(this.ast, this.s, this, this) : e, this.obs.clear(), this.R(), this.updateTranslations();
  }
  handleLocaleChange() {
    this.updateTranslations();
  }
  useParameter(e) {
    if (this.parameter != null)
      throw new Error("This translation parameter has already been specified.");
    this.parameter = new d0(this, e, () => this.updateTranslations());
  }
  updateTranslations() {
    const e = this.i18n.evaluate(this.L, this.parameter?.value), t = /* @__PURE__ */ Object.create(null), r = [], i = this.B;
    this.I.clear();
    for (const a of e) {
      const o = a.value, u = this.N(a.attributes);
      for (const l of u)
        if (this.O(l))
          t[l] = o;
        else {
          const p = Ya.for(this.target, z8), h = p?.viewModel ? this.oL.getAccessor(p.viewModel, l) : this.oL.getAccessor(this.target, l);
          this.C.state !== 1 && (4 & h.type) > 0 ? r.push(new W8(h, o, this.target, l)) : h.setValue(o, this.target, l), this.I.add(h);
        }
    }
    let s = !1;
    Object.keys(t).length > 0 && (s = this.C.state !== 1, s || this.V(t)), (r.length > 0 || s) && (this.B = this.P.queueTask(() => {
      this.B = null;
      for (const a of r)
        a.run();
      s && this.V(t);
    }, G8)), i?.cancel();
  }
  N(e) {
    e.length === 0 && (e = this.target.tagName === "IMG" ? ["src"] : ["textContent"]);
    for (const [t, r] of j8) {
      const i = e.findIndex((s) => s === t);
      i > -1 && e.splice(i, 1, r);
    }
    return e;
  }
  O(e) {
    return this.T.includes(e);
  }
  V(e) {
    const t = fp(this.target.childNodes), r = [], i = "au-i18n";
    for (const a of t)
      Reflect.get(a, i) || r.push(a);
    const s = this._(e, i, r);
    this.target.innerHTML = "";
    for (const a of fp(s.content.childNodes))
      this.target.appendChild(a);
  }
  _(e, t, r) {
    const i = this.p.document.createElement("template");
    if (this.F(i, e.prepend, t), !this.F(i, e.innerHTML ?? e.textContent, t))
      for (const s of r)
        i.content.append(s);
    return this.F(i, e.append, t), i;
  }
  F(e, t, r) {
    if (t != null) {
      const i = this.p.document.createElement("div");
      i.innerHTML = t;
      for (const s of fp(i.childNodes))
        Reflect.set(s, r, !0), e.content.append(s);
      return !0;
    }
    return !1;
  }
  R() {
    const e = this.L ?? (this.L = ""), t = typeof e;
    if (t !== "string")
      throw new Error(`Expected the i18n key to be a string, but got ${e} of type ${t}`);
  }
}
Pr(Ai);
ti(!0)(Ai);
Aa(Ai, () => "updateTranslations");
class W8 {
  constructor(e, t, r, i) {
    this.accessor = e, this.v = t, this.el = r, this.attr = i;
  }
  run() {
    this.accessor.setValue(this.v, this.el, this.attr);
  }
}
class d0 {
  constructor(e, t, r) {
    this.owner = e, this.ast = t, this.updater = r, this.isBound = !1, this.boundFn = !1, this.oL = e.oL, this.l = e.l;
  }
  handleChange(e, t) {
    !this.isBound || (this.obs.version++, this.value = j(this.ast, this.s, this, this), this.obs.clear(), this.updater());
  }
  bind(e) {
    this.isBound || (this.s = e, Er(this.ast, e, this), this.value = j(this.ast, e, this, this), this.isBound = !0);
  }
  unbind() {
    !this.isBound || (sr(this.ast, this.s, this), this.s = void 0, this.obs.clearAll());
  }
}
Pr(d0);
ti(!0)(d0);
const qx = "tpt", Mu = "t-params.bind";
let ag = class {
  [Mu](e, t, r) {
    return new lr(e, t, "", Mu);
  }
};
ag = $n([Pi({
  pattern: Mu,
  symbols: ""
})], ag);
class H8 {
  constructor(e, t) {
    this.from = e, this.to = t, this.type = qx, this.mode = 2;
  }
}
let og = class {
  constructor() {
    this.type = 0;
  }
  get name() {
    return Mu;
  }
  build(e, t, r) {
    const i = e.attr;
    let s = i.target;
    return e.bindable == null ? s = r.map(e.node, s) ?? Wn(s) : s = e.bindable.property, new H8(t.parse(i.rawValue, 16), s);
  }
};
og = $n([Nn(Mu)], og);
let ug = class {
  render(e, t, r, i, s, a) {
    Ai.create({
      parser: s,
      observerLocator: a,
      context: e.container,
      controller: e,
      target: t,
      instruction: r,
      isParameterContext: !0,
      platform: i
    });
  }
};
ug = $n([kt(qx)], ug);
const K8 = "tt";
let lg = class {
  render(e, t, r, i, s, a) {
    Ai.create({
      parser: s,
      observerLocator: a,
      context: e.container,
      controller: e,
      target: t,
      instruction: r,
      platform: i
    });
  }
};
lg = $n([kt(K8)], lg);
const q8 = "tbt";
let cg = class {
  render(e, t, r, i, s, a) {
    Ai.create({
      parser: s,
      observerLocator: a,
      context: e.container,
      controller: e,
      target: t,
      instruction: r,
      platform: i
    });
  }
};
cg = $n([kt(q8)], cg);
let dg = class {
  constructor(e) {
    this.i18n = e, this.signals = ["aurelia-translation-signal"];
  }
  toView(e, t) {
    return this.i18n.tr(e, t);
  }
};
dg = $n([nl("t"), ts(0, Sa)], dg);
Array.prototype.sum = function() {
  return this.reduce((n, e) => n + e, 0);
};
const cl = pe.createInterface("CacheService");
class Ed {
  cache = /* @__PURE__ */ new Map();
  setItem(e, t) {
    this.cache.set(e, t);
  }
  getItem(e) {
    return this.cache.get(e);
  }
  static register(e) {
    de.singleton(cl, Ed).register(e);
  }
}
const Fp = (n, e) => {
  const t = n[e];
  return t ? typeof t == "function" ? t() : Promise.resolve(t) : new Promise((r, i) => {
    (typeof queueMicrotask == "function" ? queueMicrotask : setTimeout)(i.bind(null, new Error("Unknown variable dynamic import: " + e)));
  });
}, p0 = pe.createInterface(), Q8 = "https://primedao.mypinata.cloud//", J8 = Number({ KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_CHAIN_ID ?? 42220), Y8 = { KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_CHAIN_URL ?? "https://forno.celo.org", X8 = { KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_CHAIN ?? "Celo", Z8 = { KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_SCAN_LINK ?? "https://explorer.celo.org/{type}/{address}", eS = Boolean({ KOL_IPFS_GATEWAY: "https://primedao.mypinata.cloud//", KOL_FIREBASE_API_KEY: "AIzaSyCItD_gHaRvRrd8evJtFKPALsZLY1EkHe4", KOL_NETWORK: "Celo", BASE_URL: "/", MODE: "development", DEV: !0, PROD: !1 }.KOL_TESTING ?? !0);
var Yi = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function St(n) {
  var e = n.default;
  if (typeof e == "function") {
    var t = function() {
      return e.apply(this, arguments);
    };
    t.prototype = e.prototype;
  } else
    t = {};
  return Object.defineProperty(t, "__esModule", { value: !0 }), Object.keys(n).forEach(function(r) {
    var i = Object.getOwnPropertyDescriptor(n, r);
    Object.defineProperty(t, r, i.get ? i : {
      enumerable: !0,
      get: function() {
        return n[r];
      }
    });
  }), t;
}
var Qx = { exports: {} };
const tS = new Proxy({}, {
  get(n, e) {
    throw new Error(`Module "" has been externalized for browser compatibility. Cannot access ".${e}" in client code.`);
  }
}), nS = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: tS
}, Symbol.toStringTag, { value: "Module" })), rS = /* @__PURE__ */ St(nS);
(function(n) {
  (function(e, t) {
    function r(E, c) {
      if (!E)
        throw new Error(c || "Assertion failed");
    }
    function i(E, c) {
      E.super_ = c;
      var y = function() {
      };
      y.prototype = c.prototype, E.prototype = new y(), E.prototype.constructor = E;
    }
    function s(E, c, y) {
      if (s.isBN(E))
        return E;
      this.negative = 0, this.words = null, this.length = 0, this.red = null, E !== null && ((c === "le" || c === "be") && (y = c, c = 10), this._init(E || 0, c || 10, y || "be"));
    }
    typeof e == "object" ? e.exports = s : t.BN = s, s.BN = s, s.wordSize = 26;
    var a;
    try {
      typeof window < "u" && typeof window.Buffer < "u" ? a = window.Buffer : a = rS.Buffer;
    } catch {
    }
    s.isBN = function(c) {
      return c instanceof s ? !0 : c !== null && typeof c == "object" && c.constructor.wordSize === s.wordSize && Array.isArray(c.words);
    }, s.max = function(c, y) {
      return c.cmp(y) > 0 ? c : y;
    }, s.min = function(c, y) {
      return c.cmp(y) < 0 ? c : y;
    }, s.prototype._init = function(c, y, x) {
      if (typeof c == "number")
        return this._initNumber(c, y, x);
      if (typeof c == "object")
        return this._initArray(c, y, x);
      y === "hex" && (y = 16), r(y === (y | 0) && y >= 2 && y <= 36), c = c.toString().replace(/\s+/g, "");
      var S = 0;
      c[0] === "-" && (S++, this.negative = 1), S < c.length && (y === 16 ? this._parseHex(c, S, x) : (this._parseBase(c, y, S), x === "le" && this._initArray(this.toArray(), y, x)));
    }, s.prototype._initNumber = function(c, y, x) {
      c < 0 && (this.negative = 1, c = -c), c < 67108864 ? (this.words = [c & 67108863], this.length = 1) : c < 4503599627370496 ? (this.words = [
        c & 67108863,
        c / 67108864 & 67108863
      ], this.length = 2) : (r(c < 9007199254740992), this.words = [
        c & 67108863,
        c / 67108864 & 67108863,
        1
      ], this.length = 3), x === "le" && this._initArray(this.toArray(), y, x);
    }, s.prototype._initArray = function(c, y, x) {
      if (r(typeof c.length == "number"), c.length <= 0)
        return this.words = [0], this.length = 1, this;
      this.length = Math.ceil(c.length / 3), this.words = new Array(this.length);
      for (var S = 0; S < this.length; S++)
        this.words[S] = 0;
      var A, _, P = 0;
      if (x === "be")
        for (S = c.length - 1, A = 0; S >= 0; S -= 3)
          _ = c[S] | c[S - 1] << 8 | c[S - 2] << 16, this.words[A] |= _ << P & 67108863, this.words[A + 1] = _ >>> 26 - P & 67108863, P += 24, P >= 26 && (P -= 26, A++);
      else if (x === "le")
        for (S = 0, A = 0; S < c.length; S += 3)
          _ = c[S] | c[S + 1] << 8 | c[S + 2] << 16, this.words[A] |= _ << P & 67108863, this.words[A + 1] = _ >>> 26 - P & 67108863, P += 24, P >= 26 && (P -= 26, A++);
      return this._strip();
    };
    function o(E, c) {
      var y = E.charCodeAt(c);
      if (y >= 48 && y <= 57)
        return y - 48;
      if (y >= 65 && y <= 70)
        return y - 55;
      if (y >= 97 && y <= 102)
        return y - 87;
      r(!1, "Invalid character in " + E);
    }
    function u(E, c, y) {
      var x = o(E, y);
      return y - 1 >= c && (x |= o(E, y - 1) << 4), x;
    }
    s.prototype._parseHex = function(c, y, x) {
      this.length = Math.ceil((c.length - y) / 6), this.words = new Array(this.length);
      for (var S = 0; S < this.length; S++)
        this.words[S] = 0;
      var A = 0, _ = 0, P;
      if (x === "be")
        for (S = c.length - 1; S >= y; S -= 2)
          P = u(c, y, S) << A, this.words[_] |= P & 67108863, A >= 18 ? (A -= 18, _ += 1, this.words[_] |= P >>> 26) : A += 8;
      else {
        var m = c.length - y;
        for (S = m % 2 === 0 ? y + 1 : y; S < c.length; S += 2)
          P = u(c, y, S) << A, this.words[_] |= P & 67108863, A >= 18 ? (A -= 18, _ += 1, this.words[_] |= P >>> 26) : A += 8;
      }
      this._strip();
    };
    function l(E, c, y, x) {
      for (var S = 0, A = 0, _ = Math.min(E.length, y), P = c; P < _; P++) {
        var m = E.charCodeAt(P) - 48;
        S *= x, m >= 49 ? A = m - 49 + 10 : m >= 17 ? A = m - 17 + 10 : A = m, r(m >= 0 && A < x, "Invalid character"), S += A;
      }
      return S;
    }
    s.prototype._parseBase = function(c, y, x) {
      this.words = [0], this.length = 1;
      for (var S = 0, A = 1; A <= 67108863; A *= y)
        S++;
      S--, A = A / y | 0;
      for (var _ = c.length - x, P = _ % S, m = Math.min(_, _ - P) + x, d = 0, g = x; g < m; g += S)
        d = l(c, g, g + S, y), this.imuln(A), this.words[0] + d < 67108864 ? this.words[0] += d : this._iaddn(d);
      if (P !== 0) {
        var O = 1;
        for (d = l(c, g, c.length, y), g = 0; g < P; g++)
          O *= y;
        this.imuln(O), this.words[0] + d < 67108864 ? this.words[0] += d : this._iaddn(d);
      }
      this._strip();
    }, s.prototype.copy = function(c) {
      c.words = new Array(this.length);
      for (var y = 0; y < this.length; y++)
        c.words[y] = this.words[y];
      c.length = this.length, c.negative = this.negative, c.red = this.red;
    };
    function p(E, c) {
      E.words = c.words, E.length = c.length, E.negative = c.negative, E.red = c.red;
    }
    if (s.prototype._move = function(c) {
      p(c, this);
    }, s.prototype.clone = function() {
      var c = new s(null);
      return this.copy(c), c;
    }, s.prototype._expand = function(c) {
      for (; this.length < c; )
        this.words[this.length++] = 0;
      return this;
    }, s.prototype._strip = function() {
      for (; this.length > 1 && this.words[this.length - 1] === 0; )
        this.length--;
      return this._normSign();
    }, s.prototype._normSign = function() {
      return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
    }, typeof Symbol < "u" && typeof Symbol.for == "function")
      try {
        s.prototype[Symbol.for("nodejs.util.inspect.custom")] = h;
      } catch {
        s.prototype.inspect = h;
      }
    else
      s.prototype.inspect = h;
    function h() {
      return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
    }
    var b = [
      "",
      "0",
      "00",
      "000",
      "0000",
      "00000",
      "000000",
      "0000000",
      "00000000",
      "000000000",
      "0000000000",
      "00000000000",
      "000000000000",
      "0000000000000",
      "00000000000000",
      "000000000000000",
      "0000000000000000",
      "00000000000000000",
      "000000000000000000",
      "0000000000000000000",
      "00000000000000000000",
      "000000000000000000000",
      "0000000000000000000000",
      "00000000000000000000000",
      "000000000000000000000000",
      "0000000000000000000000000"
    ], C = [
      0,
      0,
      25,
      16,
      12,
      11,
      10,
      9,
      8,
      8,
      7,
      7,
      7,
      7,
      6,
      6,
      6,
      6,
      6,
      6,
      6,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5,
      5
    ], v = [
      0,
      0,
      33554432,
      43046721,
      16777216,
      48828125,
      60466176,
      40353607,
      16777216,
      43046721,
      1e7,
      19487171,
      35831808,
      62748517,
      7529536,
      11390625,
      16777216,
      24137569,
      34012224,
      47045881,
      64e6,
      4084101,
      5153632,
      6436343,
      7962624,
      9765625,
      11881376,
      14348907,
      17210368,
      20511149,
      243e5,
      28629151,
      33554432,
      39135393,
      45435424,
      52521875,
      60466176
    ];
    s.prototype.toString = function(c, y) {
      c = c || 10, y = y | 0 || 1;
      var x;
      if (c === 16 || c === "hex") {
        x = "";
        for (var S = 0, A = 0, _ = 0; _ < this.length; _++) {
          var P = this.words[_], m = ((P << S | A) & 16777215).toString(16);
          A = P >>> 24 - S & 16777215, S += 2, S >= 26 && (S -= 26, _--), A !== 0 || _ !== this.length - 1 ? x = b[6 - m.length] + m + x : x = m + x;
        }
        for (A !== 0 && (x = A.toString(16) + x); x.length % y !== 0; )
          x = "0" + x;
        return this.negative !== 0 && (x = "-" + x), x;
      }
      if (c === (c | 0) && c >= 2 && c <= 36) {
        var d = C[c], g = v[c];
        x = "";
        var O = this.clone();
        for (O.negative = 0; !O.isZero(); ) {
          var f = O.modrn(g).toString(c);
          O = O.idivn(g), O.isZero() ? x = f + x : x = b[d - f.length] + f + x;
        }
        for (this.isZero() && (x = "0" + x); x.length % y !== 0; )
          x = "0" + x;
        return this.negative !== 0 && (x = "-" + x), x;
      }
      r(!1, "Base should be between 2 and 36");
    }, s.prototype.toNumber = function() {
      var c = this.words[0];
      return this.length === 2 ? c += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? c += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r(!1, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -c : c;
    }, s.prototype.toJSON = function() {
      return this.toString(16, 2);
    }, a && (s.prototype.toBuffer = function(c, y) {
      return this.toArrayLike(a, c, y);
    }), s.prototype.toArray = function(c, y) {
      return this.toArrayLike(Array, c, y);
    };
    var T = function(c, y) {
      return c.allocUnsafe ? c.allocUnsafe(y) : new c(y);
    };
    s.prototype.toArrayLike = function(c, y, x) {
      this._strip();
      var S = this.byteLength(), A = x || Math.max(1, S);
      r(S <= A, "byte array longer than desired length"), r(A > 0, "Requested array length <= 0");
      var _ = T(c, A), P = y === "le" ? "LE" : "BE";
      return this["_toArrayLike" + P](_, S), _;
    }, s.prototype._toArrayLikeLE = function(c, y) {
      for (var x = 0, S = 0, A = 0, _ = 0; A < this.length; A++) {
        var P = this.words[A] << _ | S;
        c[x++] = P & 255, x < c.length && (c[x++] = P >> 8 & 255), x < c.length && (c[x++] = P >> 16 & 255), _ === 6 ? (x < c.length && (c[x++] = P >> 24 & 255), S = 0, _ = 0) : (S = P >>> 24, _ += 2);
      }
      if (x < c.length)
        for (c[x++] = S; x < c.length; )
          c[x++] = 0;
    }, s.prototype._toArrayLikeBE = function(c, y) {
      for (var x = c.length - 1, S = 0, A = 0, _ = 0; A < this.length; A++) {
        var P = this.words[A] << _ | S;
        c[x--] = P & 255, x >= 0 && (c[x--] = P >> 8 & 255), x >= 0 && (c[x--] = P >> 16 & 255), _ === 6 ? (x >= 0 && (c[x--] = P >> 24 & 255), S = 0, _ = 0) : (S = P >>> 24, _ += 2);
      }
      if (x >= 0)
        for (c[x--] = S; x >= 0; )
          c[x--] = 0;
    }, Math.clz32 ? s.prototype._countBits = function(c) {
      return 32 - Math.clz32(c);
    } : s.prototype._countBits = function(c) {
      var y = c, x = 0;
      return y >= 4096 && (x += 13, y >>>= 13), y >= 64 && (x += 7, y >>>= 7), y >= 8 && (x += 4, y >>>= 4), y >= 2 && (x += 2, y >>>= 2), x + y;
    }, s.prototype._zeroBits = function(c) {
      if (c === 0)
        return 26;
      var y = c, x = 0;
      return (y & 8191) === 0 && (x += 13, y >>>= 13), (y & 127) === 0 && (x += 7, y >>>= 7), (y & 15) === 0 && (x += 4, y >>>= 4), (y & 3) === 0 && (x += 2, y >>>= 2), (y & 1) === 0 && x++, x;
    }, s.prototype.bitLength = function() {
      var c = this.words[this.length - 1], y = this._countBits(c);
      return (this.length - 1) * 26 + y;
    };
    function w(E) {
      for (var c = new Array(E.bitLength()), y = 0; y < c.length; y++) {
        var x = y / 26 | 0, S = y % 26;
        c[y] = E.words[x] >>> S & 1;
      }
      return c;
    }
    s.prototype.zeroBits = function() {
      if (this.isZero())
        return 0;
      for (var c = 0, y = 0; y < this.length; y++) {
        var x = this._zeroBits(this.words[y]);
        if (c += x, x !== 26)
          break;
      }
      return c;
    }, s.prototype.byteLength = function() {
      return Math.ceil(this.bitLength() / 8);
    }, s.prototype.toTwos = function(c) {
      return this.negative !== 0 ? this.abs().inotn(c).iaddn(1) : this.clone();
    }, s.prototype.fromTwos = function(c) {
      return this.testn(c - 1) ? this.notn(c).iaddn(1).ineg() : this.clone();
    }, s.prototype.isNeg = function() {
      return this.negative !== 0;
    }, s.prototype.neg = function() {
      return this.clone().ineg();
    }, s.prototype.ineg = function() {
      return this.isZero() || (this.negative ^= 1), this;
    }, s.prototype.iuor = function(c) {
      for (; this.length < c.length; )
        this.words[this.length++] = 0;
      for (var y = 0; y < c.length; y++)
        this.words[y] = this.words[y] | c.words[y];
      return this._strip();
    }, s.prototype.ior = function(c) {
      return r((this.negative | c.negative) === 0), this.iuor(c);
    }, s.prototype.or = function(c) {
      return this.length > c.length ? this.clone().ior(c) : c.clone().ior(this);
    }, s.prototype.uor = function(c) {
      return this.length > c.length ? this.clone().iuor(c) : c.clone().iuor(this);
    }, s.prototype.iuand = function(c) {
      var y;
      this.length > c.length ? y = c : y = this;
      for (var x = 0; x < y.length; x++)
        this.words[x] = this.words[x] & c.words[x];
      return this.length = y.length, this._strip();
    }, s.prototype.iand = function(c) {
      return r((this.negative | c.negative) === 0), this.iuand(c);
    }, s.prototype.and = function(c) {
      return this.length > c.length ? this.clone().iand(c) : c.clone().iand(this);
    }, s.prototype.uand = function(c) {
      return this.length > c.length ? this.clone().iuand(c) : c.clone().iuand(this);
    }, s.prototype.iuxor = function(c) {
      var y, x;
      this.length > c.length ? (y = this, x = c) : (y = c, x = this);
      for (var S = 0; S < x.length; S++)
        this.words[S] = y.words[S] ^ x.words[S];
      if (this !== y)
        for (; S < y.length; S++)
          this.words[S] = y.words[S];
      return this.length = y.length, this._strip();
    }, s.prototype.ixor = function(c) {
      return r((this.negative | c.negative) === 0), this.iuxor(c);
    }, s.prototype.xor = function(c) {
      return this.length > c.length ? this.clone().ixor(c) : c.clone().ixor(this);
    }, s.prototype.uxor = function(c) {
      return this.length > c.length ? this.clone().iuxor(c) : c.clone().iuxor(this);
    }, s.prototype.inotn = function(c) {
      r(typeof c == "number" && c >= 0);
      var y = Math.ceil(c / 26) | 0, x = c % 26;
      this._expand(y), x > 0 && y--;
      for (var S = 0; S < y; S++)
        this.words[S] = ~this.words[S] & 67108863;
      return x > 0 && (this.words[S] = ~this.words[S] & 67108863 >> 26 - x), this._strip();
    }, s.prototype.notn = function(c) {
      return this.clone().inotn(c);
    }, s.prototype.setn = function(c, y) {
      r(typeof c == "number" && c >= 0);
      var x = c / 26 | 0, S = c % 26;
      return this._expand(x + 1), y ? this.words[x] = this.words[x] | 1 << S : this.words[x] = this.words[x] & ~(1 << S), this._strip();
    }, s.prototype.iadd = function(c) {
      var y;
      if (this.negative !== 0 && c.negative === 0)
        return this.negative = 0, y = this.isub(c), this.negative ^= 1, this._normSign();
      if (this.negative === 0 && c.negative !== 0)
        return c.negative = 0, y = this.isub(c), c.negative = 1, y._normSign();
      var x, S;
      this.length > c.length ? (x = this, S = c) : (x = c, S = this);
      for (var A = 0, _ = 0; _ < S.length; _++)
        y = (x.words[_] | 0) + (S.words[_] | 0) + A, this.words[_] = y & 67108863, A = y >>> 26;
      for (; A !== 0 && _ < x.length; _++)
        y = (x.words[_] | 0) + A, this.words[_] = y & 67108863, A = y >>> 26;
      if (this.length = x.length, A !== 0)
        this.words[this.length] = A, this.length++;
      else if (x !== this)
        for (; _ < x.length; _++)
          this.words[_] = x.words[_];
      return this;
    }, s.prototype.add = function(c) {
      var y;
      return c.negative !== 0 && this.negative === 0 ? (c.negative = 0, y = this.sub(c), c.negative ^= 1, y) : c.negative === 0 && this.negative !== 0 ? (this.negative = 0, y = c.sub(this), this.negative = 1, y) : this.length > c.length ? this.clone().iadd(c) : c.clone().iadd(this);
    }, s.prototype.isub = function(c) {
      if (c.negative !== 0) {
        c.negative = 0;
        var y = this.iadd(c);
        return c.negative = 1, y._normSign();
      } else if (this.negative !== 0)
        return this.negative = 0, this.iadd(c), this.negative = 1, this._normSign();
      var x = this.cmp(c);
      if (x === 0)
        return this.negative = 0, this.length = 1, this.words[0] = 0, this;
      var S, A;
      x > 0 ? (S = this, A = c) : (S = c, A = this);
      for (var _ = 0, P = 0; P < A.length; P++)
        y = (S.words[P] | 0) - (A.words[P] | 0) + _, _ = y >> 26, this.words[P] = y & 67108863;
      for (; _ !== 0 && P < S.length; P++)
        y = (S.words[P] | 0) + _, _ = y >> 26, this.words[P] = y & 67108863;
      if (_ === 0 && P < S.length && S !== this)
        for (; P < S.length; P++)
          this.words[P] = S.words[P];
      return this.length = Math.max(this.length, P), S !== this && (this.negative = 1), this._strip();
    }, s.prototype.sub = function(c) {
      return this.clone().isub(c);
    };
    function M(E, c, y) {
      y.negative = c.negative ^ E.negative;
      var x = E.length + c.length | 0;
      y.length = x, x = x - 1 | 0;
      var S = E.words[0] | 0, A = c.words[0] | 0, _ = S * A, P = _ & 67108863, m = _ / 67108864 | 0;
      y.words[0] = P;
      for (var d = 1; d < x; d++) {
        for (var g = m >>> 26, O = m & 67108863, f = Math.min(d, c.length - 1), R = Math.max(0, d - E.length + 1); R <= f; R++) {
          var N = d - R | 0;
          S = E.words[N] | 0, A = c.words[R] | 0, _ = S * A + O, g += _ / 67108864 | 0, O = _ & 67108863;
        }
        y.words[d] = O | 0, m = g | 0;
      }
      return m !== 0 ? y.words[d] = m | 0 : y.length--, y._strip();
    }
    var I = function(c, y, x) {
      var S = c.words, A = y.words, _ = x.words, P = 0, m, d, g, O = S[0] | 0, f = O & 8191, R = O >>> 13, N = S[1] | 0, B = N & 8191, L = N >>> 13, ee = S[2] | 0, H = ee & 8191, Q = ee >>> 13, mt = S[3] | 0, te = mt & 8191, le = mt >>> 13, As = S[4] | 0, Fe = As & 8191, Ne = As >>> 13, Cs = S[5] | 0, $e = Cs & 8191, Le = Cs >>> 13, Ss = S[6] | 0, Ue = Ss & 8191, Ve = Ss >>> 13, Es = S[7] | 0, je = Es & 8191, ze = Es >>> 13, Ms = S[8] | 0, Ge = Ms & 8191, We = Ms >>> 13, _s = S[9] | 0, He = _s & 8191, Ke = _s >>> 13, Rs = A[0] | 0, qe = Rs & 8191, Qe = Rs >>> 13, Ps = A[1] | 0, Je = Ps & 8191, Ye = Ps >>> 13, Os = A[2] | 0, Xe = Os & 8191, Ze = Os >>> 13, Is = A[3] | 0, et = Is & 8191, tt = Is >>> 13, ks = A[4] | 0, nt = ks & 8191, rt = ks >>> 13, Ds = A[5] | 0, it = Ds & 8191, st = Ds >>> 13, Bs = A[6] | 0, at = Bs & 8191, ot = Bs >>> 13, Fs = A[7] | 0, ut = Fs & 8191, lt = Fs >>> 13, Ns = A[8] | 0, ct = Ns & 8191, dt = Ns >>> 13, $s = A[9] | 0, pt = $s & 8191, ft = $s >>> 13;
      x.negative = c.negative ^ y.negative, x.length = 19, m = Math.imul(f, qe), d = Math.imul(f, Qe), d = d + Math.imul(R, qe) | 0, g = Math.imul(R, Qe);
      var $i = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + ($i >>> 26) | 0, $i &= 67108863, m = Math.imul(B, qe), d = Math.imul(B, Qe), d = d + Math.imul(L, qe) | 0, g = Math.imul(L, Qe), m = m + Math.imul(f, Je) | 0, d = d + Math.imul(f, Ye) | 0, d = d + Math.imul(R, Je) | 0, g = g + Math.imul(R, Ye) | 0;
      var Li = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (Li >>> 26) | 0, Li &= 67108863, m = Math.imul(H, qe), d = Math.imul(H, Qe), d = d + Math.imul(Q, qe) | 0, g = Math.imul(Q, Qe), m = m + Math.imul(B, Je) | 0, d = d + Math.imul(B, Ye) | 0, d = d + Math.imul(L, Je) | 0, g = g + Math.imul(L, Ye) | 0, m = m + Math.imul(f, Xe) | 0, d = d + Math.imul(f, Ze) | 0, d = d + Math.imul(R, Xe) | 0, g = g + Math.imul(R, Ze) | 0;
      var Ui = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (Ui >>> 26) | 0, Ui &= 67108863, m = Math.imul(te, qe), d = Math.imul(te, Qe), d = d + Math.imul(le, qe) | 0, g = Math.imul(le, Qe), m = m + Math.imul(H, Je) | 0, d = d + Math.imul(H, Ye) | 0, d = d + Math.imul(Q, Je) | 0, g = g + Math.imul(Q, Ye) | 0, m = m + Math.imul(B, Xe) | 0, d = d + Math.imul(B, Ze) | 0, d = d + Math.imul(L, Xe) | 0, g = g + Math.imul(L, Ze) | 0, m = m + Math.imul(f, et) | 0, d = d + Math.imul(f, tt) | 0, d = d + Math.imul(R, et) | 0, g = g + Math.imul(R, tt) | 0;
      var Vi = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (Vi >>> 26) | 0, Vi &= 67108863, m = Math.imul(Fe, qe), d = Math.imul(Fe, Qe), d = d + Math.imul(Ne, qe) | 0, g = Math.imul(Ne, Qe), m = m + Math.imul(te, Je) | 0, d = d + Math.imul(te, Ye) | 0, d = d + Math.imul(le, Je) | 0, g = g + Math.imul(le, Ye) | 0, m = m + Math.imul(H, Xe) | 0, d = d + Math.imul(H, Ze) | 0, d = d + Math.imul(Q, Xe) | 0, g = g + Math.imul(Q, Ze) | 0, m = m + Math.imul(B, et) | 0, d = d + Math.imul(B, tt) | 0, d = d + Math.imul(L, et) | 0, g = g + Math.imul(L, tt) | 0, m = m + Math.imul(f, nt) | 0, d = d + Math.imul(f, rt) | 0, d = d + Math.imul(R, nt) | 0, g = g + Math.imul(R, rt) | 0;
      var ji = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (ji >>> 26) | 0, ji &= 67108863, m = Math.imul($e, qe), d = Math.imul($e, Qe), d = d + Math.imul(Le, qe) | 0, g = Math.imul(Le, Qe), m = m + Math.imul(Fe, Je) | 0, d = d + Math.imul(Fe, Ye) | 0, d = d + Math.imul(Ne, Je) | 0, g = g + Math.imul(Ne, Ye) | 0, m = m + Math.imul(te, Xe) | 0, d = d + Math.imul(te, Ze) | 0, d = d + Math.imul(le, Xe) | 0, g = g + Math.imul(le, Ze) | 0, m = m + Math.imul(H, et) | 0, d = d + Math.imul(H, tt) | 0, d = d + Math.imul(Q, et) | 0, g = g + Math.imul(Q, tt) | 0, m = m + Math.imul(B, nt) | 0, d = d + Math.imul(B, rt) | 0, d = d + Math.imul(L, nt) | 0, g = g + Math.imul(L, rt) | 0, m = m + Math.imul(f, it) | 0, d = d + Math.imul(f, st) | 0, d = d + Math.imul(R, it) | 0, g = g + Math.imul(R, st) | 0;
      var Zd = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (Zd >>> 26) | 0, Zd &= 67108863, m = Math.imul(Ue, qe), d = Math.imul(Ue, Qe), d = d + Math.imul(Ve, qe) | 0, g = Math.imul(Ve, Qe), m = m + Math.imul($e, Je) | 0, d = d + Math.imul($e, Ye) | 0, d = d + Math.imul(Le, Je) | 0, g = g + Math.imul(Le, Ye) | 0, m = m + Math.imul(Fe, Xe) | 0, d = d + Math.imul(Fe, Ze) | 0, d = d + Math.imul(Ne, Xe) | 0, g = g + Math.imul(Ne, Ze) | 0, m = m + Math.imul(te, et) | 0, d = d + Math.imul(te, tt) | 0, d = d + Math.imul(le, et) | 0, g = g + Math.imul(le, tt) | 0, m = m + Math.imul(H, nt) | 0, d = d + Math.imul(H, rt) | 0, d = d + Math.imul(Q, nt) | 0, g = g + Math.imul(Q, rt) | 0, m = m + Math.imul(B, it) | 0, d = d + Math.imul(B, st) | 0, d = d + Math.imul(L, it) | 0, g = g + Math.imul(L, st) | 0, m = m + Math.imul(f, at) | 0, d = d + Math.imul(f, ot) | 0, d = d + Math.imul(R, at) | 0, g = g + Math.imul(R, ot) | 0;
      var ep = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (ep >>> 26) | 0, ep &= 67108863, m = Math.imul(je, qe), d = Math.imul(je, Qe), d = d + Math.imul(ze, qe) | 0, g = Math.imul(ze, Qe), m = m + Math.imul(Ue, Je) | 0, d = d + Math.imul(Ue, Ye) | 0, d = d + Math.imul(Ve, Je) | 0, g = g + Math.imul(Ve, Ye) | 0, m = m + Math.imul($e, Xe) | 0, d = d + Math.imul($e, Ze) | 0, d = d + Math.imul(Le, Xe) | 0, g = g + Math.imul(Le, Ze) | 0, m = m + Math.imul(Fe, et) | 0, d = d + Math.imul(Fe, tt) | 0, d = d + Math.imul(Ne, et) | 0, g = g + Math.imul(Ne, tt) | 0, m = m + Math.imul(te, nt) | 0, d = d + Math.imul(te, rt) | 0, d = d + Math.imul(le, nt) | 0, g = g + Math.imul(le, rt) | 0, m = m + Math.imul(H, it) | 0, d = d + Math.imul(H, st) | 0, d = d + Math.imul(Q, it) | 0, g = g + Math.imul(Q, st) | 0, m = m + Math.imul(B, at) | 0, d = d + Math.imul(B, ot) | 0, d = d + Math.imul(L, at) | 0, g = g + Math.imul(L, ot) | 0, m = m + Math.imul(f, ut) | 0, d = d + Math.imul(f, lt) | 0, d = d + Math.imul(R, ut) | 0, g = g + Math.imul(R, lt) | 0;
      var tp = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (tp >>> 26) | 0, tp &= 67108863, m = Math.imul(Ge, qe), d = Math.imul(Ge, Qe), d = d + Math.imul(We, qe) | 0, g = Math.imul(We, Qe), m = m + Math.imul(je, Je) | 0, d = d + Math.imul(je, Ye) | 0, d = d + Math.imul(ze, Je) | 0, g = g + Math.imul(ze, Ye) | 0, m = m + Math.imul(Ue, Xe) | 0, d = d + Math.imul(Ue, Ze) | 0, d = d + Math.imul(Ve, Xe) | 0, g = g + Math.imul(Ve, Ze) | 0, m = m + Math.imul($e, et) | 0, d = d + Math.imul($e, tt) | 0, d = d + Math.imul(Le, et) | 0, g = g + Math.imul(Le, tt) | 0, m = m + Math.imul(Fe, nt) | 0, d = d + Math.imul(Fe, rt) | 0, d = d + Math.imul(Ne, nt) | 0, g = g + Math.imul(Ne, rt) | 0, m = m + Math.imul(te, it) | 0, d = d + Math.imul(te, st) | 0, d = d + Math.imul(le, it) | 0, g = g + Math.imul(le, st) | 0, m = m + Math.imul(H, at) | 0, d = d + Math.imul(H, ot) | 0, d = d + Math.imul(Q, at) | 0, g = g + Math.imul(Q, ot) | 0, m = m + Math.imul(B, ut) | 0, d = d + Math.imul(B, lt) | 0, d = d + Math.imul(L, ut) | 0, g = g + Math.imul(L, lt) | 0, m = m + Math.imul(f, ct) | 0, d = d + Math.imul(f, dt) | 0, d = d + Math.imul(R, ct) | 0, g = g + Math.imul(R, dt) | 0;
      var np = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (np >>> 26) | 0, np &= 67108863, m = Math.imul(He, qe), d = Math.imul(He, Qe), d = d + Math.imul(Ke, qe) | 0, g = Math.imul(Ke, Qe), m = m + Math.imul(Ge, Je) | 0, d = d + Math.imul(Ge, Ye) | 0, d = d + Math.imul(We, Je) | 0, g = g + Math.imul(We, Ye) | 0, m = m + Math.imul(je, Xe) | 0, d = d + Math.imul(je, Ze) | 0, d = d + Math.imul(ze, Xe) | 0, g = g + Math.imul(ze, Ze) | 0, m = m + Math.imul(Ue, et) | 0, d = d + Math.imul(Ue, tt) | 0, d = d + Math.imul(Ve, et) | 0, g = g + Math.imul(Ve, tt) | 0, m = m + Math.imul($e, nt) | 0, d = d + Math.imul($e, rt) | 0, d = d + Math.imul(Le, nt) | 0, g = g + Math.imul(Le, rt) | 0, m = m + Math.imul(Fe, it) | 0, d = d + Math.imul(Fe, st) | 0, d = d + Math.imul(Ne, it) | 0, g = g + Math.imul(Ne, st) | 0, m = m + Math.imul(te, at) | 0, d = d + Math.imul(te, ot) | 0, d = d + Math.imul(le, at) | 0, g = g + Math.imul(le, ot) | 0, m = m + Math.imul(H, ut) | 0, d = d + Math.imul(H, lt) | 0, d = d + Math.imul(Q, ut) | 0, g = g + Math.imul(Q, lt) | 0, m = m + Math.imul(B, ct) | 0, d = d + Math.imul(B, dt) | 0, d = d + Math.imul(L, ct) | 0, g = g + Math.imul(L, dt) | 0, m = m + Math.imul(f, pt) | 0, d = d + Math.imul(f, ft) | 0, d = d + Math.imul(R, pt) | 0, g = g + Math.imul(R, ft) | 0;
      var rp = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (rp >>> 26) | 0, rp &= 67108863, m = Math.imul(He, Je), d = Math.imul(He, Ye), d = d + Math.imul(Ke, Je) | 0, g = Math.imul(Ke, Ye), m = m + Math.imul(Ge, Xe) | 0, d = d + Math.imul(Ge, Ze) | 0, d = d + Math.imul(We, Xe) | 0, g = g + Math.imul(We, Ze) | 0, m = m + Math.imul(je, et) | 0, d = d + Math.imul(je, tt) | 0, d = d + Math.imul(ze, et) | 0, g = g + Math.imul(ze, tt) | 0, m = m + Math.imul(Ue, nt) | 0, d = d + Math.imul(Ue, rt) | 0, d = d + Math.imul(Ve, nt) | 0, g = g + Math.imul(Ve, rt) | 0, m = m + Math.imul($e, it) | 0, d = d + Math.imul($e, st) | 0, d = d + Math.imul(Le, it) | 0, g = g + Math.imul(Le, st) | 0, m = m + Math.imul(Fe, at) | 0, d = d + Math.imul(Fe, ot) | 0, d = d + Math.imul(Ne, at) | 0, g = g + Math.imul(Ne, ot) | 0, m = m + Math.imul(te, ut) | 0, d = d + Math.imul(te, lt) | 0, d = d + Math.imul(le, ut) | 0, g = g + Math.imul(le, lt) | 0, m = m + Math.imul(H, ct) | 0, d = d + Math.imul(H, dt) | 0, d = d + Math.imul(Q, ct) | 0, g = g + Math.imul(Q, dt) | 0, m = m + Math.imul(B, pt) | 0, d = d + Math.imul(B, ft) | 0, d = d + Math.imul(L, pt) | 0, g = g + Math.imul(L, ft) | 0;
      var ip = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (ip >>> 26) | 0, ip &= 67108863, m = Math.imul(He, Xe), d = Math.imul(He, Ze), d = d + Math.imul(Ke, Xe) | 0, g = Math.imul(Ke, Ze), m = m + Math.imul(Ge, et) | 0, d = d + Math.imul(Ge, tt) | 0, d = d + Math.imul(We, et) | 0, g = g + Math.imul(We, tt) | 0, m = m + Math.imul(je, nt) | 0, d = d + Math.imul(je, rt) | 0, d = d + Math.imul(ze, nt) | 0, g = g + Math.imul(ze, rt) | 0, m = m + Math.imul(Ue, it) | 0, d = d + Math.imul(Ue, st) | 0, d = d + Math.imul(Ve, it) | 0, g = g + Math.imul(Ve, st) | 0, m = m + Math.imul($e, at) | 0, d = d + Math.imul($e, ot) | 0, d = d + Math.imul(Le, at) | 0, g = g + Math.imul(Le, ot) | 0, m = m + Math.imul(Fe, ut) | 0, d = d + Math.imul(Fe, lt) | 0, d = d + Math.imul(Ne, ut) | 0, g = g + Math.imul(Ne, lt) | 0, m = m + Math.imul(te, ct) | 0, d = d + Math.imul(te, dt) | 0, d = d + Math.imul(le, ct) | 0, g = g + Math.imul(le, dt) | 0, m = m + Math.imul(H, pt) | 0, d = d + Math.imul(H, ft) | 0, d = d + Math.imul(Q, pt) | 0, g = g + Math.imul(Q, ft) | 0;
      var sp = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (sp >>> 26) | 0, sp &= 67108863, m = Math.imul(He, et), d = Math.imul(He, tt), d = d + Math.imul(Ke, et) | 0, g = Math.imul(Ke, tt), m = m + Math.imul(Ge, nt) | 0, d = d + Math.imul(Ge, rt) | 0, d = d + Math.imul(We, nt) | 0, g = g + Math.imul(We, rt) | 0, m = m + Math.imul(je, it) | 0, d = d + Math.imul(je, st) | 0, d = d + Math.imul(ze, it) | 0, g = g + Math.imul(ze, st) | 0, m = m + Math.imul(Ue, at) | 0, d = d + Math.imul(Ue, ot) | 0, d = d + Math.imul(Ve, at) | 0, g = g + Math.imul(Ve, ot) | 0, m = m + Math.imul($e, ut) | 0, d = d + Math.imul($e, lt) | 0, d = d + Math.imul(Le, ut) | 0, g = g + Math.imul(Le, lt) | 0, m = m + Math.imul(Fe, ct) | 0, d = d + Math.imul(Fe, dt) | 0, d = d + Math.imul(Ne, ct) | 0, g = g + Math.imul(Ne, dt) | 0, m = m + Math.imul(te, pt) | 0, d = d + Math.imul(te, ft) | 0, d = d + Math.imul(le, pt) | 0, g = g + Math.imul(le, ft) | 0;
      var ap = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (ap >>> 26) | 0, ap &= 67108863, m = Math.imul(He, nt), d = Math.imul(He, rt), d = d + Math.imul(Ke, nt) | 0, g = Math.imul(Ke, rt), m = m + Math.imul(Ge, it) | 0, d = d + Math.imul(Ge, st) | 0, d = d + Math.imul(We, it) | 0, g = g + Math.imul(We, st) | 0, m = m + Math.imul(je, at) | 0, d = d + Math.imul(je, ot) | 0, d = d + Math.imul(ze, at) | 0, g = g + Math.imul(ze, ot) | 0, m = m + Math.imul(Ue, ut) | 0, d = d + Math.imul(Ue, lt) | 0, d = d + Math.imul(Ve, ut) | 0, g = g + Math.imul(Ve, lt) | 0, m = m + Math.imul($e, ct) | 0, d = d + Math.imul($e, dt) | 0, d = d + Math.imul(Le, ct) | 0, g = g + Math.imul(Le, dt) | 0, m = m + Math.imul(Fe, pt) | 0, d = d + Math.imul(Fe, ft) | 0, d = d + Math.imul(Ne, pt) | 0, g = g + Math.imul(Ne, ft) | 0;
      var op = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (op >>> 26) | 0, op &= 67108863, m = Math.imul(He, it), d = Math.imul(He, st), d = d + Math.imul(Ke, it) | 0, g = Math.imul(Ke, st), m = m + Math.imul(Ge, at) | 0, d = d + Math.imul(Ge, ot) | 0, d = d + Math.imul(We, at) | 0, g = g + Math.imul(We, ot) | 0, m = m + Math.imul(je, ut) | 0, d = d + Math.imul(je, lt) | 0, d = d + Math.imul(ze, ut) | 0, g = g + Math.imul(ze, lt) | 0, m = m + Math.imul(Ue, ct) | 0, d = d + Math.imul(Ue, dt) | 0, d = d + Math.imul(Ve, ct) | 0, g = g + Math.imul(Ve, dt) | 0, m = m + Math.imul($e, pt) | 0, d = d + Math.imul($e, ft) | 0, d = d + Math.imul(Le, pt) | 0, g = g + Math.imul(Le, ft) | 0;
      var up = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (up >>> 26) | 0, up &= 67108863, m = Math.imul(He, at), d = Math.imul(He, ot), d = d + Math.imul(Ke, at) | 0, g = Math.imul(Ke, ot), m = m + Math.imul(Ge, ut) | 0, d = d + Math.imul(Ge, lt) | 0, d = d + Math.imul(We, ut) | 0, g = g + Math.imul(We, lt) | 0, m = m + Math.imul(je, ct) | 0, d = d + Math.imul(je, dt) | 0, d = d + Math.imul(ze, ct) | 0, g = g + Math.imul(ze, dt) | 0, m = m + Math.imul(Ue, pt) | 0, d = d + Math.imul(Ue, ft) | 0, d = d + Math.imul(Ve, pt) | 0, g = g + Math.imul(Ve, ft) | 0;
      var lp = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (lp >>> 26) | 0, lp &= 67108863, m = Math.imul(He, ut), d = Math.imul(He, lt), d = d + Math.imul(Ke, ut) | 0, g = Math.imul(Ke, lt), m = m + Math.imul(Ge, ct) | 0, d = d + Math.imul(Ge, dt) | 0, d = d + Math.imul(We, ct) | 0, g = g + Math.imul(We, dt) | 0, m = m + Math.imul(je, pt) | 0, d = d + Math.imul(je, ft) | 0, d = d + Math.imul(ze, pt) | 0, g = g + Math.imul(ze, ft) | 0;
      var cp = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (cp >>> 26) | 0, cp &= 67108863, m = Math.imul(He, ct), d = Math.imul(He, dt), d = d + Math.imul(Ke, ct) | 0, g = Math.imul(Ke, dt), m = m + Math.imul(Ge, pt) | 0, d = d + Math.imul(Ge, ft) | 0, d = d + Math.imul(We, pt) | 0, g = g + Math.imul(We, ft) | 0;
      var dp = (P + m | 0) + ((d & 8191) << 13) | 0;
      P = (g + (d >>> 13) | 0) + (dp >>> 26) | 0, dp &= 67108863, m = Math.imul(He, pt), d = Math.imul(He, ft), d = d + Math.imul(Ke, pt) | 0, g = Math.imul(Ke, ft);
      var pp = (P + m | 0) + ((d & 8191) << 13) | 0;
      return P = (g + (d >>> 13) | 0) + (pp >>> 26) | 0, pp &= 67108863, _[0] = $i, _[1] = Li, _[2] = Ui, _[3] = Vi, _[4] = ji, _[5] = Zd, _[6] = ep, _[7] = tp, _[8] = np, _[9] = rp, _[10] = ip, _[11] = sp, _[12] = ap, _[13] = op, _[14] = up, _[15] = lp, _[16] = cp, _[17] = dp, _[18] = pp, P !== 0 && (_[19] = P, x.length++), x;
    };
    Math.imul || (I = M);
    function F(E, c, y) {
      y.negative = c.negative ^ E.negative, y.length = E.length + c.length;
      for (var x = 0, S = 0, A = 0; A < y.length - 1; A++) {
        var _ = S;
        S = 0;
        for (var P = x & 67108863, m = Math.min(A, c.length - 1), d = Math.max(0, A - E.length + 1); d <= m; d++) {
          var g = A - d, O = E.words[g] | 0, f = c.words[d] | 0, R = O * f, N = R & 67108863;
          _ = _ + (R / 67108864 | 0) | 0, N = N + P | 0, P = N & 67108863, _ = _ + (N >>> 26) | 0, S += _ >>> 26, _ &= 67108863;
        }
        y.words[A] = P, x = _, _ = S;
      }
      return x !== 0 ? y.words[A] = x : y.length--, y._strip();
    }
    function k(E, c, y) {
      return F(E, c, y);
    }
    s.prototype.mulTo = function(c, y) {
      var x, S = this.length + c.length;
      return this.length === 10 && c.length === 10 ? x = I(this, c, y) : S < 63 ? x = M(this, c, y) : S < 1024 ? x = F(this, c, y) : x = k(this, c, y), x;
    }, s.prototype.mul = function(c) {
      var y = new s(null);
      return y.words = new Array(this.length + c.length), this.mulTo(c, y);
    }, s.prototype.mulf = function(c) {
      var y = new s(null);
      return y.words = new Array(this.length + c.length), k(this, c, y);
    }, s.prototype.imul = function(c) {
      return this.clone().mulTo(c, this);
    }, s.prototype.imuln = function(c) {
      var y = c < 0;
      y && (c = -c), r(typeof c == "number"), r(c < 67108864);
      for (var x = 0, S = 0; S < this.length; S++) {
        var A = (this.words[S] | 0) * c, _ = (A & 67108863) + (x & 67108863);
        x >>= 26, x += A / 67108864 | 0, x += _ >>> 26, this.words[S] = _ & 67108863;
      }
      return x !== 0 && (this.words[S] = x, this.length++), y ? this.ineg() : this;
    }, s.prototype.muln = function(c) {
      return this.clone().imuln(c);
    }, s.prototype.sqr = function() {
      return this.mul(this);
    }, s.prototype.isqr = function() {
      return this.imul(this.clone());
    }, s.prototype.pow = function(c) {
      var y = w(c);
      if (y.length === 0)
        return new s(1);
      for (var x = this, S = 0; S < y.length && y[S] === 0; S++, x = x.sqr())
        ;
      if (++S < y.length)
        for (var A = x.sqr(); S < y.length; S++, A = A.sqr())
          y[S] !== 0 && (x = x.mul(A));
      return x;
    }, s.prototype.iushln = function(c) {
      r(typeof c == "number" && c >= 0);
      var y = c % 26, x = (c - y) / 26, S = 67108863 >>> 26 - y << 26 - y, A;
      if (y !== 0) {
        var _ = 0;
        for (A = 0; A < this.length; A++) {
          var P = this.words[A] & S, m = (this.words[A] | 0) - P << y;
          this.words[A] = m | _, _ = P >>> 26 - y;
        }
        _ && (this.words[A] = _, this.length++);
      }
      if (x !== 0) {
        for (A = this.length - 1; A >= 0; A--)
          this.words[A + x] = this.words[A];
        for (A = 0; A < x; A++)
          this.words[A] = 0;
        this.length += x;
      }
      return this._strip();
    }, s.prototype.ishln = function(c) {
      return r(this.negative === 0), this.iushln(c);
    }, s.prototype.iushrn = function(c, y, x) {
      r(typeof c == "number" && c >= 0);
      var S;
      y ? S = (y - y % 26) / 26 : S = 0;
      var A = c % 26, _ = Math.min((c - A) / 26, this.length), P = 67108863 ^ 67108863 >>> A << A, m = x;
      if (S -= _, S = Math.max(0, S), m) {
        for (var d = 0; d < _; d++)
          m.words[d] = this.words[d];
        m.length = _;
      }
      if (_ !== 0)
        if (this.length > _)
          for (this.length -= _, d = 0; d < this.length; d++)
            this.words[d] = this.words[d + _];
        else
          this.words[0] = 0, this.length = 1;
      var g = 0;
      for (d = this.length - 1; d >= 0 && (g !== 0 || d >= S); d--) {
        var O = this.words[d] | 0;
        this.words[d] = g << 26 - A | O >>> A, g = O & P;
      }
      return m && g !== 0 && (m.words[m.length++] = g), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
    }, s.prototype.ishrn = function(c, y, x) {
      return r(this.negative === 0), this.iushrn(c, y, x);
    }, s.prototype.shln = function(c) {
      return this.clone().ishln(c);
    }, s.prototype.ushln = function(c) {
      return this.clone().iushln(c);
    }, s.prototype.shrn = function(c) {
      return this.clone().ishrn(c);
    }, s.prototype.ushrn = function(c) {
      return this.clone().iushrn(c);
    }, s.prototype.testn = function(c) {
      r(typeof c == "number" && c >= 0);
      var y = c % 26, x = (c - y) / 26, S = 1 << y;
      if (this.length <= x)
        return !1;
      var A = this.words[x];
      return !!(A & S);
    }, s.prototype.imaskn = function(c) {
      r(typeof c == "number" && c >= 0);
      var y = c % 26, x = (c - y) / 26;
      if (r(this.negative === 0, "imaskn works only with positive numbers"), this.length <= x)
        return this;
      if (y !== 0 && x++, this.length = Math.min(x, this.length), y !== 0) {
        var S = 67108863 ^ 67108863 >>> y << y;
        this.words[this.length - 1] &= S;
      }
      return this._strip();
    }, s.prototype.maskn = function(c) {
      return this.clone().imaskn(c);
    }, s.prototype.iaddn = function(c) {
      return r(typeof c == "number"), r(c < 67108864), c < 0 ? this.isubn(-c) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= c ? (this.words[0] = c - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(c), this.negative = 1, this) : this._iaddn(c);
    }, s.prototype._iaddn = function(c) {
      this.words[0] += c;
      for (var y = 0; y < this.length && this.words[y] >= 67108864; y++)
        this.words[y] -= 67108864, y === this.length - 1 ? this.words[y + 1] = 1 : this.words[y + 1]++;
      return this.length = Math.max(this.length, y + 1), this;
    }, s.prototype.isubn = function(c) {
      if (r(typeof c == "number"), r(c < 67108864), c < 0)
        return this.iaddn(-c);
      if (this.negative !== 0)
        return this.negative = 0, this.iaddn(c), this.negative = 1, this;
      if (this.words[0] -= c, this.length === 1 && this.words[0] < 0)
        this.words[0] = -this.words[0], this.negative = 1;
      else
        for (var y = 0; y < this.length && this.words[y] < 0; y++)
          this.words[y] += 67108864, this.words[y + 1] -= 1;
      return this._strip();
    }, s.prototype.addn = function(c) {
      return this.clone().iaddn(c);
    }, s.prototype.subn = function(c) {
      return this.clone().isubn(c);
    }, s.prototype.iabs = function() {
      return this.negative = 0, this;
    }, s.prototype.abs = function() {
      return this.clone().iabs();
    }, s.prototype._ishlnsubmul = function(c, y, x) {
      var S = c.length + x, A;
      this._expand(S);
      var _, P = 0;
      for (A = 0; A < c.length; A++) {
        _ = (this.words[A + x] | 0) + P;
        var m = (c.words[A] | 0) * y;
        _ -= m & 67108863, P = (_ >> 26) - (m / 67108864 | 0), this.words[A + x] = _ & 67108863;
      }
      for (; A < this.length - x; A++)
        _ = (this.words[A + x] | 0) + P, P = _ >> 26, this.words[A + x] = _ & 67108863;
      if (P === 0)
        return this._strip();
      for (r(P === -1), P = 0, A = 0; A < this.length; A++)
        _ = -(this.words[A] | 0) + P, P = _ >> 26, this.words[A] = _ & 67108863;
      return this.negative = 1, this._strip();
    }, s.prototype._wordDiv = function(c, y) {
      var x = this.length - c.length, S = this.clone(), A = c, _ = A.words[A.length - 1] | 0, P = this._countBits(_);
      x = 26 - P, x !== 0 && (A = A.ushln(x), S.iushln(x), _ = A.words[A.length - 1] | 0);
      var m = S.length - A.length, d;
      if (y !== "mod") {
        d = new s(null), d.length = m + 1, d.words = new Array(d.length);
        for (var g = 0; g < d.length; g++)
          d.words[g] = 0;
      }
      var O = S.clone()._ishlnsubmul(A, 1, m);
      O.negative === 0 && (S = O, d && (d.words[m] = 1));
      for (var f = m - 1; f >= 0; f--) {
        var R = (S.words[A.length + f] | 0) * 67108864 + (S.words[A.length + f - 1] | 0);
        for (R = Math.min(R / _ | 0, 67108863), S._ishlnsubmul(A, R, f); S.negative !== 0; )
          R--, S.negative = 0, S._ishlnsubmul(A, 1, f), S.isZero() || (S.negative ^= 1);
        d && (d.words[f] = R);
      }
      return d && d._strip(), S._strip(), y !== "div" && x !== 0 && S.iushrn(x), {
        div: d || null,
        mod: S
      };
    }, s.prototype.divmod = function(c, y, x) {
      if (r(!c.isZero()), this.isZero())
        return {
          div: new s(0),
          mod: new s(0)
        };
      var S, A, _;
      return this.negative !== 0 && c.negative === 0 ? (_ = this.neg().divmod(c, y), y !== "mod" && (S = _.div.neg()), y !== "div" && (A = _.mod.neg(), x && A.negative !== 0 && A.iadd(c)), {
        div: S,
        mod: A
      }) : this.negative === 0 && c.negative !== 0 ? (_ = this.divmod(c.neg(), y), y !== "mod" && (S = _.div.neg()), {
        div: S,
        mod: _.mod
      }) : (this.negative & c.negative) !== 0 ? (_ = this.neg().divmod(c.neg(), y), y !== "div" && (A = _.mod.neg(), x && A.negative !== 0 && A.isub(c)), {
        div: _.div,
        mod: A
      }) : c.length > this.length || this.cmp(c) < 0 ? {
        div: new s(0),
        mod: this
      } : c.length === 1 ? y === "div" ? {
        div: this.divn(c.words[0]),
        mod: null
      } : y === "mod" ? {
        div: null,
        mod: new s(this.modrn(c.words[0]))
      } : {
        div: this.divn(c.words[0]),
        mod: new s(this.modrn(c.words[0]))
      } : this._wordDiv(c, y);
    }, s.prototype.div = function(c) {
      return this.divmod(c, "div", !1).div;
    }, s.prototype.mod = function(c) {
      return this.divmod(c, "mod", !1).mod;
    }, s.prototype.umod = function(c) {
      return this.divmod(c, "mod", !0).mod;
    }, s.prototype.divRound = function(c) {
      var y = this.divmod(c);
      if (y.mod.isZero())
        return y.div;
      var x = y.div.negative !== 0 ? y.mod.isub(c) : y.mod, S = c.ushrn(1), A = c.andln(1), _ = x.cmp(S);
      return _ < 0 || A === 1 && _ === 0 ? y.div : y.div.negative !== 0 ? y.div.isubn(1) : y.div.iaddn(1);
    }, s.prototype.modrn = function(c) {
      var y = c < 0;
      y && (c = -c), r(c <= 67108863);
      for (var x = (1 << 26) % c, S = 0, A = this.length - 1; A >= 0; A--)
        S = (x * S + (this.words[A] | 0)) % c;
      return y ? -S : S;
    }, s.prototype.modn = function(c) {
      return this.modrn(c);
    }, s.prototype.idivn = function(c) {
      var y = c < 0;
      y && (c = -c), r(c <= 67108863);
      for (var x = 0, S = this.length - 1; S >= 0; S--) {
        var A = (this.words[S] | 0) + x * 67108864;
        this.words[S] = A / c | 0, x = A % c;
      }
      return this._strip(), y ? this.ineg() : this;
    }, s.prototype.divn = function(c) {
      return this.clone().idivn(c);
    }, s.prototype.egcd = function(c) {
      r(c.negative === 0), r(!c.isZero());
      var y = this, x = c.clone();
      y.negative !== 0 ? y = y.umod(c) : y = y.clone();
      for (var S = new s(1), A = new s(0), _ = new s(0), P = new s(1), m = 0; y.isEven() && x.isEven(); )
        y.iushrn(1), x.iushrn(1), ++m;
      for (var d = x.clone(), g = y.clone(); !y.isZero(); ) {
        for (var O = 0, f = 1; (y.words[0] & f) === 0 && O < 26; ++O, f <<= 1)
          ;
        if (O > 0)
          for (y.iushrn(O); O-- > 0; )
            (S.isOdd() || A.isOdd()) && (S.iadd(d), A.isub(g)), S.iushrn(1), A.iushrn(1);
        for (var R = 0, N = 1; (x.words[0] & N) === 0 && R < 26; ++R, N <<= 1)
          ;
        if (R > 0)
          for (x.iushrn(R); R-- > 0; )
            (_.isOdd() || P.isOdd()) && (_.iadd(d), P.isub(g)), _.iushrn(1), P.iushrn(1);
        y.cmp(x) >= 0 ? (y.isub(x), S.isub(_), A.isub(P)) : (x.isub(y), _.isub(S), P.isub(A));
      }
      return {
        a: _,
        b: P,
        gcd: x.iushln(m)
      };
    }, s.prototype._invmp = function(c) {
      r(c.negative === 0), r(!c.isZero());
      var y = this, x = c.clone();
      y.negative !== 0 ? y = y.umod(c) : y = y.clone();
      for (var S = new s(1), A = new s(0), _ = x.clone(); y.cmpn(1) > 0 && x.cmpn(1) > 0; ) {
        for (var P = 0, m = 1; (y.words[0] & m) === 0 && P < 26; ++P, m <<= 1)
          ;
        if (P > 0)
          for (y.iushrn(P); P-- > 0; )
            S.isOdd() && S.iadd(_), S.iushrn(1);
        for (var d = 0, g = 1; (x.words[0] & g) === 0 && d < 26; ++d, g <<= 1)
          ;
        if (d > 0)
          for (x.iushrn(d); d-- > 0; )
            A.isOdd() && A.iadd(_), A.iushrn(1);
        y.cmp(x) >= 0 ? (y.isub(x), S.isub(A)) : (x.isub(y), A.isub(S));
      }
      var O;
      return y.cmpn(1) === 0 ? O = S : O = A, O.cmpn(0) < 0 && O.iadd(c), O;
    }, s.prototype.gcd = function(c) {
      if (this.isZero())
        return c.abs();
      if (c.isZero())
        return this.abs();
      var y = this.clone(), x = c.clone();
      y.negative = 0, x.negative = 0;
      for (var S = 0; y.isEven() && x.isEven(); S++)
        y.iushrn(1), x.iushrn(1);
      do {
        for (; y.isEven(); )
          y.iushrn(1);
        for (; x.isEven(); )
          x.iushrn(1);
        var A = y.cmp(x);
        if (A < 0) {
          var _ = y;
          y = x, x = _;
        } else if (A === 0 || x.cmpn(1) === 0)
          break;
        y.isub(x);
      } while (!0);
      return x.iushln(S);
    }, s.prototype.invm = function(c) {
      return this.egcd(c).a.umod(c);
    }, s.prototype.isEven = function() {
      return (this.words[0] & 1) === 0;
    }, s.prototype.isOdd = function() {
      return (this.words[0] & 1) === 1;
    }, s.prototype.andln = function(c) {
      return this.words[0] & c;
    }, s.prototype.bincn = function(c) {
      r(typeof c == "number");
      var y = c % 26, x = (c - y) / 26, S = 1 << y;
      if (this.length <= x)
        return this._expand(x + 1), this.words[x] |= S, this;
      for (var A = S, _ = x; A !== 0 && _ < this.length; _++) {
        var P = this.words[_] | 0;
        P += A, A = P >>> 26, P &= 67108863, this.words[_] = P;
      }
      return A !== 0 && (this.words[_] = A, this.length++), this;
    }, s.prototype.isZero = function() {
      return this.length === 1 && this.words[0] === 0;
    }, s.prototype.cmpn = function(c) {
      var y = c < 0;
      if (this.negative !== 0 && !y)
        return -1;
      if (this.negative === 0 && y)
        return 1;
      this._strip();
      var x;
      if (this.length > 1)
        x = 1;
      else {
        y && (c = -c), r(c <= 67108863, "Number is too big");
        var S = this.words[0] | 0;
        x = S === c ? 0 : S < c ? -1 : 1;
      }
      return this.negative !== 0 ? -x | 0 : x;
    }, s.prototype.cmp = function(c) {
      if (this.negative !== 0 && c.negative === 0)
        return -1;
      if (this.negative === 0 && c.negative !== 0)
        return 1;
      var y = this.ucmp(c);
      return this.negative !== 0 ? -y | 0 : y;
    }, s.prototype.ucmp = function(c) {
      if (this.length > c.length)
        return 1;
      if (this.length < c.length)
        return -1;
      for (var y = 0, x = this.length - 1; x >= 0; x--) {
        var S = this.words[x] | 0, A = c.words[x] | 0;
        if (S !== A) {
          S < A ? y = -1 : S > A && (y = 1);
          break;
        }
      }
      return y;
    }, s.prototype.gtn = function(c) {
      return this.cmpn(c) === 1;
    }, s.prototype.gt = function(c) {
      return this.cmp(c) === 1;
    }, s.prototype.gten = function(c) {
      return this.cmpn(c) >= 0;
    }, s.prototype.gte = function(c) {
      return this.cmp(c) >= 0;
    }, s.prototype.ltn = function(c) {
      return this.cmpn(c) === -1;
    }, s.prototype.lt = function(c) {
      return this.cmp(c) === -1;
    }, s.prototype.lten = function(c) {
      return this.cmpn(c) <= 0;
    }, s.prototype.lte = function(c) {
      return this.cmp(c) <= 0;
    }, s.prototype.eqn = function(c) {
      return this.cmpn(c) === 0;
    }, s.prototype.eq = function(c) {
      return this.cmp(c) === 0;
    }, s.red = function(c) {
      return new q(c);
    }, s.prototype.toRed = function(c) {
      return r(!this.red, "Already a number in reduction context"), r(this.negative === 0, "red works only with positives"), c.convertTo(this)._forceRed(c);
    }, s.prototype.fromRed = function() {
      return r(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
    }, s.prototype._forceRed = function(c) {
      return this.red = c, this;
    }, s.prototype.forceRed = function(c) {
      return r(!this.red, "Already a number in reduction context"), this._forceRed(c);
    }, s.prototype.redAdd = function(c) {
      return r(this.red, "redAdd works only with red numbers"), this.red.add(this, c);
    }, s.prototype.redIAdd = function(c) {
      return r(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, c);
    }, s.prototype.redSub = function(c) {
      return r(this.red, "redSub works only with red numbers"), this.red.sub(this, c);
    }, s.prototype.redISub = function(c) {
      return r(this.red, "redISub works only with red numbers"), this.red.isub(this, c);
    }, s.prototype.redShl = function(c) {
      return r(this.red, "redShl works only with red numbers"), this.red.shl(this, c);
    }, s.prototype.redMul = function(c) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, c), this.red.mul(this, c);
    }, s.prototype.redIMul = function(c) {
      return r(this.red, "redMul works only with red numbers"), this.red._verify2(this, c), this.red.imul(this, c);
    }, s.prototype.redSqr = function() {
      return r(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
    }, s.prototype.redISqr = function() {
      return r(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
    }, s.prototype.redSqrt = function() {
      return r(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
    }, s.prototype.redInvm = function() {
      return r(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
    }, s.prototype.redNeg = function() {
      return r(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
    }, s.prototype.redPow = function(c) {
      return r(this.red && !c.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, c);
    };
    var D = {
      k256: null,
      p224: null,
      p192: null,
      p25519: null
    };
    function $(E, c) {
      this.name = E, this.p = new s(c, 16), this.n = this.p.bitLength(), this.k = new s(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
    }
    $.prototype._tmp = function() {
      var c = new s(null);
      return c.words = new Array(Math.ceil(this.n / 13)), c;
    }, $.prototype.ireduce = function(c) {
      var y = c, x;
      do
        this.split(y, this.tmp), y = this.imulK(y), y = y.iadd(this.tmp), x = y.bitLength();
      while (x > this.n);
      var S = x < this.n ? -1 : y.ucmp(this.p);
      return S === 0 ? (y.words[0] = 0, y.length = 1) : S > 0 ? y.isub(this.p) : y.strip !== void 0 ? y.strip() : y._strip(), y;
    }, $.prototype.split = function(c, y) {
      c.iushrn(this.n, 0, y);
    }, $.prototype.imulK = function(c) {
      return c.imul(this.k);
    };
    function G() {
      $.call(
        this,
        "k256",
        "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
      );
    }
    i(G, $), G.prototype.split = function(c, y) {
      for (var x = 4194303, S = Math.min(c.length, 9), A = 0; A < S; A++)
        y.words[A] = c.words[A];
      if (y.length = S, c.length <= 9) {
        c.words[0] = 0, c.length = 1;
        return;
      }
      var _ = c.words[9];
      for (y.words[y.length++] = _ & x, A = 10; A < c.length; A++) {
        var P = c.words[A] | 0;
        c.words[A - 10] = (P & x) << 4 | _ >>> 22, _ = P;
      }
      _ >>>= 22, c.words[A - 10] = _, _ === 0 && c.length > 10 ? c.length -= 10 : c.length -= 9;
    }, G.prototype.imulK = function(c) {
      c.words[c.length] = 0, c.words[c.length + 1] = 0, c.length += 2;
      for (var y = 0, x = 0; x < c.length; x++) {
        var S = c.words[x] | 0;
        y += S * 977, c.words[x] = y & 67108863, y = S * 64 + (y / 67108864 | 0);
      }
      return c.words[c.length - 1] === 0 && (c.length--, c.words[c.length - 1] === 0 && c.length--), c;
    };
    function V() {
      $.call(
        this,
        "p224",
        "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
      );
    }
    i(V, $);
    function K() {
      $.call(
        this,
        "p192",
        "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
      );
    }
    i(K, $);
    function ae() {
      $.call(
        this,
        "25519",
        "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
      );
    }
    i(ae, $), ae.prototype.imulK = function(c) {
      for (var y = 0, x = 0; x < c.length; x++) {
        var S = (c.words[x] | 0) * 19 + y, A = S & 67108863;
        S >>>= 26, c.words[x] = A, y = S;
      }
      return y !== 0 && (c.words[c.length++] = y), c;
    }, s._prime = function(c) {
      if (D[c])
        return D[c];
      var y;
      if (c === "k256")
        y = new G();
      else if (c === "p224")
        y = new V();
      else if (c === "p192")
        y = new K();
      else if (c === "p25519")
        y = new ae();
      else
        throw new Error("Unknown prime " + c);
      return D[c] = y, y;
    };
    function q(E) {
      if (typeof E == "string") {
        var c = s._prime(E);
        this.m = c.p, this.prime = c;
      } else
        r(E.gtn(1), "modulus must be greater than 1"), this.m = E, this.prime = null;
    }
    q.prototype._verify1 = function(c) {
      r(c.negative === 0, "red works only with positives"), r(c.red, "red works only with red numbers");
    }, q.prototype._verify2 = function(c, y) {
      r((c.negative | y.negative) === 0, "red works only with positives"), r(
        c.red && c.red === y.red,
        "red works only with red numbers"
      );
    }, q.prototype.imod = function(c) {
      return this.prime ? this.prime.ireduce(c)._forceRed(this) : (p(c, c.umod(this.m)._forceRed(this)), c);
    }, q.prototype.neg = function(c) {
      return c.isZero() ? c.clone() : this.m.sub(c)._forceRed(this);
    }, q.prototype.add = function(c, y) {
      this._verify2(c, y);
      var x = c.add(y);
      return x.cmp(this.m) >= 0 && x.isub(this.m), x._forceRed(this);
    }, q.prototype.iadd = function(c, y) {
      this._verify2(c, y);
      var x = c.iadd(y);
      return x.cmp(this.m) >= 0 && x.isub(this.m), x;
    }, q.prototype.sub = function(c, y) {
      this._verify2(c, y);
      var x = c.sub(y);
      return x.cmpn(0) < 0 && x.iadd(this.m), x._forceRed(this);
    }, q.prototype.isub = function(c, y) {
      this._verify2(c, y);
      var x = c.isub(y);
      return x.cmpn(0) < 0 && x.iadd(this.m), x;
    }, q.prototype.shl = function(c, y) {
      return this._verify1(c), this.imod(c.ushln(y));
    }, q.prototype.imul = function(c, y) {
      return this._verify2(c, y), this.imod(c.imul(y));
    }, q.prototype.mul = function(c, y) {
      return this._verify2(c, y), this.imod(c.mul(y));
    }, q.prototype.isqr = function(c) {
      return this.imul(c, c.clone());
    }, q.prototype.sqr = function(c) {
      return this.mul(c, c);
    }, q.prototype.sqrt = function(c) {
      if (c.isZero())
        return c.clone();
      var y = this.m.andln(3);
      if (r(y % 2 === 1), y === 3) {
        var x = this.m.add(new s(1)).iushrn(2);
        return this.pow(c, x);
      }
      for (var S = this.m.subn(1), A = 0; !S.isZero() && S.andln(1) === 0; )
        A++, S.iushrn(1);
      r(!S.isZero());
      var _ = new s(1).toRed(this), P = _.redNeg(), m = this.m.subn(1).iushrn(1), d = this.m.bitLength();
      for (d = new s(2 * d * d).toRed(this); this.pow(d, m).cmp(P) !== 0; )
        d.redIAdd(P);
      for (var g = this.pow(d, S), O = this.pow(c, S.addn(1).iushrn(1)), f = this.pow(c, S), R = A; f.cmp(_) !== 0; ) {
        for (var N = f, B = 0; N.cmp(_) !== 0; B++)
          N = N.redSqr();
        r(B < R);
        var L = this.pow(g, new s(1).iushln(R - B - 1));
        O = O.redMul(L), g = L.redSqr(), f = f.redMul(g), R = B;
      }
      return O;
    }, q.prototype.invm = function(c) {
      var y = c._invmp(this.m);
      return y.negative !== 0 ? (y.negative = 0, this.imod(y).redNeg()) : this.imod(y);
    }, q.prototype.pow = function(c, y) {
      if (y.isZero())
        return new s(1).toRed(this);
      if (y.cmpn(1) === 0)
        return c.clone();
      var x = 4, S = new Array(1 << x);
      S[0] = new s(1).toRed(this), S[1] = c;
      for (var A = 2; A < S.length; A++)
        S[A] = this.mul(S[A - 1], c);
      var _ = S[0], P = 0, m = 0, d = y.bitLength() % 26;
      for (d === 0 && (d = 26), A = y.length - 1; A >= 0; A--) {
        for (var g = y.words[A], O = d - 1; O >= 0; O--) {
          var f = g >> O & 1;
          if (_ !== S[0] && (_ = this.sqr(_)), f === 0 && P === 0) {
            m = 0;
            continue;
          }
          P <<= 1, P |= f, m++, !(m !== x && (A !== 0 || O !== 0)) && (_ = this.mul(_, S[P]), m = 0, P = 0);
        }
        d = 26;
      }
      return _;
    }, q.prototype.convertTo = function(c) {
      var y = c.umod(this.m);
      return y === c ? y.clone() : y;
    }, q.prototype.convertFrom = function(c) {
      var y = c.clone();
      return y.red = null, y;
    }, s.mont = function(c) {
      return new oe(c);
    };
    function oe(E) {
      q.call(this, E), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new s(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
    }
    i(oe, q), oe.prototype.convertTo = function(c) {
      return this.imod(c.ushln(this.shift));
    }, oe.prototype.convertFrom = function(c) {
      var y = this.imod(c.mul(this.rinv));
      return y.red = null, y;
    }, oe.prototype.imul = function(c, y) {
      if (c.isZero() || y.isZero())
        return c.words[0] = 0, c.length = 1, c;
      var x = c.imul(y), S = x.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), A = x.isub(S).iushrn(this.shift), _ = A;
      return A.cmp(this.m) >= 0 ? _ = A.isub(this.m) : A.cmpn(0) < 0 && (_ = A.iadd(this.m)), _._forceRed(this);
    }, oe.prototype.mul = function(c, y) {
      if (c.isZero() || y.isZero())
        return new s(0)._forceRed(this);
      var x = c.mul(y), S = x.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), A = x.isub(S).iushrn(this.shift), _ = A;
      return A.cmp(this.m) >= 0 ? _ = A.isub(this.m) : A.cmpn(0) < 0 && (_ = A.iadd(this.m)), _._forceRed(this);
    }, oe.prototype.invm = function(c) {
      var y = this.imod(c._invmp(this.m).mul(this.r2));
      return y._forceRed(this);
    };
  })(n, Yi);
})(Qx);
const ce = Qx.exports, iS = "logger/5.7.0";
let pg = !1, fg = !1;
const tc = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
let hg = tc.default, Np = null;
function sS() {
  try {
    const n = [];
    if (["NFD", "NFC", "NFKD", "NFKC"].forEach((e) => {
      try {
        if ("test".normalize(e) !== "test")
          throw new Error("bad normalize");
      } catch {
        n.push(e);
      }
    }), n.length)
      throw new Error("missing " + n.join(", "));
    if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769))
      throw new Error("broken implementation");
  } catch (n) {
    return n.message;
  }
  return null;
}
const yg = sS();
var kc;
(function(n) {
  n.DEBUG = "DEBUG", n.INFO = "INFO", n.WARNING = "WARNING", n.ERROR = "ERROR", n.OFF = "OFF";
})(kc || (kc = {}));
var nr;
(function(n) {
  n.UNKNOWN_ERROR = "UNKNOWN_ERROR", n.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", n.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", n.NETWORK_ERROR = "NETWORK_ERROR", n.SERVER_ERROR = "SERVER_ERROR", n.TIMEOUT = "TIMEOUT", n.BUFFER_OVERRUN = "BUFFER_OVERRUN", n.NUMERIC_FAULT = "NUMERIC_FAULT", n.MISSING_NEW = "MISSING_NEW", n.INVALID_ARGUMENT = "INVALID_ARGUMENT", n.MISSING_ARGUMENT = "MISSING_ARGUMENT", n.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", n.CALL_EXCEPTION = "CALL_EXCEPTION", n.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", n.NONCE_EXPIRED = "NONCE_EXPIRED", n.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", n.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", n.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", n.ACTION_REJECTED = "ACTION_REJECTED";
})(nr || (nr = {}));
const mg = "0123456789abcdef";
class U {
  constructor(e) {
    Object.defineProperty(this, "version", {
      enumerable: !0,
      value: e,
      writable: !1
    });
  }
  _log(e, t) {
    const r = e.toLowerCase();
    tc[r] == null && this.throwArgumentError("invalid log level name", "logLevel", e), !(hg > tc[r]) && console.log.apply(console, t);
  }
  debug(...e) {
    this._log(U.levels.DEBUG, e);
  }
  info(...e) {
    this._log(U.levels.INFO, e);
  }
  warn(...e) {
    this._log(U.levels.WARNING, e);
  }
  makeError(e, t, r) {
    if (fg)
      return this.makeError("censored error", t, {});
    t || (t = U.errors.UNKNOWN_ERROR), r || (r = {});
    const i = [];
    Object.keys(r).forEach((u) => {
      const l = r[u];
      try {
        if (l instanceof Uint8Array) {
          let p = "";
          for (let h = 0; h < l.length; h++)
            p += mg[l[h] >> 4], p += mg[l[h] & 15];
          i.push(u + "=Uint8Array(0x" + p + ")");
        } else
          i.push(u + "=" + JSON.stringify(l));
      } catch {
        i.push(u + "=" + JSON.stringify(r[u].toString()));
      }
    }), i.push(`code=${t}`), i.push(`version=${this.version}`);
    const s = e;
    let a = "";
    switch (t) {
      case nr.NUMERIC_FAULT: {
        a = "NUMERIC_FAULT";
        const u = e;
        switch (u) {
          case "overflow":
          case "underflow":
          case "division-by-zero":
            a += "-" + u;
            break;
          case "negative-power":
          case "negative-width":
            a += "-unsupported";
            break;
          case "unbound-bitwise-result":
            a += "-unbound-result";
            break;
        }
        break;
      }
      case nr.CALL_EXCEPTION:
      case nr.INSUFFICIENT_FUNDS:
      case nr.MISSING_NEW:
      case nr.NONCE_EXPIRED:
      case nr.REPLACEMENT_UNDERPRICED:
      case nr.TRANSACTION_REPLACED:
      case nr.UNPREDICTABLE_GAS_LIMIT:
        a = t;
        break;
    }
    a && (e += " [ See: https://links.ethers.org/v5-errors-" + a + " ]"), i.length && (e += " (" + i.join(", ") + ")");
    const o = new Error(e);
    return o.reason = s, o.code = t, Object.keys(r).forEach(function(u) {
      o[u] = r[u];
    }), o;
  }
  throwError(e, t, r) {
    throw this.makeError(e, t, r);
  }
  throwArgumentError(e, t, r) {
    return this.throwError(e, U.errors.INVALID_ARGUMENT, {
      argument: t,
      value: r
    });
  }
  assert(e, t, r, i) {
    e || this.throwError(t, r, i);
  }
  assertArgument(e, t, r, i) {
    e || this.throwArgumentError(t, r, i);
  }
  checkNormalize(e) {
    yg && this.throwError("platform missing String.prototype.normalize", U.errors.UNSUPPORTED_OPERATION, {
      operation: "String.prototype.normalize",
      form: yg
    });
  }
  checkSafeUint53(e, t) {
    typeof e == "number" && (t == null && (t = "value not safe"), (e < 0 || e >= 9007199254740991) && this.throwError(t, U.errors.NUMERIC_FAULT, {
      operation: "checkSafeInteger",
      fault: "out-of-safe-range",
      value: e
    }), e % 1 && this.throwError(t, U.errors.NUMERIC_FAULT, {
      operation: "checkSafeInteger",
      fault: "non-integer",
      value: e
    }));
  }
  checkArgumentCount(e, t, r) {
    r ? r = ": " + r : r = "", e < t && this.throwError("missing argument" + r, U.errors.MISSING_ARGUMENT, {
      count: e,
      expectedCount: t
    }), e > t && this.throwError("too many arguments" + r, U.errors.UNEXPECTED_ARGUMENT, {
      count: e,
      expectedCount: t
    });
  }
  checkNew(e, t) {
    (e === Object || e == null) && this.throwError("missing new", U.errors.MISSING_NEW, { name: t.name });
  }
  checkAbstract(e, t) {
    e === t ? this.throwError("cannot instantiate abstract class " + JSON.stringify(t.name) + " directly; use a sub-class", U.errors.UNSUPPORTED_OPERATION, { name: e.name, operation: "new" }) : (e === Object || e == null) && this.throwError("missing new", U.errors.MISSING_NEW, { name: t.name });
  }
  static globalLogger() {
    return Np || (Np = new U(iS)), Np;
  }
  static setCensorship(e, t) {
    if (!e && t && this.globalLogger().throwError("cannot permanently disable censorship", U.errors.UNSUPPORTED_OPERATION, {
      operation: "setCensorship"
    }), pg) {
      if (!e)
        return;
      this.globalLogger().throwError("error censorship permanent", U.errors.UNSUPPORTED_OPERATION, {
        operation: "setCensorship"
      });
    }
    fg = !!e, pg = !!t;
  }
  static setLogLevel(e) {
    const t = tc[e.toLowerCase()];
    if (t == null) {
      U.globalLogger().warn("invalid log level - " + e);
      return;
    }
    hg = t;
  }
  static from(e) {
    return new U(e);
  }
}
U.errors = nr;
U.levels = kc;
const aS = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get LogLevel() {
    return kc;
  },
  get ErrorCode() {
    return nr;
  },
  Logger: U
}, Symbol.toStringTag, { value: "Module" })), oS = "bytes/5.7.0", At = new U(oS);
function Jx(n) {
  return !!n.toHexString;
}
function Xa(n) {
  return n.slice || (n.slice = function() {
    const e = Array.prototype.slice.call(arguments);
    return Xa(new Uint8Array(Array.prototype.slice.apply(n, e)));
  }), n;
}
function dl(n) {
  return vt(n) && !(n.length % 2) || Ea(n);
}
function bg(n) {
  return typeof n == "number" && n == n && n % 1 === 0;
}
function Ea(n) {
  if (n == null)
    return !1;
  if (n.constructor === Uint8Array)
    return !0;
  if (typeof n == "string" || !bg(n.length) || n.length < 0)
    return !1;
  for (let e = 0; e < n.length; e++) {
    const t = n[e];
    if (!bg(t) || t < 0 || t >= 256)
      return !1;
  }
  return !0;
}
function W(n, e) {
  if (e || (e = {}), typeof n == "number") {
    At.checkSafeUint53(n, "invalid arrayify value");
    const t = [];
    for (; n; )
      t.unshift(n & 255), n = parseInt(String(n / 256));
    return t.length === 0 && t.push(0), Xa(new Uint8Array(t));
  }
  if (e.allowMissingPrefix && typeof n == "string" && n.substring(0, 2) !== "0x" && (n = "0x" + n), Jx(n) && (n = n.toHexString()), vt(n)) {
    let t = n.substring(2);
    t.length % 2 && (e.hexPad === "left" ? t = "0" + t : e.hexPad === "right" ? t += "0" : At.throwArgumentError("hex data is odd-length", "value", n));
    const r = [];
    for (let i = 0; i < t.length; i += 2)
      r.push(parseInt(t.substring(i, i + 2), 16));
    return Xa(new Uint8Array(r));
  }
  return Ea(n) ? Xa(new Uint8Array(n)) : At.throwArgumentError("invalid arrayify value", "value", n);
}
function Rt(n) {
  const e = n.map((i) => W(i)), t = e.reduce((i, s) => i + s.length, 0), r = new Uint8Array(t);
  return e.reduce((i, s) => (r.set(s, i), i + s.length), 0), Xa(r);
}
function Gr(n) {
  let e = W(n);
  if (e.length === 0)
    return e;
  let t = 0;
  for (; t < e.length && e[t] === 0; )
    t++;
  return t && (e = e.slice(t)), e;
}
function uu(n, e) {
  n = W(n), n.length > e && At.throwArgumentError("value out of range", "value", arguments[0]);
  const t = new Uint8Array(e);
  return t.set(n, e - n.length), Xa(t);
}
function vt(n, e) {
  return !(typeof n != "string" || !n.match(/^0x[0-9A-Fa-f]*$/) || e && n.length !== 2 + 2 * e);
}
const $p = "0123456789abcdef";
function J(n, e) {
  if (e || (e = {}), typeof n == "number") {
    At.checkSafeUint53(n, "invalid hexlify value");
    let t = "";
    for (; n; )
      t = $p[n & 15] + t, n = Math.floor(n / 16);
    return t.length ? (t.length % 2 && (t = "0" + t), "0x" + t) : "0x00";
  }
  if (typeof n == "bigint")
    return n = n.toString(16), n.length % 2 ? "0x0" + n : "0x" + n;
  if (e.allowMissingPrefix && typeof n == "string" && n.substring(0, 2) !== "0x" && (n = "0x" + n), Jx(n))
    return n.toHexString();
  if (vt(n))
    return n.length % 2 && (e.hexPad === "left" ? n = "0x0" + n.substring(2) : e.hexPad === "right" ? n += "0" : At.throwArgumentError("hex data is odd-length", "value", n)), n.toLowerCase();
  if (Ea(n)) {
    let t = "0x";
    for (let r = 0; r < n.length; r++) {
      let i = n[r];
      t += $p[(i & 240) >> 4] + $p[i & 15];
    }
    return t;
  }
  return At.throwArgumentError("invalid hexlify value", "value", n);
}
function _u(n) {
  if (typeof n != "string")
    n = J(n);
  else if (!vt(n) || n.length % 2)
    return null;
  return (n.length - 2) / 2;
}
function Ci(n, e, t) {
  return typeof n != "string" ? n = J(n) : (!vt(n) || n.length % 2) && At.throwArgumentError("invalid hexData", "value", n), e = 2 + 2 * e, t != null ? "0x" + n.substring(e, 2 + 2 * t) : "0x" + n.substring(e);
}
function us(n) {
  let e = "0x";
  return n.forEach((t) => {
    e += J(t).substring(2);
  }), e;
}
function uS(n) {
  const e = Yx(J(n, { hexPad: "left" }));
  return e === "0x" ? "0x0" : e;
}
function Yx(n) {
  typeof n != "string" && (n = J(n)), vt(n) || At.throwArgumentError("invalid hex string", "value", n), n = n.substring(2);
  let e = 0;
  for (; e < n.length && n[e] === "0"; )
    e++;
  return "0x" + n.substring(e);
}
function Pt(n, e) {
  for (typeof n != "string" ? n = J(n) : vt(n) || At.throwArgumentError("invalid hex string", "value", n), n.length > 2 * e + 2 && At.throwArgumentError("value out of range", "value", arguments[1]); n.length < 2 * e + 2; )
    n = "0x0" + n.substring(2);
  return n;
}
function Ma(n) {
  const e = {
    r: "0x",
    s: "0x",
    _vs: "0x",
    recoveryParam: 0,
    v: 0,
    yParityAndS: "0x",
    compact: "0x"
  };
  if (dl(n)) {
    let t = W(n);
    t.length === 64 ? (e.v = 27 + (t[32] >> 7), t[32] &= 127, e.r = J(t.slice(0, 32)), e.s = J(t.slice(32, 64))) : t.length === 65 ? (e.r = J(t.slice(0, 32)), e.s = J(t.slice(32, 64)), e.v = t[64]) : At.throwArgumentError("invalid signature string", "signature", n), e.v < 27 && (e.v === 0 || e.v === 1 ? e.v += 27 : At.throwArgumentError("signature invalid v byte", "signature", n)), e.recoveryParam = 1 - e.v % 2, e.recoveryParam && (t[32] |= 128), e._vs = J(t.slice(32, 64));
  } else {
    if (e.r = n.r, e.s = n.s, e.v = n.v, e.recoveryParam = n.recoveryParam, e._vs = n._vs, e._vs != null) {
      const i = uu(W(e._vs), 32);
      e._vs = J(i);
      const s = i[0] >= 128 ? 1 : 0;
      e.recoveryParam == null ? e.recoveryParam = s : e.recoveryParam !== s && At.throwArgumentError("signature recoveryParam mismatch _vs", "signature", n), i[0] &= 127;
      const a = J(i);
      e.s == null ? e.s = a : e.s !== a && At.throwArgumentError("signature v mismatch _vs", "signature", n);
    }
    if (e.recoveryParam == null)
      e.v == null ? At.throwArgumentError("signature missing v and recoveryParam", "signature", n) : e.v === 0 || e.v === 1 ? e.recoveryParam = e.v : e.recoveryParam = 1 - e.v % 2;
    else if (e.v == null)
      e.v = 27 + e.recoveryParam;
    else {
      const i = e.v === 0 || e.v === 1 ? e.v : 1 - e.v % 2;
      e.recoveryParam !== i && At.throwArgumentError("signature recoveryParam mismatch v", "signature", n);
    }
    e.r == null || !vt(e.r) ? At.throwArgumentError("signature missing or invalid r", "signature", n) : e.r = Pt(e.r, 32), e.s == null || !vt(e.s) ? At.throwArgumentError("signature missing or invalid s", "signature", n) : e.s = Pt(e.s, 32);
    const t = W(e.s);
    t[0] >= 128 && At.throwArgumentError("signature s out of range", "signature", n), e.recoveryParam && (t[0] |= 128);
    const r = J(t);
    e._vs && (vt(e._vs) || At.throwArgumentError("signature invalid _vs", "signature", n), e._vs = Pt(e._vs, 32)), e._vs == null ? e._vs = r : e._vs !== r && At.throwArgumentError("signature _vs mismatch v and s", "signature", n);
  }
  return e.yParityAndS = e._vs, e.compact = e.r + e.yParityAndS.substring(2), e;
}
function Bf(n) {
  return n = Ma(n), J(Rt([
    n.r,
    n.s,
    n.recoveryParam ? "0x1c" : "0x1b"
  ]));
}
const lS = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  isBytesLike: dl,
  isBytes: Ea,
  arrayify: W,
  concat: Rt,
  stripZeros: Gr,
  zeroPad: uu,
  isHexString: vt,
  hexlify: J,
  hexDataLength: _u,
  hexDataSlice: Ci,
  hexConcat: us,
  hexValue: uS,
  hexStripZeros: Yx,
  hexZeroPad: Pt,
  splitSignature: Ma,
  joinSignature: Bf
}, Symbol.toStringTag, { value: "Module" })), Xx = "bignumber/5.7.0";
var Ru = ce.BN;
const li = new U(Xx), Lp = {}, gg = 9007199254740991;
function cS(n) {
  return n != null && (ne.isBigNumber(n) || typeof n == "number" && n % 1 === 0 || typeof n == "string" && !!n.match(/^-?[0-9]+$/) || vt(n) || typeof n == "bigint" || Ea(n));
}
let xg = !1;
class ne {
  constructor(e, t) {
    e !== Lp && li.throwError("cannot call constructor directly; use BigNumber.from", U.errors.UNSUPPORTED_OPERATION, {
      operation: "new (BigNumber)"
    }), this._hex = t, this._isBigNumber = !0, Object.freeze(this);
  }
  fromTwos(e) {
    return Sn(ye(this).fromTwos(e));
  }
  toTwos(e) {
    return Sn(ye(this).toTwos(e));
  }
  abs() {
    return this._hex[0] === "-" ? ne.from(this._hex.substring(1)) : this;
  }
  add(e) {
    return Sn(ye(this).add(ye(e)));
  }
  sub(e) {
    return Sn(ye(this).sub(ye(e)));
  }
  div(e) {
    return ne.from(e).isZero() && Zn("division-by-zero", "div"), Sn(ye(this).div(ye(e)));
  }
  mul(e) {
    return Sn(ye(this).mul(ye(e)));
  }
  mod(e) {
    const t = ye(e);
    return t.isNeg() && Zn("division-by-zero", "mod"), Sn(ye(this).umod(t));
  }
  pow(e) {
    const t = ye(e);
    return t.isNeg() && Zn("negative-power", "pow"), Sn(ye(this).pow(t));
  }
  and(e) {
    const t = ye(e);
    return (this.isNegative() || t.isNeg()) && Zn("unbound-bitwise-result", "and"), Sn(ye(this).and(t));
  }
  or(e) {
    const t = ye(e);
    return (this.isNegative() || t.isNeg()) && Zn("unbound-bitwise-result", "or"), Sn(ye(this).or(t));
  }
  xor(e) {
    const t = ye(e);
    return (this.isNegative() || t.isNeg()) && Zn("unbound-bitwise-result", "xor"), Sn(ye(this).xor(t));
  }
  mask(e) {
    return (this.isNegative() || e < 0) && Zn("negative-width", "mask"), Sn(ye(this).maskn(e));
  }
  shl(e) {
    return (this.isNegative() || e < 0) && Zn("negative-width", "shl"), Sn(ye(this).shln(e));
  }
  shr(e) {
    return (this.isNegative() || e < 0) && Zn("negative-width", "shr"), Sn(ye(this).shrn(e));
  }
  eq(e) {
    return ye(this).eq(ye(e));
  }
  lt(e) {
    return ye(this).lt(ye(e));
  }
  lte(e) {
    return ye(this).lte(ye(e));
  }
  gt(e) {
    return ye(this).gt(ye(e));
  }
  gte(e) {
    return ye(this).gte(ye(e));
  }
  isNegative() {
    return this._hex[0] === "-";
  }
  isZero() {
    return ye(this).isZero();
  }
  toNumber() {
    try {
      return ye(this).toNumber();
    } catch {
      Zn("overflow", "toNumber", this.toString());
    }
    return null;
  }
  toBigInt() {
    try {
      return BigInt(this.toString());
    } catch {
    }
    return li.throwError("this platform does not support BigInt", U.errors.UNSUPPORTED_OPERATION, {
      value: this.toString()
    });
  }
  toString() {
    return arguments.length > 0 && (arguments[0] === 10 ? xg || (xg = !0, li.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : arguments[0] === 16 ? li.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", U.errors.UNEXPECTED_ARGUMENT, {}) : li.throwError("BigNumber.toString does not accept parameters", U.errors.UNEXPECTED_ARGUMENT, {})), ye(this).toString(10);
  }
  toHexString() {
    return this._hex;
  }
  toJSON(e) {
    return { type: "BigNumber", hex: this.toHexString() };
  }
  static from(e) {
    if (e instanceof ne)
      return e;
    if (typeof e == "string")
      return e.match(/^-?0x[0-9a-f]+$/i) ? new ne(Lp, Pu(e)) : e.match(/^-?[0-9]+$/) ? new ne(Lp, Pu(new Ru(e))) : li.throwArgumentError("invalid BigNumber string", "value", e);
    if (typeof e == "number")
      return e % 1 && Zn("underflow", "BigNumber.from", e), (e >= gg || e <= -gg) && Zn("overflow", "BigNumber.from", e), ne.from(String(e));
    const t = e;
    if (typeof t == "bigint")
      return ne.from(t.toString());
    if (Ea(t))
      return ne.from(J(t));
    if (t)
      if (t.toHexString) {
        const r = t.toHexString();
        if (typeof r == "string")
          return ne.from(r);
      } else {
        let r = t._hex;
        if (r == null && t.type === "BigNumber" && (r = t.hex), typeof r == "string" && (vt(r) || r[0] === "-" && vt(r.substring(1))))
          return ne.from(r);
      }
    return li.throwArgumentError("invalid BigNumber value", "value", e);
  }
  static isBigNumber(e) {
    return !!(e && e._isBigNumber);
  }
}
function Pu(n) {
  if (typeof n != "string")
    return Pu(n.toString(16));
  if (n[0] === "-")
    return n = n.substring(1), n[0] === "-" && li.throwArgumentError("invalid hex", "value", n), n = Pu(n), n === "0x00" ? n : "-" + n;
  if (n.substring(0, 2) !== "0x" && (n = "0x" + n), n === "0x")
    return "0x00";
  for (n.length % 2 && (n = "0x0" + n.substring(2)); n.length > 4 && n.substring(0, 4) === "0x00"; )
    n = "0x" + n.substring(4);
  return n;
}
function Sn(n) {
  return ne.from(Pu(n));
}
function ye(n) {
  const e = ne.from(n).toHexString();
  return e[0] === "-" ? new Ru("-" + e.substring(3), 16) : new Ru(e.substring(2), 16);
}
function Zn(n, e, t) {
  const r = { fault: n, operation: e };
  return t != null && (r.value = t), li.throwError(n, U.errors.NUMERIC_FAULT, r);
}
function dS(n) {
  return new Ru(n, 36).toString(16);
}
function pS(n) {
  return new Ru(n, 16).toString(36);
}
const xn = new U(Xx), lu = {}, Zx = ne.from(0), ev = ne.from(-1);
function tv(n, e, t, r) {
  const i = { fault: e, operation: t };
  return r !== void 0 && (i.value = r), xn.throwError(n, U.errors.NUMERIC_FAULT, i);
}
let cu = "0";
for (; cu.length < 256; )
  cu += cu;
function f0(n) {
  if (typeof n != "number")
    try {
      n = ne.from(n).toNumber();
    } catch {
    }
  return typeof n == "number" && n >= 0 && n <= 256 && !(n % 1) ? "1" + cu.substring(0, n) : xn.throwArgumentError("invalid decimal size", "decimals", n);
}
function nc(n, e) {
  e == null && (e = 0);
  const t = f0(e);
  n = ne.from(n);
  const r = n.lt(Zx);
  r && (n = n.mul(ev));
  let i = n.mod(t).toString();
  for (; i.length < t.length - 1; )
    i = "0" + i;
  i = i.match(/^([0-9]*[1-9]|0)(0*)/)[1];
  const s = n.div(t).toString();
  return t.length === 1 ? n = s : n = s + "." + i, r && (n = "-" + n), n;
}
function kr(n, e) {
  e == null && (e = 0);
  const t = f0(e);
  (typeof n != "string" || !n.match(/^-?[0-9.]+$/)) && xn.throwArgumentError("invalid decimal value", "value", n);
  const r = n.substring(0, 1) === "-";
  r && (n = n.substring(1)), n === "." && xn.throwArgumentError("missing value", "value", n);
  const i = n.split(".");
  i.length > 2 && xn.throwArgumentError("too many decimal points", "value", n);
  let s = i[0], a = i[1];
  for (s || (s = "0"), a || (a = "0"); a[a.length - 1] === "0"; )
    a = a.substring(0, a.length - 1);
  for (a.length > t.length - 1 && tv("fractional component exceeds decimals", "underflow", "parseFixed"), a === "" && (a = "0"); a.length < t.length - 1; )
    a += "0";
  const o = ne.from(s), u = ne.from(a);
  let l = o.mul(t).add(u);
  return r && (l = l.mul(ev)), l;
}
class Za {
  constructor(e, t, r, i) {
    e !== lu && xn.throwError("cannot use FixedFormat constructor; use FixedFormat.from", U.errors.UNSUPPORTED_OPERATION, {
      operation: "new FixedFormat"
    }), this.signed = t, this.width = r, this.decimals = i, this.name = (t ? "" : "u") + "fixed" + String(r) + "x" + String(i), this._multiplier = f0(i), Object.freeze(this);
  }
  static from(e) {
    if (e instanceof Za)
      return e;
    typeof e == "number" && (e = `fixed128x${e}`);
    let t = !0, r = 128, i = 18;
    if (typeof e == "string") {
      if (e !== "fixed")
        if (e === "ufixed")
          t = !1;
        else {
          const s = e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
          s || xn.throwArgumentError("invalid fixed format", "format", e), t = s[1] !== "u", r = parseInt(s[2]), i = parseInt(s[3]);
        }
    } else if (e) {
      const s = (a, o, u) => e[a] == null ? u : (typeof e[a] !== o && xn.throwArgumentError("invalid fixed format (" + a + " not " + o + ")", "format." + a, e[a]), e[a]);
      t = s("signed", "boolean", t), r = s("width", "number", r), i = s("decimals", "number", i);
    }
    return r % 8 && xn.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", r), i > 80 && xn.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", i), new Za(lu, t, r, i);
  }
}
class Ht {
  constructor(e, t, r, i) {
    e !== lu && xn.throwError("cannot use FixedNumber constructor; use FixedNumber.from", U.errors.UNSUPPORTED_OPERATION, {
      operation: "new FixedFormat"
    }), this.format = i, this._hex = t, this._value = r, this._isFixedNumber = !0, Object.freeze(this);
  }
  _checkFormat(e) {
    this.format.name !== e.format.name && xn.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", e);
  }
  addUnsafe(e) {
    this._checkFormat(e);
    const t = kr(this._value, this.format.decimals), r = kr(e._value, e.format.decimals);
    return Ht.fromValue(t.add(r), this.format.decimals, this.format);
  }
  subUnsafe(e) {
    this._checkFormat(e);
    const t = kr(this._value, this.format.decimals), r = kr(e._value, e.format.decimals);
    return Ht.fromValue(t.sub(r), this.format.decimals, this.format);
  }
  mulUnsafe(e) {
    this._checkFormat(e);
    const t = kr(this._value, this.format.decimals), r = kr(e._value, e.format.decimals);
    return Ht.fromValue(t.mul(r).div(this.format._multiplier), this.format.decimals, this.format);
  }
  divUnsafe(e) {
    this._checkFormat(e);
    const t = kr(this._value, this.format.decimals), r = kr(e._value, e.format.decimals);
    return Ht.fromValue(t.mul(this.format._multiplier).div(r), this.format.decimals, this.format);
  }
  floor() {
    const e = this.toString().split(".");
    e.length === 1 && e.push("0");
    let t = Ht.from(e[0], this.format);
    const r = !e[1].match(/^(0*)$/);
    return this.isNegative() && r && (t = t.subUnsafe(vg.toFormat(t.format))), t;
  }
  ceiling() {
    const e = this.toString().split(".");
    e.length === 1 && e.push("0");
    let t = Ht.from(e[0], this.format);
    const r = !e[1].match(/^(0*)$/);
    return !this.isNegative() && r && (t = t.addUnsafe(vg.toFormat(t.format))), t;
  }
  round(e) {
    e == null && (e = 0);
    const t = this.toString().split(".");
    if (t.length === 1 && t.push("0"), (e < 0 || e > 80 || e % 1) && xn.throwArgumentError("invalid decimal count", "decimals", e), t[1].length <= e)
      return this;
    const r = Ht.from("1" + cu.substring(0, e), this.format), i = fS.toFormat(this.format);
    return this.mulUnsafe(r).addUnsafe(i).floor().divUnsafe(r);
  }
  isZero() {
    return this._value === "0.0" || this._value === "0";
  }
  isNegative() {
    return this._value[0] === "-";
  }
  toString() {
    return this._value;
  }
  toHexString(e) {
    if (e == null)
      return this._hex;
    e % 8 && xn.throwArgumentError("invalid byte width", "width", e);
    const t = ne.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();
    return Pt(t, e / 8);
  }
  toUnsafeFloat() {
    return parseFloat(this.toString());
  }
  toFormat(e) {
    return Ht.fromString(this._value, e);
  }
  static fromValue(e, t, r) {
    return r == null && t != null && !cS(t) && (r = t, t = null), t == null && (t = 0), r == null && (r = "fixed"), Ht.fromString(nc(e, t), Za.from(r));
  }
  static fromString(e, t) {
    t == null && (t = "fixed");
    const r = Za.from(t), i = kr(e, r.decimals);
    !r.signed && i.lt(Zx) && tv("unsigned value cannot be negative", "overflow", "value", e);
    let s = null;
    r.signed ? s = i.toTwos(r.width).toHexString() : (s = i.toHexString(), s = Pt(s, r.width / 8));
    const a = nc(i, r.decimals);
    return new Ht(lu, s, a, r);
  }
  static fromBytes(e, t) {
    t == null && (t = "fixed");
    const r = Za.from(t);
    if (W(e).length > r.width / 8)
      throw new Error("overflow");
    let i = ne.from(e);
    r.signed && (i = i.fromTwos(r.width));
    const s = i.toTwos((r.signed ? 0 : 1) + r.width).toHexString(), a = nc(i, r.decimals);
    return new Ht(lu, s, a, r);
  }
  static from(e, t) {
    if (typeof e == "string")
      return Ht.fromString(e, t);
    if (Ea(e))
      return Ht.fromBytes(e, t);
    try {
      return Ht.fromValue(e, 0, t);
    } catch (r) {
      if (r.code !== U.errors.INVALID_ARGUMENT)
        throw r;
    }
    return xn.throwArgumentError("invalid FixedNumber value", "value", e);
  }
  static isFixedNumber(e) {
    return !!(e && e._isFixedNumber);
  }
}
const vg = Ht.from(1), fS = Ht.from("0.5"), hS = "properties/5.7.0";
var yS = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const Dc = new U(hS);
function z(n, e, t) {
  Object.defineProperty(n, e, {
    enumerable: !0,
    value: t,
    writable: !1
  });
}
function Ka(n, e) {
  for (let t = 0; t < 32; t++) {
    if (n[e])
      return n[e];
    if (!n.prototype || typeof n.prototype != "object")
      break;
    n = Object.getPrototypeOf(n.prototype).constructor;
  }
  return null;
}
function Ur(n) {
  return yS(this, void 0, void 0, function* () {
    const e = Object.keys(n).map((r) => {
      const i = n[r];
      return Promise.resolve(i).then((s) => ({ key: r, value: s }));
    });
    return (yield Promise.all(e)).reduce((r, i) => (r[i.key] = i.value, r), {});
  });
}
function nv(n, e) {
  (!n || typeof n != "object") && Dc.throwArgumentError("invalid object", "object", n), Object.keys(n).forEach((t) => {
    e[t] || Dc.throwArgumentError("invalid object key - " + t, "transaction:" + t, n);
  });
}
function Hn(n) {
  const e = {};
  for (const t in n)
    e[t] = n[t];
  return e;
}
const mS = { bigint: !0, boolean: !0, function: !0, number: !0, string: !0 };
function rv(n) {
  if (n == null || mS[typeof n])
    return !0;
  if (Array.isArray(n) || typeof n == "object") {
    if (!Object.isFrozen(n))
      return !1;
    const e = Object.keys(n);
    for (let t = 0; t < e.length; t++) {
      let r = null;
      try {
        r = n[e[t]];
      } catch {
        continue;
      }
      if (!rv(r))
        return !1;
    }
    return !0;
  }
  return Dc.throwArgumentError(`Cannot deepCopy ${typeof n}`, "object", n);
}
function bS(n) {
  if (rv(n))
    return n;
  if (Array.isArray(n))
    return Object.freeze(n.map((e) => ia(e)));
  if (typeof n == "object") {
    const e = {};
    for (const t in n) {
      const r = n[t];
      r !== void 0 && z(e, t, ia(r));
    }
    return e;
  }
  return Dc.throwArgumentError(`Cannot deepCopy ${typeof n}`, "object", n);
}
function ia(n) {
  return bS(n);
}
class _a {
  constructor(e) {
    for (const t in e)
      this[t] = ia(e[t]);
  }
}
const gS = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  defineReadOnly: z,
  getStatic: Ka,
  resolveProperties: Ur,
  checkProperties: nv,
  shallowCopy: Hn,
  deepCopy: ia,
  Description: _a
}, Symbol.toStringTag, { value: "Module" })), pl = "abi/5.7.0", ge = new U(pl), sa = {};
let wg = { calldata: !0, memory: !0, storage: !0 }, xS = { calldata: !0, memory: !0 };
function Dl(n, e) {
  if (n === "bytes" || n === "string") {
    if (wg[e])
      return !0;
  } else if (n === "address") {
    if (e === "payable")
      return !0;
  } else if ((n.indexOf("[") >= 0 || n === "tuple") && xS[e])
    return !0;
  return (wg[e] || e === "payable") && ge.throwArgumentError("invalid modifier", "name", e), !1;
}
function vS(n, e) {
  let t = n;
  function r(o) {
    ge.throwArgumentError(`unexpected character at position ${o}`, "param", n);
  }
  n = n.replace(/\s/g, " ");
  function i(o) {
    let u = { type: "", name: "", parent: o, state: { allowType: !0 } };
    return e && (u.indexed = !1), u;
  }
  let s = { type: "", name: "", state: { allowType: !0 } }, a = s;
  for (let o = 0; o < n.length; o++) {
    let u = n[o];
    switch (u) {
      case "(":
        a.state.allowType && a.type === "" ? a.type = "tuple" : a.state.allowParams || r(o), a.state.allowType = !1, a.type = Va(a.type), a.components = [i(a)], a = a.components[0];
        break;
      case ")":
        delete a.state, a.name === "indexed" && (e || r(o), a.indexed = !0, a.name = ""), Dl(a.type, a.name) && (a.name = ""), a.type = Va(a.type);
        let l = a;
        a = a.parent, a || r(o), delete l.parent, a.state.allowParams = !1, a.state.allowName = !0, a.state.allowArray = !0;
        break;
      case ",":
        delete a.state, a.name === "indexed" && (e || r(o), a.indexed = !0, a.name = ""), Dl(a.type, a.name) && (a.name = ""), a.type = Va(a.type);
        let p = i(a.parent);
        a.parent.components.push(p), delete a.parent, a = p;
        break;
      case " ":
        a.state.allowType && a.type !== "" && (a.type = Va(a.type), delete a.state.allowType, a.state.allowName = !0, a.state.allowParams = !0), a.state.allowName && a.name !== "" && (a.name === "indexed" ? (e || r(o), a.indexed && r(o), a.indexed = !0, a.name = "") : Dl(a.type, a.name) ? a.name = "" : a.state.allowName = !1);
        break;
      case "[":
        a.state.allowArray || r(o), a.type += u, a.state.allowArray = !1, a.state.allowName = !1, a.state.readArray = !0;
        break;
      case "]":
        a.state.readArray || r(o), a.type += u, a.state.readArray = !1, a.state.allowArray = !0, a.state.allowName = !0;
        break;
      default:
        a.state.allowType ? (a.type += u, a.state.allowParams = !0, a.state.allowArray = !0) : a.state.allowName ? (a.name += u, delete a.state.allowArray) : a.state.readArray ? a.type += u : r(o);
    }
  }
  return a.parent && ge.throwArgumentError("unexpected eof", "param", n), delete s.state, a.name === "indexed" ? (e || r(t.length - 7), a.indexed && r(t.length - 7), a.indexed = !0, a.name = "") : Dl(a.type, a.name) && (a.name = ""), s.type = Va(s.type), s;
}
function rc(n, e) {
  for (let t in e)
    z(n, t, e[t]);
}
const Te = Object.freeze({
  sighash: "sighash",
  minimal: "minimal",
  full: "full",
  json: "json"
}), wS = new RegExp(/^(.*)\[([0-9]*)\]$/);
class Bt {
  constructor(e, t) {
    e !== sa && ge.throwError("use fromString", U.errors.UNSUPPORTED_OPERATION, {
      operation: "new ParamType()"
    }), rc(this, t);
    let r = this.type.match(wS);
    r ? rc(this, {
      arrayLength: parseInt(r[2] || "-1"),
      arrayChildren: Bt.fromObject({
        type: r[1],
        components: this.components
      }),
      baseType: "array"
    }) : rc(this, {
      arrayLength: null,
      arrayChildren: null,
      baseType: this.components != null ? "tuple" : this.type
    }), this._isParamType = !0, Object.freeze(this);
  }
  format(e) {
    if (e || (e = Te.sighash), Te[e] || ge.throwArgumentError("invalid format type", "format", e), e === Te.json) {
      let r = {
        type: this.baseType === "tuple" ? "tuple" : this.type,
        name: this.name || void 0
      };
      return typeof this.indexed == "boolean" && (r.indexed = this.indexed), this.components && (r.components = this.components.map((i) => JSON.parse(i.format(e)))), JSON.stringify(r);
    }
    let t = "";
    return this.baseType === "array" ? (t += this.arrayChildren.format(e), t += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]") : this.baseType === "tuple" ? (e !== Te.sighash && (t += this.type), t += "(" + this.components.map((r) => r.format(e)).join(e === Te.full ? ", " : ",") + ")") : t += this.type, e !== Te.sighash && (this.indexed === !0 && (t += " indexed"), e === Te.full && this.name && (t += " " + this.name)), t;
  }
  static from(e, t) {
    return typeof e == "string" ? Bt.fromString(e, t) : Bt.fromObject(e);
  }
  static fromObject(e) {
    return Bt.isParamType(e) ? e : new Bt(sa, {
      name: e.name || null,
      type: Va(e.type),
      indexed: e.indexed == null ? null : !!e.indexed,
      components: e.components ? e.components.map(Bt.fromObject) : null
    });
  }
  static fromString(e, t) {
    function r(i) {
      return Bt.fromObject({
        name: i.name,
        type: i.type,
        indexed: i.indexed,
        components: i.components
      });
    }
    return r(vS(e, !!t));
  }
  static isParamType(e) {
    return !!(e != null && e._isParamType);
  }
}
function Ou(n, e) {
  return AS(n).map((t) => Bt.fromString(t, e));
}
class Vr {
  constructor(e, t) {
    e !== sa && ge.throwError("use a static from method", U.errors.UNSUPPORTED_OPERATION, {
      operation: "new Fragment()"
    }), rc(this, t), this._isFragment = !0, Object.freeze(this);
  }
  static from(e) {
    return Vr.isFragment(e) ? e : typeof e == "string" ? Vr.fromString(e) : Vr.fromObject(e);
  }
  static fromObject(e) {
    if (Vr.isFragment(e))
      return e;
    switch (e.type) {
      case "function":
        return wr.fromObject(e);
      case "event":
        return Lr.fromObject(e);
      case "constructor":
        return vr.fromObject(e);
      case "error":
        return pi.fromObject(e);
      case "fallback":
      case "receive":
        return null;
    }
    return ge.throwArgumentError("invalid fragment object", "value", e);
  }
  static fromString(e) {
    return e = e.replace(/\s/g, " "), e = e.replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " "), e = e.trim(), e.split(" ")[0] === "event" ? Lr.fromString(e.substring(5).trim()) : e.split(" ")[0] === "function" ? wr.fromString(e.substring(8).trim()) : e.split("(")[0].trim() === "constructor" ? vr.fromString(e.trim()) : e.split(" ")[0] === "error" ? pi.fromString(e.substring(5).trim()) : ge.throwArgumentError("unsupported fragment", "value", e);
  }
  static isFragment(e) {
    return !!(e && e._isFragment);
  }
}
class Lr extends Vr {
  format(e) {
    if (e || (e = Te.sighash), Te[e] || ge.throwArgumentError("invalid format type", "format", e), e === Te.json)
      return JSON.stringify({
        type: "event",
        anonymous: this.anonymous,
        name: this.name,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e)))
      });
    let t = "";
    return e !== Te.sighash && (t += "event "), t += this.name + "(" + this.inputs.map((r) => r.format(e)).join(e === Te.full ? ", " : ",") + ") ", e !== Te.sighash && this.anonymous && (t += "anonymous "), t.trim();
  }
  static from(e) {
    return typeof e == "string" ? Lr.fromString(e) : Lr.fromObject(e);
  }
  static fromObject(e) {
    if (Lr.isEventFragment(e))
      return e;
    e.type !== "event" && ge.throwArgumentError("invalid event object", "value", e);
    const t = {
      name: Iu(e.name),
      anonymous: e.anonymous,
      inputs: e.inputs ? e.inputs.map(Bt.fromObject) : [],
      type: "event"
    };
    return new Lr(sa, t);
  }
  static fromString(e) {
    let t = e.match(ku);
    t || ge.throwArgumentError("invalid event string", "value", e);
    let r = !1;
    return t[3].split(" ").forEach((i) => {
      switch (i.trim()) {
        case "anonymous":
          r = !0;
          break;
        case "":
          break;
        default:
          ge.warn("unknown modifier: " + i);
      }
    }), Lr.fromObject({
      name: t[1].trim(),
      anonymous: r,
      inputs: Ou(t[2], !0),
      type: "event"
    });
  }
  static isEventFragment(e) {
    return e && e._isFragment && e.type === "event";
  }
}
function iv(n, e) {
  e.gas = null;
  let t = n.split("@");
  return t.length !== 1 ? (t.length > 2 && ge.throwArgumentError("invalid human-readable ABI signature", "value", n), t[1].match(/^[0-9]+$/) || ge.throwArgumentError("invalid human-readable ABI signature gas", "value", n), e.gas = ne.from(t[1]), t[0]) : n;
}
function sv(n, e) {
  e.constant = !1, e.payable = !1, e.stateMutability = "nonpayable", n.split(" ").forEach((t) => {
    switch (t.trim()) {
      case "constant":
        e.constant = !0;
        break;
      case "payable":
        e.payable = !0, e.stateMutability = "payable";
        break;
      case "nonpayable":
        e.payable = !1, e.stateMutability = "nonpayable";
        break;
      case "pure":
        e.constant = !0, e.stateMutability = "pure";
        break;
      case "view":
        e.constant = !0, e.stateMutability = "view";
        break;
      case "external":
      case "public":
      case "":
        break;
      default:
        console.log("unknown modifier: " + t);
    }
  });
}
function av(n) {
  let e = {
    constant: !1,
    payable: !0,
    stateMutability: "payable"
  };
  return n.stateMutability != null ? (e.stateMutability = n.stateMutability, e.constant = e.stateMutability === "view" || e.stateMutability === "pure", n.constant != null && !!n.constant !== e.constant && ge.throwArgumentError("cannot have constant function with mutability " + e.stateMutability, "value", n), e.payable = e.stateMutability === "payable", n.payable != null && !!n.payable !== e.payable && ge.throwArgumentError("cannot have payable function with mutability " + e.stateMutability, "value", n)) : n.payable != null ? (e.payable = !!n.payable, n.constant == null && !e.payable && n.type !== "constructor" && ge.throwArgumentError("unable to determine stateMutability", "value", n), e.constant = !!n.constant, e.constant ? e.stateMutability = "view" : e.stateMutability = e.payable ? "payable" : "nonpayable", e.payable && e.constant && ge.throwArgumentError("cannot have constant payable function", "value", n)) : n.constant != null ? (e.constant = !!n.constant, e.payable = !e.constant, e.stateMutability = e.constant ? "view" : "payable") : n.type !== "constructor" && ge.throwArgumentError("unable to determine stateMutability", "value", n), e;
}
class vr extends Vr {
  format(e) {
    if (e || (e = Te.sighash), Te[e] || ge.throwArgumentError("invalid format type", "format", e), e === Te.json)
      return JSON.stringify({
        type: "constructor",
        stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : void 0,
        payable: this.payable,
        gas: this.gas ? this.gas.toNumber() : void 0,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e)))
      });
    e === Te.sighash && ge.throwError("cannot format a constructor for sighash", U.errors.UNSUPPORTED_OPERATION, {
      operation: "format(sighash)"
    });
    let t = "constructor(" + this.inputs.map((r) => r.format(e)).join(e === Te.full ? ", " : ",") + ") ";
    return this.stateMutability && this.stateMutability !== "nonpayable" && (t += this.stateMutability + " "), t.trim();
  }
  static from(e) {
    return typeof e == "string" ? vr.fromString(e) : vr.fromObject(e);
  }
  static fromObject(e) {
    if (vr.isConstructorFragment(e))
      return e;
    e.type !== "constructor" && ge.throwArgumentError("invalid constructor object", "value", e);
    let t = av(e);
    t.constant && ge.throwArgumentError("constructor cannot be constant", "value", e);
    const r = {
      name: null,
      type: e.type,
      inputs: e.inputs ? e.inputs.map(Bt.fromObject) : [],
      payable: t.payable,
      stateMutability: t.stateMutability,
      gas: e.gas ? ne.from(e.gas) : null
    };
    return new vr(sa, r);
  }
  static fromString(e) {
    let t = { type: "constructor" };
    e = iv(e, t);
    let r = e.match(ku);
    return (!r || r[1].trim() !== "constructor") && ge.throwArgumentError("invalid constructor string", "value", e), t.inputs = Ou(r[2].trim(), !1), sv(r[3].trim(), t), vr.fromObject(t);
  }
  static isConstructorFragment(e) {
    return e && e._isFragment && e.type === "constructor";
  }
}
class wr extends vr {
  format(e) {
    if (e || (e = Te.sighash), Te[e] || ge.throwArgumentError("invalid format type", "format", e), e === Te.json)
      return JSON.stringify({
        type: "function",
        name: this.name,
        constant: this.constant,
        stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : void 0,
        payable: this.payable,
        gas: this.gas ? this.gas.toNumber() : void 0,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e))),
        outputs: this.outputs.map((r) => JSON.parse(r.format(e)))
      });
    let t = "";
    return e !== Te.sighash && (t += "function "), t += this.name + "(" + this.inputs.map((r) => r.format(e)).join(e === Te.full ? ", " : ",") + ") ", e !== Te.sighash && (this.stateMutability ? this.stateMutability !== "nonpayable" && (t += this.stateMutability + " ") : this.constant && (t += "view "), this.outputs && this.outputs.length && (t += "returns (" + this.outputs.map((r) => r.format(e)).join(", ") + ") "), this.gas != null && (t += "@" + this.gas.toString() + " ")), t.trim();
  }
  static from(e) {
    return typeof e == "string" ? wr.fromString(e) : wr.fromObject(e);
  }
  static fromObject(e) {
    if (wr.isFunctionFragment(e))
      return e;
    e.type !== "function" && ge.throwArgumentError("invalid function object", "value", e);
    let t = av(e);
    const r = {
      type: e.type,
      name: Iu(e.name),
      constant: t.constant,
      inputs: e.inputs ? e.inputs.map(Bt.fromObject) : [],
      outputs: e.outputs ? e.outputs.map(Bt.fromObject) : [],
      payable: t.payable,
      stateMutability: t.stateMutability,
      gas: e.gas ? ne.from(e.gas) : null
    };
    return new wr(sa, r);
  }
  static fromString(e) {
    let t = { type: "function" };
    e = iv(e, t);
    let r = e.split(" returns ");
    r.length > 2 && ge.throwArgumentError("invalid function string", "value", e);
    let i = r[0].match(ku);
    if (i || ge.throwArgumentError("invalid function signature", "value", e), t.name = i[1].trim(), t.name && Iu(t.name), t.inputs = Ou(i[2], !1), sv(i[3].trim(), t), r.length > 1) {
      let s = r[1].match(ku);
      (s[1].trim() != "" || s[3].trim() != "") && ge.throwArgumentError("unexpected tokens", "value", e), t.outputs = Ou(s[2], !1);
    } else
      t.outputs = [];
    return wr.fromObject(t);
  }
  static isFunctionFragment(e) {
    return e && e._isFragment && e.type === "function";
  }
}
function Tg(n) {
  const e = n.format();
  return (e === "Error(string)" || e === "Panic(uint256)") && ge.throwArgumentError(`cannot specify user defined ${e} error`, "fragment", n), n;
}
class pi extends Vr {
  format(e) {
    if (e || (e = Te.sighash), Te[e] || ge.throwArgumentError("invalid format type", "format", e), e === Te.json)
      return JSON.stringify({
        type: "error",
        name: this.name,
        inputs: this.inputs.map((r) => JSON.parse(r.format(e)))
      });
    let t = "";
    return e !== Te.sighash && (t += "error "), t += this.name + "(" + this.inputs.map((r) => r.format(e)).join(e === Te.full ? ", " : ",") + ") ", t.trim();
  }
  static from(e) {
    return typeof e == "string" ? pi.fromString(e) : pi.fromObject(e);
  }
  static fromObject(e) {
    if (pi.isErrorFragment(e))
      return e;
    e.type !== "error" && ge.throwArgumentError("invalid error object", "value", e);
    const t = {
      type: e.type,
      name: Iu(e.name),
      inputs: e.inputs ? e.inputs.map(Bt.fromObject) : []
    };
    return Tg(new pi(sa, t));
  }
  static fromString(e) {
    let t = { type: "error" }, r = e.match(ku);
    return r || ge.throwArgumentError("invalid error signature", "value", e), t.name = r[1].trim(), t.name && Iu(t.name), t.inputs = Ou(r[2], !1), Tg(pi.fromObject(t));
  }
  static isErrorFragment(e) {
    return e && e._isFragment && e.type === "error";
  }
}
function Va(n) {
  return n.match(/^uint($|[^1-9])/) ? n = "uint256" + n.substring(4) : n.match(/^int($|[^1-9])/) && (n = "int256" + n.substring(3)), n;
}
const TS = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
function Iu(n) {
  return (!n || !n.match(TS)) && ge.throwArgumentError(`invalid identifier "${n}"`, "value", n), n;
}
const ku = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
function AS(n) {
  n = n.trim();
  let e = [], t = "", r = 0;
  for (let i = 0; i < n.length; i++) {
    let s = n[i];
    s === "," && r === 0 ? (e.push(t), t = "") : (t += s, s === "(" ? r++ : s === ")" && (r--, r === -1 && ge.throwArgumentError("unbalanced parenthesis", "value", n)));
  }
  return t && e.push(t), e;
}
const h0 = new U(pl);
function ov(n) {
  const e = [], t = function(r, i) {
    if (!!Array.isArray(i))
      for (let s in i) {
        const a = r.slice();
        a.push(s);
        try {
          t(a, i[s]);
        } catch (o) {
          e.push({ path: a, error: o });
        }
      }
  };
  return t([], n), e;
}
class Bi {
  constructor(e, t, r, i) {
    this.name = e, this.type = t, this.localName = r, this.dynamic = i;
  }
  _throwError(e, t) {
    h0.throwArgumentError(e, this.localName, t);
  }
}
class Ff {
  constructor(e) {
    z(this, "wordSize", e || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(e);
  }
  get data() {
    return us(this._data);
  }
  get length() {
    return this._dataLength;
  }
  _writeData(e) {
    return this._data.push(e), this._dataLength += e.length, e.length;
  }
  appendWriter(e) {
    return this._writeData(Rt(e._data));
  }
  writeBytes(e) {
    let t = W(e);
    const r = t.length % this.wordSize;
    return r && (t = Rt([t, this._padding.slice(r)])), this._writeData(t);
  }
  _getValue(e) {
    let t = W(ne.from(e));
    return t.length > this.wordSize && h0.throwError("value out-of-bounds", U.errors.BUFFER_OVERRUN, {
      length: this.wordSize,
      offset: t.length
    }), t.length % this.wordSize && (t = Rt([this._padding.slice(t.length % this.wordSize), t])), t;
  }
  writeValue(e) {
    return this._writeData(this._getValue(e));
  }
  writeUpdatableValue() {
    const e = this._data.length;
    return this._data.push(this._padding), this._dataLength += this.wordSize, (t) => {
      this._data[e] = this._getValue(t);
    };
  }
}
class Bc {
  constructor(e, t, r, i) {
    z(this, "_data", W(e)), z(this, "wordSize", t || 32), z(this, "_coerceFunc", r), z(this, "allowLoose", i), this._offset = 0;
  }
  get data() {
    return J(this._data);
  }
  get consumed() {
    return this._offset;
  }
  static coerce(e, t) {
    let r = e.match("^u?int([0-9]+)$");
    return r && parseInt(r[1]) <= 48 && (t = t.toNumber()), t;
  }
  coerce(e, t) {
    return this._coerceFunc ? this._coerceFunc(e, t) : Bc.coerce(e, t);
  }
  _peekBytes(e, t, r) {
    let i = Math.ceil(t / this.wordSize) * this.wordSize;
    return this._offset + i > this._data.length && (this.allowLoose && r && this._offset + t <= this._data.length ? i = t : h0.throwError("data out-of-bounds", U.errors.BUFFER_OVERRUN, {
      length: this._data.length,
      offset: this._offset + i
    })), this._data.slice(this._offset, this._offset + i);
  }
  subReader(e) {
    return new Bc(this._data.slice(this._offset + e), this.wordSize, this._coerceFunc, this.allowLoose);
  }
  readBytes(e, t) {
    let r = this._peekBytes(0, e, !!t);
    return this._offset += r.length, r.slice(0, e);
  }
  readValue() {
    return ne.from(this.readBytes(this.wordSize));
  }
}
const aa = typeof global < "u" ? global : typeof self < "u" ? self : typeof window < "u" ? window : {};
function uv() {
  throw new Error("setTimeout has not been defined");
}
function lv() {
  throw new Error("clearTimeout has not been defined");
}
var qi = uv, Qi = lv;
typeof aa.setTimeout == "function" && (qi = setTimeout);
typeof aa.clearTimeout == "function" && (Qi = clearTimeout);
function cv(n) {
  if (qi === setTimeout)
    return setTimeout(n, 0);
  if ((qi === uv || !qi) && setTimeout)
    return qi = setTimeout, setTimeout(n, 0);
  try {
    return qi(n, 0);
  } catch {
    try {
      return qi.call(null, n, 0);
    } catch {
      return qi.call(this, n, 0);
    }
  }
}
function CS(n) {
  if (Qi === clearTimeout)
    return clearTimeout(n);
  if ((Qi === lv || !Qi) && clearTimeout)
    return Qi = clearTimeout, clearTimeout(n);
  try {
    return Qi(n);
  } catch {
    try {
      return Qi.call(null, n);
    } catch {
      return Qi.call(this, n);
    }
  }
}
var hi = [], eo = !1, qs, ic = -1;
function SS() {
  !eo || !qs || (eo = !1, qs.length ? hi = qs.concat(hi) : ic = -1, hi.length && dv());
}
function dv() {
  if (!eo) {
    var n = cv(SS);
    eo = !0;
    for (var e = hi.length; e; ) {
      for (qs = hi, hi = []; ++ic < e; )
        qs && qs[ic].run();
      ic = -1, e = hi.length;
    }
    qs = null, eo = !1, CS(n);
  }
}
function ES(n) {
  var e = new Array(arguments.length - 1);
  if (arguments.length > 1)
    for (var t = 1; t < arguments.length; t++)
      e[t - 1] = arguments[t];
  hi.push(new pv(n, e)), hi.length === 1 && !eo && cv(dv);
}
function pv(n, e) {
  this.fun = n, this.array = e;
}
pv.prototype.run = function() {
  this.fun.apply(null, this.array);
};
var MS = "browser", _S = "browser", RS = !0, PS = {}, OS = [], IS = "", kS = {}, DS = {}, BS = {};
function Ra() {
}
var FS = Ra, NS = Ra, $S = Ra, LS = Ra, US = Ra, VS = Ra, jS = Ra;
function zS(n) {
  throw new Error("process.binding is not supported");
}
function GS() {
  return "/";
}
function WS(n) {
  throw new Error("process.chdir is not supported");
}
function HS() {
  return 0;
}
var ja = aa.performance || {}, KS = ja.now || ja.mozNow || ja.msNow || ja.oNow || ja.webkitNow || function() {
  return new Date().getTime();
};
function qS(n) {
  var e = KS.call(ja) * 1e-3, t = Math.floor(e), r = Math.floor(e % 1 * 1e9);
  return n && (t = t - n[0], r = r - n[1], r < 0 && (t--, r += 1e9)), [t, r];
}
var QS = new Date();
function JS() {
  var n = new Date(), e = n - QS;
  return e / 1e3;
}
var sc = {
  nextTick: ES,
  title: MS,
  browser: RS,
  env: PS,
  argv: OS,
  version: IS,
  versions: kS,
  on: FS,
  addListener: NS,
  once: $S,
  off: LS,
  removeListener: US,
  removeAllListeners: VS,
  emit: jS,
  binding: zS,
  cwd: GS,
  chdir: WS,
  umask: HS,
  hrtime: qS,
  platform: _S,
  release: DS,
  config: BS,
  uptime: JS
}, fv = { exports: {} };
(function(n) {
  (function() {
    var e = "input is invalid type", t = "finalize already called", r = typeof window == "object", i = r ? window : {};
    i.JS_SHA3_NO_WINDOW && (r = !1);
    var s = !r && typeof self == "object", a = !i.JS_SHA3_NO_NODE_JS && typeof sc == "object" && sc.versions && sc.versions.node;
    a ? i = Yi : s && (i = self);
    var o = !i.JS_SHA3_NO_COMMON_JS && !0 && n.exports, u = !i.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u", l = "0123456789abcdef".split(""), p = [31, 7936, 2031616, 520093696], h = [4, 1024, 262144, 67108864], b = [1, 256, 65536, 16777216], C = [6, 1536, 393216, 100663296], v = [0, 8, 16, 24], T = [
      1,
      0,
      32898,
      0,
      32906,
      2147483648,
      2147516416,
      2147483648,
      32907,
      0,
      2147483649,
      0,
      2147516545,
      2147483648,
      32777,
      2147483648,
      138,
      0,
      136,
      0,
      2147516425,
      0,
      2147483658,
      0,
      2147516555,
      0,
      139,
      2147483648,
      32905,
      2147483648,
      32771,
      2147483648,
      32770,
      2147483648,
      128,
      2147483648,
      32778,
      0,
      2147483658,
      2147483648,
      2147516545,
      2147483648,
      32896,
      2147483648,
      2147483649,
      0,
      2147516424,
      2147483648
    ], w = [224, 256, 384, 512], M = [128, 256], I = ["hex", "buffer", "arrayBuffer", "array", "digest"], F = {
      128: 168,
      256: 136
    };
    (i.JS_SHA3_NO_NODE_JS || !Array.isArray) && (Array.isArray = function(f) {
      return Object.prototype.toString.call(f) === "[object Array]";
    }), u && (i.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) && (ArrayBuffer.isView = function(f) {
      return typeof f == "object" && f.buffer && f.buffer.constructor === ArrayBuffer;
    });
    for (var k = function(f, R, N) {
      return function(B) {
        return new d(f, R, f).update(B)[N]();
      };
    }, D = function(f, R, N) {
      return function(B, L) {
        return new d(f, R, L).update(B)[N]();
      };
    }, $ = function(f, R, N) {
      return function(B, L, ee, H) {
        return c["cshake" + f].update(B, L, ee, H)[N]();
      };
    }, G = function(f, R, N) {
      return function(B, L, ee, H) {
        return c["kmac" + f].update(B, L, ee, H)[N]();
      };
    }, V = function(f, R, N, B) {
      for (var L = 0; L < I.length; ++L) {
        var ee = I[L];
        f[ee] = R(N, B, ee);
      }
      return f;
    }, K = function(f, R) {
      var N = k(f, R, "hex");
      return N.create = function() {
        return new d(f, R, f);
      }, N.update = function(B) {
        return N.create().update(B);
      }, V(N, k, f, R);
    }, ae = function(f, R) {
      var N = D(f, R, "hex");
      return N.create = function(B) {
        return new d(f, R, B);
      }, N.update = function(B, L) {
        return N.create(L).update(B);
      }, V(N, D, f, R);
    }, q = function(f, R) {
      var N = F[f], B = $(f, R, "hex");
      return B.create = function(L, ee, H) {
        return !ee && !H ? c["shake" + f].create(L) : new d(f, R, L).bytepad([ee, H], N);
      }, B.update = function(L, ee, H, Q) {
        return B.create(ee, H, Q).update(L);
      }, V(B, $, f, R);
    }, oe = function(f, R) {
      var N = F[f], B = G(f, R, "hex");
      return B.create = function(L, ee, H) {
        return new g(f, R, ee).bytepad(["KMAC", H], N).bytepad([L], N);
      }, B.update = function(L, ee, H, Q) {
        return B.create(L, H, Q).update(ee);
      }, V(B, G, f, R);
    }, E = [
      { name: "keccak", padding: b, bits: w, createMethod: K },
      { name: "sha3", padding: C, bits: w, createMethod: K },
      { name: "shake", padding: p, bits: M, createMethod: ae },
      { name: "cshake", padding: h, bits: M, createMethod: q },
      { name: "kmac", padding: h, bits: M, createMethod: oe }
    ], c = {}, y = [], x = 0; x < E.length; ++x)
      for (var S = E[x], A = S.bits, _ = 0; _ < A.length; ++_) {
        var P = S.name + "_" + A[_];
        if (y.push(P), c[P] = S.createMethod(A[_], S.padding), S.name !== "sha3") {
          var m = S.name + A[_];
          y.push(m), c[m] = c[P];
        }
      }
    function d(f, R, N) {
      this.blocks = [], this.s = [], this.padding = R, this.outputBits = N, this.reset = !0, this.finalized = !1, this.block = 0, this.start = 0, this.blockCount = 1600 - (f << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = N >> 5, this.extraBytes = (N & 31) >> 3;
      for (var B = 0; B < 50; ++B)
        this.s[B] = 0;
    }
    d.prototype.update = function(f) {
      if (this.finalized)
        throw new Error(t);
      var R, N = typeof f;
      if (N !== "string") {
        if (N === "object") {
          if (f === null)
            throw new Error(e);
          if (u && f.constructor === ArrayBuffer)
            f = new Uint8Array(f);
          else if (!Array.isArray(f) && (!u || !ArrayBuffer.isView(f)))
            throw new Error(e);
        } else
          throw new Error(e);
        R = !0;
      }
      for (var B = this.blocks, L = this.byteCount, ee = f.length, H = this.blockCount, Q = 0, mt = this.s, te, le; Q < ee; ) {
        if (this.reset)
          for (this.reset = !1, B[0] = this.block, te = 1; te < H + 1; ++te)
            B[te] = 0;
        if (R)
          for (te = this.start; Q < ee && te < L; ++Q)
            B[te >> 2] |= f[Q] << v[te++ & 3];
        else
          for (te = this.start; Q < ee && te < L; ++Q)
            le = f.charCodeAt(Q), le < 128 ? B[te >> 2] |= le << v[te++ & 3] : le < 2048 ? (B[te >> 2] |= (192 | le >> 6) << v[te++ & 3], B[te >> 2] |= (128 | le & 63) << v[te++ & 3]) : le < 55296 || le >= 57344 ? (B[te >> 2] |= (224 | le >> 12) << v[te++ & 3], B[te >> 2] |= (128 | le >> 6 & 63) << v[te++ & 3], B[te >> 2] |= (128 | le & 63) << v[te++ & 3]) : (le = 65536 + ((le & 1023) << 10 | f.charCodeAt(++Q) & 1023), B[te >> 2] |= (240 | le >> 18) << v[te++ & 3], B[te >> 2] |= (128 | le >> 12 & 63) << v[te++ & 3], B[te >> 2] |= (128 | le >> 6 & 63) << v[te++ & 3], B[te >> 2] |= (128 | le & 63) << v[te++ & 3]);
        if (this.lastByteIndex = te, te >= L) {
          for (this.start = te - L, this.block = B[H], te = 0; te < H; ++te)
            mt[te] ^= B[te];
          O(mt), this.reset = !0;
        } else
          this.start = te;
      }
      return this;
    }, d.prototype.encode = function(f, R) {
      var N = f & 255, B = 1, L = [N];
      for (f = f >> 8, N = f & 255; N > 0; )
        L.unshift(N), f = f >> 8, N = f & 255, ++B;
      return R ? L.push(B) : L.unshift(B), this.update(L), L.length;
    }, d.prototype.encodeString = function(f) {
      var R, N = typeof f;
      if (N !== "string") {
        if (N === "object") {
          if (f === null)
            throw new Error(e);
          if (u && f.constructor === ArrayBuffer)
            f = new Uint8Array(f);
          else if (!Array.isArray(f) && (!u || !ArrayBuffer.isView(f)))
            throw new Error(e);
        } else
          throw new Error(e);
        R = !0;
      }
      var B = 0, L = f.length;
      if (R)
        B = L;
      else
        for (var ee = 0; ee < f.length; ++ee) {
          var H = f.charCodeAt(ee);
          H < 128 ? B += 1 : H < 2048 ? B += 2 : H < 55296 || H >= 57344 ? B += 3 : (H = 65536 + ((H & 1023) << 10 | f.charCodeAt(++ee) & 1023), B += 4);
        }
      return B += this.encode(B * 8), this.update(f), B;
    }, d.prototype.bytepad = function(f, R) {
      for (var N = this.encode(R), B = 0; B < f.length; ++B)
        N += this.encodeString(f[B]);
      var L = R - N % R, ee = [];
      return ee.length = L, this.update(ee), this;
    }, d.prototype.finalize = function() {
      if (!this.finalized) {
        this.finalized = !0;
        var f = this.blocks, R = this.lastByteIndex, N = this.blockCount, B = this.s;
        if (f[R >> 2] |= this.padding[R & 3], this.lastByteIndex === this.byteCount)
          for (f[0] = f[N], R = 1; R < N + 1; ++R)
            f[R] = 0;
        for (f[N - 1] |= 2147483648, R = 0; R < N; ++R)
          B[R] ^= f[R];
        O(B);
      }
    }, d.prototype.toString = d.prototype.hex = function() {
      this.finalize();
      for (var f = this.blockCount, R = this.s, N = this.outputBlocks, B = this.extraBytes, L = 0, ee = 0, H = "", Q; ee < N; ) {
        for (L = 0; L < f && ee < N; ++L, ++ee)
          Q = R[L], H += l[Q >> 4 & 15] + l[Q & 15] + l[Q >> 12 & 15] + l[Q >> 8 & 15] + l[Q >> 20 & 15] + l[Q >> 16 & 15] + l[Q >> 28 & 15] + l[Q >> 24 & 15];
        ee % f === 0 && (O(R), L = 0);
      }
      return B && (Q = R[L], H += l[Q >> 4 & 15] + l[Q & 15], B > 1 && (H += l[Q >> 12 & 15] + l[Q >> 8 & 15]), B > 2 && (H += l[Q >> 20 & 15] + l[Q >> 16 & 15])), H;
    }, d.prototype.arrayBuffer = function() {
      this.finalize();
      var f = this.blockCount, R = this.s, N = this.outputBlocks, B = this.extraBytes, L = 0, ee = 0, H = this.outputBits >> 3, Q;
      B ? Q = new ArrayBuffer(N + 1 << 2) : Q = new ArrayBuffer(H);
      for (var mt = new Uint32Array(Q); ee < N; ) {
        for (L = 0; L < f && ee < N; ++L, ++ee)
          mt[ee] = R[L];
        ee % f === 0 && O(R);
      }
      return B && (mt[L] = R[L], Q = Q.slice(0, H)), Q;
    }, d.prototype.buffer = d.prototype.arrayBuffer, d.prototype.digest = d.prototype.array = function() {
      this.finalize();
      for (var f = this.blockCount, R = this.s, N = this.outputBlocks, B = this.extraBytes, L = 0, ee = 0, H = [], Q, mt; ee < N; ) {
        for (L = 0; L < f && ee < N; ++L, ++ee)
          Q = ee << 2, mt = R[L], H[Q] = mt & 255, H[Q + 1] = mt >> 8 & 255, H[Q + 2] = mt >> 16 & 255, H[Q + 3] = mt >> 24 & 255;
        ee % f === 0 && O(R);
      }
      return B && (Q = ee << 2, mt = R[L], H[Q] = mt & 255, B > 1 && (H[Q + 1] = mt >> 8 & 255), B > 2 && (H[Q + 2] = mt >> 16 & 255)), H;
    };
    function g(f, R, N) {
      d.call(this, f, R, N);
    }
    g.prototype = new d(), g.prototype.finalize = function() {
      return this.encode(this.outputBits, !0), d.prototype.finalize.call(this);
    };
    var O = function(f) {
      var R, N, B, L, ee, H, Q, mt, te, le, As, Fe, Ne, Cs, $e, Le, Ss, Ue, Ve, Es, je, ze, Ms, Ge, We, _s, He, Ke, Rs, qe, Qe, Ps, Je, Ye, Os, Xe, Ze, Is, et, tt, ks, nt, rt, Ds, it, st, Bs, at, ot, Fs, ut, lt, Ns, ct, dt, $s, pt, ft, $i, Li, Ui, Vi, ji;
      for (B = 0; B < 48; B += 2)
        L = f[0] ^ f[10] ^ f[20] ^ f[30] ^ f[40], ee = f[1] ^ f[11] ^ f[21] ^ f[31] ^ f[41], H = f[2] ^ f[12] ^ f[22] ^ f[32] ^ f[42], Q = f[3] ^ f[13] ^ f[23] ^ f[33] ^ f[43], mt = f[4] ^ f[14] ^ f[24] ^ f[34] ^ f[44], te = f[5] ^ f[15] ^ f[25] ^ f[35] ^ f[45], le = f[6] ^ f[16] ^ f[26] ^ f[36] ^ f[46], As = f[7] ^ f[17] ^ f[27] ^ f[37] ^ f[47], Fe = f[8] ^ f[18] ^ f[28] ^ f[38] ^ f[48], Ne = f[9] ^ f[19] ^ f[29] ^ f[39] ^ f[49], R = Fe ^ (H << 1 | Q >>> 31), N = Ne ^ (Q << 1 | H >>> 31), f[0] ^= R, f[1] ^= N, f[10] ^= R, f[11] ^= N, f[20] ^= R, f[21] ^= N, f[30] ^= R, f[31] ^= N, f[40] ^= R, f[41] ^= N, R = L ^ (mt << 1 | te >>> 31), N = ee ^ (te << 1 | mt >>> 31), f[2] ^= R, f[3] ^= N, f[12] ^= R, f[13] ^= N, f[22] ^= R, f[23] ^= N, f[32] ^= R, f[33] ^= N, f[42] ^= R, f[43] ^= N, R = H ^ (le << 1 | As >>> 31), N = Q ^ (As << 1 | le >>> 31), f[4] ^= R, f[5] ^= N, f[14] ^= R, f[15] ^= N, f[24] ^= R, f[25] ^= N, f[34] ^= R, f[35] ^= N, f[44] ^= R, f[45] ^= N, R = mt ^ (Fe << 1 | Ne >>> 31), N = te ^ (Ne << 1 | Fe >>> 31), f[6] ^= R, f[7] ^= N, f[16] ^= R, f[17] ^= N, f[26] ^= R, f[27] ^= N, f[36] ^= R, f[37] ^= N, f[46] ^= R, f[47] ^= N, R = le ^ (L << 1 | ee >>> 31), N = As ^ (ee << 1 | L >>> 31), f[8] ^= R, f[9] ^= N, f[18] ^= R, f[19] ^= N, f[28] ^= R, f[29] ^= N, f[38] ^= R, f[39] ^= N, f[48] ^= R, f[49] ^= N, Cs = f[0], $e = f[1], st = f[11] << 4 | f[10] >>> 28, Bs = f[10] << 4 | f[11] >>> 28, Ke = f[20] << 3 | f[21] >>> 29, Rs = f[21] << 3 | f[20] >>> 29, Li = f[31] << 9 | f[30] >>> 23, Ui = f[30] << 9 | f[31] >>> 23, nt = f[40] << 18 | f[41] >>> 14, rt = f[41] << 18 | f[40] >>> 14, Ye = f[2] << 1 | f[3] >>> 31, Os = f[3] << 1 | f[2] >>> 31, Le = f[13] << 12 | f[12] >>> 20, Ss = f[12] << 12 | f[13] >>> 20, at = f[22] << 10 | f[23] >>> 22, ot = f[23] << 10 | f[22] >>> 22, qe = f[33] << 13 | f[32] >>> 19, Qe = f[32] << 13 | f[33] >>> 19, Vi = f[42] << 2 | f[43] >>> 30, ji = f[43] << 2 | f[42] >>> 30, ct = f[5] << 30 | f[4] >>> 2, dt = f[4] << 30 | f[5] >>> 2, Xe = f[14] << 6 | f[15] >>> 26, Ze = f[15] << 6 | f[14] >>> 26, Ue = f[25] << 11 | f[24] >>> 21, Ve = f[24] << 11 | f[25] >>> 21, Fs = f[34] << 15 | f[35] >>> 17, ut = f[35] << 15 | f[34] >>> 17, Ps = f[45] << 29 | f[44] >>> 3, Je = f[44] << 29 | f[45] >>> 3, Ge = f[6] << 28 | f[7] >>> 4, We = f[7] << 28 | f[6] >>> 4, $s = f[17] << 23 | f[16] >>> 9, pt = f[16] << 23 | f[17] >>> 9, Is = f[26] << 25 | f[27] >>> 7, et = f[27] << 25 | f[26] >>> 7, Es = f[36] << 21 | f[37] >>> 11, je = f[37] << 21 | f[36] >>> 11, lt = f[47] << 24 | f[46] >>> 8, Ns = f[46] << 24 | f[47] >>> 8, Ds = f[8] << 27 | f[9] >>> 5, it = f[9] << 27 | f[8] >>> 5, _s = f[18] << 20 | f[19] >>> 12, He = f[19] << 20 | f[18] >>> 12, ft = f[29] << 7 | f[28] >>> 25, $i = f[28] << 7 | f[29] >>> 25, tt = f[38] << 8 | f[39] >>> 24, ks = f[39] << 8 | f[38] >>> 24, ze = f[48] << 14 | f[49] >>> 18, Ms = f[49] << 14 | f[48] >>> 18, f[0] = Cs ^ ~Le & Ue, f[1] = $e ^ ~Ss & Ve, f[10] = Ge ^ ~_s & Ke, f[11] = We ^ ~He & Rs, f[20] = Ye ^ ~Xe & Is, f[21] = Os ^ ~Ze & et, f[30] = Ds ^ ~st & at, f[31] = it ^ ~Bs & ot, f[40] = ct ^ ~$s & ft, f[41] = dt ^ ~pt & $i, f[2] = Le ^ ~Ue & Es, f[3] = Ss ^ ~Ve & je, f[12] = _s ^ ~Ke & qe, f[13] = He ^ ~Rs & Qe, f[22] = Xe ^ ~Is & tt, f[23] = Ze ^ ~et & ks, f[32] = st ^ ~at & Fs, f[33] = Bs ^ ~ot & ut, f[42] = $s ^ ~ft & Li, f[43] = pt ^ ~$i & Ui, f[4] = Ue ^ ~Es & ze, f[5] = Ve ^ ~je & Ms, f[14] = Ke ^ ~qe & Ps, f[15] = Rs ^ ~Qe & Je, f[24] = Is ^ ~tt & nt, f[25] = et ^ ~ks & rt, f[34] = at ^ ~Fs & lt, f[35] = ot ^ ~ut & Ns, f[44] = ft ^ ~Li & Vi, f[45] = $i ^ ~Ui & ji, f[6] = Es ^ ~ze & Cs, f[7] = je ^ ~Ms & $e, f[16] = qe ^ ~Ps & Ge, f[17] = Qe ^ ~Je & We, f[26] = tt ^ ~nt & Ye, f[27] = ks ^ ~rt & Os, f[36] = Fs ^ ~lt & Ds, f[37] = ut ^ ~Ns & it, f[46] = Li ^ ~Vi & ct, f[47] = Ui ^ ~ji & dt, f[8] = ze ^ ~Cs & Le, f[9] = Ms ^ ~$e & Ss, f[18] = Ps ^ ~Ge & _s, f[19] = Je ^ ~We & He, f[28] = nt ^ ~Ye & Xe, f[29] = rt ^ ~Os & Ze, f[38] = lt ^ ~Ds & st, f[39] = Ns ^ ~it & Bs, f[48] = Vi ^ ~ct & $s, f[49] = ji ^ ~dt & pt, f[0] ^= T[B], f[1] ^= T[B + 1];
    };
    if (o)
      n.exports = c;
    else
      for (x = 0; x < y.length; ++x)
        i[y[x]] = c[y[x]];
  })();
})(fv);
const YS = fv.exports;
function Pe(n) {
  return "0x" + YS.keccak_256(W(n));
}
const XS = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  keccak256: Pe
}, Symbol.toStringTag, { value: "Module" })), ZS = "rlp/5.7.0", Dr = new U(ZS);
function Ag(n) {
  const e = [];
  for (; n; )
    e.unshift(n & 255), n >>= 8;
  return e;
}
function Cg(n, e, t) {
  let r = 0;
  for (let i = 0; i < t; i++)
    r = r * 256 + n[e + i];
  return r;
}
function hv(n) {
  if (Array.isArray(n)) {
    let r = [];
    if (n.forEach(function(s) {
      r = r.concat(hv(s));
    }), r.length <= 55)
      return r.unshift(192 + r.length), r;
    const i = Ag(r.length);
    return i.unshift(247 + i.length), i.concat(r);
  }
  dl(n) || Dr.throwArgumentError("RLP object must be BytesLike", "object", n);
  const e = Array.prototype.slice.call(W(n));
  if (e.length === 1 && e[0] <= 127)
    return e;
  if (e.length <= 55)
    return e.unshift(128 + e.length), e;
  const t = Ag(e.length);
  return t.unshift(183 + t.length), t.concat(e);
}
function oa(n) {
  return J(hv(n));
}
function Sg(n, e, t, r) {
  const i = [];
  for (; t < e + 1 + r; ) {
    const s = yv(n, t);
    i.push(s.result), t += s.consumed, t > e + 1 + r && Dr.throwError("child data too short", U.errors.BUFFER_OVERRUN, {});
  }
  return { consumed: 1 + r, result: i };
}
function yv(n, e) {
  if (n.length === 0 && Dr.throwError("data too short", U.errors.BUFFER_OVERRUN, {}), n[e] >= 248) {
    const t = n[e] - 247;
    e + 1 + t > n.length && Dr.throwError("data short segment too short", U.errors.BUFFER_OVERRUN, {});
    const r = Cg(n, e + 1, t);
    return e + 1 + t + r > n.length && Dr.throwError("data long segment too short", U.errors.BUFFER_OVERRUN, {}), Sg(n, e, e + 1 + t, t + r);
  } else if (n[e] >= 192) {
    const t = n[e] - 192;
    return e + 1 + t > n.length && Dr.throwError("data array too short", U.errors.BUFFER_OVERRUN, {}), Sg(n, e, e + 1, t);
  } else if (n[e] >= 184) {
    const t = n[e] - 183;
    e + 1 + t > n.length && Dr.throwError("data array too short", U.errors.BUFFER_OVERRUN, {});
    const r = Cg(n, e + 1, t);
    e + 1 + t + r > n.length && Dr.throwError("data array too short", U.errors.BUFFER_OVERRUN, {});
    const i = J(n.slice(e + 1 + t, e + 1 + t + r));
    return { consumed: 1 + t + r, result: i };
  } else if (n[e] >= 128) {
    const t = n[e] - 128;
    e + 1 + t > n.length && Dr.throwError("data too short", U.errors.BUFFER_OVERRUN, {});
    const r = J(n.slice(e + 1, e + 1 + t));
    return { consumed: 1 + t, result: r };
  }
  return { consumed: 1, result: J(n[e]) };
}
function Md(n) {
  const e = W(n), t = yv(e, 0);
  return t.consumed !== e.length && Dr.throwArgumentError("invalid rlp data", "data", n), t.result;
}
const eE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  encode: oa,
  decode: Md
}, Symbol.toStringTag, { value: "Module" })), tE = "address/5.7.0", ns = new U(tE);
function Eg(n) {
  vt(n, 20) || ns.throwArgumentError("invalid address", "address", n), n = n.toLowerCase();
  const e = n.substring(2).split(""), t = new Uint8Array(40);
  for (let i = 0; i < 40; i++)
    t[i] = e[i].charCodeAt(0);
  const r = W(Pe(t));
  for (let i = 0; i < 40; i += 2)
    r[i >> 1] >> 4 >= 8 && (e[i] = e[i].toUpperCase()), (r[i >> 1] & 15) >= 8 && (e[i + 1] = e[i + 1].toUpperCase());
  return "0x" + e.join("");
}
const nE = 9007199254740991;
function rE(n) {
  return Math.log10 ? Math.log10(n) : Math.log(n) / Math.LN10;
}
const y0 = {};
for (let n = 0; n < 10; n++)
  y0[String(n)] = String(n);
for (let n = 0; n < 26; n++)
  y0[String.fromCharCode(65 + n)] = String(10 + n);
const Mg = Math.floor(rE(nE));
function mv(n) {
  n = n.toUpperCase(), n = n.substring(4) + n.substring(0, 2) + "00";
  let e = n.split("").map((r) => y0[r]).join("");
  for (; e.length >= Mg; ) {
    let r = e.substring(0, Mg);
    e = parseInt(r, 10) % 97 + e.substring(r.length);
  }
  let t = String(98 - parseInt(e, 10) % 97);
  for (; t.length < 2; )
    t = "0" + t;
  return t;
}
function ke(n) {
  let e = null;
  if (typeof n != "string" && ns.throwArgumentError("invalid address", "address", n), n.match(/^(0x)?[0-9a-fA-F]{40}$/))
    n.substring(0, 2) !== "0x" && (n = "0x" + n), e = Eg(n), n.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e !== n && ns.throwArgumentError("bad address checksum", "address", n);
  else if (n.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
    for (n.substring(2, 4) !== mv(n) && ns.throwArgumentError("bad icap checksum", "address", n), e = dS(n.substring(4)); e.length < 40; )
      e = "0" + e;
    e = Eg("0x" + e);
  } else
    ns.throwArgumentError("invalid address", "address", n);
  return e;
}
function iE(n) {
  try {
    return ke(n), !0;
  } catch {
  }
  return !1;
}
function sE(n) {
  let e = pS(ke(n).substring(2)).toUpperCase();
  for (; e.length < 30; )
    e = "0" + e;
  return "XE" + mv("XE00" + e) + e;
}
function bv(n) {
  let e = null;
  try {
    e = ke(n.from);
  } catch {
    ns.throwArgumentError("missing from address", "transaction", n);
  }
  const t = Gr(W(ne.from(n.nonce).toHexString()));
  return ke(Ci(Pe(oa([e, t])), 12));
}
function aE(n, e, t) {
  return _u(e) !== 32 && ns.throwArgumentError("salt must be 32 bytes", "salt", e), _u(t) !== 32 && ns.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", t), ke(Ci(Pe(Rt(["0xff", ke(n), e, t])), 12));
}
const oE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  getAddress: ke,
  isAddress: iE,
  getIcapAddress: sE,
  getContractAddress: bv,
  getCreate2Address: aE
}, Symbol.toStringTag, { value: "Module" }));
class uE extends Bi {
  constructor(e) {
    super("address", "address", e, !1);
  }
  defaultValue() {
    return "0x0000000000000000000000000000000000000000";
  }
  encode(e, t) {
    try {
      t = ke(t);
    } catch (r) {
      this._throwError(r.message, t);
    }
    return e.writeValue(t);
  }
  decode(e) {
    return ke(Pt(e.readValue().toHexString(), 20));
  }
}
class lE extends Bi {
  constructor(e) {
    super(e.name, e.type, void 0, e.dynamic), this.coder = e;
  }
  defaultValue() {
    return this.coder.defaultValue();
  }
  encode(e, t) {
    return this.coder.encode(e, t);
  }
  decode(e) {
    return this.coder.decode(e);
  }
}
const qa = new U(pl);
function gv(n, e, t) {
  let r = null;
  if (Array.isArray(t))
    r = t;
  else if (t && typeof t == "object") {
    let u = {};
    r = e.map((l) => {
      const p = l.localName;
      return p || qa.throwError("cannot encode object for signature with missing names", U.errors.INVALID_ARGUMENT, {
        argument: "values",
        coder: l,
        value: t
      }), u[p] && qa.throwError("cannot encode object for signature with duplicate names", U.errors.INVALID_ARGUMENT, {
        argument: "values",
        coder: l,
        value: t
      }), u[p] = !0, t[p];
    });
  } else
    qa.throwArgumentError("invalid tuple value", "tuple", t);
  e.length !== r.length && qa.throwArgumentError("types/value length mismatch", "tuple", t);
  let i = new Ff(n.wordSize), s = new Ff(n.wordSize), a = [];
  e.forEach((u, l) => {
    let p = r[l];
    if (u.dynamic) {
      let h = s.length;
      u.encode(s, p);
      let b = i.writeUpdatableValue();
      a.push((C) => {
        b(C + h);
      });
    } else
      u.encode(i, p);
  }), a.forEach((u) => {
    u(i.length);
  });
  let o = n.appendWriter(i);
  return o += n.appendWriter(s), o;
}
function xv(n, e) {
  let t = [], r = n.subReader(0);
  e.forEach((s) => {
    let a = null;
    if (s.dynamic) {
      let o = n.readValue(), u = r.subReader(o.toNumber());
      try {
        a = s.decode(u);
      } catch (l) {
        if (l.code === U.errors.BUFFER_OVERRUN)
          throw l;
        a = l, a.baseType = s.name, a.name = s.localName, a.type = s.type;
      }
    } else
      try {
        a = s.decode(n);
      } catch (o) {
        if (o.code === U.errors.BUFFER_OVERRUN)
          throw o;
        a = o, a.baseType = s.name, a.name = s.localName, a.type = s.type;
      }
    a != null && t.push(a);
  });
  const i = e.reduce((s, a) => {
    const o = a.localName;
    return o && (s[o] || (s[o] = 0), s[o]++), s;
  }, {});
  e.forEach((s, a) => {
    let o = s.localName;
    if (!o || i[o] !== 1 || (o === "length" && (o = "_length"), t[o] != null))
      return;
    const u = t[a];
    u instanceof Error ? Object.defineProperty(t, o, {
      enumerable: !0,
      get: () => {
        throw u;
      }
    }) : t[o] = u;
  });
  for (let s = 0; s < t.length; s++) {
    const a = t[s];
    a instanceof Error && Object.defineProperty(t, s, {
      enumerable: !0,
      get: () => {
        throw a;
      }
    });
  }
  return Object.freeze(t);
}
class cE extends Bi {
  constructor(e, t, r) {
    const i = e.type + "[" + (t >= 0 ? t : "") + "]", s = t === -1 || e.dynamic;
    super("array", i, r, s), this.coder = e, this.length = t;
  }
  defaultValue() {
    const e = this.coder.defaultValue(), t = [];
    for (let r = 0; r < this.length; r++)
      t.push(e);
    return t;
  }
  encode(e, t) {
    Array.isArray(t) || this._throwError("expected array value", t);
    let r = this.length;
    r === -1 && (r = t.length, e.writeValue(t.length)), qa.checkArgumentCount(t.length, r, "coder array" + (this.localName ? " " + this.localName : ""));
    let i = [];
    for (let s = 0; s < t.length; s++)
      i.push(this.coder);
    return gv(e, i, t);
  }
  decode(e) {
    let t = this.length;
    t === -1 && (t = e.readValue().toNumber(), t * 32 > e._data.length && qa.throwError("insufficient data length", U.errors.BUFFER_OVERRUN, {
      length: e._data.length,
      count: t
    }));
    let r = [];
    for (let i = 0; i < t; i++)
      r.push(new lE(this.coder));
    return e.coerce(this.name, xv(e, r));
  }
}
class dE extends Bi {
  constructor(e) {
    super("bool", "bool", e, !1);
  }
  defaultValue() {
    return !1;
  }
  encode(e, t) {
    return e.writeValue(t ? 1 : 0);
  }
  decode(e) {
    return e.coerce(this.type, !e.readValue().isZero());
  }
}
class vv extends Bi {
  constructor(e, t) {
    super(e, e, t, !0);
  }
  defaultValue() {
    return "0x";
  }
  encode(e, t) {
    t = W(t);
    let r = e.writeValue(t.length);
    return r += e.writeBytes(t), r;
  }
  decode(e) {
    return e.readBytes(e.readValue().toNumber(), !0);
  }
}
class pE extends vv {
  constructor(e) {
    super("bytes", e);
  }
  decode(e) {
    return e.coerce(this.name, J(super.decode(e)));
  }
}
class fE extends Bi {
  constructor(e, t) {
    let r = "bytes" + String(e);
    super(r, r, t, !1), this.size = e;
  }
  defaultValue() {
    return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + this.size * 2);
  }
  encode(e, t) {
    let r = W(t);
    return r.length !== this.size && this._throwError("incorrect data length", t), e.writeBytes(r);
  }
  decode(e) {
    return e.coerce(this.name, J(e.readBytes(this.size)));
  }
}
class hE extends Bi {
  constructor(e) {
    super("null", "", e, !1);
  }
  defaultValue() {
    return null;
  }
  encode(e, t) {
    return t != null && this._throwError("not null", t), e.writeBytes([]);
  }
  decode(e) {
    return e.readBytes(0), e.coerce(this.name, null);
  }
}
const yE = /* @__PURE__ */ ne.from(-1), wv = /* @__PURE__ */ ne.from(0), mE = /* @__PURE__ */ ne.from(1), bE = /* @__PURE__ */ ne.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), gE = "0x0000000000000000000000000000000000000000000000000000000000000000";
class xE extends Bi {
  constructor(e, t, r) {
    const i = (t ? "int" : "uint") + e * 8;
    super(i, i, r, !1), this.size = e, this.signed = t;
  }
  defaultValue() {
    return 0;
  }
  encode(e, t) {
    let r = ne.from(t), i = bE.mask(e.wordSize * 8);
    if (this.signed) {
      let s = i.mask(this.size * 8 - 1);
      (r.gt(s) || r.lt(s.add(mE).mul(yE))) && this._throwError("value out-of-bounds", t);
    } else
      (r.lt(wv) || r.gt(i.mask(this.size * 8))) && this._throwError("value out-of-bounds", t);
    return r = r.toTwos(this.size * 8).mask(this.size * 8), this.signed && (r = r.fromTwos(this.size * 8).toTwos(8 * e.wordSize)), e.writeValue(r);
  }
  decode(e) {
    let t = e.readValue().mask(this.size * 8);
    return this.signed && (t = t.fromTwos(this.size * 8)), e.coerce(this.name, t);
  }
}
const vE = "strings/5.7.0", Tv = new U(vE);
var Qr;
(function(n) {
  n.current = "", n.NFC = "NFC", n.NFD = "NFD", n.NFKC = "NFKC", n.NFKD = "NFKD";
})(Qr || (Qr = {}));
var Mn;
(function(n) {
  n.UNEXPECTED_CONTINUE = "unexpected continuation byte", n.BAD_PREFIX = "bad codepoint prefix", n.OVERRUN = "string overrun", n.MISSING_CONTINUE = "missing continuation byte", n.OUT_OF_RANGE = "out of UTF-8 range", n.UTF16_SURROGATE = "UTF-16 surrogate", n.OVERLONG = "overlong representation";
})(Mn || (Mn = {}));
function wE(n, e, t, r, i) {
  return Tv.throwArgumentError(`invalid codepoint at offset ${e}; ${n}`, "bytes", t);
}
function Av(n, e, t, r, i) {
  if (n === Mn.BAD_PREFIX || n === Mn.UNEXPECTED_CONTINUE) {
    let s = 0;
    for (let a = e + 1; a < t.length && t[a] >> 6 === 2; a++)
      s++;
    return s;
  }
  return n === Mn.OVERRUN ? t.length - e - 1 : 0;
}
function TE(n, e, t, r, i) {
  return n === Mn.OVERLONG ? (r.push(i), 0) : (r.push(65533), Av(n, e, t));
}
const Cv = Object.freeze({
  error: wE,
  ignore: Av,
  replace: TE
});
function m0(n, e) {
  e == null && (e = Cv.error), n = W(n);
  const t = [];
  let r = 0;
  for (; r < n.length; ) {
    const i = n[r++];
    if (i >> 7 === 0) {
      t.push(i);
      continue;
    }
    let s = null, a = null;
    if ((i & 224) === 192)
      s = 1, a = 127;
    else if ((i & 240) === 224)
      s = 2, a = 2047;
    else if ((i & 248) === 240)
      s = 3, a = 65535;
    else {
      (i & 192) === 128 ? r += e(Mn.UNEXPECTED_CONTINUE, r - 1, n, t) : r += e(Mn.BAD_PREFIX, r - 1, n, t);
      continue;
    }
    if (r - 1 + s >= n.length) {
      r += e(Mn.OVERRUN, r - 1, n, t);
      continue;
    }
    let o = i & (1 << 8 - s - 1) - 1;
    for (let u = 0; u < s; u++) {
      let l = n[r];
      if ((l & 192) != 128) {
        r += e(Mn.MISSING_CONTINUE, r, n, t), o = null;
        break;
      }
      o = o << 6 | l & 63, r++;
    }
    if (o !== null) {
      if (o > 1114111) {
        r += e(Mn.OUT_OF_RANGE, r - 1 - s, n, t, o);
        continue;
      }
      if (o >= 55296 && o <= 57343) {
        r += e(Mn.UTF16_SURROGATE, r - 1 - s, n, t, o);
        continue;
      }
      if (o <= a) {
        r += e(Mn.OVERLONG, r - 1 - s, n, t, o);
        continue;
      }
      t.push(o);
    }
  }
  return t;
}
function Gt(n, e = Qr.current) {
  e != Qr.current && (Tv.checkNormalize(), n = n.normalize(e));
  let t = [];
  for (let r = 0; r < n.length; r++) {
    const i = n.charCodeAt(r);
    if (i < 128)
      t.push(i);
    else if (i < 2048)
      t.push(i >> 6 | 192), t.push(i & 63 | 128);
    else if ((i & 64512) == 55296) {
      r++;
      const s = n.charCodeAt(r);
      if (r >= n.length || (s & 64512) !== 56320)
        throw new Error("invalid utf-8 string");
      const a = 65536 + ((i & 1023) << 10) + (s & 1023);
      t.push(a >> 18 | 240), t.push(a >> 12 & 63 | 128), t.push(a >> 6 & 63 | 128), t.push(a & 63 | 128);
    } else
      t.push(i >> 12 | 224), t.push(i >> 6 & 63 | 128), t.push(i & 63 | 128);
  }
  return W(t);
}
function Up(n) {
  const e = "0000" + n.toString(16);
  return "\\u" + e.substring(e.length - 4);
}
function AE(n, e) {
  return '"' + m0(n, e).map((t) => {
    if (t < 256) {
      switch (t) {
        case 8:
          return "\\b";
        case 9:
          return "\\t";
        case 10:
          return "\\n";
        case 13:
          return "\\r";
        case 34:
          return '\\"';
        case 92:
          return "\\\\";
      }
      if (t >= 32 && t < 127)
        return String.fromCharCode(t);
    }
    return t <= 65535 ? Up(t) : (t -= 65536, Up((t >> 10 & 1023) + 55296) + Up((t & 1023) + 56320));
  }).join("") + '"';
}
function Nf(n) {
  return n.map((e) => e <= 65535 ? String.fromCharCode(e) : (e -= 65536, String.fromCharCode((e >> 10 & 1023) + 55296, (e & 1023) + 56320))).join("");
}
function _o(n, e) {
  return Nf(m0(n, e));
}
function Fc(n, e = Qr.current) {
  return m0(Gt(n, e));
}
function CE(n) {
  const e = Gt(n);
  if (e.length > 31)
    throw new Error("bytes32 string must be less than 32 bytes");
  return J(Rt([e, gE]).slice(0, 32));
}
function SE(n) {
  const e = W(n);
  if (e.length !== 32)
    throw new Error("invalid bytes32 - not 32 bytes long");
  if (e[31] !== 0)
    throw new Error("invalid bytes32 string - no null terminator");
  let t = 31;
  for (; e[t - 1] === 0; )
    t--;
  return _o(e.slice(0, t));
}
function EE(n) {
  if (n.length % 4 !== 0)
    throw new Error("bad data");
  let e = [];
  for (let t = 0; t < n.length; t += 4)
    e.push(parseInt(n.substring(t, t + 4), 16));
  return e;
}
function b0(n, e) {
  e || (e = function(i) {
    return [parseInt(i, 16)];
  });
  let t = 0, r = {};
  return n.split(",").forEach((i) => {
    let s = i.split(":");
    t += parseInt(s[0], 16), r[t] = e(s[1]);
  }), r;
}
function Sv(n) {
  let e = 0;
  return n.split(",").map((t) => {
    let r = t.split("-");
    r.length === 1 ? r[1] = "0" : r[1] === "" && (r[1] = "1");
    let i = e + parseInt(r[0], 16);
    return e = parseInt(r[1], 16), { l: i, h: e };
  });
}
function g0(n, e) {
  let t = 0;
  for (let r = 0; r < e.length; r++) {
    let i = e[r];
    if (t += i.l, n >= t && n <= t + i.h && (n - t) % (i.d || 1) === 0) {
      if (i.e && i.e.indexOf(n - t) !== -1)
        continue;
      return i;
    }
  }
  return null;
}
const ME = Sv("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d"), _E = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((n) => parseInt(n, 16)), RE = [
  { h: 25, s: 32, l: 65 },
  { h: 30, s: 32, e: [23], l: 127 },
  { h: 54, s: 1, e: [48], l: 64, d: 2 },
  { h: 14, s: 1, l: 57, d: 2 },
  { h: 44, s: 1, l: 17, d: 2 },
  { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },
  { h: 16, s: 1, l: 68, d: 2 },
  { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },
  { h: 26, s: 32, e: [17], l: 435 },
  { h: 22, s: 1, l: 71, d: 2 },
  { h: 15, s: 80, l: 40 },
  { h: 31, s: 32, l: 16 },
  { h: 32, s: 1, l: 80, d: 2 },
  { h: 52, s: 1, l: 42, d: 2 },
  { h: 12, s: 1, l: 55, d: 2 },
  { h: 40, s: 1, e: [38], l: 15, d: 2 },
  { h: 14, s: 1, l: 48, d: 2 },
  { h: 37, s: 48, l: 49 },
  { h: 148, s: 1, l: 6351, d: 2 },
  { h: 88, s: 1, l: 160, d: 2 },
  { h: 15, s: 16, l: 704 },
  { h: 25, s: 26, l: 854 },
  { h: 25, s: 32, l: 55915 },
  { h: 37, s: 40, l: 1247 },
  { h: 25, s: -119711, l: 53248 },
  { h: 25, s: -119763, l: 52 },
  { h: 25, s: -119815, l: 52 },
  { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },
  { h: 25, s: -119919, l: 52 },
  { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },
  { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },
  { h: 25, s: -120075, l: 52 },
  { h: 25, s: -120127, l: 52 },
  { h: 25, s: -120179, l: 52 },
  { h: 25, s: -120231, l: 52 },
  { h: 25, s: -120283, l: 52 },
  { h: 25, s: -120335, l: 52 },
  { h: 24, s: -119543, e: [17], l: 56 },
  { h: 24, s: -119601, e: [17], l: 58 },
  { h: 24, s: -119659, e: [17], l: 58 },
  { h: 24, s: -119717, e: [17], l: 58 },
  { h: 24, s: -119775, e: [17], l: 58 }
], PE = b0("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3"), OE = b0("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7"), IE = b0("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", EE), kE = Sv("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
function DE(n) {
  return n.reduce((e, t) => (t.forEach((r) => {
    e.push(r);
  }), e), []);
}
function BE(n) {
  return !!g0(n, ME);
}
function FE(n) {
  let e = g0(n, RE);
  if (e)
    return [n + e.s];
  let t = PE[n];
  if (t)
    return t;
  let r = OE[n];
  if (r)
    return [n + r[0]];
  let i = IE[n];
  return i || null;
}
function NE(n) {
  return !!g0(n, kE);
}
function $E(n) {
  if (n.match(/^[a-z0-9-]*$/i) && n.length <= 59)
    return n.toLowerCase();
  let e = Fc(n);
  e = DE(e.map((r) => {
    if (_E.indexOf(r) >= 0)
      return [];
    if (r >= 65024 && r <= 65039)
      return [];
    let i = FE(r);
    return i || [r];
  })), e = Fc(Nf(e), Qr.NFKC), e.forEach((r) => {
    if (NE(r))
      throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
  }), e.forEach((r) => {
    if (BE(r))
      throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
  });
  let t = Nf(e);
  if (t.substring(0, 1) === "-" || t.substring(2, 4) === "--" || t.substring(t.length - 1) === "-")
    throw new Error("invalid hyphen");
  return t;
}
const LE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  _toEscapedUtf8String: AE,
  toUtf8Bytes: Gt,
  toUtf8CodePoints: Fc,
  toUtf8String: _o,
  Utf8ErrorFuncs: Cv,
  get Utf8ErrorReason() {
    return Mn;
  },
  get UnicodeNormalizationForm() {
    return Qr;
  },
  formatBytes32String: CE,
  parseBytes32String: SE,
  nameprep: $E
}, Symbol.toStringTag, { value: "Module" }));
class UE extends vv {
  constructor(e) {
    super("string", e);
  }
  defaultValue() {
    return "";
  }
  encode(e, t) {
    return super.encode(e, Gt(t));
  }
  decode(e) {
    return _o(super.decode(e));
  }
}
class Bl extends Bi {
  constructor(e, t) {
    let r = !1;
    const i = [];
    e.forEach((a) => {
      a.dynamic && (r = !0), i.push(a.type);
    });
    const s = "tuple(" + i.join(",") + ")";
    super("tuple", s, t, r), this.coders = e;
  }
  defaultValue() {
    const e = [];
    this.coders.forEach((r) => {
      e.push(r.defaultValue());
    });
    const t = this.coders.reduce((r, i) => {
      const s = i.localName;
      return s && (r[s] || (r[s] = 0), r[s]++), r;
    }, {});
    return this.coders.forEach((r, i) => {
      let s = r.localName;
      !s || t[s] !== 1 || (s === "length" && (s = "_length"), e[s] == null && (e[s] = e[i]));
    }), Object.freeze(e);
  }
  encode(e, t) {
    return gv(e, this.coders, t);
  }
  decode(e) {
    return e.coerce(this.name, xv(e, this.coders));
  }
}
const Fl = new U(pl), VE = new RegExp(/^bytes([0-9]*)$/), jE = new RegExp(/^(u?int)([0-9]*)$/);
class Ev {
  constructor(e) {
    z(this, "coerceFunc", e || null);
  }
  _getCoder(e) {
    switch (e.baseType) {
      case "address":
        return new uE(e.name);
      case "bool":
        return new dE(e.name);
      case "string":
        return new UE(e.name);
      case "bytes":
        return new pE(e.name);
      case "array":
        return new cE(this._getCoder(e.arrayChildren), e.arrayLength, e.name);
      case "tuple":
        return new Bl((e.components || []).map((r) => this._getCoder(r)), e.name);
      case "":
        return new hE(e.name);
    }
    let t = e.type.match(jE);
    if (t) {
      let r = parseInt(t[2] || "256");
      return (r === 0 || r > 256 || r % 8 !== 0) && Fl.throwArgumentError("invalid " + t[1] + " bit length", "param", e), new xE(r / 8, t[1] === "int", e.name);
    }
    if (t = e.type.match(VE), t) {
      let r = parseInt(t[1]);
      return (r === 0 || r > 32) && Fl.throwArgumentError("invalid bytes length", "param", e), new fE(r, e.name);
    }
    return Fl.throwArgumentError("invalid type", "type", e.type);
  }
  _getWordSize() {
    return 32;
  }
  _getReader(e, t) {
    return new Bc(e, this._getWordSize(), this.coerceFunc, t);
  }
  _getWriter() {
    return new Ff(this._getWordSize());
  }
  getDefaultValue(e) {
    const t = e.map((i) => this._getCoder(Bt.from(i)));
    return new Bl(t, "_").defaultValue();
  }
  encode(e, t) {
    e.length !== t.length && Fl.throwError("types/values length mismatch", U.errors.INVALID_ARGUMENT, {
      count: { types: e.length, values: t.length },
      value: { types: e, values: t }
    });
    const r = e.map((a) => this._getCoder(Bt.from(a))), i = new Bl(r, "_"), s = this._getWriter();
    return i.encode(s, t), s.data;
  }
  decode(e, t, r) {
    const i = e.map((a) => this._getCoder(Bt.from(a)));
    return new Bl(i, "_").decode(this._getReader(W(t), r));
  }
}
const Mv = new Ev();
function rs(n) {
  return Pe(Gt(n));
}
const _v = "hash/5.7.0";
function x0(n) {
  n = atob(n);
  const e = [];
  for (let t = 0; t < n.length; t++)
    e.push(n.charCodeAt(t));
  return W(e);
}
function Rv(n) {
  n = W(n);
  let e = "";
  for (let t = 0; t < n.length; t++)
    e += String.fromCharCode(n[t]);
  return btoa(e);
}
const zE = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decode: x0,
  encode: Rv
}, Symbol.toStringTag, { value: "Module" }));
function Pv(n, e) {
  e == null && (e = 1);
  const t = [], r = t.forEach, i = function(s, a) {
    r.call(s, function(o) {
      a > 0 && Array.isArray(o) ? i(o, a - 1) : t.push(o);
    });
  };
  return i(n, e), t;
}
function GE(n) {
  const e = {};
  for (let t = 0; t < n.length; t++) {
    const r = n[t];
    e[r[0]] = r[1];
  }
  return e;
}
function WE(n) {
  let e = 0;
  function t() {
    return n[e++] << 8 | n[e++];
  }
  let r = t(), i = 1, s = [0, 1];
  for (let D = 1; D < r; D++)
    s.push(i += t());
  let a = t(), o = e;
  e += a;
  let u = 0, l = 0;
  function p() {
    return u == 0 && (l = l << 8 | n[e++], u = 8), l >> --u & 1;
  }
  const h = 31, b = Math.pow(2, h), C = b >>> 1, v = C >> 1, T = b - 1;
  let w = 0;
  for (let D = 0; D < h; D++)
    w = w << 1 | p();
  let M = [], I = 0, F = b;
  for (; ; ) {
    let D = Math.floor(((w - I + 1) * i - 1) / F), $ = 0, G = r;
    for (; G - $ > 1; ) {
      let ae = $ + G >>> 1;
      D < s[ae] ? G = ae : $ = ae;
    }
    if ($ == 0)
      break;
    M.push($);
    let V = I + Math.floor(F * s[$] / i), K = I + Math.floor(F * s[$ + 1] / i) - 1;
    for (; ((V ^ K) & C) == 0; )
      w = w << 1 & T | p(), V = V << 1 & T, K = K << 1 & T | 1;
    for (; V & ~K & v; )
      w = w & C | w << 1 & T >>> 1 | p(), V = V << 1 ^ C, K = (K ^ C) << 1 | C | 1;
    I = V, F = 1 + K - V;
  }
  let k = r - 4;
  return M.map((D) => {
    switch (D - k) {
      case 3:
        return k + 65792 + (n[o++] << 16 | n[o++] << 8 | n[o++]);
      case 2:
        return k + 256 + (n[o++] << 8 | n[o++]);
      case 1:
        return k + n[o++];
      default:
        return D - 1;
    }
  });
}
function HE(n) {
  let e = 0;
  return () => n[e++];
}
function KE(n) {
  return HE(WE(n));
}
function qE(n) {
  return n & 1 ? ~n >> 1 : n >> 1;
}
function QE(n, e) {
  let t = Array(n);
  for (let r = 0; r < n; r++)
    t[r] = 1 + e();
  return t;
}
function _g(n, e) {
  let t = Array(n);
  for (let r = 0, i = -1; r < n; r++)
    t[r] = i += 1 + e();
  return t;
}
function JE(n, e) {
  let t = Array(n);
  for (let r = 0, i = 0; r < n; r++)
    t[r] = i += qE(e());
  return t;
}
function Nc(n, e) {
  let t = _g(n(), n), r = n(), i = _g(r, n), s = QE(r, n);
  for (let a = 0; a < r; a++)
    for (let o = 0; o < s[a]; o++)
      t.push(i[a] + o);
  return e ? t.map((a) => e[a]) : t;
}
function YE(n) {
  let e = [];
  for (; ; ) {
    let t = n();
    if (t == 0)
      break;
    e.push(ZE(t, n));
  }
  for (; ; ) {
    let t = n() - 1;
    if (t < 0)
      break;
    e.push(e7(t, n));
  }
  return GE(Pv(e));
}
function XE(n) {
  let e = [];
  for (; ; ) {
    let t = n();
    if (t == 0)
      break;
    e.push(t);
  }
  return e;
}
function Ov(n, e, t) {
  let r = Array(n).fill(void 0).map(() => []);
  for (let i = 0; i < e; i++)
    JE(n, t).forEach((s, a) => r[a].push(s));
  return r;
}
function ZE(n, e) {
  let t = 1 + e(), r = e(), i = XE(e), s = Ov(i.length, 1 + n, e);
  return Pv(s.map((a, o) => {
    const u = a[0], l = a.slice(1);
    return Array(i[o]).fill(void 0).map((p, h) => {
      let b = h * r;
      return [u + h * t, l.map((C) => C + b)];
    });
  }));
}
function e7(n, e) {
  let t = 1 + e();
  return Ov(t, 1 + n, e).map((i) => [i[0], i.slice(1)]);
}
function t7(n) {
  let e = Nc(n).sort((r, i) => r - i);
  return t();
  function t() {
    let r = [];
    for (; ; ) {
      let l = Nc(n, e);
      if (l.length == 0)
        break;
      r.push({ set: new Set(l), node: t() });
    }
    r.sort((l, p) => p.set.size - l.set.size);
    let i = n(), s = i % 3;
    i = i / 3 | 0;
    let a = !!(i & 1);
    i >>= 1;
    let o = i == 1, u = i == 2;
    return { branches: r, valid: s, fe0f: a, save: o, check: u };
  }
}
function n7() {
  return KE(x0("AEQF2AO2DEsA2wIrAGsBRABxAN8AZwCcAEwAqgA0AGwAUgByADcATAAVAFYAIQAyACEAKAAYAFgAGwAjABQAMAAmADIAFAAfABQAKwATACoADgAbAA8AHQAYABoAGQAxADgALAAoADwAEwA9ABMAGgARAA4ADwAWABMAFgAIAA8AHgQXBYMA5BHJAS8JtAYoAe4AExozi0UAH21tAaMnBT8CrnIyhrMDhRgDygIBUAEHcoFHUPe8AXBjAewCjgDQR8IICIcEcQLwATXCDgzvHwBmBoHNAqsBdBcUAykgDhAMShskMgo8AY8jqAQfAUAfHw8BDw87MioGlCIPBwZCa4ELatMAAMspJVgsDl8AIhckSg8XAHdvTwBcIQEiDT4OPhUqbyECAEoAS34Aej8Ybx83JgT/Xw8gHxZ/7w8RICxPHA9vBw+Pfw8PHwAPFv+fAsAvCc8vEr8ivwD/EQ8Bol8OEBa/A78hrwAPCU8vESNvvwWfHwNfAVoDHr+ZAAED34YaAdJPAK7PLwSEgDLHAGo1Pz8Pvx9fUwMrpb8O/58VTzAPIBoXIyQJNF8hpwIVAT8YGAUADDNBaX3RAMomJCg9EhUeA29MABsZBTMNJipjOhc19gcIDR8bBwQHEggCWi6DIgLuAQYA+BAFCha3A5XiAEsqM7UFFgFLhAMjFTMYE1Klnw74nRVBG/ASCm0BYRN/BrsU3VoWy+S0vV8LQx+vN8gF2AC2AK5EAWwApgYDKmAAroQ0NDQ0AT+OCg7wAAIHRAbpNgVcBV0APTA5BfbPFgMLzcYL/QqqA82eBALKCjQCjqYCht0/k2+OAsXQAoP3ASTKDgDw6ACKAUYCMpIKJpRaAE4A5womABzZvs0REEKiACIQAd5QdAECAj4Ywg/wGqY2AVgAYADYvAoCGAEubA0gvAY2ALAAbpbvqpyEAGAEpgQAJgAG7gAgAEACmghUFwCqAMpAINQIwC4DthRAAPcycKgApoIdABwBfCisABoATwBqASIAvhnSBP8aH/ECeAKXAq40NjgDBTwFYQU6AXs3oABgAD4XNgmcCY1eCl5tIFZeUqGgyoNHABgAEQAaABNwWQAmABMATPMa3T34ADldyprmM1M2XociUQgLzvwAXT3xABgAEQAaABNwIGFAnADD8AAgAD4BBJWzaCcIAIEBFMAWwKoAAdq9BWAF5wLQpALEtQAKUSGkahR4GnJM+gsAwCgeFAiUAECQ0BQuL8AAIAAAADKeIheclvFqQAAETr4iAMxIARMgAMIoHhQIAn0E0pDQFC4HhznoAAAAIAI2C0/4lvFqQAAETgBJJwYCAy4ABgYAFAA8MBKYEH4eRhTkAjYeFcgACAYAeABsOqyQ5gRwDayqugEgaIIAtgoACgDmEABmBAWGme5OBJJA2m4cDeoAmITWAXwrMgOgAGwBCh6CBXYF1Tzg1wKAAFdiuABRAFwAXQBsAG8AdgBrAHYAbwCEAHEwfxQBVE5TEQADVFhTBwBDANILAqcCzgLTApQCrQL6vAAMAL8APLhNBKkE6glGKTAU4Dr4N2EYEwBCkABKk8rHAbYBmwIoAiU4Ajf/Aq4CowCAANIChzgaNBsCsTgeODcFXrgClQKdAqQBiQGYAqsCsjTsNHsfNPA0ixsAWTWiOAMFPDQSNCk2BDZHNow2TTZUNhk28Jk9VzI3QkEoAoICoQKwAqcAQAAxBV4FXbS9BW47YkIXP1ciUqs05DS/FwABUwJW11e6nHuYZmSh/RAYA8oMKvZ8KASoUAJYWAJ6ILAsAZSoqjpgA0ocBIhmDgDWAAawRDQoAAcuAj5iAHABZiR2AIgiHgCaAU68ACxuHAG0ygM8MiZIAlgBdF4GagJqAPZOHAMuBgoATkYAsABiAHgAMLoGDPj0HpKEBAAOJgAuALggTAHWAeAMEDbd20Uege0ADwAWADkAQgA9OHd+2MUQZBBhBgNNDkxxPxUQArEPqwvqERoM1irQ090ANK4H8ANYB/ADWANYB/AH8ANYB/ADWANYA1gDWBwP8B/YxRBkD00EcgWTBZAE2wiIJk4RhgctCNdUEnQjHEwDSgEBIypJITuYMxAlR0wRTQgIATZHbKx9PQNMMbBU+pCnA9AyVDlxBgMedhKlAC8PeCE1uk6DekxxpQpQT7NX9wBFBgASqwAS5gBJDSgAUCwGPQBI4zTYABNGAE2bAE3KAExdGABKaAbgAFBXAFCOAFBJABI2SWdObALDOq0//QomCZhvwHdTBkIQHCemEPgMNAG2ATwN7kvZBPIGPATKH34ZGg/OlZ0Ipi3eDO4m5C6igFsj9iqEBe5L9TzeC05RaQ9aC2YJ5DpkgU8DIgEOIowK3g06CG4Q9ArKbA3mEUYHOgPWSZsApgcCCxIdNhW2JhFirQsKOXgG/Br3C5AmsBMqev0F1BoiBk4BKhsAANAu6IWxWjJcHU9gBgQLJiPIFKlQIQ0mQLh4SRocBxYlqgKSQ3FKiFE3HpQh9zw+DWcuFFF9B/Y8BhlQC4I8n0asRQ8R0z6OPUkiSkwtBDaALDAnjAnQD4YMunxzAVoJIgmyDHITMhEYN8YIOgcaLpclJxYIIkaWYJsE+KAD9BPSAwwFQAlCBxQDthwuEy8VKgUOgSXYAvQ21i60ApBWgQEYBcwPJh/gEFFH4Q7qCJwCZgOEJewALhUiABginAhEZABgj9lTBi7MCMhqbSN1A2gU6GIRdAeSDlgHqBw0FcAc4nDJXgyGCSiksAlcAXYJmgFgBOQICjVcjKEgQmdUi1kYnCBiQUBd/QIyDGYVoES+h3kCjA9sEhwBNgF0BzoNAgJ4Ee4RbBCWCOyGBTW2M/k6JgRQIYQgEgooA1BszwsoJvoM+WoBpBJjAw00PnfvZ6xgtyUX/gcaMsZBYSHyC5NPzgydGsIYQ1QvGeUHwAP0GvQn60FYBgADpAQUOk4z7wS+C2oIjAlAAEoOpBgH2BhrCnKM0QEyjAG4mgNYkoQCcJAGOAcMAGgMiAV65gAeAqgIpAAGANADWAA6Aq4HngAaAIZCAT4DKDABIuYCkAOUCDLMAZYwAfQqBBzEDBYA+DhuSwLDsgKAa2ajBd5ZAo8CSjYBTiYEBk9IUgOwcuIA3ABMBhTgSAEWrEvMG+REAeBwLADIAPwABjYHBkIBzgH0bgC4AWALMgmjtLYBTuoqAIQAFmwB2AKKAN4ANgCA8gFUAE4FWvoF1AJQSgESMhksWGIBvAMgATQBDgB6BsyOpsoIIARuB9QCEBwV4gLvLwe2AgMi4BPOQsYCvd9WADIXUu5eZwqoCqdeaAC0YTQHMnM9UQAPH6k+yAdy/BZIiQImSwBQ5gBQQzSaNTFWSTYBpwGqKQK38AFtqwBI/wK37gK3rQK3sAK6280C0gK33AK3zxAAUEIAUD9SklKDArekArw5AEQAzAHCO147WTteO1k7XjtZO147WTteO1kDmChYI03AVU0oJqkKbV9GYewMpw3VRMk6ShPcYFJgMxPJLbgUwhXPJVcZPhq9JwYl5VUKDwUt1GYxCC00dhe9AEApaYNCY4ceMQpMHOhTklT5LRwAskujM7ANrRsWREEFSHXuYisWDwojAmSCAmJDXE6wXDchAqH4AmiZAmYKAp+FOBwMAmY8AmYnBG8EgAN/FAN+kzkHOXgYOYM6JCQCbB4CMjc4CwJtyAJtr/CLADRoRiwBaADfAOIASwYHmQyOAP8MwwAOtgJ3MAJ2o0ACeUxEAni7Hl3cRa9G9AJ8QAJ6yQJ9CgJ88UgBSH5kJQAsFklZSlwWGErNAtECAtDNSygDiFADh+dExpEzAvKiXQQDA69Lz0wuJgTQTU1NsAKLQAKK2cIcCB5EaAa4Ao44Ao5dQZiCAo7aAo5deVG1UzYLUtVUhgKT/AKTDQDqAB1VH1WwVdEHLBwplocy4nhnRTw6ApegAu+zWCKpAFomApaQApZ9nQCqWa1aCoJOADwClrYClk9cRVzSApnMApllXMtdCBoCnJw5wzqeApwXAp+cAp65iwAeEDIrEAKd8gKekwC2PmE1YfACntQCoG8BqgKeoCACnk+mY8lkKCYsAiewAiZ/AqD8AqBN2AKmMAKlzwKoAAB+AqfzaH1osgAESmodatICrOQCrK8CrWgCrQMCVx4CVd0CseLYAx9PbJgCsr4OArLpGGzhbWRtSWADJc4Ctl08QG6RAylGArhfArlIFgK5K3hwN3DiAr0aAy2zAzISAr6JcgMDM3ICvhtzI3NQAsPMAsMFc4N0TDZGdOEDPKgDPJsDPcACxX0CxkgCxhGKAshqUgLIRQLJUALJLwJkngLd03h6YniveSZL0QMYpGcDAmH1GfSVJXsMXpNevBICz2wCz20wTFTT9BSgAMeuAs90ASrrA04TfkwGAtwoAtuLAtJQA1JdA1NgAQIDVY2AikABzBfuYUZ2AILPg44C2sgC2d+EEYRKpz0DhqYAMANkD4ZyWvoAVgLfZgLeuXR4AuIw7RUB8zEoAfScAfLTiALr9ALpcXoAAur6AurlAPpIAboC7ooC652Wq5cEAu5AA4XhmHpw4XGiAvMEAGoDjheZlAL3FAORbwOSiAL3mQL52gL4Z5odmqy8OJsfA52EAv77ARwAOp8dn7QDBY4DpmsDptoA0sYDBmuhiaIGCgMMSgFgASACtgNGAJwEgLpoBgC8BGzAEowcggCEDC6kdjoAJAM0C5IKRoABZCgiAIzw3AYBLACkfng9ogigkgNmWAN6AEQCvrkEVqTGAwCsBRbAA+4iQkMCHR072jI2PTbUNsk2RjY5NvA23TZKNiU3EDcZN5I+RTxDRTBCJkK5VBYKFhZfwQCWygU3AJBRHpu+OytgNxa61A40GMsYjsn7BVwFXQVcBV0FaAVdBVwFXQVcBV0FXAVdBVwFXUsaCNyKAK4AAQUHBwKU7oICoW1e7jAEzgPxA+YDwgCkBFDAwADABKzAAOxFLhitA1UFTDeyPkM+bj51QkRCuwTQWWQ8X+0AWBYzsACNA8xwzAGm7EZ/QisoCTAbLDs6fnLfb8H2GccsbgFw13M1HAVkBW/Jxsm9CNRO8E8FDD0FBQw9FkcClOYCoMFegpDfADgcMiA2AJQACB8AsigKAIzIEAJKeBIApY5yPZQIAKQiHb4fvj5BKSRPQrZCOz0oXyxgOywfKAnGbgMClQaCAkILXgdeCD9IIGUgQj5fPoY+dT52Ao5CM0dAX9BTVG9SDzFwWTQAbxBzJF/lOEIQQglCCkKJIAls5AcClQICoKPMODEFxhi6KSAbiyfIRrMjtCgdWCAkPlFBIitCsEJRzAbMAV/OEyQzDg0OAQQEJ36i328/Mk9AybDJsQlq3tDRApUKAkFzXf1d/j9uALYP6hCoFgCTGD8kPsFKQiobrm0+zj0KSD8kPnVCRBwMDyJRTHFgMTJa5rwXQiQ2YfI/JD7BMEJEHGINTw4TOFlIRzwJO0icMQpyPyQ+wzJCRBv6DVgnKB01NgUKj2bwYzMqCoBkznBgEF+zYDIocwRIX+NgHj4HICNfh2C4CwdwFWpTG/lgUhYGAwRfv2Ts8mAaXzVgml/XYIJfuWC4HI1gUF9pYJZgMR6ilQHMAOwLAlDRefC0in4AXAEJA6PjCwc0IamOANMMCAECRQDFNRTZBgd+CwQlRA+r6+gLBDEFBnwUBXgKATIArwAGRAAHA3cDdAN2A3kDdwN9A3oDdQN7A30DfAN4A3oDfQAYEAAlAtYASwMAUAFsAHcKAHcAmgB3AHUAdQB2AHVu8UgAygDAAHcAdQB1AHYAdQALCgB3AAsAmgB3AAsCOwB3AAtu8UgAygDAAHgKAJoAdwB3AHUAdQB2AHUAeAB1AHUAdgB1bvFIAMoAwAALCgCaAHcACwB3AAsCOwB3AAtu8UgAygDAAH4ACwGgALcBpwC6AahdAu0COwLtbvFIAMoAwAALCgCaAu0ACwLtAAsCOwLtAAtu8UgAygDAA24ACwNvAAu0VsQAAzsAABCkjUIpAAsAUIusOggWcgMeBxVsGwL67U/2HlzmWOEeOgALASvuAAseAfpKUpnpGgYJDCIZM6YyARUE9ThqAD5iXQgnAJYJPnOzw0ZAEZxEKsIAkA4DhAHnTAIDxxUDK0lxCQlPYgIvIQVYJQBVqE1GakUAKGYiDToSBA1EtAYAXQJYAIF8GgMHRyAAIAjOe9YncekRAA0KACUrjwE7Ayc6AAYWAqaiKG4McEcqANoN3+Mg9TwCBhIkuCny+JwUQ29L008JluRxu3K+oAdqiHOqFH0AG5SUIfUJ5SxCGfxdipRzqTmT4V5Zb+r1Uo4Vm+NqSSEl2mNvR2JhIa8SpYO6ntdwFXHCWTCK8f2+Hxo7uiG3drDycAuKIMP5bhi06ACnqArH1rz4Rqg//lm6SgJGEVbF9xJHISaR6HxqxSnkw6shDnelHKNEfGUXSJRJ1GcsmtJw25xrZMDK9gXSm1/YMkdX4/6NKYOdtk/NQ3/NnDASjTc3fPjIjW/5sVfVObX2oTDWkr1dF9f3kxBsD3/3aQO8hPfRz+e0uEiJqt1161griu7gz8hDDwtpy+F+BWtefnKHZPAxcZoWbnznhJpy0e842j36bcNzGnIEusgGX0a8ZxsnjcSsPDZ09yZ36fCQbriHeQ72JRMILNl6ePPf2HWoVwgWAm1fb3V2sAY0+B6rAXqSwPBgseVmoqsBTSrm91+XasMYYySI8eeRxH3ZvHkMz3BQ5aJ3iUVbYPNM3/7emRtjlsMgv/9VyTsyt/mK+8fgWeT6SoFaclXqn42dAIsvAarF5vNNWHzKSkKQ/8Hfk5ZWK7r9yliOsooyBjRhfkHP4Q2DkWXQi6FG/9r/IwbmkV5T7JSopHKn1pJwm9tb5Ot0oyN1Z2mPpKXHTxx2nlK08fKk1hEYA8WgVVWL5lgx0iTv+KdojJeU23ZDjmiubXOxVXJKKi2Wjuh2HLZOFLiSC7Tls5SMh4f+Pj6xUSrNjFqLGehRNB8lC0QSLNmkJJx/wSG3MnjE9T1CkPwJI0wH2lfzwETIiVqUxg0dfu5q39Gt+hwdcxkhhNvQ4TyrBceof3Mhs/IxFci1HmHr4FMZgXEEczPiGCx0HRwzAqDq2j9AVm1kwN0mRVLWLylgtoPNapF5cY4Y1wJh/e0BBwZj44YgZrDNqvD/9Hv7GFYdUQeDJuQ3EWI4HaKqavU1XjC/n41kT4L79kqGq0kLhdTZvgP3TA3fS0ozVz+5piZsoOtIvBUFoMKbNcmBL6YxxaUAusHB38XrS8dQMnQwJfUUkpRoGr5AUeWicvBTzyK9g77+yCkf5PAysL7r/JjcZgrbvRpMW9iyaxZvKO6ceZN2EwIxKwVFPuvFuiEPGCoagbMo+SpydLrXqBzNCDGFCrO/rkcwa2xhokQZ5CdZ0AsU3JfSqJ6n5I14YA+P/uAgfhPU84Tlw7cEFfp7AEE8ey4sP12PTt4Cods1GRgDOB5xvyiR5m+Bx8O5nBCNctU8BevfV5A08x6RHd5jcwPTMDSZJOedIZ1cGQ704lxbAzqZOP05ZxaOghzSdvFBHYqomATARyAADK4elP8Ly3IrUZKfWh23Xy20uBUmLS4Pfagu9+oyVa2iPgqRP3F2CTUsvJ7+RYnN8fFZbU/HVvxvcFFDKkiTqV5UBZ3Gz54JAKByi9hkKMZJvuGgcSYXFmw08UyoQyVdfTD1/dMkCHXcTGAKeROgArsvmRrQTLUOXioOHGK2QkjHuoYFgXciZoTJd6Fs5q1QX1G+p/e26hYsEf7QZD1nnIyl/SFkNtYYmmBhpBrxl9WbY0YpHWRuw2Ll/tj9mD8P4snVzJl4F9J+1arVeTb9E5r2ILH04qStjxQNwn3m4YNqxmaNbLAqW2TN6LidwuJRqS+NXbtqxoeDXpxeGWmxzSkWxjkyCkX4NQRme6q5SAcC+M7+9ETfA/EwrzQajKakCwYyeunP6ZFlxU2oMEn1Pz31zeStW74G406ZJFCl1wAXIoUKkWotYEpOuXB1uVNxJ63dpJEqfxBeptwIHNrPz8BllZoIcBoXwgfJ+8VAUnVPvRvexnw0Ma/WiGYuJO5y8QTvEYBigFmhUxY5RqzE8OcywN/8m4UYrlaniJO75XQ6KSo9+tWHlu+hMi0UVdiKQp7NelnoZUzNaIyBPVeOwK6GNp+FfHuPOoyhaWuNvTYFkvxscMQWDh+zeFCFkgwbXftiV23ywJ4+uwRqmg9k3KzwIQpzppt8DBBOMbrqwQM5Gb05sEwdKzMiAqOloaA/lr0KA+1pr0/+HiWoiIjHA/wir2nIuS3PeU/ji3O6ZwoxcR1SZ9FhtLC5S0FIzFhbBWcGVP/KpxOPSiUoAdWUpqKH++6Scz507iCcxYI6rdMBICPJZea7OcmeFw5mObJSiqpjg2UoWNIs+cFhyDSt6geV5qgi3FunmwwDoGSMgerFOZGX1m0dMCYo5XOruxO063dwENK9DbnVM9wYFREzh4vyU1WYYJ/LRRp6oxgjqP/X5a8/4Af6p6NWkQferzBmXme0zY/4nwMJm/wd1tIqSwGz+E3xPEAOoZlJit3XddD7/BT1pllzOx+8bmQtANQ/S6fZexc6qi3W+Q2xcmXTUhuS5mpHQRvcxZUN0S5+PL9lXWUAaRZhEH8hTdAcuNMMCuVNKTEGtSUKNi3O6KhSaTzck8csZ2vWRZ+d7mW8c4IKwXIYd25S/zIftPkwPzufjEvOHWVD1m+FjpDVUTV0DGDuHj6QnaEwLu/dEgdLQOg9E1Sro9XHJ8ykLAwtPu+pxqKDuFexqON1sKQm7rwbE1E68UCfA/erovrTCG+DBSNg0l4goDQvZN6uNlbyLpcZAwj2UclycvLpIZMgv4yRlpb3YuMftozorbcGVHt/VeDV3+Fdf1TP0iuaCsPi2G4XeGhsyF1ubVDxkoJhmniQ0/jSg/eYML9KLfnCFgISWkp91eauR3IQvED0nAPXK+6hPCYs+n3+hCZbiskmVMG2da+0EsZPonUeIY8EbfusQXjsK/eFDaosbPjEfQS0RKG7yj5GG69M7MeO1HmiUYocgygJHL6M1qzUDDwUSmr99V7Sdr2F3JjQAJY+F0yH33Iv3+C9M38eML7gTgmNu/r2bUMiPvpYbZ6v1/IaESirBHNa7mPKn4dEmYg7v/+HQgPN1G79jBQ1+soydfDC2r+h2Bl/KIc5KjMK7OH6nb1jLsNf0EHVe2KBiE51ox636uyG6Lho0t3J34L5QY/ilE3mikaF4HKXG1mG1rCevT1Vv6GavltxoQe/bMrpZvRggnBxSEPEeEzkEdOxTnPXHVjUYdw8JYvjB/o7Eegc3Ma+NUxLLnsK0kJlinPmUHzHGtrk5+CAbVzFOBqpyy3QVUnzTDfC/0XD94/okH+OB+i7g9lolhWIjSnfIb+Eq43ZXOWmwvjyV/qqD+t0e+7mTEM74qP/Ozt8nmC7mRpyu63OB4KnUzFc074SqoyPUAgM+/TJGFo6T44EHnQU4X4z6qannVqgw/U7zCpwcmXV1AubIrvOmkKHazJAR55ePjp5tLBsN8vAqs3NAHdcEHOR2xQ0lsNAFzSUuxFQCFYvXLZJdOj9p4fNq6p0HBGUik2YzaI4xySy91KzhQ0+q1hjxvImRwPRf76tChlRkhRCi74NXZ9qUNeIwP+s5p+3m5nwPdNOHgSLD79n7O9m1n1uDHiMntq4nkYwV5OZ1ENbXxFd4PgrlvavZsyUO4MqYlqqn1O8W/I1dEZq5dXhrbETLaZIbC2Kj/Aa/QM+fqUOHdf0tXAQ1huZ3cmWECWSXy/43j35+Mvq9xws7JKseriZ1pEWKc8qlzNrGPUGcVgOa9cPJYIJsGnJTAUsEcDOEVULO5x0rXBijc1lgXEzQQKhROf8zIV82w8eswc78YX11KYLWQRcgHNJElBxfXr72lS2RBSl07qTKorO2uUDZr3sFhYsvnhLZn0A94KRzJ/7DEGIAhW5ZWFpL8gEwu1aLA9MuWZzNwl8Oze9Y+bX+v9gywRVnoB5I/8kXTXU3141yRLYrIOOz6SOnyHNy4SieqzkBXharjfjqq1q6tklaEbA8Qfm2DaIPs7OTq/nvJBjKfO2H9bH2cCMh1+5gspfycu8f/cuuRmtDjyqZ7uCIMyjdV3a+p3fqmXsRx4C8lujezIFHnQiVTXLXuI1XrwN3+siYYj2HHTvESUx8DlOTXpak9qFRK+L3mgJ1WsD7F4cu1aJoFoYQnu+wGDMOjJM3kiBQWHCcvhJ/HRdxodOQp45YZaOTA22Nb4XKCVxqkbwMYFhzYQYIAnCW8FW14uf98jhUG2zrKhQQ0q0CEq0t5nXyvUyvR8DvD69LU+g3i+HFWQMQ8PqZuHD+sNKAV0+M6EJC0szq7rEr7B5bQ8BcNHzvDMc9eqB5ZCQdTf80Obn4uzjwpYU7SISdtV0QGa9D3Wrh2BDQtpBKxaNFV+/Cy2P/Sv+8s7Ud0Fd74X4+o/TNztWgETUapy+majNQ68Lq3ee0ZO48VEbTZYiH1Co4OlfWef82RWeyUXo7woM03PyapGfikTnQinoNq5z5veLpeMV3HCAMTaZmA1oGLAn7XS3XYsz+XK7VMQsc4XKrmDXOLU/pSXVNUq8dIqTba///3x6LiLS6xs1xuCAYSfcQ3+rQgmu7uvf3THKt5Ooo97TqcbRqxx7EASizaQCBQllG/rYxVapMLgtLbZS64w1MDBMXX+PQpBKNwqUKOf2DDRDUXQf9EhOS0Qj4nTmlA8dzSLz/G1d+Ud8MTy/6ghhdiLpeerGY/UlDOfiuqFsMUU5/UYlP+BAmgRLuNpvrUaLlVkrqDievNVEAwF+4CoM1MZTmjxjJMsKJq+u8Zd7tNCUFy6LiyYXRJQ4VyvEQFFaCGKsxIwQkk7EzZ6LTJq2hUuPhvAW+gQnSG6J+MszC+7QCRHcnqDdyNRJ6T9xyS87A6MDutbzKGvGktpbXqtzWtXb9HsfK2cBMomjN9a4y+TaJLnXxAeX/HWzmf4cR4vALt/P4w4qgKY04ml4ZdLOinFYS6cup3G/1ie4+t1eOnpBNlqGqs75ilzkT4+DsZQxNvaSKJ//6zIbbk/M7LOhFmRc/1R+kBtz7JFGdZm/COotIdvQoXpTqP/1uqEUmCb/QWoGLMwO5ANcHzxdY48IGP5+J+zKOTBFZ4Pid+GTM+Wq12MV/H86xEJptBa6T+p3kgpwLedManBHC2GgNrFpoN2xnrMz9WFWX/8/ygSBkavq2Uv7FdCsLEYLu9LLIvAU0bNRDtzYl+/vXmjpIvuJFYjmI0im6QEYqnIeMsNjXG4vIutIGHijeAG/9EDBozKV5cldkHbLxHh25vT+ZEzbhXlqvpzKJwcEgfNwLAKFeo0/pvEE10XDB+EXRTXtSzJozQKFFAJhMxYkVaCW+E9AL7tMeU8acxidHqzb6lX4691UsDpy/LLRmT+epgW56+5Cw8tB4kMUv6s9lh3eRKbyGs+H/4mQMaYzPTf2OOdokEn+zzgvoD3FqNKk8QqGAXVsqcGdXrT62fSPkR2vROFi68A6se86UxRUk4cajfPyCC4G5wDhD+zNq4jodQ4u4n/m37Lr36n4LIAAsVr02dFi9AiwA81MYs2rm4eDlDNmdMRvEKRHfBwW5DdMNp0jPFZMeARqF/wL4XBfd+EMLBfMzpH5GH6NaW+1vrvMdg+VxDzatk3MXgO3ro3P/DpcC6+Mo4MySJhKJhSR01SGGGp5hPWmrrUgrv3lDnP+HhcI3nt3YqBoVAVTBAQT5iuhTg8nvPtd8ZeYj6w1x6RqGUBrSku7+N1+BaasZvjTk64RoIDlL8brpEcJx3OmY7jLoZsswdtmhfC/G21llXhITOwmvRDDeTTPbyASOa16cF5/A1fZAidJpqju3wYAy9avPR1ya6eNp9K8XYrrtuxlqi+bDKwlfrYdR0RRiKRVTLOH85+ZY7XSmzRpfZBJjaTa81VDcJHpZnZnSQLASGYW9l51ZV/h7eVzTi3Hv6hUsgc/51AqJRTkpbFVLXXszoBL8nBX0u/0jBLT8nH+fJePbrwURT58OY+UieRjd1vs04w0VG5VN2U6MoGZkQzKN/ptz0Q366dxoTGmj7i1NQGHi9GgnquXFYdrCfZBmeb7s0T6yrdlZH5cZuwHFyIJ/kAtGsTg0xH5taAAq44BAk1CPk9KVVbqQzrCUiFdF/6gtlPQ8bHHc1G1W92MXGZ5HEHftyLYs8mbD/9xYRUWkHmlM0zC2ilJlnNgV4bfALpQghxOUoZL7VTqtCHIaQSXm+YUMnpkXybnV+A6xlm2CVy8fn0Xlm2XRa0+zzOa21JWWmixfiPMSCZ7qA4rS93VN3pkpF1s5TonQjisHf7iU9ZGvUPOAKZcR1pbeVf/Ul7OhepGCaId9wOtqo7pJ7yLcBZ0pFkOF28y4zEI/kcUNmutBHaQpBdNM8vjCS6HZRokkeo88TBAjGyG7SR+6vUgTcyK9Imalj0kuxz0wmK+byQU11AiJFk/ya5dNduRClcnU64yGu/ieWSeOos1t3ep+RPIWQ2pyTYVbZltTbsb7NiwSi3AV+8KLWk7LxCnfZUetEM8ThnsSoGH38/nyAwFguJp8FjvlHtcWZuU4hPva0rHfr0UhOOJ/F6vS62FW7KzkmRll2HEc7oUq4fyi5T70Vl7YVIfsPHUCdHesf9Lk7WNVWO75JDkYbMI8TOW8JKVtLY9d6UJRITO8oKo0xS+o99Yy04iniGHAaGj88kEWgwv0OrHdY/nr76DOGNS59hXCGXzTKUvDl9iKpLSWYN1lxIeyywdNpTkhay74w2jFT6NS8qkjo5CxA1yfSYwp6AJIZNKIeEK5PJAW7ORgWgwp0VgzYpqovMrWxbu+DGZ6Lhie1RAqpzm8VUzKJOH3mCzWuTOLsN3VT/dv2eeYe9UjbR8YTBsLz7q60VN1sU51k+um1f8JxD5pPhbhSC8rRaB454tmh6YUWrJI3+GWY0qeWioj/tbkYITOkJaeuGt4JrJvHA+l0Gu7kY7XOaa05alMnRWVCXqFgLIwSY4uF59Ue5SU4QKuc/HamDxbr0x6csCetXGoP7Qn1Bk/J9DsynO/UD6iZ1Hyrz+jit0hDCwi/E9OjgKTbB3ZQKQ/0ZOvevfNHG0NK4Aj3Cp7NpRk07RT1i/S0EL93Ag8GRgKI9CfpajKyK6+Jj/PI1KO5/85VAwz2AwzP8FTBb075IxCXv6T9RVvWT2tUaqxDS92zrGUbWzUYk9mSs82pECH+fkqsDt93VW++4YsR/dHCYcQSYTO/KaBMDj9LSD/J/+z20Kq8XvZUAIHtm9hRPP3ItbuAu2Hm5lkPs92pd7kCxgRs0xOVBnZ13ccdA0aunrwv9SdqElJRC3g+oCu+nXyCgmXUs9yMjTMAIHfxZV+aPKcZeUBWt057Xo85Ks1Ir5gzEHCWqZEhrLZMuF11ziGtFQUds/EESajhagzcKsxamcSZxGth4UII+adPhQkUnx2WyN+4YWR+r3f8MnkyGFuR4zjzxJS8WsQYR5PTyRaD9ixa6Mh741nBHbzfjXHskGDq179xaRNrCIB1z1xRfWfjqw2pHc1zk9xlPpL8sQWAIuETZZhbnmL54rceXVNRvUiKrrqIkeogsl0XXb17ylNb0f4GA9Wd44vffEG8FSZGHEL2fbaTGRcSiCeA8PmA/f6Hz8HCS76fXUHwgwkzSwlI71ekZ7Fapmlk/KC+Hs8hUcw3N2LN5LhkVYyizYFl/uPeVP5lsoJHhhfWvvSWruCUW1ZcJOeuTbrDgywJ/qG07gZJplnTvLcYdNaH0KMYOYMGX+rB4NGPFmQsNaIwlWrfCezxre8zXBrsMT+edVLbLqN1BqB76JH4BvZTqUIMfGwPGEn+EnmTV86fPBaYbFL3DFEhjB45CewkXEAtJxk4/Ms2pPXnaRqdky0HOYdcUcE2zcXq4vaIvW2/v0nHFJH2XXe22ueDmq/18XGtELSq85j9X8q0tcNSSKJIX8FTuJF/Pf8j5PhqG2u+osvsLxYrvvfeVJL+4tkcXcr9JV7v0ERmj/X6fM3NC4j6dS1+9Umr2oPavqiAydTZPLMNRGY23LO9zAVDly7jD+70G5TPPLdhRIl4WxcYjLnM+SNcJ26FOrkrISUtPObIz5Zb3AG612krnpy15RMW+1cQjlnWFI6538qky9axd2oJmHIHP08KyP0ubGO+TQNOYuv2uh17yCIvR8VcStw7o1g0NM60sk+8Tq7YfIBJrtp53GkvzXH7OA0p8/n/u1satf/VJhtR1l8Wa6Gmaug7haSpaCaYQax6ta0mkutlb+eAOSG1aobM81D9A4iS1RRlzBBoVX6tU1S6WE2N9ORY6DfeLRC4l9Rvr5h95XDWB2mR1d4WFudpsgVYwiTwT31ljskD8ZyDOlm5DkGh9N/UB/0AI5Xvb8ZBmai2hQ4BWMqFwYnzxwB26YHSOv9WgY3JXnvoN+2R4rqGVh/LLDMtpFP+SpMGJNWvbIl5SOodbCczW2RKleksPoUeGEzrjtKHVdtZA+kfqO+rVx/iclCqwoopepvJpSTDjT+b9GWylGRF8EDbGlw6eUzmJM95Ovoz+kwLX3c2fTjFeYEsE7vUZm3mqdGJuKh2w9/QGSaqRHs99aScGOdDqkFcACoqdbBoQqqjamhH6Q9ng39JCg3lrGJwd50Qk9ovnqBTr8MME7Ps2wiVfygUmPoUBJJfJWX5Nda0nuncbFkA=="));
}
const _d = n7(), r7 = new Set(Nc(_d)), i7 = new Set(Nc(_d)), s7 = YE(_d), a7 = t7(_d), Rg = 45, Pg = 95;
function Iv(n) {
  return Fc(n);
}
function o7(n) {
  return n.filter((e) => e != 65039);
}
function kv(n) {
  for (let e of n.split(".")) {
    let t = Iv(e);
    try {
      for (let r = t.lastIndexOf(Pg) - 1; r >= 0; r--)
        if (t[r] !== Pg)
          throw new Error("underscore only allowed at start");
      if (t.length >= 4 && t.every((r) => r < 128) && t[2] === Rg && t[3] === Rg)
        throw new Error("invalid label extension");
    } catch (r) {
      throw new Error(`Invalid label "${e}": ${r.message}`);
    }
  }
  return n;
}
function u7(n) {
  return kv(l7(n, o7));
}
function l7(n, e) {
  let t = Iv(n).reverse(), r = [];
  for (; t.length; ) {
    let i = d7(t);
    if (i) {
      r.push(...e(i));
      continue;
    }
    let s = t.pop();
    if (r7.has(s)) {
      r.push(s);
      continue;
    }
    if (i7.has(s))
      continue;
    let a = s7[s];
    if (a) {
      r.push(...a);
      continue;
    }
    throw new Error(`Disallowed codepoint: 0x${s.toString(16).toUpperCase()}`);
  }
  return kv(c7(String.fromCodePoint(...r)));
}
function c7(n) {
  return n.normalize("NFC");
}
function d7(n, e) {
  var t;
  let r = a7, i, s, a = [], o = n.length;
  for (e && (e.length = 0); o; ) {
    let u = n[--o];
    if (r = (t = r.branches.find((l) => l.set.has(u))) === null || t === void 0 ? void 0 : t.node, !r)
      break;
    if (r.save)
      s = u;
    else if (r.check && u === s)
      break;
    a.push(u), r.fe0f && (a.push(65039), o > 0 && n[o - 1] == 65039 && o--), r.valid && (i = a.slice(), r.valid == 2 && i.splice(1, 1), e && e.push(...n.slice(o).reverse()), n.length = o);
  }
  return i;
}
const p7 = new U(_v), Dv = new Uint8Array(32);
Dv.fill(0);
function Og(n) {
  if (n.length === 0)
    throw new Error("invalid ENS name; empty component");
  return n;
}
function Rd(n) {
  const e = Gt(u7(n)), t = [];
  if (n.length === 0)
    return t;
  let r = 0;
  for (let i = 0; i < e.length; i++)
    e[i] === 46 && (t.push(Og(e.slice(r, i))), r = i + 1);
  if (r >= e.length)
    throw new Error("invalid ENS name; empty component");
  return t.push(Og(e.slice(r))), t;
}
function f7(n) {
  return Rd(n).map((e) => _o(e)).join(".");
}
function h7(n) {
  try {
    return Rd(n).length !== 0;
  } catch {
  }
  return !1;
}
function y7(n) {
  typeof n != "string" && p7.throwArgumentError("invalid ENS name; not a string", "name", n);
  let e = Dv;
  const t = Rd(n);
  for (; t.length; )
    e = Pe(Rt([e, Pe(t.pop())]));
  return J(e);
}
function m7(n) {
  return J(Rt(Rd(n).map((e) => {
    if (e.length > 63)
      throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
    const t = new Uint8Array(e.length + 1);
    return t.set(e, 1), t[0] = t.length - 1, t;
  }))) + "00";
}
const Bv = `Ethereum Signed Message:
`;
function v0(n) {
  return typeof n == "string" && (n = Gt(n)), Pe(Rt([
    Gt(Bv),
    Gt(String(n.length)),
    n
  ]));
}
var b7 = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const gt = new U(_v), Fv = new Uint8Array(32);
Fv.fill(0);
const g7 = ne.from(-1), Nv = ne.from(0), $v = ne.from(1), x7 = ne.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function v7(n) {
  const e = W(n), t = e.length % 32;
  return t ? us([e, Fv.slice(t)]) : J(e);
}
const w7 = Pt($v.toHexString(), 32), T7 = Pt(Nv.toHexString(), 32), Ig = {
  name: "string",
  version: "string",
  chainId: "uint256",
  verifyingContract: "address",
  salt: "bytes32"
}, Vp = [
  "name",
  "version",
  "chainId",
  "verifyingContract",
  "salt"
];
function kg(n) {
  return function(e) {
    return typeof e != "string" && gt.throwArgumentError(`invalid domain value for ${JSON.stringify(n)}`, `domain.${n}`, e), e;
  };
}
const A7 = {
  name: kg("name"),
  version: kg("version"),
  chainId: function(n) {
    try {
      return ne.from(n).toString();
    } catch {
    }
    return gt.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", n);
  },
  verifyingContract: function(n) {
    try {
      return ke(n).toLowerCase();
    } catch {
    }
    return gt.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", n);
  },
  salt: function(n) {
    try {
      const e = W(n);
      if (e.length !== 32)
        throw new Error("bad length");
      return J(e);
    } catch {
    }
    return gt.throwArgumentError('invalid domain value "salt"', "domain.salt", n);
  }
};
function jp(n) {
  {
    const e = n.match(/^(u?)int(\d*)$/);
    if (e) {
      const t = e[1] === "", r = parseInt(e[2] || "256");
      (r % 8 !== 0 || r > 256 || e[2] && e[2] !== String(r)) && gt.throwArgumentError("invalid numeric width", "type", n);
      const i = x7.mask(t ? r - 1 : r), s = t ? i.add($v).mul(g7) : Nv;
      return function(a) {
        const o = ne.from(a);
        return (o.lt(s) || o.gt(i)) && gt.throwArgumentError(`value out-of-bounds for ${n}`, "value", a), Pt(o.toTwos(256).toHexString(), 32);
      };
    }
  }
  {
    const e = n.match(/^bytes(\d+)$/);
    if (e) {
      const t = parseInt(e[1]);
      return (t === 0 || t > 32 || e[1] !== String(t)) && gt.throwArgumentError("invalid bytes width", "type", n), function(r) {
        return W(r).length !== t && gt.throwArgumentError(`invalid length for ${n}`, "value", r), v7(r);
      };
    }
  }
  switch (n) {
    case "address":
      return function(e) {
        return Pt(ke(e), 32);
      };
    case "bool":
      return function(e) {
        return e ? w7 : T7;
      };
    case "bytes":
      return function(e) {
        return Pe(e);
      };
    case "string":
      return function(e) {
        return rs(e);
      };
  }
  return null;
}
function Dg(n, e) {
  return `${n}(${e.map(({ name: t, type: r }) => r + " " + t).join(",")})`;
}
class bn {
  constructor(e) {
    z(this, "types", Object.freeze(ia(e))), z(this, "_encoderCache", {}), z(this, "_types", {});
    const t = {}, r = {}, i = {};
    Object.keys(e).forEach((o) => {
      t[o] = {}, r[o] = [], i[o] = {};
    });
    for (const o in e) {
      const u = {};
      e[o].forEach((l) => {
        u[l.name] && gt.throwArgumentError(`duplicate variable name ${JSON.stringify(l.name)} in ${JSON.stringify(o)}`, "types", e), u[l.name] = !0;
        const p = l.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
        p === o && gt.throwArgumentError(`circular type reference to ${JSON.stringify(p)}`, "types", e), !jp(p) && (r[p] || gt.throwArgumentError(`unknown type ${JSON.stringify(p)}`, "types", e), r[p].push(o), t[o][p] = !0);
      });
    }
    const s = Object.keys(r).filter((o) => r[o].length === 0);
    s.length === 0 ? gt.throwArgumentError("missing primary type", "types", e) : s.length > 1 && gt.throwArgumentError(`ambiguous primary types or unused types: ${s.map((o) => JSON.stringify(o)).join(", ")}`, "types", e), z(this, "primaryType", s[0]);
    function a(o, u) {
      u[o] && gt.throwArgumentError(`circular type reference to ${JSON.stringify(o)}`, "types", e), u[o] = !0, Object.keys(t[o]).forEach((l) => {
        !r[l] || (a(l, u), Object.keys(u).forEach((p) => {
          i[p][l] = !0;
        }));
      }), delete u[o];
    }
    a(this.primaryType, {});
    for (const o in i) {
      const u = Object.keys(i[o]);
      u.sort(), this._types[o] = Dg(o, e[o]) + u.map((l) => Dg(l, e[l])).join("");
    }
  }
  getEncoder(e) {
    let t = this._encoderCache[e];
    return t || (t = this._encoderCache[e] = this._getEncoder(e)), t;
  }
  _getEncoder(e) {
    {
      const i = jp(e);
      if (i)
        return i;
    }
    const t = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
    if (t) {
      const i = t[1], s = this.getEncoder(i), a = parseInt(t[3]);
      return (o) => {
        a >= 0 && o.length !== a && gt.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", o);
        let u = o.map(s);
        return this._types[i] && (u = u.map(Pe)), Pe(us(u));
      };
    }
    const r = this.types[e];
    if (r) {
      const i = rs(this._types[e]);
      return (s) => {
        const a = r.map(({ name: o, type: u }) => {
          const l = this.getEncoder(u)(s[o]);
          return this._types[u] ? Pe(l) : l;
        });
        return a.unshift(i), us(a);
      };
    }
    return gt.throwArgumentError(`unknown type: ${e}`, "type", e);
  }
  encodeType(e) {
    const t = this._types[e];
    return t || gt.throwArgumentError(`unknown type: ${JSON.stringify(e)}`, "name", e), t;
  }
  encodeData(e, t) {
    return this.getEncoder(e)(t);
  }
  hashStruct(e, t) {
    return Pe(this.encodeData(e, t));
  }
  encode(e) {
    return this.encodeData(this.primaryType, e);
  }
  hash(e) {
    return this.hashStruct(this.primaryType, e);
  }
  _visit(e, t, r) {
    if (jp(e))
      return r(e, t);
    const i = e.match(/^(.*)(\x5b(\d*)\x5d)$/);
    if (i) {
      const a = i[1], o = parseInt(i[3]);
      return o >= 0 && t.length !== o && gt.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", t), t.map((u) => this._visit(a, u, r));
    }
    const s = this.types[e];
    return s ? s.reduce((a, { name: o, type: u }) => (a[o] = this._visit(u, t[o], r), a), {}) : gt.throwArgumentError(`unknown type: ${e}`, "type", e);
  }
  visit(e, t) {
    return this._visit(this.primaryType, e, t);
  }
  static from(e) {
    return new bn(e);
  }
  static getPrimaryType(e) {
    return bn.from(e).primaryType;
  }
  static hashStruct(e, t, r) {
    return bn.from(t).hashStruct(e, r);
  }
  static hashDomain(e) {
    const t = [];
    for (const r in e) {
      const i = Ig[r];
      i || gt.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(r)}`, "domain", e), t.push({ name: r, type: i });
    }
    return t.sort((r, i) => Vp.indexOf(r.name) - Vp.indexOf(i.name)), bn.hashStruct("EIP712Domain", { EIP712Domain: t }, e);
  }
  static encode(e, t, r) {
    return us([
      "0x1901",
      bn.hashDomain(e),
      bn.from(t).hash(r)
    ]);
  }
  static hash(e, t, r) {
    return Pe(bn.encode(e, t, r));
  }
  static resolveNames(e, t, r, i) {
    return b7(this, void 0, void 0, function* () {
      e = Hn(e);
      const s = {};
      e.verifyingContract && !vt(e.verifyingContract, 20) && (s[e.verifyingContract] = "0x");
      const a = bn.from(t);
      a.visit(r, (o, u) => (o === "address" && !vt(u, 20) && (s[u] = "0x"), u));
      for (const o in s)
        s[o] = yield i(o);
      return e.verifyingContract && s[e.verifyingContract] && (e.verifyingContract = s[e.verifyingContract]), r = a.visit(r, (o, u) => o === "address" && s[u] ? s[u] : u), { domain: e, value: r };
    });
  }
  static getPayload(e, t, r) {
    bn.hashDomain(e);
    const i = {}, s = [];
    Vp.forEach((u) => {
      const l = e[u];
      l != null && (i[u] = A7[u](l), s.push({ name: u, type: Ig[u] }));
    });
    const a = bn.from(t), o = Hn(t);
    return o.EIP712Domain ? gt.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", t) : o.EIP712Domain = s, a.encode(r), {
      types: o,
      domain: i,
      primaryType: a.primaryType,
      message: a.visit(r, (u, l) => {
        if (u.match(/^bytes(\d*)/))
          return J(W(l));
        if (u.match(/^u?int/))
          return ne.from(l).toString();
        switch (u) {
          case "address":
            return l.toLowerCase();
          case "bool":
            return !!l;
          case "string":
            return typeof l != "string" && gt.throwArgumentError("invalid string", "value", l), l;
        }
        return gt.throwArgumentError("unsupported type", "type", u);
      })
    };
  }
}
const C7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  id: rs,
  dnsEncode: m7,
  namehash: y7,
  isValidName: h7,
  ensNormalize: f7,
  messagePrefix: Bv,
  hashMessage: v0,
  _TypedDataEncoder: bn
}, Symbol.toStringTag, { value: "Module" })), bt = new U(pl);
class Lv extends _a {
}
class Uv extends _a {
}
class S7 extends _a {
}
class $c extends _a {
  static isIndexed(e) {
    return !!(e && e._isIndexed);
  }
}
const E7 = {
  "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: !0 },
  "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] }
};
function Bg(n, e) {
  const t = new Error(`deferred error during ABI decoding triggered accessing ${n}`);
  return t.error = e, t;
}
class $f {
  constructor(e) {
    let t = [];
    typeof e == "string" ? t = JSON.parse(e) : t = e, z(this, "fragments", t.map((r) => Vr.from(r)).filter((r) => r != null)), z(this, "_abiCoder", Ka(new.target, "getAbiCoder")()), z(this, "functions", {}), z(this, "errors", {}), z(this, "events", {}), z(this, "structs", {}), this.fragments.forEach((r) => {
      let i = null;
      switch (r.type) {
        case "constructor":
          if (this.deploy) {
            bt.warn("duplicate definition - constructor");
            return;
          }
          z(this, "deploy", r);
          return;
        case "function":
          i = this.functions;
          break;
        case "event":
          i = this.events;
          break;
        case "error":
          i = this.errors;
          break;
        default:
          return;
      }
      let s = r.format();
      if (i[s]) {
        bt.warn("duplicate definition - " + s);
        return;
      }
      i[s] = r;
    }), this.deploy || z(this, "deploy", vr.from({
      payable: !1,
      type: "constructor"
    })), z(this, "_isInterface", !0);
  }
  format(e) {
    e || (e = Te.full), e === Te.sighash && bt.throwArgumentError("interface does not support formatting sighash", "format", e);
    const t = this.fragments.map((r) => r.format(e));
    return e === Te.json ? JSON.stringify(t.map((r) => JSON.parse(r))) : t;
  }
  static getAbiCoder() {
    return Mv;
  }
  static getAddress(e) {
    return ke(e);
  }
  static getSighash(e) {
    return Ci(rs(e.format()), 0, 4);
  }
  static getEventTopic(e) {
    return rs(e.format());
  }
  getFunction(e) {
    if (vt(e)) {
      for (const r in this.functions)
        if (e === this.getSighash(r))
          return this.functions[r];
      bt.throwArgumentError("no matching function", "sighash", e);
    }
    if (e.indexOf("(") === -1) {
      const r = e.trim(), i = Object.keys(this.functions).filter((s) => s.split("(")[0] === r);
      return i.length === 0 ? bt.throwArgumentError("no matching function", "name", r) : i.length > 1 && bt.throwArgumentError("multiple matching functions", "name", r), this.functions[i[0]];
    }
    const t = this.functions[wr.fromString(e).format()];
    return t || bt.throwArgumentError("no matching function", "signature", e), t;
  }
  getEvent(e) {
    if (vt(e)) {
      const r = e.toLowerCase();
      for (const i in this.events)
        if (r === this.getEventTopic(i))
          return this.events[i];
      bt.throwArgumentError("no matching event", "topichash", r);
    }
    if (e.indexOf("(") === -1) {
      const r = e.trim(), i = Object.keys(this.events).filter((s) => s.split("(")[0] === r);
      return i.length === 0 ? bt.throwArgumentError("no matching event", "name", r) : i.length > 1 && bt.throwArgumentError("multiple matching events", "name", r), this.events[i[0]];
    }
    const t = this.events[Lr.fromString(e).format()];
    return t || bt.throwArgumentError("no matching event", "signature", e), t;
  }
  getError(e) {
    if (vt(e)) {
      const r = Ka(this.constructor, "getSighash");
      for (const i in this.errors) {
        const s = this.errors[i];
        if (e === r(s))
          return this.errors[i];
      }
      bt.throwArgumentError("no matching error", "sighash", e);
    }
    if (e.indexOf("(") === -1) {
      const r = e.trim(), i = Object.keys(this.errors).filter((s) => s.split("(")[0] === r);
      return i.length === 0 ? bt.throwArgumentError("no matching error", "name", r) : i.length > 1 && bt.throwArgumentError("multiple matching errors", "name", r), this.errors[i[0]];
    }
    const t = this.errors[wr.fromString(e).format()];
    return t || bt.throwArgumentError("no matching error", "signature", e), t;
  }
  getSighash(e) {
    if (typeof e == "string")
      try {
        e = this.getFunction(e);
      } catch (t) {
        try {
          e = this.getError(e);
        } catch {
          throw t;
        }
      }
    return Ka(this.constructor, "getSighash")(e);
  }
  getEventTopic(e) {
    return typeof e == "string" && (e = this.getEvent(e)), Ka(this.constructor, "getEventTopic")(e);
  }
  _decodeParams(e, t) {
    return this._abiCoder.decode(e, t);
  }
  _encodeParams(e, t) {
    return this._abiCoder.encode(e, t);
  }
  encodeDeploy(e) {
    return this._encodeParams(this.deploy.inputs, e || []);
  }
  decodeErrorResult(e, t) {
    typeof e == "string" && (e = this.getError(e));
    const r = W(t);
    return J(r.slice(0, 4)) !== this.getSighash(e) && bt.throwArgumentError(`data signature does not match error ${e.name}.`, "data", J(r)), this._decodeParams(e.inputs, r.slice(4));
  }
  encodeErrorResult(e, t) {
    return typeof e == "string" && (e = this.getError(e)), J(Rt([
      this.getSighash(e),
      this._encodeParams(e.inputs, t || [])
    ]));
  }
  decodeFunctionData(e, t) {
    typeof e == "string" && (e = this.getFunction(e));
    const r = W(t);
    return J(r.slice(0, 4)) !== this.getSighash(e) && bt.throwArgumentError(`data signature does not match function ${e.name}.`, "data", J(r)), this._decodeParams(e.inputs, r.slice(4));
  }
  encodeFunctionData(e, t) {
    return typeof e == "string" && (e = this.getFunction(e)), J(Rt([
      this.getSighash(e),
      this._encodeParams(e.inputs, t || [])
    ]));
  }
  decodeFunctionResult(e, t) {
    typeof e == "string" && (e = this.getFunction(e));
    let r = W(t), i = null, s = "", a = null, o = null, u = null;
    switch (r.length % this._abiCoder._getWordSize()) {
      case 0:
        try {
          return this._abiCoder.decode(e.outputs, r);
        } catch {
        }
        break;
      case 4: {
        const l = J(r.slice(0, 4)), p = E7[l];
        if (p)
          a = this._abiCoder.decode(p.inputs, r.slice(4)), o = p.name, u = p.signature, p.reason && (i = a[0]), o === "Error" ? s = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(a[0])}` : o === "Panic" && (s = `; VM Exception while processing transaction: reverted with panic code ${a[0]}`);
        else
          try {
            const h = this.getError(l);
            a = this._abiCoder.decode(h.inputs, r.slice(4)), o = h.name, u = h.format();
          } catch {
          }
        break;
      }
    }
    return bt.throwError("call revert exception" + s, U.errors.CALL_EXCEPTION, {
      method: e.format(),
      data: J(t),
      errorArgs: a,
      errorName: o,
      errorSignature: u,
      reason: i
    });
  }
  encodeFunctionResult(e, t) {
    return typeof e == "string" && (e = this.getFunction(e)), J(this._abiCoder.encode(e.outputs, t || []));
  }
  encodeFilterTopics(e, t) {
    typeof e == "string" && (e = this.getEvent(e)), t.length > e.inputs.length && bt.throwError("too many arguments for " + e.format(), U.errors.UNEXPECTED_ARGUMENT, {
      argument: "values",
      value: t
    });
    let r = [];
    e.anonymous || r.push(this.getEventTopic(e));
    const i = (s, a) => s.type === "string" ? rs(a) : s.type === "bytes" ? Pe(J(a)) : (s.type === "bool" && typeof a == "boolean" && (a = a ? "0x01" : "0x00"), s.type.match(/^u?int/) && (a = ne.from(a).toHexString()), s.type === "address" && this._abiCoder.encode(["address"], [a]), Pt(J(a), 32));
    for (t.forEach((s, a) => {
      let o = e.inputs[a];
      if (!o.indexed) {
        s != null && bt.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + o.name, s);
        return;
      }
      s == null ? r.push(null) : o.baseType === "array" || o.baseType === "tuple" ? bt.throwArgumentError("filtering with tuples or arrays not supported", "contract." + o.name, s) : Array.isArray(s) ? r.push(s.map((u) => i(o, u))) : r.push(i(o, s));
    }); r.length && r[r.length - 1] === null; )
      r.pop();
    return r;
  }
  encodeEventLog(e, t) {
    typeof e == "string" && (e = this.getEvent(e));
    const r = [], i = [], s = [];
    return e.anonymous || r.push(this.getEventTopic(e)), t.length !== e.inputs.length && bt.throwArgumentError("event arguments/values mismatch", "values", t), e.inputs.forEach((a, o) => {
      const u = t[o];
      if (a.indexed)
        if (a.type === "string")
          r.push(rs(u));
        else if (a.type === "bytes")
          r.push(Pe(u));
        else {
          if (a.baseType === "tuple" || a.baseType === "array")
            throw new Error("not implemented");
          r.push(this._abiCoder.encode([a.type], [u]));
        }
      else
        i.push(a), s.push(u);
    }), {
      data: this._abiCoder.encode(i, s),
      topics: r
    };
  }
  decodeEventLog(e, t, r) {
    if (typeof e == "string" && (e = this.getEvent(e)), r != null && !e.anonymous) {
      let b = this.getEventTopic(e);
      (!vt(r[0], 32) || r[0].toLowerCase() !== b) && bt.throwError("fragment/topic mismatch", U.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: b, value: r[0] }), r = r.slice(1);
    }
    let i = [], s = [], a = [];
    e.inputs.forEach((b, C) => {
      b.indexed ? b.type === "string" || b.type === "bytes" || b.baseType === "tuple" || b.baseType === "array" ? (i.push(Bt.fromObject({ type: "bytes32", name: b.name })), a.push(!0)) : (i.push(b), a.push(!1)) : (s.push(b), a.push(!1));
    });
    let o = r != null ? this._abiCoder.decode(i, Rt(r)) : null, u = this._abiCoder.decode(s, t, !0), l = [], p = 0, h = 0;
    e.inputs.forEach((b, C) => {
      if (b.indexed)
        if (o == null)
          l[C] = new $c({ _isIndexed: !0, hash: null });
        else if (a[C])
          l[C] = new $c({ _isIndexed: !0, hash: o[h++] });
        else
          try {
            l[C] = o[h++];
          } catch (v) {
            l[C] = v;
          }
      else
        try {
          l[C] = u[p++];
        } catch (v) {
          l[C] = v;
        }
      if (b.name && l[b.name] == null) {
        const v = l[C];
        v instanceof Error ? Object.defineProperty(l, b.name, {
          enumerable: !0,
          get: () => {
            throw Bg(`property ${JSON.stringify(b.name)}`, v);
          }
        }) : l[b.name] = v;
      }
    });
    for (let b = 0; b < l.length; b++) {
      const C = l[b];
      C instanceof Error && Object.defineProperty(l, b, {
        enumerable: !0,
        get: () => {
          throw Bg(`index ${b}`, C);
        }
      });
    }
    return Object.freeze(l);
  }
  parseTransaction(e) {
    let t = this.getFunction(e.data.substring(0, 10).toLowerCase());
    return t ? new Uv({
      args: this._abiCoder.decode(t.inputs, "0x" + e.data.substring(10)),
      functionFragment: t,
      name: t.name,
      signature: t.format(),
      sighash: this.getSighash(t),
      value: ne.from(e.value || "0")
    }) : null;
  }
  parseLog(e) {
    let t = this.getEvent(e.topics[0]);
    return !t || t.anonymous ? null : new Lv({
      eventFragment: t,
      name: t.name,
      signature: t.format(),
      topic: this.getEventTopic(t),
      args: this.decodeEventLog(t, e.data, e.topics)
    });
  }
  parseError(e) {
    const t = J(e);
    let r = this.getError(t.substring(0, 10).toLowerCase());
    return r ? new S7({
      args: this._abiCoder.decode(r.inputs, "0x" + t.substring(10)),
      errorFragment: r,
      name: r.name,
      signature: r.format(),
      sighash: this.getSighash(r)
    }) : null;
  }
  static isInterface(e) {
    return !!(e && e._isInterface);
  }
}
const M7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  ConstructorFragment: vr,
  ErrorFragment: pi,
  EventFragment: Lr,
  Fragment: Vr,
  FunctionFragment: wr,
  ParamType: Bt,
  FormatTypes: Te,
  AbiCoder: Ev,
  defaultAbiCoder: Mv,
  Interface: $f,
  Indexed: $c,
  checkResultErrors: ov,
  LogDescription: Lv,
  TransactionDescription: Uv
}, Symbol.toStringTag, { value: "Module" })), _7 = "abstract-provider/5.7.0";
var R7 = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const P7 = new U(_7);
class Pd {
  constructor() {
    P7.checkAbstract(new.target, Pd), z(this, "_isProvider", !0);
  }
  getFeeData() {
    return R7(this, void 0, void 0, function* () {
      const { block: e, gasPrice: t } = yield Ur({
        block: this.getBlock("latest"),
        gasPrice: this.getGasPrice().catch((a) => null)
      });
      let r = null, i = null, s = null;
      return e && e.baseFeePerGas && (r = e.baseFeePerGas, s = ne.from("1500000000"), i = e.baseFeePerGas.mul(2).add(s)), { lastBaseFeePerGas: r, maxFeePerGas: i, maxPriorityFeePerGas: s, gasPrice: t };
    });
  }
  addListener(e, t) {
    return this.on(e, t);
  }
  removeListener(e, t) {
    return this.off(e, t);
  }
  static isProvider(e) {
    return !!(e && e._isProvider);
  }
}
const O7 = "abstract-signer/5.7.0";
var mr = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const tr = new U(O7), I7 = [
  "accessList",
  "ccipReadEnabled",
  "chainId",
  "customData",
  "data",
  "from",
  "gasLimit",
  "gasPrice",
  "maxFeePerGas",
  "maxPriorityFeePerGas",
  "nonce",
  "to",
  "type",
  "value"
], k7 = [
  U.errors.INSUFFICIENT_FUNDS,
  U.errors.NONCE_EXPIRED,
  U.errors.REPLACEMENT_UNDERPRICED
];
class Ro {
  constructor() {
    tr.checkAbstract(new.target, Ro), z(this, "_isSigner", !0);
  }
  getBalance(e) {
    return mr(this, void 0, void 0, function* () {
      return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), e);
    });
  }
  getTransactionCount(e) {
    return mr(this, void 0, void 0, function* () {
      return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), e);
    });
  }
  estimateGas(e) {
    return mr(this, void 0, void 0, function* () {
      this._checkProvider("estimateGas");
      const t = yield Ur(this.checkTransaction(e));
      return yield this.provider.estimateGas(t);
    });
  }
  call(e, t) {
    return mr(this, void 0, void 0, function* () {
      this._checkProvider("call");
      const r = yield Ur(this.checkTransaction(e));
      return yield this.provider.call(r, t);
    });
  }
  sendTransaction(e) {
    return mr(this, void 0, void 0, function* () {
      this._checkProvider("sendTransaction");
      const t = yield this.populateTransaction(e), r = yield this.signTransaction(t);
      return yield this.provider.sendTransaction(r);
    });
  }
  getChainId() {
    return mr(this, void 0, void 0, function* () {
      return this._checkProvider("getChainId"), (yield this.provider.getNetwork()).chainId;
    });
  }
  getGasPrice() {
    return mr(this, void 0, void 0, function* () {
      return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice();
    });
  }
  getFeeData() {
    return mr(this, void 0, void 0, function* () {
      return this._checkProvider("getFeeData"), yield this.provider.getFeeData();
    });
  }
  resolveName(e) {
    return mr(this, void 0, void 0, function* () {
      return this._checkProvider("resolveName"), yield this.provider.resolveName(e);
    });
  }
  checkTransaction(e) {
    for (const r in e)
      I7.indexOf(r) === -1 && tr.throwArgumentError("invalid transaction key: " + r, "transaction", e);
    const t = Hn(e);
    return t.from == null ? t.from = this.getAddress() : t.from = Promise.all([
      Promise.resolve(t.from),
      this.getAddress()
    ]).then((r) => (r[0].toLowerCase() !== r[1].toLowerCase() && tr.throwArgumentError("from address mismatch", "transaction", e), r[0])), t;
  }
  populateTransaction(e) {
    return mr(this, void 0, void 0, function* () {
      const t = yield Ur(this.checkTransaction(e));
      t.to != null && (t.to = Promise.resolve(t.to).then((i) => mr(this, void 0, void 0, function* () {
        if (i == null)
          return null;
        const s = yield this.resolveName(i);
        return s == null && tr.throwArgumentError("provided ENS name resolves to null", "tx.to", i), s;
      })), t.to.catch((i) => {
      }));
      const r = t.maxFeePerGas != null || t.maxPriorityFeePerGas != null;
      if (t.gasPrice != null && (t.type === 2 || r) ? tr.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", e) : (t.type === 0 || t.type === 1) && r && tr.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", e), (t.type === 2 || t.type == null) && t.maxFeePerGas != null && t.maxPriorityFeePerGas != null)
        t.type = 2;
      else if (t.type === 0 || t.type === 1)
        t.gasPrice == null && (t.gasPrice = this.getGasPrice());
      else {
        const i = yield this.getFeeData();
        if (t.type == null)
          if (i.maxFeePerGas != null && i.maxPriorityFeePerGas != null)
            if (t.type = 2, t.gasPrice != null) {
              const s = t.gasPrice;
              delete t.gasPrice, t.maxFeePerGas = s, t.maxPriorityFeePerGas = s;
            } else
              t.maxFeePerGas == null && (t.maxFeePerGas = i.maxFeePerGas), t.maxPriorityFeePerGas == null && (t.maxPriorityFeePerGas = i.maxPriorityFeePerGas);
          else
            i.gasPrice != null ? (r && tr.throwError("network does not support EIP-1559", U.errors.UNSUPPORTED_OPERATION, {
              operation: "populateTransaction"
            }), t.gasPrice == null && (t.gasPrice = i.gasPrice), t.type = 0) : tr.throwError("failed to get consistent fee data", U.errors.UNSUPPORTED_OPERATION, {
              operation: "signer.getFeeData"
            });
        else
          t.type === 2 && (t.maxFeePerGas == null && (t.maxFeePerGas = i.maxFeePerGas), t.maxPriorityFeePerGas == null && (t.maxPriorityFeePerGas = i.maxPriorityFeePerGas));
      }
      return t.nonce == null && (t.nonce = this.getTransactionCount("pending")), t.gasLimit == null && (t.gasLimit = this.estimateGas(t).catch((i) => {
        if (k7.indexOf(i.code) >= 0)
          throw i;
        return tr.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", U.errors.UNPREDICTABLE_GAS_LIMIT, {
          error: i,
          tx: t
        });
      })), t.chainId == null ? t.chainId = this.getChainId() : t.chainId = Promise.all([
        Promise.resolve(t.chainId),
        this.getChainId()
      ]).then((i) => (i[1] !== 0 && i[0] !== i[1] && tr.throwArgumentError("chainId address mismatch", "transaction", e), i[0])), yield Ur(t);
    });
  }
  _checkProvider(e) {
    this.provider || tr.throwError("missing provider", U.errors.UNSUPPORTED_OPERATION, {
      operation: e || "_checkProvider"
    });
  }
  static isSigner(e) {
    return !!(e && e._isSigner);
  }
}
class w0 extends Ro {
  constructor(e, t) {
    super(), z(this, "address", e), z(this, "provider", t || null);
  }
  getAddress() {
    return Promise.resolve(this.address);
  }
  _fail(e, t) {
    return Promise.resolve().then(() => {
      tr.throwError(e, U.errors.UNSUPPORTED_OPERATION, { operation: t });
    });
  }
  signMessage(e) {
    return this._fail("VoidSigner cannot sign messages", "signMessage");
  }
  signTransaction(e) {
    return this._fail("VoidSigner cannot sign transactions", "signTransaction");
  }
  _signTypedData(e, t, r) {
    return this._fail("VoidSigner cannot sign typed data", "signTypedData");
  }
  connect(e) {
    return new w0(this.address, e);
  }
}
var gn = {}, be = {}, fl = Vv;
function Vv(n, e) {
  if (!n)
    throw new Error(e || "Assertion failed");
}
Vv.equal = function(e, t, r) {
  if (e != t)
    throw new Error(r || "Assertion failed: " + e + " != " + t);
};
var Lf = { exports: {} };
typeof Object.create == "function" ? Lf.exports = function(e, t) {
  t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
    constructor: {
      value: e,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  }));
} : Lf.exports = function(e, t) {
  if (t) {
    e.super_ = t;
    var r = function() {
    };
    r.prototype = t.prototype, e.prototype = new r(), e.prototype.constructor = e;
  }
};
var D7 = fl, B7 = Lf.exports;
be.inherits = B7;
function F7(n, e) {
  return (n.charCodeAt(e) & 64512) !== 55296 || e < 0 || e + 1 >= n.length ? !1 : (n.charCodeAt(e + 1) & 64512) === 56320;
}
function N7(n, e) {
  if (Array.isArray(n))
    return n.slice();
  if (!n)
    return [];
  var t = [];
  if (typeof n == "string")
    if (e) {
      if (e === "hex")
        for (n = n.replace(/[^a-z0-9]+/ig, ""), n.length % 2 !== 0 && (n = "0" + n), i = 0; i < n.length; i += 2)
          t.push(parseInt(n[i] + n[i + 1], 16));
    } else
      for (var r = 0, i = 0; i < n.length; i++) {
        var s = n.charCodeAt(i);
        s < 128 ? t[r++] = s : s < 2048 ? (t[r++] = s >> 6 | 192, t[r++] = s & 63 | 128) : F7(n, i) ? (s = 65536 + ((s & 1023) << 10) + (n.charCodeAt(++i) & 1023), t[r++] = s >> 18 | 240, t[r++] = s >> 12 & 63 | 128, t[r++] = s >> 6 & 63 | 128, t[r++] = s & 63 | 128) : (t[r++] = s >> 12 | 224, t[r++] = s >> 6 & 63 | 128, t[r++] = s & 63 | 128);
      }
  else
    for (i = 0; i < n.length; i++)
      t[i] = n[i] | 0;
  return t;
}
be.toArray = N7;
function $7(n) {
  for (var e = "", t = 0; t < n.length; t++)
    e += zv(n[t].toString(16));
  return e;
}
be.toHex = $7;
function jv(n) {
  var e = n >>> 24 | n >>> 8 & 65280 | n << 8 & 16711680 | (n & 255) << 24;
  return e >>> 0;
}
be.htonl = jv;
function L7(n, e) {
  for (var t = "", r = 0; r < n.length; r++) {
    var i = n[r];
    e === "little" && (i = jv(i)), t += Gv(i.toString(16));
  }
  return t;
}
be.toHex32 = L7;
function zv(n) {
  return n.length === 1 ? "0" + n : n;
}
be.zero2 = zv;
function Gv(n) {
  return n.length === 7 ? "0" + n : n.length === 6 ? "00" + n : n.length === 5 ? "000" + n : n.length === 4 ? "0000" + n : n.length === 3 ? "00000" + n : n.length === 2 ? "000000" + n : n.length === 1 ? "0000000" + n : n;
}
be.zero8 = Gv;
function U7(n, e, t, r) {
  var i = t - e;
  D7(i % 4 === 0);
  for (var s = new Array(i / 4), a = 0, o = e; a < s.length; a++, o += 4) {
    var u;
    r === "big" ? u = n[o] << 24 | n[o + 1] << 16 | n[o + 2] << 8 | n[o + 3] : u = n[o + 3] << 24 | n[o + 2] << 16 | n[o + 1] << 8 | n[o], s[a] = u >>> 0;
  }
  return s;
}
be.join32 = U7;
function V7(n, e) {
  for (var t = new Array(n.length * 4), r = 0, i = 0; r < n.length; r++, i += 4) {
    var s = n[r];
    e === "big" ? (t[i] = s >>> 24, t[i + 1] = s >>> 16 & 255, t[i + 2] = s >>> 8 & 255, t[i + 3] = s & 255) : (t[i + 3] = s >>> 24, t[i + 2] = s >>> 16 & 255, t[i + 1] = s >>> 8 & 255, t[i] = s & 255);
  }
  return t;
}
be.split32 = V7;
function j7(n, e) {
  return n >>> e | n << 32 - e;
}
be.rotr32 = j7;
function z7(n, e) {
  return n << e | n >>> 32 - e;
}
be.rotl32 = z7;
function G7(n, e) {
  return n + e >>> 0;
}
be.sum32 = G7;
function W7(n, e, t) {
  return n + e + t >>> 0;
}
be.sum32_3 = W7;
function H7(n, e, t, r) {
  return n + e + t + r >>> 0;
}
be.sum32_4 = H7;
function K7(n, e, t, r, i) {
  return n + e + t + r + i >>> 0;
}
be.sum32_5 = K7;
function q7(n, e, t, r) {
  var i = n[e], s = n[e + 1], a = r + s >>> 0, o = (a < r ? 1 : 0) + t + i;
  n[e] = o >>> 0, n[e + 1] = a;
}
be.sum64 = q7;
function Q7(n, e, t, r) {
  var i = e + r >>> 0, s = (i < e ? 1 : 0) + n + t;
  return s >>> 0;
}
be.sum64_hi = Q7;
function J7(n, e, t, r) {
  var i = e + r;
  return i >>> 0;
}
be.sum64_lo = J7;
function Y7(n, e, t, r, i, s, a, o) {
  var u = 0, l = e;
  l = l + r >>> 0, u += l < e ? 1 : 0, l = l + s >>> 0, u += l < s ? 1 : 0, l = l + o >>> 0, u += l < o ? 1 : 0;
  var p = n + t + i + a + u;
  return p >>> 0;
}
be.sum64_4_hi = Y7;
function X7(n, e, t, r, i, s, a, o) {
  var u = e + r + s + o;
  return u >>> 0;
}
be.sum64_4_lo = X7;
function Z7(n, e, t, r, i, s, a, o, u, l) {
  var p = 0, h = e;
  h = h + r >>> 0, p += h < e ? 1 : 0, h = h + s >>> 0, p += h < s ? 1 : 0, h = h + o >>> 0, p += h < o ? 1 : 0, h = h + l >>> 0, p += h < l ? 1 : 0;
  var b = n + t + i + a + u + p;
  return b >>> 0;
}
be.sum64_5_hi = Z7;
function eM(n, e, t, r, i, s, a, o, u, l) {
  var p = e + r + s + o + l;
  return p >>> 0;
}
be.sum64_5_lo = eM;
function tM(n, e, t) {
  var r = e << 32 - t | n >>> t;
  return r >>> 0;
}
be.rotr64_hi = tM;
function nM(n, e, t) {
  var r = n << 32 - t | e >>> t;
  return r >>> 0;
}
be.rotr64_lo = nM;
function rM(n, e, t) {
  return n >>> t;
}
be.shr64_hi = rM;
function iM(n, e, t) {
  var r = n << 32 - t | e >>> t;
  return r >>> 0;
}
be.shr64_lo = iM;
var Po = {}, Fg = be, sM = fl;
function Od() {
  this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
}
Po.BlockHash = Od;
Od.prototype.update = function(e, t) {
  if (e = Fg.toArray(e, t), this.pending ? this.pending = this.pending.concat(e) : this.pending = e, this.pendingTotal += e.length, this.pending.length >= this._delta8) {
    e = this.pending;
    var r = e.length % this._delta8;
    this.pending = e.slice(e.length - r, e.length), this.pending.length === 0 && (this.pending = null), e = Fg.join32(e, 0, e.length - r, this.endian);
    for (var i = 0; i < e.length; i += this._delta32)
      this._update(e, i, i + this._delta32);
  }
  return this;
};
Od.prototype.digest = function(e) {
  return this.update(this._pad()), sM(this.pending === null), this._digest(e);
};
Od.prototype._pad = function() {
  var e = this.pendingTotal, t = this._delta8, r = t - (e + this.padLength) % t, i = new Array(r + this.padLength);
  i[0] = 128;
  for (var s = 1; s < r; s++)
    i[s] = 0;
  if (e <<= 3, this.endian === "big") {
    for (var a = 8; a < this.padLength; a++)
      i[s++] = 0;
    i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = e >>> 24 & 255, i[s++] = e >>> 16 & 255, i[s++] = e >>> 8 & 255, i[s++] = e & 255;
  } else
    for (i[s++] = e & 255, i[s++] = e >>> 8 & 255, i[s++] = e >>> 16 & 255, i[s++] = e >>> 24 & 255, i[s++] = 0, i[s++] = 0, i[s++] = 0, i[s++] = 0, a = 8; a < this.padLength; a++)
      i[s++] = 0;
  return i;
};
var Oo = {}, ni = {}, aM = be, Wr = aM.rotr32;
function oM(n, e, t, r) {
  if (n === 0)
    return Wv(e, t, r);
  if (n === 1 || n === 3)
    return Kv(e, t, r);
  if (n === 2)
    return Hv(e, t, r);
}
ni.ft_1 = oM;
function Wv(n, e, t) {
  return n & e ^ ~n & t;
}
ni.ch32 = Wv;
function Hv(n, e, t) {
  return n & e ^ n & t ^ e & t;
}
ni.maj32 = Hv;
function Kv(n, e, t) {
  return n ^ e ^ t;
}
ni.p32 = Kv;
function uM(n) {
  return Wr(n, 2) ^ Wr(n, 13) ^ Wr(n, 22);
}
ni.s0_256 = uM;
function lM(n) {
  return Wr(n, 6) ^ Wr(n, 11) ^ Wr(n, 25);
}
ni.s1_256 = lM;
function cM(n) {
  return Wr(n, 7) ^ Wr(n, 18) ^ n >>> 3;
}
ni.g0_256 = cM;
function dM(n) {
  return Wr(n, 17) ^ Wr(n, 19) ^ n >>> 10;
}
ni.g1_256 = dM;
var uo = be, pM = Po, fM = ni, zp = uo.rotl32, zo = uo.sum32, hM = uo.sum32_5, yM = fM.ft_1, qv = pM.BlockHash, mM = [
  1518500249,
  1859775393,
  2400959708,
  3395469782
];
function Jr() {
  if (!(this instanceof Jr))
    return new Jr();
  qv.call(this), this.h = [
    1732584193,
    4023233417,
    2562383102,
    271733878,
    3285377520
  ], this.W = new Array(80);
}
uo.inherits(Jr, qv);
var bM = Jr;
Jr.blockSize = 512;
Jr.outSize = 160;
Jr.hmacStrength = 80;
Jr.padLength = 64;
Jr.prototype._update = function(e, t) {
  for (var r = this.W, i = 0; i < 16; i++)
    r[i] = e[t + i];
  for (; i < r.length; i++)
    r[i] = zp(r[i - 3] ^ r[i - 8] ^ r[i - 14] ^ r[i - 16], 1);
  var s = this.h[0], a = this.h[1], o = this.h[2], u = this.h[3], l = this.h[4];
  for (i = 0; i < r.length; i++) {
    var p = ~~(i / 20), h = hM(zp(s, 5), yM(p, a, o, u), l, r[i], mM[p]);
    l = u, u = o, o = zp(a, 30), a = s, s = h;
  }
  this.h[0] = zo(this.h[0], s), this.h[1] = zo(this.h[1], a), this.h[2] = zo(this.h[2], o), this.h[3] = zo(this.h[3], u), this.h[4] = zo(this.h[4], l);
};
Jr.prototype._digest = function(e) {
  return e === "hex" ? uo.toHex32(this.h, "big") : uo.split32(this.h, "big");
};
var lo = be, gM = Po, Io = ni, xM = fl, br = lo.sum32, vM = lo.sum32_4, wM = lo.sum32_5, TM = Io.ch32, AM = Io.maj32, CM = Io.s0_256, SM = Io.s1_256, EM = Io.g0_256, MM = Io.g1_256, Qv = gM.BlockHash, _M = [
  1116352408,
  1899447441,
  3049323471,
  3921009573,
  961987163,
  1508970993,
  2453635748,
  2870763221,
  3624381080,
  310598401,
  607225278,
  1426881987,
  1925078388,
  2162078206,
  2614888103,
  3248222580,
  3835390401,
  4022224774,
  264347078,
  604807628,
  770255983,
  1249150122,
  1555081692,
  1996064986,
  2554220882,
  2821834349,
  2952996808,
  3210313671,
  3336571891,
  3584528711,
  113926993,
  338241895,
  666307205,
  773529912,
  1294757372,
  1396182291,
  1695183700,
  1986661051,
  2177026350,
  2456956037,
  2730485921,
  2820302411,
  3259730800,
  3345764771,
  3516065817,
  3600352804,
  4094571909,
  275423344,
  430227734,
  506948616,
  659060556,
  883997877,
  958139571,
  1322822218,
  1537002063,
  1747873779,
  1955562222,
  2024104815,
  2227730452,
  2361852424,
  2428436474,
  2756734187,
  3204031479,
  3329325298
];
function Yr() {
  if (!(this instanceof Yr))
    return new Yr();
  Qv.call(this), this.h = [
    1779033703,
    3144134277,
    1013904242,
    2773480762,
    1359893119,
    2600822924,
    528734635,
    1541459225
  ], this.k = _M, this.W = new Array(64);
}
lo.inherits(Yr, Qv);
var Jv = Yr;
Yr.blockSize = 512;
Yr.outSize = 256;
Yr.hmacStrength = 192;
Yr.padLength = 64;
Yr.prototype._update = function(e, t) {
  for (var r = this.W, i = 0; i < 16; i++)
    r[i] = e[t + i];
  for (; i < r.length; i++)
    r[i] = vM(MM(r[i - 2]), r[i - 7], EM(r[i - 15]), r[i - 16]);
  var s = this.h[0], a = this.h[1], o = this.h[2], u = this.h[3], l = this.h[4], p = this.h[5], h = this.h[6], b = this.h[7];
  for (xM(this.k.length === r.length), i = 0; i < r.length; i++) {
    var C = wM(b, SM(l), TM(l, p, h), this.k[i], r[i]), v = br(CM(s), AM(s, a, o));
    b = h, h = p, p = l, l = br(u, C), u = o, o = a, a = s, s = br(C, v);
  }
  this.h[0] = br(this.h[0], s), this.h[1] = br(this.h[1], a), this.h[2] = br(this.h[2], o), this.h[3] = br(this.h[3], u), this.h[4] = br(this.h[4], l), this.h[5] = br(this.h[5], p), this.h[6] = br(this.h[6], h), this.h[7] = br(this.h[7], b);
};
Yr.prototype._digest = function(e) {
  return e === "hex" ? lo.toHex32(this.h, "big") : lo.split32(this.h, "big");
};
var Uf = be, Yv = Jv;
function Si() {
  if (!(this instanceof Si))
    return new Si();
  Yv.call(this), this.h = [
    3238371032,
    914150663,
    812702999,
    4144912697,
    4290775857,
    1750603025,
    1694076839,
    3204075428
  ];
}
Uf.inherits(Si, Yv);
var RM = Si;
Si.blockSize = 512;
Si.outSize = 224;
Si.hmacStrength = 192;
Si.padLength = 64;
Si.prototype._digest = function(e) {
  return e === "hex" ? Uf.toHex32(this.h.slice(0, 7), "big") : Uf.split32(this.h.slice(0, 7), "big");
};
var Dn = be, PM = Po, OM = fl, Hr = Dn.rotr64_hi, Kr = Dn.rotr64_lo, Xv = Dn.shr64_hi, Zv = Dn.shr64_lo, Wi = Dn.sum64, Gp = Dn.sum64_hi, Wp = Dn.sum64_lo, IM = Dn.sum64_4_hi, kM = Dn.sum64_4_lo, DM = Dn.sum64_5_hi, BM = Dn.sum64_5_lo, e6 = PM.BlockHash, FM = [
  1116352408,
  3609767458,
  1899447441,
  602891725,
  3049323471,
  3964484399,
  3921009573,
  2173295548,
  961987163,
  4081628472,
  1508970993,
  3053834265,
  2453635748,
  2937671579,
  2870763221,
  3664609560,
  3624381080,
  2734883394,
  310598401,
  1164996542,
  607225278,
  1323610764,
  1426881987,
  3590304994,
  1925078388,
  4068182383,
  2162078206,
  991336113,
  2614888103,
  633803317,
  3248222580,
  3479774868,
  3835390401,
  2666613458,
  4022224774,
  944711139,
  264347078,
  2341262773,
  604807628,
  2007800933,
  770255983,
  1495990901,
  1249150122,
  1856431235,
  1555081692,
  3175218132,
  1996064986,
  2198950837,
  2554220882,
  3999719339,
  2821834349,
  766784016,
  2952996808,
  2566594879,
  3210313671,
  3203337956,
  3336571891,
  1034457026,
  3584528711,
  2466948901,
  113926993,
  3758326383,
  338241895,
  168717936,
  666307205,
  1188179964,
  773529912,
  1546045734,
  1294757372,
  1522805485,
  1396182291,
  2643833823,
  1695183700,
  2343527390,
  1986661051,
  1014477480,
  2177026350,
  1206759142,
  2456956037,
  344077627,
  2730485921,
  1290863460,
  2820302411,
  3158454273,
  3259730800,
  3505952657,
  3345764771,
  106217008,
  3516065817,
  3606008344,
  3600352804,
  1432725776,
  4094571909,
  1467031594,
  275423344,
  851169720,
  430227734,
  3100823752,
  506948616,
  1363258195,
  659060556,
  3750685593,
  883997877,
  3785050280,
  958139571,
  3318307427,
  1322822218,
  3812723403,
  1537002063,
  2003034995,
  1747873779,
  3602036899,
  1955562222,
  1575990012,
  2024104815,
  1125592928,
  2227730452,
  2716904306,
  2361852424,
  442776044,
  2428436474,
  593698344,
  2756734187,
  3733110249,
  3204031479,
  2999351573,
  3329325298,
  3815920427,
  3391569614,
  3928383900,
  3515267271,
  566280711,
  3940187606,
  3454069534,
  4118630271,
  4000239992,
  116418474,
  1914138554,
  174292421,
  2731055270,
  289380356,
  3203993006,
  460393269,
  320620315,
  685471733,
  587496836,
  852142971,
  1086792851,
  1017036298,
  365543100,
  1126000580,
  2618297676,
  1288033470,
  3409855158,
  1501505948,
  4234509866,
  1607167915,
  987167468,
  1816402316,
  1246189591
];
function Rr() {
  if (!(this instanceof Rr))
    return new Rr();
  e6.call(this), this.h = [
    1779033703,
    4089235720,
    3144134277,
    2227873595,
    1013904242,
    4271175723,
    2773480762,
    1595750129,
    1359893119,
    2917565137,
    2600822924,
    725511199,
    528734635,
    4215389547,
    1541459225,
    327033209
  ], this.k = FM, this.W = new Array(160);
}
Dn.inherits(Rr, e6);
var t6 = Rr;
Rr.blockSize = 1024;
Rr.outSize = 512;
Rr.hmacStrength = 192;
Rr.padLength = 128;
Rr.prototype._prepareBlock = function(e, t) {
  for (var r = this.W, i = 0; i < 32; i++)
    r[i] = e[t + i];
  for (; i < r.length; i += 2) {
    var s = KM(r[i - 4], r[i - 3]), a = qM(r[i - 4], r[i - 3]), o = r[i - 14], u = r[i - 13], l = WM(r[i - 30], r[i - 29]), p = HM(r[i - 30], r[i - 29]), h = r[i - 32], b = r[i - 31];
    r[i] = IM(
      s,
      a,
      o,
      u,
      l,
      p,
      h,
      b
    ), r[i + 1] = kM(
      s,
      a,
      o,
      u,
      l,
      p,
      h,
      b
    );
  }
};
Rr.prototype._update = function(e, t) {
  this._prepareBlock(e, t);
  var r = this.W, i = this.h[0], s = this.h[1], a = this.h[2], o = this.h[3], u = this.h[4], l = this.h[5], p = this.h[6], h = this.h[7], b = this.h[8], C = this.h[9], v = this.h[10], T = this.h[11], w = this.h[12], M = this.h[13], I = this.h[14], F = this.h[15];
  OM(this.k.length === r.length);
  for (var k = 0; k < r.length; k += 2) {
    var D = I, $ = F, G = zM(b, C), V = GM(b, C), K = NM(b, C, v, T, w), ae = $M(b, C, v, T, w, M), q = this.k[k], oe = this.k[k + 1], E = r[k], c = r[k + 1], y = DM(
      D,
      $,
      G,
      V,
      K,
      ae,
      q,
      oe,
      E,
      c
    ), x = BM(
      D,
      $,
      G,
      V,
      K,
      ae,
      q,
      oe,
      E,
      c
    );
    D = VM(i, s), $ = jM(i, s), G = LM(i, s, a, o, u), V = UM(i, s, a, o, u, l);
    var S = Gp(D, $, G, V), A = Wp(D, $, G, V);
    I = w, F = M, w = v, M = T, v = b, T = C, b = Gp(p, h, y, x), C = Wp(h, h, y, x), p = u, h = l, u = a, l = o, a = i, o = s, i = Gp(y, x, S, A), s = Wp(y, x, S, A);
  }
  Wi(this.h, 0, i, s), Wi(this.h, 2, a, o), Wi(this.h, 4, u, l), Wi(this.h, 6, p, h), Wi(this.h, 8, b, C), Wi(this.h, 10, v, T), Wi(this.h, 12, w, M), Wi(this.h, 14, I, F);
};
Rr.prototype._digest = function(e) {
  return e === "hex" ? Dn.toHex32(this.h, "big") : Dn.split32(this.h, "big");
};
function NM(n, e, t, r, i) {
  var s = n & t ^ ~n & i;
  return s < 0 && (s += 4294967296), s;
}
function $M(n, e, t, r, i, s) {
  var a = e & r ^ ~e & s;
  return a < 0 && (a += 4294967296), a;
}
function LM(n, e, t, r, i) {
  var s = n & t ^ n & i ^ t & i;
  return s < 0 && (s += 4294967296), s;
}
function UM(n, e, t, r, i, s) {
  var a = e & r ^ e & s ^ r & s;
  return a < 0 && (a += 4294967296), a;
}
function VM(n, e) {
  var t = Hr(n, e, 28), r = Hr(e, n, 2), i = Hr(e, n, 7), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function jM(n, e) {
  var t = Kr(n, e, 28), r = Kr(e, n, 2), i = Kr(e, n, 7), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function zM(n, e) {
  var t = Hr(n, e, 14), r = Hr(n, e, 18), i = Hr(e, n, 9), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function GM(n, e) {
  var t = Kr(n, e, 14), r = Kr(n, e, 18), i = Kr(e, n, 9), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function WM(n, e) {
  var t = Hr(n, e, 1), r = Hr(n, e, 8), i = Xv(n, e, 7), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function HM(n, e) {
  var t = Kr(n, e, 1), r = Kr(n, e, 8), i = Zv(n, e, 7), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function KM(n, e) {
  var t = Hr(n, e, 19), r = Hr(e, n, 29), i = Xv(n, e, 6), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
function qM(n, e) {
  var t = Kr(n, e, 19), r = Kr(e, n, 29), i = Zv(n, e, 6), s = t ^ r ^ i;
  return s < 0 && (s += 4294967296), s;
}
var Vf = be, n6 = t6;
function Ei() {
  if (!(this instanceof Ei))
    return new Ei();
  n6.call(this), this.h = [
    3418070365,
    3238371032,
    1654270250,
    914150663,
    2438529370,
    812702999,
    355462360,
    4144912697,
    1731405415,
    4290775857,
    2394180231,
    1750603025,
    3675008525,
    1694076839,
    1203062813,
    3204075428
  ];
}
Vf.inherits(Ei, n6);
var QM = Ei;
Ei.blockSize = 1024;
Ei.outSize = 384;
Ei.hmacStrength = 192;
Ei.padLength = 128;
Ei.prototype._digest = function(e) {
  return e === "hex" ? Vf.toHex32(this.h.slice(0, 12), "big") : Vf.split32(this.h.slice(0, 12), "big");
};
Oo.sha1 = bM;
Oo.sha224 = RM;
Oo.sha256 = Jv;
Oo.sha384 = QM;
Oo.sha512 = t6;
var r6 = {}, ua = be, JM = Po, Nl = ua.rotl32, Ng = ua.sum32, Go = ua.sum32_3, $g = ua.sum32_4, i6 = JM.BlockHash;
function Xr() {
  if (!(this instanceof Xr))
    return new Xr();
  i6.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
}
ua.inherits(Xr, i6);
r6.ripemd160 = Xr;
Xr.blockSize = 512;
Xr.outSize = 160;
Xr.hmacStrength = 192;
Xr.padLength = 64;
Xr.prototype._update = function(e, t) {
  for (var r = this.h[0], i = this.h[1], s = this.h[2], a = this.h[3], o = this.h[4], u = r, l = i, p = s, h = a, b = o, C = 0; C < 80; C++) {
    var v = Ng(
      Nl(
        $g(r, Lg(C, i, s, a), e[ZM[C] + t], YM(C)),
        t_[C]
      ),
      o
    );
    r = o, o = a, a = Nl(s, 10), s = i, i = v, v = Ng(
      Nl(
        $g(u, Lg(79 - C, l, p, h), e[e_[C] + t], XM(C)),
        n_[C]
      ),
      b
    ), u = b, b = h, h = Nl(p, 10), p = l, l = v;
  }
  v = Go(this.h[1], s, h), this.h[1] = Go(this.h[2], a, b), this.h[2] = Go(this.h[3], o, u), this.h[3] = Go(this.h[4], r, l), this.h[4] = Go(this.h[0], i, p), this.h[0] = v;
};
Xr.prototype._digest = function(e) {
  return e === "hex" ? ua.toHex32(this.h, "little") : ua.split32(this.h, "little");
};
function Lg(n, e, t, r) {
  return n <= 15 ? e ^ t ^ r : n <= 31 ? e & t | ~e & r : n <= 47 ? (e | ~t) ^ r : n <= 63 ? e & r | t & ~r : e ^ (t | ~r);
}
function YM(n) {
  return n <= 15 ? 0 : n <= 31 ? 1518500249 : n <= 47 ? 1859775393 : n <= 63 ? 2400959708 : 2840853838;
}
function XM(n) {
  return n <= 15 ? 1352829926 : n <= 31 ? 1548603684 : n <= 47 ? 1836072691 : n <= 63 ? 2053994217 : 0;
}
var ZM = [
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  7,
  4,
  13,
  1,
  10,
  6,
  15,
  3,
  12,
  0,
  9,
  5,
  2,
  14,
  11,
  8,
  3,
  10,
  14,
  4,
  9,
  15,
  8,
  1,
  2,
  7,
  0,
  6,
  13,
  11,
  5,
  12,
  1,
  9,
  11,
  10,
  0,
  8,
  12,
  4,
  13,
  3,
  7,
  15,
  14,
  5,
  6,
  2,
  4,
  0,
  5,
  9,
  7,
  12,
  2,
  10,
  14,
  1,
  3,
  8,
  11,
  6,
  15,
  13
], e_ = [
  5,
  14,
  7,
  0,
  9,
  2,
  11,
  4,
  13,
  6,
  15,
  8,
  1,
  10,
  3,
  12,
  6,
  11,
  3,
  7,
  0,
  13,
  5,
  10,
  14,
  15,
  8,
  12,
  4,
  9,
  1,
  2,
  15,
  5,
  1,
  3,
  7,
  14,
  6,
  9,
  11,
  8,
  12,
  2,
  10,
  0,
  4,
  13,
  8,
  6,
  4,
  1,
  3,
  11,
  15,
  0,
  5,
  12,
  2,
  13,
  9,
  7,
  10,
  14,
  12,
  15,
  10,
  4,
  1,
  5,
  8,
  7,
  6,
  2,
  13,
  14,
  0,
  3,
  9,
  11
], t_ = [
  11,
  14,
  15,
  12,
  5,
  8,
  7,
  9,
  11,
  13,
  14,
  15,
  6,
  7,
  9,
  8,
  7,
  6,
  8,
  13,
  11,
  9,
  7,
  15,
  7,
  12,
  15,
  9,
  11,
  7,
  13,
  12,
  11,
  13,
  6,
  7,
  14,
  9,
  13,
  15,
  14,
  8,
  13,
  6,
  5,
  12,
  7,
  5,
  11,
  12,
  14,
  15,
  14,
  15,
  9,
  8,
  9,
  14,
  5,
  6,
  8,
  6,
  5,
  12,
  9,
  15,
  5,
  11,
  6,
  8,
  13,
  12,
  5,
  12,
  13,
  14,
  11,
  8,
  5,
  6
], n_ = [
  8,
  9,
  9,
  11,
  13,
  15,
  15,
  5,
  7,
  7,
  8,
  11,
  14,
  14,
  12,
  6,
  9,
  13,
  15,
  7,
  12,
  8,
  9,
  11,
  7,
  7,
  12,
  7,
  6,
  15,
  13,
  11,
  9,
  7,
  15,
  11,
  8,
  6,
  6,
  14,
  12,
  13,
  5,
  14,
  13,
  13,
  7,
  5,
  15,
  5,
  8,
  11,
  14,
  14,
  6,
  14,
  6,
  9,
  12,
  9,
  12,
  5,
  15,
  8,
  8,
  5,
  12,
  9,
  12,
  5,
  14,
  6,
  8,
  13,
  6,
  5,
  15,
  13,
  11,
  11
], r_ = be, i_ = fl;
function co(n, e, t) {
  if (!(this instanceof co))
    return new co(n, e, t);
  this.Hash = n, this.blockSize = n.blockSize / 8, this.outSize = n.outSize / 8, this.inner = null, this.outer = null, this._init(r_.toArray(e, t));
}
var s_ = co;
co.prototype._init = function(e) {
  e.length > this.blockSize && (e = new this.Hash().update(e).digest()), i_(e.length <= this.blockSize);
  for (var t = e.length; t < this.blockSize; t++)
    e.push(0);
  for (t = 0; t < e.length; t++)
    e[t] ^= 54;
  for (this.inner = new this.Hash().update(e), t = 0; t < e.length; t++)
    e[t] ^= 106;
  this.outer = new this.Hash().update(e);
};
co.prototype.update = function(e, t) {
  return this.inner.update(e, t), this;
};
co.prototype.digest = function(e) {
  return this.outer.update(this.inner.digest()), this.outer.digest(e);
};
(function(n) {
  var e = n;
  e.utils = be, e.common = Po, e.sha = Oo, e.ripemd = r6, e.hmac = s_, e.sha1 = e.sha.sha1, e.sha256 = e.sha.sha256, e.sha224 = e.sha.sha224, e.sha384 = e.sha.sha384, e.sha512 = e.sha.sha512, e.ripemd160 = e.ripemd.ripemd160;
})(gn);
function ko(n, e, t) {
  return t = {
    path: e,
    exports: {},
    require: function(r, i) {
      return a_(r, i ?? t.path);
    }
  }, n(t, t.exports), t.exports;
}
function a_() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var T0 = s6;
function s6(n, e) {
  if (!n)
    throw new Error(e || "Assertion failed");
}
s6.equal = function(e, t, r) {
  if (e != t)
    throw new Error(r || "Assertion failed: " + e + " != " + t);
};
var Sr = ko(function(n, e) {
  var t = e;
  function r(a, o) {
    if (Array.isArray(a))
      return a.slice();
    if (!a)
      return [];
    var u = [];
    if (typeof a != "string") {
      for (var l = 0; l < a.length; l++)
        u[l] = a[l] | 0;
      return u;
    }
    if (o === "hex") {
      a = a.replace(/[^a-z0-9]+/ig, ""), a.length % 2 !== 0 && (a = "0" + a);
      for (var l = 0; l < a.length; l += 2)
        u.push(parseInt(a[l] + a[l + 1], 16));
    } else
      for (var l = 0; l < a.length; l++) {
        var p = a.charCodeAt(l), h = p >> 8, b = p & 255;
        h ? u.push(h, b) : u.push(b);
      }
    return u;
  }
  t.toArray = r;
  function i(a) {
    return a.length === 1 ? "0" + a : a;
  }
  t.zero2 = i;
  function s(a) {
    for (var o = "", u = 0; u < a.length; u++)
      o += i(a[u].toString(16));
    return o;
  }
  t.toHex = s, t.encode = function(o, u) {
    return u === "hex" ? s(o) : o;
  };
}), Jn = ko(function(n, e) {
  var t = e;
  t.assert = T0, t.toArray = Sr.toArray, t.zero2 = Sr.zero2, t.toHex = Sr.toHex, t.encode = Sr.encode;
  function r(u, l, p) {
    var h = new Array(Math.max(u.bitLength(), p) + 1);
    h.fill(0);
    for (var b = 1 << l + 1, C = u.clone(), v = 0; v < h.length; v++) {
      var T, w = C.andln(b - 1);
      C.isOdd() ? (w > (b >> 1) - 1 ? T = (b >> 1) - w : T = w, C.isubn(T)) : T = 0, h[v] = T, C.iushrn(1);
    }
    return h;
  }
  t.getNAF = r;
  function i(u, l) {
    var p = [
      [],
      []
    ];
    u = u.clone(), l = l.clone();
    for (var h = 0, b = 0, C; u.cmpn(-h) > 0 || l.cmpn(-b) > 0; ) {
      var v = u.andln(3) + h & 3, T = l.andln(3) + b & 3;
      v === 3 && (v = -1), T === 3 && (T = -1);
      var w;
      (v & 1) === 0 ? w = 0 : (C = u.andln(7) + h & 7, (C === 3 || C === 5) && T === 2 ? w = -v : w = v), p[0].push(w);
      var M;
      (T & 1) === 0 ? M = 0 : (C = l.andln(7) + b & 7, (C === 3 || C === 5) && v === 2 ? M = -T : M = T), p[1].push(M), 2 * h === w + 1 && (h = 1 - h), 2 * b === M + 1 && (b = 1 - b), u.iushrn(1), l.iushrn(1);
    }
    return p;
  }
  t.getJSF = i;
  function s(u, l, p) {
    var h = "_" + l;
    u.prototype[l] = function() {
      return this[h] !== void 0 ? this[h] : this[h] = p.call(this);
    };
  }
  t.cachedProperty = s;
  function a(u) {
    return typeof u == "string" ? t.toArray(u, "hex") : u;
  }
  t.parseBytes = a;
  function o(u) {
    return new ce(u, "hex", "le");
  }
  t.intFromLE = o;
}), Lc = Jn.getNAF, o_ = Jn.getJSF, Uc = Jn.assert;
function vs(n, e) {
  this.type = n, this.p = new ce(e.p, 16), this.red = e.prime ? ce.red(e.prime) : ce.mont(this.p), this.zero = new ce(0).toRed(this.red), this.one = new ce(1).toRed(this.red), this.two = new ce(2).toRed(this.red), this.n = e.n && new ce(e.n, 16), this.g = e.g && this.pointFromJSON(e.g, e.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
  var t = this.n && this.p.div(this.n);
  !t || t.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = !0, this.redN = this.n.toRed(this.red));
}
var Pa = vs;
vs.prototype.point = function() {
  throw new Error("Not implemented");
};
vs.prototype.validate = function() {
  throw new Error("Not implemented");
};
vs.prototype._fixedNafMul = function(e, t) {
  Uc(e.precomputed);
  var r = e._getDoubles(), i = Lc(t, 1, this._bitLength), s = (1 << r.step + 1) - (r.step % 2 === 0 ? 2 : 1);
  s /= 3;
  var a = [], o, u;
  for (o = 0; o < i.length; o += r.step) {
    u = 0;
    for (var l = o + r.step - 1; l >= o; l--)
      u = (u << 1) + i[l];
    a.push(u);
  }
  for (var p = this.jpoint(null, null, null), h = this.jpoint(null, null, null), b = s; b > 0; b--) {
    for (o = 0; o < a.length; o++)
      u = a[o], u === b ? h = h.mixedAdd(r.points[o]) : u === -b && (h = h.mixedAdd(r.points[o].neg()));
    p = p.add(h);
  }
  return p.toP();
};
vs.prototype._wnafMul = function(e, t) {
  var r = 4, i = e._getNAFPoints(r);
  r = i.wnd;
  for (var s = i.points, a = Lc(t, r, this._bitLength), o = this.jpoint(null, null, null), u = a.length - 1; u >= 0; u--) {
    for (var l = 0; u >= 0 && a[u] === 0; u--)
      l++;
    if (u >= 0 && l++, o = o.dblp(l), u < 0)
      break;
    var p = a[u];
    Uc(p !== 0), e.type === "affine" ? p > 0 ? o = o.mixedAdd(s[p - 1 >> 1]) : o = o.mixedAdd(s[-p - 1 >> 1].neg()) : p > 0 ? o = o.add(s[p - 1 >> 1]) : o = o.add(s[-p - 1 >> 1].neg());
  }
  return e.type === "affine" ? o.toP() : o;
};
vs.prototype._wnafMulAdd = function(e, t, r, i, s) {
  var a = this._wnafT1, o = this._wnafT2, u = this._wnafT3, l = 0, p, h, b;
  for (p = 0; p < i; p++) {
    b = t[p];
    var C = b._getNAFPoints(e);
    a[p] = C.wnd, o[p] = C.points;
  }
  for (p = i - 1; p >= 1; p -= 2) {
    var v = p - 1, T = p;
    if (a[v] !== 1 || a[T] !== 1) {
      u[v] = Lc(r[v], a[v], this._bitLength), u[T] = Lc(r[T], a[T], this._bitLength), l = Math.max(u[v].length, l), l = Math.max(u[T].length, l);
      continue;
    }
    var w = [
      t[v],
      null,
      null,
      t[T]
    ];
    t[v].y.cmp(t[T].y) === 0 ? (w[1] = t[v].add(t[T]), w[2] = t[v].toJ().mixedAdd(t[T].neg())) : t[v].y.cmp(t[T].y.redNeg()) === 0 ? (w[1] = t[v].toJ().mixedAdd(t[T]), w[2] = t[v].add(t[T].neg())) : (w[1] = t[v].toJ().mixedAdd(t[T]), w[2] = t[v].toJ().mixedAdd(t[T].neg()));
    var M = [
      -3,
      -1,
      -5,
      -7,
      0,
      7,
      5,
      1,
      3
    ], I = o_(r[v], r[T]);
    for (l = Math.max(I[0].length, l), u[v] = new Array(l), u[T] = new Array(l), h = 0; h < l; h++) {
      var F = I[0][h] | 0, k = I[1][h] | 0;
      u[v][h] = M[(F + 1) * 3 + (k + 1)], u[T][h] = 0, o[v] = w;
    }
  }
  var D = this.jpoint(null, null, null), $ = this._wnafT4;
  for (p = l; p >= 0; p--) {
    for (var G = 0; p >= 0; ) {
      var V = !0;
      for (h = 0; h < i; h++)
        $[h] = u[h][p] | 0, $[h] !== 0 && (V = !1);
      if (!V)
        break;
      G++, p--;
    }
    if (p >= 0 && G++, D = D.dblp(G), p < 0)
      break;
    for (h = 0; h < i; h++) {
      var K = $[h];
      K !== 0 && (K > 0 ? b = o[h][K - 1 >> 1] : K < 0 && (b = o[h][-K - 1 >> 1].neg()), b.type === "affine" ? D = D.mixedAdd(b) : D = D.add(b));
    }
  }
  for (p = 0; p < i; p++)
    o[p] = null;
  return s ? D : D.toP();
};
function pr(n, e) {
  this.curve = n, this.type = e, this.precomputed = null;
}
vs.BasePoint = pr;
pr.prototype.eq = function() {
  throw new Error("Not implemented");
};
pr.prototype.validate = function() {
  return this.curve.validate(this);
};
vs.prototype.decodePoint = function(e, t) {
  e = Jn.toArray(e, t);
  var r = this.p.byteLength();
  if ((e[0] === 4 || e[0] === 6 || e[0] === 7) && e.length - 1 === 2 * r) {
    e[0] === 6 ? Uc(e[e.length - 1] % 2 === 0) : e[0] === 7 && Uc(e[e.length - 1] % 2 === 1);
    var i = this.point(
      e.slice(1, 1 + r),
      e.slice(1 + r, 1 + 2 * r)
    );
    return i;
  } else if ((e[0] === 2 || e[0] === 3) && e.length - 1 === r)
    return this.pointFromX(e.slice(1, 1 + r), e[0] === 3);
  throw new Error("Unknown point format");
};
pr.prototype.encodeCompressed = function(e) {
  return this.encode(e, !0);
};
pr.prototype._encode = function(e) {
  var t = this.curve.p.byteLength(), r = this.getX().toArray("be", t);
  return e ? [this.getY().isEven() ? 2 : 3].concat(r) : [4].concat(r, this.getY().toArray("be", t));
};
pr.prototype.encode = function(e, t) {
  return Jn.encode(this._encode(t), e);
};
pr.prototype.precompute = function(e) {
  if (this.precomputed)
    return this;
  var t = {
    doubles: null,
    naf: null,
    beta: null
  };
  return t.naf = this._getNAFPoints(8), t.doubles = this._getDoubles(4, e), t.beta = this._getBeta(), this.precomputed = t, this;
};
pr.prototype._hasDoubles = function(e) {
  if (!this.precomputed)
    return !1;
  var t = this.precomputed.doubles;
  return t ? t.points.length >= Math.ceil((e.bitLength() + 1) / t.step) : !1;
};
pr.prototype._getDoubles = function(e, t) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;
  for (var r = [this], i = this, s = 0; s < t; s += e) {
    for (var a = 0; a < e; a++)
      i = i.dbl();
    r.push(i);
  }
  return {
    step: e,
    points: r
  };
};
pr.prototype._getNAFPoints = function(e) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;
  for (var t = [this], r = (1 << e) - 1, i = r === 1 ? null : this.dbl(), s = 1; s < r; s++)
    t[s] = t[s - 1].add(i);
  return {
    wnd: e,
    points: t
  };
};
pr.prototype._getBeta = function() {
  return null;
};
pr.prototype.dblp = function(e) {
  for (var t = this, r = 0; r < e; r++)
    t = t.dbl();
  return t;
};
var A0 = ko(function(n) {
  typeof Object.create == "function" ? n.exports = function(t, r) {
    r && (t.super_ = r, t.prototype = Object.create(r.prototype, {
      constructor: {
        value: t,
        enumerable: !1,
        writable: !0,
        configurable: !0
      }
    }));
  } : n.exports = function(t, r) {
    if (r) {
      t.super_ = r;
      var i = function() {
      };
      i.prototype = r.prototype, t.prototype = new i(), t.prototype.constructor = t;
    }
  };
}), u_ = Jn.assert;
function fr(n) {
  Pa.call(this, "short", n), this.a = new ce(n.a, 16).toRed(this.red), this.b = new ce(n.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(n), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
}
A0(fr, Pa);
var l_ = fr;
fr.prototype._getEndomorphism = function(e) {
  if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
    var t, r;
    if (e.beta)
      t = new ce(e.beta, 16).toRed(this.red);
    else {
      var i = this._getEndoRoots(this.p);
      t = i[0].cmp(i[1]) < 0 ? i[0] : i[1], t = t.toRed(this.red);
    }
    if (e.lambda)
      r = new ce(e.lambda, 16);
    else {
      var s = this._getEndoRoots(this.n);
      this.g.mul(s[0]).x.cmp(this.g.x.redMul(t)) === 0 ? r = s[0] : (r = s[1], u_(this.g.mul(r).x.cmp(this.g.x.redMul(t)) === 0));
    }
    var a;
    return e.basis ? a = e.basis.map(function(o) {
      return {
        a: new ce(o.a, 16),
        b: new ce(o.b, 16)
      };
    }) : a = this._getEndoBasis(r), {
      beta: t,
      lambda: r,
      basis: a
    };
  }
};
fr.prototype._getEndoRoots = function(e) {
  var t = e === this.p ? this.red : ce.mont(e), r = new ce(2).toRed(t).redInvm(), i = r.redNeg(), s = new ce(3).toRed(t).redNeg().redSqrt().redMul(r), a = i.redAdd(s).fromRed(), o = i.redSub(s).fromRed();
  return [a, o];
};
fr.prototype._getEndoBasis = function(e) {
  for (var t = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), r = e, i = this.n.clone(), s = new ce(1), a = new ce(0), o = new ce(0), u = new ce(1), l, p, h, b, C, v, T, w = 0, M, I; r.cmpn(0) !== 0; ) {
    var F = i.div(r);
    M = i.sub(F.mul(r)), I = o.sub(F.mul(s));
    var k = u.sub(F.mul(a));
    if (!h && M.cmp(t) < 0)
      l = T.neg(), p = s, h = M.neg(), b = I;
    else if (h && ++w === 2)
      break;
    T = M, i = r, r = M, o = s, s = I, u = a, a = k;
  }
  C = M.neg(), v = I;
  var D = h.sqr().add(b.sqr()), $ = C.sqr().add(v.sqr());
  return $.cmp(D) >= 0 && (C = l, v = p), h.negative && (h = h.neg(), b = b.neg()), C.negative && (C = C.neg(), v = v.neg()), [
    { a: h, b },
    { a: C, b: v }
  ];
};
fr.prototype._endoSplit = function(e) {
  var t = this.endo.basis, r = t[0], i = t[1], s = i.b.mul(e).divRound(this.n), a = r.b.neg().mul(e).divRound(this.n), o = s.mul(r.a), u = a.mul(i.a), l = s.mul(r.b), p = a.mul(i.b), h = e.sub(o).sub(u), b = l.add(p).neg();
  return { k1: h, k2: b };
};
fr.prototype.pointFromX = function(e, t) {
  e = new ce(e, 16), e.red || (e = e.toRed(this.red));
  var r = e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b), i = r.redSqrt();
  if (i.redSqr().redSub(r).cmp(this.zero) !== 0)
    throw new Error("invalid point");
  var s = i.fromRed().isOdd();
  return (t && !s || !t && s) && (i = i.redNeg()), this.point(e, i);
};
fr.prototype.validate = function(e) {
  if (e.inf)
    return !0;
  var t = e.x, r = e.y, i = this.a.redMul(t), s = t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);
  return r.redSqr().redISub(s).cmpn(0) === 0;
};
fr.prototype._endoWnafMulAdd = function(e, t, r) {
  for (var i = this._endoWnafT1, s = this._endoWnafT2, a = 0; a < e.length; a++) {
    var o = this._endoSplit(t[a]), u = e[a], l = u._getBeta();
    o.k1.negative && (o.k1.ineg(), u = u.neg(!0)), o.k2.negative && (o.k2.ineg(), l = l.neg(!0)), i[a * 2] = u, i[a * 2 + 1] = l, s[a * 2] = o.k1, s[a * 2 + 1] = o.k2;
  }
  for (var p = this._wnafMulAdd(1, i, s, a * 2, r), h = 0; h < a * 2; h++)
    i[h] = null, s[h] = null;
  return p;
};
function Wt(n, e, t, r) {
  Pa.BasePoint.call(this, n, "affine"), e === null && t === null ? (this.x = null, this.y = null, this.inf = !0) : (this.x = new ce(e, 16), this.y = new ce(t, 16), r && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = !1);
}
A0(Wt, Pa.BasePoint);
fr.prototype.point = function(e, t, r) {
  return new Wt(this, e, t, r);
};
fr.prototype.pointFromJSON = function(e, t) {
  return Wt.fromJSON(this, e, t);
};
Wt.prototype._getBeta = function() {
  if (!!this.curve.endo) {
    var e = this.precomputed;
    if (e && e.beta)
      return e.beta;
    var t = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (e) {
      var r = this.curve, i = function(s) {
        return r.point(s.x.redMul(r.endo.beta), s.y);
      };
      e.beta = t, t.precomputed = {
        beta: null,
        naf: e.naf && {
          wnd: e.naf.wnd,
          points: e.naf.points.map(i)
        },
        doubles: e.doubles && {
          step: e.doubles.step,
          points: e.doubles.points.map(i)
        }
      };
    }
    return t;
  }
};
Wt.prototype.toJSON = function() {
  return this.precomputed ? [this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  }] : [this.x, this.y];
};
Wt.fromJSON = function(e, t, r) {
  typeof t == "string" && (t = JSON.parse(t));
  var i = e.point(t[0], t[1], r);
  if (!t[2])
    return i;
  function s(o) {
    return e.point(o[0], o[1], r);
  }
  var a = t[2];
  return i.precomputed = {
    beta: null,
    doubles: a.doubles && {
      step: a.doubles.step,
      points: [i].concat(a.doubles.points.map(s))
    },
    naf: a.naf && {
      wnd: a.naf.wnd,
      points: [i].concat(a.naf.points.map(s))
    }
  }, i;
};
Wt.prototype.inspect = function() {
  return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
};
Wt.prototype.isInfinity = function() {
  return this.inf;
};
Wt.prototype.add = function(e) {
  if (this.inf)
    return e;
  if (e.inf)
    return this;
  if (this.eq(e))
    return this.dbl();
  if (this.neg().eq(e))
    return this.curve.point(null, null);
  if (this.x.cmp(e.x) === 0)
    return this.curve.point(null, null);
  var t = this.y.redSub(e.y);
  t.cmpn(0) !== 0 && (t = t.redMul(this.x.redSub(e.x).redInvm()));
  var r = t.redSqr().redISub(this.x).redISub(e.x), i = t.redMul(this.x.redSub(r)).redISub(this.y);
  return this.curve.point(r, i);
};
Wt.prototype.dbl = function() {
  if (this.inf)
    return this;
  var e = this.y.redAdd(this.y);
  if (e.cmpn(0) === 0)
    return this.curve.point(null, null);
  var t = this.curve.a, r = this.x.redSqr(), i = e.redInvm(), s = r.redAdd(r).redIAdd(r).redIAdd(t).redMul(i), a = s.redSqr().redISub(this.x.redAdd(this.x)), o = s.redMul(this.x.redSub(a)).redISub(this.y);
  return this.curve.point(a, o);
};
Wt.prototype.getX = function() {
  return this.x.fromRed();
};
Wt.prototype.getY = function() {
  return this.y.fromRed();
};
Wt.prototype.mul = function(e) {
  return e = new ce(e, 16), this.isInfinity() ? this : this._hasDoubles(e) ? this.curve._fixedNafMul(this, e) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e]) : this.curve._wnafMul(this, e);
};
Wt.prototype.mulAdd = function(e, t, r) {
  var i = [this, t], s = [e, r];
  return this.curve.endo ? this.curve._endoWnafMulAdd(i, s) : this.curve._wnafMulAdd(1, i, s, 2);
};
Wt.prototype.jmulAdd = function(e, t, r) {
  var i = [this, t], s = [e, r];
  return this.curve.endo ? this.curve._endoWnafMulAdd(i, s, !0) : this.curve._wnafMulAdd(1, i, s, 2, !0);
};
Wt.prototype.eq = function(e) {
  return this === e || this.inf === e.inf && (this.inf || this.x.cmp(e.x) === 0 && this.y.cmp(e.y) === 0);
};
Wt.prototype.neg = function(e) {
  if (this.inf)
    return this;
  var t = this.curve.point(this.x, this.y.redNeg());
  if (e && this.precomputed) {
    var r = this.precomputed, i = function(s) {
      return s.neg();
    };
    t.precomputed = {
      naf: r.naf && {
        wnd: r.naf.wnd,
        points: r.naf.points.map(i)
      },
      doubles: r.doubles && {
        step: r.doubles.step,
        points: r.doubles.points.map(i)
      }
    };
  }
  return t;
};
Wt.prototype.toJ = function() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);
  var e = this.curve.jpoint(this.x, this.y, this.curve.one);
  return e;
};
function Yt(n, e, t, r) {
  Pa.BasePoint.call(this, n, "jacobian"), e === null && t === null && r === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new ce(0)) : (this.x = new ce(e, 16), this.y = new ce(t, 16), this.z = new ce(r, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
}
A0(Yt, Pa.BasePoint);
fr.prototype.jpoint = function(e, t, r) {
  return new Yt(this, e, t, r);
};
Yt.prototype.toP = function() {
  if (this.isInfinity())
    return this.curve.point(null, null);
  var e = this.z.redInvm(), t = e.redSqr(), r = this.x.redMul(t), i = this.y.redMul(t).redMul(e);
  return this.curve.point(r, i);
};
Yt.prototype.neg = function() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};
Yt.prototype.add = function(e) {
  if (this.isInfinity())
    return e;
  if (e.isInfinity())
    return this;
  var t = e.z.redSqr(), r = this.z.redSqr(), i = this.x.redMul(t), s = e.x.redMul(r), a = this.y.redMul(t.redMul(e.z)), o = e.y.redMul(r.redMul(this.z)), u = i.redSub(s), l = a.redSub(o);
  if (u.cmpn(0) === 0)
    return l.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var p = u.redSqr(), h = p.redMul(u), b = i.redMul(p), C = l.redSqr().redIAdd(h).redISub(b).redISub(b), v = l.redMul(b.redISub(C)).redISub(a.redMul(h)), T = this.z.redMul(e.z).redMul(u);
  return this.curve.jpoint(C, v, T);
};
Yt.prototype.mixedAdd = function(e) {
  if (this.isInfinity())
    return e.toJ();
  if (e.isInfinity())
    return this;
  var t = this.z.redSqr(), r = this.x, i = e.x.redMul(t), s = this.y, a = e.y.redMul(t).redMul(this.z), o = r.redSub(i), u = s.redSub(a);
  if (o.cmpn(0) === 0)
    return u.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
  var l = o.redSqr(), p = l.redMul(o), h = r.redMul(l), b = u.redSqr().redIAdd(p).redISub(h).redISub(h), C = u.redMul(h.redISub(b)).redISub(s.redMul(p)), v = this.z.redMul(o);
  return this.curve.jpoint(b, C, v);
};
Yt.prototype.dblp = function(e) {
  if (e === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!e)
    return this.dbl();
  var t;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (t = 0; t < e; t++)
      r = r.dbl();
    return r;
  }
  var i = this.curve.a, s = this.curve.tinv, a = this.x, o = this.y, u = this.z, l = u.redSqr().redSqr(), p = o.redAdd(o);
  for (t = 0; t < e; t++) {
    var h = a.redSqr(), b = p.redSqr(), C = b.redSqr(), v = h.redAdd(h).redIAdd(h).redIAdd(i.redMul(l)), T = a.redMul(b), w = v.redSqr().redISub(T.redAdd(T)), M = T.redISub(w), I = v.redMul(M);
    I = I.redIAdd(I).redISub(C);
    var F = p.redMul(u);
    t + 1 < e && (l = l.redMul(C)), a = w, u = F, p = I;
  }
  return this.curve.jpoint(a, p.redMul(s), u);
};
Yt.prototype.dbl = function() {
  return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
};
Yt.prototype._zeroDbl = function() {
  var e, t, r;
  if (this.zOne) {
    var i = this.x.redSqr(), s = this.y.redSqr(), a = s.redSqr(), o = this.x.redAdd(s).redSqr().redISub(i).redISub(a);
    o = o.redIAdd(o);
    var u = i.redAdd(i).redIAdd(i), l = u.redSqr().redISub(o).redISub(o), p = a.redIAdd(a);
    p = p.redIAdd(p), p = p.redIAdd(p), e = l, t = u.redMul(o.redISub(l)).redISub(p), r = this.y.redAdd(this.y);
  } else {
    var h = this.x.redSqr(), b = this.y.redSqr(), C = b.redSqr(), v = this.x.redAdd(b).redSqr().redISub(h).redISub(C);
    v = v.redIAdd(v);
    var T = h.redAdd(h).redIAdd(h), w = T.redSqr(), M = C.redIAdd(C);
    M = M.redIAdd(M), M = M.redIAdd(M), e = w.redISub(v).redISub(v), t = T.redMul(v.redISub(e)).redISub(M), r = this.y.redMul(this.z), r = r.redIAdd(r);
  }
  return this.curve.jpoint(e, t, r);
};
Yt.prototype._threeDbl = function() {
  var e, t, r;
  if (this.zOne) {
    var i = this.x.redSqr(), s = this.y.redSqr(), a = s.redSqr(), o = this.x.redAdd(s).redSqr().redISub(i).redISub(a);
    o = o.redIAdd(o);
    var u = i.redAdd(i).redIAdd(i).redIAdd(this.curve.a), l = u.redSqr().redISub(o).redISub(o);
    e = l;
    var p = a.redIAdd(a);
    p = p.redIAdd(p), p = p.redIAdd(p), t = u.redMul(o.redISub(l)).redISub(p), r = this.y.redAdd(this.y);
  } else {
    var h = this.z.redSqr(), b = this.y.redSqr(), C = this.x.redMul(b), v = this.x.redSub(h).redMul(this.x.redAdd(h));
    v = v.redAdd(v).redIAdd(v);
    var T = C.redIAdd(C);
    T = T.redIAdd(T);
    var w = T.redAdd(T);
    e = v.redSqr().redISub(w), r = this.y.redAdd(this.z).redSqr().redISub(b).redISub(h);
    var M = b.redSqr();
    M = M.redIAdd(M), M = M.redIAdd(M), M = M.redIAdd(M), t = v.redMul(T.redISub(e)).redISub(M);
  }
  return this.curve.jpoint(e, t, r);
};
Yt.prototype._dbl = function() {
  var e = this.curve.a, t = this.x, r = this.y, i = this.z, s = i.redSqr().redSqr(), a = t.redSqr(), o = r.redSqr(), u = a.redAdd(a).redIAdd(a).redIAdd(e.redMul(s)), l = t.redAdd(t);
  l = l.redIAdd(l);
  var p = l.redMul(o), h = u.redSqr().redISub(p.redAdd(p)), b = p.redISub(h), C = o.redSqr();
  C = C.redIAdd(C), C = C.redIAdd(C), C = C.redIAdd(C);
  var v = u.redMul(b).redISub(C), T = r.redAdd(r).redMul(i);
  return this.curve.jpoint(h, v, T);
};
Yt.prototype.trpl = function() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);
  var e = this.x.redSqr(), t = this.y.redSqr(), r = this.z.redSqr(), i = t.redSqr(), s = e.redAdd(e).redIAdd(e), a = s.redSqr(), o = this.x.redAdd(t).redSqr().redISub(e).redISub(i);
  o = o.redIAdd(o), o = o.redAdd(o).redIAdd(o), o = o.redISub(a);
  var u = o.redSqr(), l = i.redIAdd(i);
  l = l.redIAdd(l), l = l.redIAdd(l), l = l.redIAdd(l);
  var p = s.redIAdd(o).redSqr().redISub(a).redISub(u).redISub(l), h = t.redMul(p);
  h = h.redIAdd(h), h = h.redIAdd(h);
  var b = this.x.redMul(u).redISub(h);
  b = b.redIAdd(b), b = b.redIAdd(b);
  var C = this.y.redMul(p.redMul(l.redISub(p)).redISub(o.redMul(u)));
  C = C.redIAdd(C), C = C.redIAdd(C), C = C.redIAdd(C);
  var v = this.z.redAdd(o).redSqr().redISub(r).redISub(u);
  return this.curve.jpoint(b, C, v);
};
Yt.prototype.mul = function(e, t) {
  return e = new ce(e, t), this.curve._wnafMul(this, e);
};
Yt.prototype.eq = function(e) {
  if (e.type === "affine")
    return this.eq(e.toJ());
  if (this === e)
    return !0;
  var t = this.z.redSqr(), r = e.z.redSqr();
  if (this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0) !== 0)
    return !1;
  var i = t.redMul(this.z), s = r.redMul(e.z);
  return this.y.redMul(s).redISub(e.y.redMul(i)).cmpn(0) === 0;
};
Yt.prototype.eqXToP = function(e) {
  var t = this.z.redSqr(), r = e.toRed(this.curve.red).redMul(t);
  if (this.x.cmp(r) === 0)
    return !0;
  for (var i = e.clone(), s = this.curve.redN.redMul(t); ; ) {
    if (i.iadd(this.curve.n), i.cmp(this.curve.p) >= 0)
      return !1;
    if (r.redIAdd(s), this.x.cmp(r) === 0)
      return !0;
  }
};
Yt.prototype.inspect = function() {
  return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
};
Yt.prototype.isInfinity = function() {
  return this.z.cmpn(0) === 0;
};
var ac = ko(function(n, e) {
  var t = e;
  t.base = Pa, t.short = l_, t.mont = null, t.edwards = null;
}), oc = ko(function(n, e) {
  var t = e, r = Jn.assert;
  function i(o) {
    o.type === "short" ? this.curve = new ac.short(o) : o.type === "edwards" ? this.curve = new ac.edwards(o) : this.curve = new ac.mont(o), this.g = this.curve.g, this.n = this.curve.n, this.hash = o.hash, r(this.g.validate(), "Invalid curve"), r(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
  }
  t.PresetCurve = i;
  function s(o, u) {
    Object.defineProperty(t, o, {
      configurable: !0,
      enumerable: !0,
      get: function() {
        var l = new i(u);
        return Object.defineProperty(t, o, {
          configurable: !0,
          enumerable: !0,
          value: l
        }), l;
      }
    });
  }
  s("p192", {
    type: "short",
    prime: "p192",
    p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
    b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
    n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
    hash: gn.sha256,
    gRed: !1,
    g: [
      "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
      "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
    ]
  }), s("p224", {
    type: "short",
    prime: "p224",
    p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
    a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
    b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
    n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
    hash: gn.sha256,
    gRed: !1,
    g: [
      "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
      "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
    ]
  }), s("p256", {
    type: "short",
    prime: null,
    p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
    a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
    b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
    n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
    hash: gn.sha256,
    gRed: !1,
    g: [
      "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
      "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
    ]
  }), s("p384", {
    type: "short",
    prime: null,
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
    a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
    b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
    n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
    hash: gn.sha384,
    gRed: !1,
    g: [
      "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
      "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
    ]
  }), s("p521", {
    type: "short",
    prime: null,
    p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
    a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
    b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
    n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
    hash: gn.sha512,
    gRed: !1,
    g: [
      "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
      "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
    ]
  }), s("curve25519", {
    type: "mont",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "76d06",
    b: "1",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: gn.sha256,
    gRed: !1,
    g: [
      "9"
    ]
  }), s("ed25519", {
    type: "edwards",
    prime: "p25519",
    p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
    a: "-1",
    c: "1",
    d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
    n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
    hash: gn.sha256,
    gRed: !1,
    g: [
      "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
      "6666666666666666666666666666666666666666666666666666666666666658"
    ]
  });
  var a;
  try {
    a = null.crash();
  } catch {
    a = void 0;
  }
  s("secp256k1", {
    type: "short",
    prime: "k256",
    p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
    a: "0",
    b: "7",
    n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
    h: "1",
    hash: gn.sha256,
    beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
    lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
    basis: [
      {
        a: "3086d221a7d46bcde86c90e49284eb15",
        b: "-e4437ed6010e88286f547fa90abfe4c3"
      },
      {
        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
        b: "3086d221a7d46bcde86c90e49284eb15"
      }
    ],
    gRed: !1,
    g: [
      "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
      "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
      a
    ]
  });
});
function ys(n) {
  if (!(this instanceof ys))
    return new ys(n);
  this.hash = n.hash, this.predResist = !!n.predResist, this.outLen = this.hash.outSize, this.minEntropy = n.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
  var e = Sr.toArray(n.entropy, n.entropyEnc || "hex"), t = Sr.toArray(n.nonce, n.nonceEnc || "hex"), r = Sr.toArray(n.pers, n.persEnc || "hex");
  T0(
    e.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  ), this._init(e, t, r);
}
var a6 = ys;
ys.prototype._init = function(e, t, r) {
  var i = e.concat(t).concat(r);
  this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
  for (var s = 0; s < this.V.length; s++)
    this.K[s] = 0, this.V[s] = 1;
  this._update(i), this._reseed = 1, this.reseedInterval = 281474976710656;
};
ys.prototype._hmac = function() {
  return new gn.hmac(this.hash, this.K);
};
ys.prototype._update = function(e) {
  var t = this._hmac().update(this.V).update([0]);
  e && (t = t.update(e)), this.K = t.digest(), this.V = this._hmac().update(this.V).digest(), e && (this.K = this._hmac().update(this.V).update([1]).update(e).digest(), this.V = this._hmac().update(this.V).digest());
};
ys.prototype.reseed = function(e, t, r, i) {
  typeof t != "string" && (i = r, r = t, t = null), e = Sr.toArray(e, t), r = Sr.toArray(r, i), T0(
    e.length >= this.minEntropy / 8,
    "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
  ), this._update(e.concat(r || [])), this._reseed = 1;
};
ys.prototype.generate = function(e, t, r, i) {
  if (this._reseed > this.reseedInterval)
    throw new Error("Reseed is required");
  typeof t != "string" && (i = r, r = t, t = null), r && (r = Sr.toArray(r, i || "hex"), this._update(r));
  for (var s = []; s.length < e; )
    this.V = this._hmac().update(this.V).digest(), s = s.concat(this.V);
  var a = s.slice(0, e);
  return this._update(r), this._reseed++, Sr.encode(a, t);
};
var jf = Jn.assert;
function dn(n, e) {
  this.ec = n, this.priv = null, this.pub = null, e.priv && this._importPrivate(e.priv, e.privEnc), e.pub && this._importPublic(e.pub, e.pubEnc);
}
var C0 = dn;
dn.fromPublic = function(e, t, r) {
  return t instanceof dn ? t : new dn(e, {
    pub: t,
    pubEnc: r
  });
};
dn.fromPrivate = function(e, t, r) {
  return t instanceof dn ? t : new dn(e, {
    priv: t,
    privEnc: r
  });
};
dn.prototype.validate = function() {
  var e = this.getPublic();
  return e.isInfinity() ? { result: !1, reason: "Invalid public key" } : e.validate() ? e.mul(this.ec.curve.n).isInfinity() ? { result: !0, reason: null } : { result: !1, reason: "Public key * N != O" } : { result: !1, reason: "Public key is not a point" };
};
dn.prototype.getPublic = function(e, t) {
  return typeof e == "string" && (t = e, e = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), t ? this.pub.encode(t, e) : this.pub;
};
dn.prototype.getPrivate = function(e) {
  return e === "hex" ? this.priv.toString(16, 2) : this.priv;
};
dn.prototype._importPrivate = function(e, t) {
  this.priv = new ce(e, t || 16), this.priv = this.priv.umod(this.ec.curve.n);
};
dn.prototype._importPublic = function(e, t) {
  if (e.x || e.y) {
    this.ec.curve.type === "mont" ? jf(e.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && jf(e.x && e.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(e.x, e.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(e, t);
};
dn.prototype.derive = function(e) {
  return e.validate() || jf(e.validate(), "public point not validated"), e.mul(this.priv).getX();
};
dn.prototype.sign = function(e, t, r) {
  return this.ec.sign(e, this, t, r);
};
dn.prototype.verify = function(e, t) {
  return this.ec.verify(e, t, this);
};
dn.prototype.inspect = function() {
  return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
};
var c_ = Jn.assert;
function Id(n, e) {
  if (n instanceof Id)
    return n;
  this._importDER(n, e) || (c_(n.r && n.s, "Signature without r or s"), this.r = new ce(n.r, 16), this.s = new ce(n.s, 16), n.recoveryParam === void 0 ? this.recoveryParam = null : this.recoveryParam = n.recoveryParam);
}
var kd = Id;
function d_() {
  this.place = 0;
}
function Hp(n, e) {
  var t = n[e.place++];
  if (!(t & 128))
    return t;
  var r = t & 15;
  if (r === 0 || r > 4)
    return !1;
  for (var i = 0, s = 0, a = e.place; s < r; s++, a++)
    i <<= 8, i |= n[a], i >>>= 0;
  return i <= 127 ? !1 : (e.place = a, i);
}
function Ug(n) {
  for (var e = 0, t = n.length - 1; !n[e] && !(n[e + 1] & 128) && e < t; )
    e++;
  return e === 0 ? n : n.slice(e);
}
Id.prototype._importDER = function(e, t) {
  e = Jn.toArray(e, t);
  var r = new d_();
  if (e[r.place++] !== 48)
    return !1;
  var i = Hp(e, r);
  if (i === !1 || i + r.place !== e.length || e[r.place++] !== 2)
    return !1;
  var s = Hp(e, r);
  if (s === !1)
    return !1;
  var a = e.slice(r.place, s + r.place);
  if (r.place += s, e[r.place++] !== 2)
    return !1;
  var o = Hp(e, r);
  if (o === !1 || e.length !== o + r.place)
    return !1;
  var u = e.slice(r.place, o + r.place);
  if (a[0] === 0)
    if (a[1] & 128)
      a = a.slice(1);
    else
      return !1;
  if (u[0] === 0)
    if (u[1] & 128)
      u = u.slice(1);
    else
      return !1;
  return this.r = new ce(a), this.s = new ce(u), this.recoveryParam = null, !0;
};
function Kp(n, e) {
  if (e < 128) {
    n.push(e);
    return;
  }
  var t = 1 + (Math.log(e) / Math.LN2 >>> 3);
  for (n.push(t | 128); --t; )
    n.push(e >>> (t << 3) & 255);
  n.push(e);
}
Id.prototype.toDER = function(e) {
  var t = this.r.toArray(), r = this.s.toArray();
  for (t[0] & 128 && (t = [0].concat(t)), r[0] & 128 && (r = [0].concat(r)), t = Ug(t), r = Ug(r); !r[0] && !(r[1] & 128); )
    r = r.slice(1);
  var i = [2];
  Kp(i, t.length), i = i.concat(t), i.push(2), Kp(i, r.length);
  var s = i.concat(r), a = [48];
  return Kp(a, s.length), a = a.concat(s), Jn.encode(a, e);
};
var p_ = function() {
  throw new Error("unsupported");
}, o6 = Jn.assert;
function cr(n) {
  if (!(this instanceof cr))
    return new cr(n);
  typeof n == "string" && (o6(
    Object.prototype.hasOwnProperty.call(oc, n),
    "Unknown curve " + n
  ), n = oc[n]), n instanceof oc.PresetCurve && (n = { curve: n }), this.curve = n.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = n.curve.g, this.g.precompute(n.curve.n.bitLength() + 1), this.hash = n.hash || n.curve.hash;
}
var f_ = cr;
cr.prototype.keyPair = function(e) {
  return new C0(this, e);
};
cr.prototype.keyFromPrivate = function(e, t) {
  return C0.fromPrivate(this, e, t);
};
cr.prototype.keyFromPublic = function(e, t) {
  return C0.fromPublic(this, e, t);
};
cr.prototype.genKeyPair = function(e) {
  e || (e = {});
  for (var t = new a6({
    hash: this.hash,
    pers: e.pers,
    persEnc: e.persEnc || "utf8",
    entropy: e.entropy || p_(this.hash.hmacStrength),
    entropyEnc: e.entropy && e.entropyEnc || "utf8",
    nonce: this.n.toArray()
  }), r = this.n.byteLength(), i = this.n.sub(new ce(2)); ; ) {
    var s = new ce(t.generate(r));
    if (!(s.cmp(i) > 0))
      return s.iaddn(1), this.keyFromPrivate(s);
  }
};
cr.prototype._truncateToN = function(e, t) {
  var r = e.byteLength() * 8 - this.n.bitLength();
  return r > 0 && (e = e.ushrn(r)), !t && e.cmp(this.n) >= 0 ? e.sub(this.n) : e;
};
cr.prototype.sign = function(e, t, r, i) {
  typeof r == "object" && (i = r, r = null), i || (i = {}), t = this.keyFromPrivate(t, r), e = this._truncateToN(new ce(e, 16));
  for (var s = this.n.byteLength(), a = t.getPrivate().toArray("be", s), o = e.toArray("be", s), u = new a6({
    hash: this.hash,
    entropy: a,
    nonce: o,
    pers: i.pers,
    persEnc: i.persEnc || "utf8"
  }), l = this.n.sub(new ce(1)), p = 0; ; p++) {
    var h = i.k ? i.k(p) : new ce(u.generate(this.n.byteLength()));
    if (h = this._truncateToN(h, !0), !(h.cmpn(1) <= 0 || h.cmp(l) >= 0)) {
      var b = this.g.mul(h);
      if (!b.isInfinity()) {
        var C = b.getX(), v = C.umod(this.n);
        if (v.cmpn(0) !== 0) {
          var T = h.invm(this.n).mul(v.mul(t.getPrivate()).iadd(e));
          if (T = T.umod(this.n), T.cmpn(0) !== 0) {
            var w = (b.getY().isOdd() ? 1 : 0) | (C.cmp(v) !== 0 ? 2 : 0);
            return i.canonical && T.cmp(this.nh) > 0 && (T = this.n.sub(T), w ^= 1), new kd({ r: v, s: T, recoveryParam: w });
          }
        }
      }
    }
  }
};
cr.prototype.verify = function(e, t, r, i) {
  e = this._truncateToN(new ce(e, 16)), r = this.keyFromPublic(r, i), t = new kd(t, "hex");
  var s = t.r, a = t.s;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0 || a.cmpn(1) < 0 || a.cmp(this.n) >= 0)
    return !1;
  var o = a.invm(this.n), u = o.mul(e).umod(this.n), l = o.mul(s).umod(this.n), p;
  return this.curve._maxwellTrick ? (p = this.g.jmulAdd(u, r.getPublic(), l), p.isInfinity() ? !1 : p.eqXToP(s)) : (p = this.g.mulAdd(u, r.getPublic(), l), p.isInfinity() ? !1 : p.getX().umod(this.n).cmp(s) === 0);
};
cr.prototype.recoverPubKey = function(n, e, t, r) {
  o6((3 & t) === t, "The recovery param is more than two bits"), e = new kd(e, r);
  var i = this.n, s = new ce(n), a = e.r, o = e.s, u = t & 1, l = t >> 1;
  if (a.cmp(this.curve.p.umod(this.curve.n)) >= 0 && l)
    throw new Error("Unable to find sencond key candinate");
  l ? a = this.curve.pointFromX(a.add(this.curve.n), u) : a = this.curve.pointFromX(a, u);
  var p = e.r.invm(i), h = i.sub(s).mul(p).umod(i), b = o.mul(p).umod(i);
  return this.g.mulAdd(h, a, b);
};
cr.prototype.getKeyRecoveryParam = function(n, e, t, r) {
  if (e = new kd(e, r), e.recoveryParam !== null)
    return e.recoveryParam;
  for (var i = 0; i < 4; i++) {
    var s;
    try {
      s = this.recoverPubKey(n, e, i);
    } catch {
      continue;
    }
    if (s.eq(t))
      return i;
  }
  throw new Error("Unable to find valid recovery factor");
};
var h_ = ko(function(n, e) {
  var t = e;
  t.version = "6.5.4", t.utils = Jn, t.rand = function() {
    throw new Error("unsupported");
  }, t.curve = ac, t.curves = oc, t.ec = f_, t.eddsa = null;
}), y_ = h_.ec;
const m_ = "signing-key/5.7.0", zf = new U(m_);
let qp = null;
function Br() {
  return qp || (qp = new y_("secp256k1")), qp;
}
class Xs {
  constructor(e) {
    z(this, "curve", "secp256k1"), z(this, "privateKey", J(e)), _u(this.privateKey) !== 32 && zf.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
    const t = Br().keyFromPrivate(W(this.privateKey));
    z(this, "publicKey", "0x" + t.getPublic(!1, "hex")), z(this, "compressedPublicKey", "0x" + t.getPublic(!0, "hex")), z(this, "_isSigningKey", !0);
  }
  _addPoint(e) {
    const t = Br().keyFromPublic(W(this.publicKey)), r = Br().keyFromPublic(W(e));
    return "0x" + t.pub.add(r.pub).encodeCompressed("hex");
  }
  signDigest(e) {
    const t = Br().keyFromPrivate(W(this.privateKey)), r = W(e);
    r.length !== 32 && zf.throwArgumentError("bad digest length", "digest", e);
    const i = t.sign(r, { canonical: !0 });
    return Ma({
      recoveryParam: i.recoveryParam,
      r: Pt("0x" + i.r.toString(16), 32),
      s: Pt("0x" + i.s.toString(16), 32)
    });
  }
  computeSharedSecret(e) {
    const t = Br().keyFromPrivate(W(this.privateKey)), r = Br().keyFromPublic(W(S0(e)));
    return Pt("0x" + t.derive(r.getPublic()).toString(16), 32);
  }
  static isSigningKey(e) {
    return !!(e && e._isSigningKey);
  }
}
function u6(n, e) {
  const t = Ma(e), r = { r: W(t.r), s: W(t.s) };
  return "0x" + Br().recoverPubKey(W(n), r, t.recoveryParam).encode("hex", !1);
}
function S0(n, e) {
  const t = W(n);
  if (t.length === 32) {
    const r = new Xs(t);
    return e ? "0x" + Br().keyFromPrivate(t).getPublic(!0, "hex") : r.publicKey;
  } else {
    if (t.length === 33)
      return e ? J(t) : "0x" + Br().keyFromPublic(t).getPublic(!1, "hex");
    if (t.length === 65)
      return e ? "0x" + Br().keyFromPublic(t).getPublic(!0, "hex") : J(t);
  }
  return zf.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}
const b_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  SigningKey: Xs,
  recoverPublicKey: u6,
  computePublicKey: S0
}, Symbol.toStringTag, { value: "Module" })), g_ = "transactions/5.7.0", un = new U(g_);
var Gf;
(function(n) {
  n[n.legacy = 0] = "legacy", n[n.eip2930 = 1] = "eip2930", n[n.eip1559 = 2] = "eip1559";
})(Gf || (Gf = {}));
function E0(n) {
  return n === "0x" ? null : ke(n);
}
function sn(n) {
  return n === "0x" ? wv : ne.from(n);
}
const x_ = [
  { name: "nonce", maxLength: 32, numeric: !0 },
  { name: "gasPrice", maxLength: 32, numeric: !0 },
  { name: "gasLimit", maxLength: 32, numeric: !0 },
  { name: "to", length: 20 },
  { name: "value", maxLength: 32, numeric: !0 },
  { name: "data" }
], v_ = {
  chainId: !0,
  data: !0,
  gasLimit: !0,
  gasPrice: !0,
  nonce: !0,
  to: !0,
  type: !0,
  value: !0
};
function ls(n) {
  const e = S0(n);
  return ke(Ci(Pe(Ci(e, 1)), 12));
}
function hl(n, e) {
  return ls(u6(W(n), e));
}
function Un(n, e) {
  const t = Gr(ne.from(n).toHexString());
  return t.length > 32 && un.throwArgumentError("invalid length for " + e, "transaction:" + e, n), t;
}
function Qp(n, e) {
  return {
    address: ke(n),
    storageKeys: (e || []).map((t, r) => (_u(t) !== 32 && un.throwArgumentError("invalid access list storageKey", `accessList[${n}:${r}]`, t), t.toLowerCase()))
  };
}
function yl(n) {
  if (Array.isArray(n))
    return n.map((t, r) => Array.isArray(t) ? (t.length > 2 && un.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${r}]`, t), Qp(t[0], t[1])) : Qp(t.address, t.storageKeys));
  const e = Object.keys(n).map((t) => {
    const r = n[t].reduce((i, s) => (i[s] = !0, i), {});
    return Qp(t, Object.keys(r).sort());
  });
  return e.sort((t, r) => t.address.localeCompare(r.address)), e;
}
function l6(n) {
  return yl(n).map((e) => [e.address, e.storageKeys]);
}
function c6(n, e) {
  if (n.gasPrice != null) {
    const r = ne.from(n.gasPrice), i = ne.from(n.maxFeePerGas || 0);
    r.eq(i) || un.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
      gasPrice: r,
      maxFeePerGas: i
    });
  }
  const t = [
    Un(n.chainId || 0, "chainId"),
    Un(n.nonce || 0, "nonce"),
    Un(n.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
    Un(n.maxFeePerGas || 0, "maxFeePerGas"),
    Un(n.gasLimit || 0, "gasLimit"),
    n.to != null ? ke(n.to) : "0x",
    Un(n.value || 0, "value"),
    n.data || "0x",
    l6(n.accessList || [])
  ];
  if (e) {
    const r = Ma(e);
    t.push(Un(r.recoveryParam, "recoveryParam")), t.push(Gr(r.r)), t.push(Gr(r.s));
  }
  return us(["0x02", oa(t)]);
}
function d6(n, e) {
  const t = [
    Un(n.chainId || 0, "chainId"),
    Un(n.nonce || 0, "nonce"),
    Un(n.gasPrice || 0, "gasPrice"),
    Un(n.gasLimit || 0, "gasLimit"),
    n.to != null ? ke(n.to) : "0x",
    Un(n.value || 0, "value"),
    n.data || "0x",
    l6(n.accessList || [])
  ];
  if (e) {
    const r = Ma(e);
    t.push(Un(r.recoveryParam, "recoveryParam")), t.push(Gr(r.r)), t.push(Gr(r.s));
  }
  return us(["0x01", oa(t)]);
}
function w_(n, e) {
  nv(n, v_);
  const t = [];
  x_.forEach(function(a) {
    let o = n[a.name] || [];
    const u = {};
    a.numeric && (u.hexPad = "left"), o = W(J(o, u)), a.length && o.length !== a.length && o.length > 0 && un.throwArgumentError("invalid length for " + a.name, "transaction:" + a.name, o), a.maxLength && (o = Gr(o), o.length > a.maxLength && un.throwArgumentError("invalid length for " + a.name, "transaction:" + a.name, o)), t.push(J(o));
  });
  let r = 0;
  if (n.chainId != null ? (r = n.chainId, typeof r != "number" && un.throwArgumentError("invalid transaction.chainId", "transaction", n)) : e && !dl(e) && e.v > 28 && (r = Math.floor((e.v - 35) / 2)), r !== 0 && (t.push(J(r)), t.push("0x"), t.push("0x")), !e)
    return oa(t);
  const i = Ma(e);
  let s = 27 + i.recoveryParam;
  return r !== 0 ? (t.pop(), t.pop(), t.pop(), s += r * 2 + 8, i.v > 28 && i.v !== s && un.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e)) : i.v !== s && un.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", e), t.push(J(s)), t.push(Gr(W(i.r))), t.push(Gr(W(i.s))), oa(t);
}
function Wf(n, e) {
  if (n.type == null || n.type === 0)
    return n.accessList != null && un.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", n), w_(n, e);
  switch (n.type) {
    case 1:
      return d6(n, e);
    case 2:
      return c6(n, e);
  }
  return un.throwError(`unsupported transaction type: ${n.type}`, U.errors.UNSUPPORTED_OPERATION, {
    operation: "serializeTransaction",
    transactionType: n.type
  });
}
function p6(n, e, t) {
  try {
    const r = sn(e[0]).toNumber();
    if (r !== 0 && r !== 1)
      throw new Error("bad recid");
    n.v = r;
  } catch {
    un.throwArgumentError("invalid v for transaction type: 1", "v", e[0]);
  }
  n.r = Pt(e[1], 32), n.s = Pt(e[2], 32);
  try {
    const r = Pe(t(n));
    n.from = hl(r, { r: n.r, s: n.s, recoveryParam: n.v });
  } catch {
  }
}
function T_(n) {
  const e = Md(n.slice(1));
  e.length !== 9 && e.length !== 12 && un.throwArgumentError("invalid component count for transaction type: 2", "payload", J(n));
  const t = sn(e[2]), r = sn(e[3]), i = {
    type: 2,
    chainId: sn(e[0]).toNumber(),
    nonce: sn(e[1]).toNumber(),
    maxPriorityFeePerGas: t,
    maxFeePerGas: r,
    gasPrice: null,
    gasLimit: sn(e[4]),
    to: E0(e[5]),
    value: sn(e[6]),
    data: e[7],
    accessList: yl(e[8])
  };
  return e.length === 9 || (i.hash = Pe(n), p6(i, e.slice(9), c6)), i;
}
function A_(n) {
  const e = Md(n.slice(1));
  e.length !== 8 && e.length !== 11 && un.throwArgumentError("invalid component count for transaction type: 1", "payload", J(n));
  const t = {
    type: 1,
    chainId: sn(e[0]).toNumber(),
    nonce: sn(e[1]).toNumber(),
    gasPrice: sn(e[2]),
    gasLimit: sn(e[3]),
    to: E0(e[4]),
    value: sn(e[5]),
    data: e[6],
    accessList: yl(e[7])
  };
  return e.length === 8 || (t.hash = Pe(n), p6(t, e.slice(8), d6)), t;
}
function C_(n) {
  const e = Md(n);
  e.length !== 9 && e.length !== 6 && un.throwArgumentError("invalid raw transaction", "rawTransaction", n);
  const t = {
    nonce: sn(e[0]).toNumber(),
    gasPrice: sn(e[1]),
    gasLimit: sn(e[2]),
    to: E0(e[3]),
    value: sn(e[4]),
    data: e[5],
    chainId: 0
  };
  if (e.length === 6)
    return t;
  try {
    t.v = ne.from(e[6]).toNumber();
  } catch {
    return t;
  }
  if (t.r = Pt(e[7], 32), t.s = Pt(e[8], 32), ne.from(t.r).isZero() && ne.from(t.s).isZero())
    t.chainId = t.v, t.v = 0;
  else {
    t.chainId = Math.floor((t.v - 35) / 2), t.chainId < 0 && (t.chainId = 0);
    let r = t.v - 27;
    const i = e.slice(0, 6);
    t.chainId !== 0 && (i.push(J(t.chainId)), i.push("0x"), i.push("0x"), r -= t.chainId * 2 + 8);
    const s = Pe(oa(i));
    try {
      t.from = hl(s, { r: J(t.r), s: J(t.s), recoveryParam: r });
    } catch {
    }
    t.hash = Pe(n);
  }
  return t.type = null, t;
}
function S_(n) {
  const e = W(n);
  if (e[0] > 127)
    return C_(e);
  switch (e[0]) {
    case 1:
      return A_(e);
    case 2:
      return T_(e);
  }
  return un.throwError(`unsupported transaction type: ${e[0]}`, U.errors.UNSUPPORTED_OPERATION, {
    operation: "parseTransaction",
    transactionType: e[0]
  });
}
const E_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  get TransactionTypes() {
    return Gf;
  },
  computeAddress: ls,
  recoverAddress: hl,
  accessListify: yl,
  serialize: Wf,
  parse: S_
}, Symbol.toStringTag, { value: "Module" })), M_ = "contracts/5.7.0";
var la = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const Et = new U(M_);
function Vc(n, e) {
  return la(this, void 0, void 0, function* () {
    const t = yield e;
    typeof t != "string" && Et.throwArgumentError("invalid address or ENS name", "name", t);
    try {
      return ke(t);
    } catch {
    }
    n || Et.throwError("a provider or signer is needed to resolve ENS names", U.errors.UNSUPPORTED_OPERATION, {
      operation: "resolveName"
    });
    const r = yield n.resolveName(t);
    return r == null && Et.throwArgumentError("resolver or addr is not configured for ENS name", "name", t), r;
  });
}
function uc(n, e, t) {
  return la(this, void 0, void 0, function* () {
    return Array.isArray(t) ? yield Promise.all(t.map((r, i) => uc(n, Array.isArray(e) ? e[i] : e[r.name], r))) : t.type === "address" ? yield Vc(n, e) : t.type === "tuple" ? yield uc(n, e, t.components) : t.baseType === "array" ? Array.isArray(e) ? yield Promise.all(e.map((r) => uc(n, r, t.arrayChildren))) : Promise.reject(Et.makeError("invalid value for array", U.errors.INVALID_ARGUMENT, {
      argument: "value",
      value: e
    })) : e;
  });
}
function Dd(n, e, t) {
  return la(this, void 0, void 0, function* () {
    let r = {};
    t.length === e.inputs.length + 1 && typeof t[t.length - 1] == "object" && (r = Hn(t.pop())), Et.checkArgumentCount(t.length, e.inputs.length, "passed to contract"), n.signer ? r.from ? r.from = Ur({
      override: Vc(n.signer, r.from),
      signer: n.signer.getAddress()
    }).then((l) => la(this, void 0, void 0, function* () {
      return ke(l.signer) !== l.override && Et.throwError("Contract with a Signer cannot override from", U.errors.UNSUPPORTED_OPERATION, {
        operation: "overrides.from"
      }), l.override;
    })) : r.from = n.signer.getAddress() : r.from && (r.from = Vc(n.provider, r.from));
    const i = yield Ur({
      args: uc(n.signer || n.provider, t, e.inputs),
      address: n.resolvedAddress,
      overrides: Ur(r) || {}
    }), s = n.interface.encodeFunctionData(e, i.args), a = {
      data: s,
      to: i.address
    }, o = i.overrides;
    if (o.nonce != null && (a.nonce = ne.from(o.nonce).toNumber()), o.gasLimit != null && (a.gasLimit = ne.from(o.gasLimit)), o.gasPrice != null && (a.gasPrice = ne.from(o.gasPrice)), o.maxFeePerGas != null && (a.maxFeePerGas = ne.from(o.maxFeePerGas)), o.maxPriorityFeePerGas != null && (a.maxPriorityFeePerGas = ne.from(o.maxPriorityFeePerGas)), o.from != null && (a.from = o.from), o.type != null && (a.type = o.type), o.accessList != null && (a.accessList = yl(o.accessList)), a.gasLimit == null && e.gas != null) {
      let l = 21e3;
      const p = W(s);
      for (let h = 0; h < p.length; h++)
        l += 4, p[h] && (l += 64);
      a.gasLimit = ne.from(e.gas).add(l);
    }
    if (o.value) {
      const l = ne.from(o.value);
      !l.isZero() && !e.payable && Et.throwError("non-payable method cannot override value", U.errors.UNSUPPORTED_OPERATION, {
        operation: "overrides.value",
        value: r.value
      }), a.value = l;
    }
    o.customData && (a.customData = Hn(o.customData)), o.ccipReadEnabled && (a.ccipReadEnabled = !!o.ccipReadEnabled), delete r.nonce, delete r.gasLimit, delete r.gasPrice, delete r.from, delete r.value, delete r.type, delete r.accessList, delete r.maxFeePerGas, delete r.maxPriorityFeePerGas, delete r.customData, delete r.ccipReadEnabled;
    const u = Object.keys(r).filter((l) => r[l] != null);
    return u.length && Et.throwError(`cannot override ${u.map((l) => JSON.stringify(l)).join(",")}`, U.errors.UNSUPPORTED_OPERATION, {
      operation: "overrides",
      overrides: u
    }), a;
  });
}
function __(n, e) {
  return function(...t) {
    return Dd(n, e, t);
  };
}
function R_(n, e) {
  const t = n.signer || n.provider;
  return function(...r) {
    return la(this, void 0, void 0, function* () {
      t || Et.throwError("estimate require a provider or signer", U.errors.UNSUPPORTED_OPERATION, {
        operation: "estimateGas"
      });
      const i = yield Dd(n, e, r);
      return yield t.estimateGas(i);
    });
  };
}
function P_(n, e) {
  const t = e.wait.bind(e);
  e.wait = (r) => t(r).then((i) => (i.events = i.logs.map((s) => {
    let a = ia(s), o = null;
    try {
      o = n.interface.parseLog(s);
    } catch {
    }
    return o && (a.args = o.args, a.decode = (u, l) => n.interface.decodeEventLog(o.eventFragment, u, l), a.event = o.name, a.eventSignature = o.signature), a.removeListener = () => n.provider, a.getBlock = () => n.provider.getBlock(i.blockHash), a.getTransaction = () => n.provider.getTransaction(i.transactionHash), a.getTransactionReceipt = () => Promise.resolve(i), a;
  }), i));
}
function f6(n, e, t) {
  const r = n.signer || n.provider;
  return function(...i) {
    return la(this, void 0, void 0, function* () {
      let s;
      if (i.length === e.inputs.length + 1 && typeof i[i.length - 1] == "object") {
        const u = Hn(i.pop());
        u.blockTag != null && (s = yield u.blockTag), delete u.blockTag, i.push(u);
      }
      n.deployTransaction != null && (yield n._deployed(s));
      const a = yield Dd(n, e, i), o = yield r.call(a, s);
      try {
        let u = n.interface.decodeFunctionResult(e, o);
        return t && e.outputs.length === 1 && (u = u[0]), u;
      } catch (u) {
        throw u.code === U.errors.CALL_EXCEPTION && (u.address = n.address, u.args = i, u.transaction = a), u;
      }
    });
  };
}
function O_(n, e) {
  return function(...t) {
    return la(this, void 0, void 0, function* () {
      n.signer || Et.throwError("sending a transaction requires a signer", U.errors.UNSUPPORTED_OPERATION, {
        operation: "sendTransaction"
      }), n.deployTransaction != null && (yield n._deployed());
      const r = yield Dd(n, e, t), i = yield n.signer.sendTransaction(r);
      return P_(n, i), i;
    });
  };
}
function Vg(n, e, t) {
  return e.constant ? f6(n, e, t) : O_(n, e);
}
function h6(n) {
  return n.address && (n.topics == null || n.topics.length === 0) ? "*" : (n.address || "*") + "@" + (n.topics ? n.topics.map((e) => Array.isArray(e) ? e.join("|") : e).join(":") : "");
}
class Du {
  constructor(e, t) {
    z(this, "tag", e), z(this, "filter", t), this._listeners = [];
  }
  addListener(e, t) {
    this._listeners.push({ listener: e, once: t });
  }
  removeListener(e) {
    let t = !1;
    this._listeners = this._listeners.filter((r) => t || r.listener !== e ? !0 : (t = !0, !1));
  }
  removeAllListeners() {
    this._listeners = [];
  }
  listeners() {
    return this._listeners.map((e) => e.listener);
  }
  listenerCount() {
    return this._listeners.length;
  }
  run(e) {
    const t = this.listenerCount();
    return this._listeners = this._listeners.filter((r) => {
      const i = e.slice();
      return setTimeout(() => {
        r.listener.apply(this, i);
      }, 0), !r.once;
    }), t;
  }
  prepareEvent(e) {
  }
  getEmit(e) {
    return [e];
  }
}
class I_ extends Du {
  constructor() {
    super("error", null);
  }
}
class jg extends Du {
  constructor(e, t, r, i) {
    const s = {
      address: e
    };
    let a = t.getEventTopic(r);
    i ? (a !== i[0] && Et.throwArgumentError("topic mismatch", "topics", i), s.topics = i.slice()) : s.topics = [a], super(h6(s), s), z(this, "address", e), z(this, "interface", t), z(this, "fragment", r);
  }
  prepareEvent(e) {
    super.prepareEvent(e), e.event = this.fragment.name, e.eventSignature = this.fragment.format(), e.decode = (t, r) => this.interface.decodeEventLog(this.fragment, t, r);
    try {
      e.args = this.interface.decodeEventLog(this.fragment, e.data, e.topics);
    } catch (t) {
      e.args = null, e.decodeError = t;
    }
  }
  getEmit(e) {
    const t = ov(e.args);
    if (t.length)
      throw t[0].error;
    const r = (e.args || []).slice();
    return r.push(e), r;
  }
}
class zg extends Du {
  constructor(e, t) {
    super("*", { address: e }), z(this, "address", e), z(this, "interface", t);
  }
  prepareEvent(e) {
    super.prepareEvent(e);
    try {
      const t = this.interface.parseLog(e);
      e.event = t.name, e.eventSignature = t.signature, e.decode = (r, i) => this.interface.decodeEventLog(t.eventFragment, r, i), e.args = t.args;
    } catch {
    }
  }
}
class k_ {
  constructor(e, t, r) {
    z(this, "interface", Ka(new.target, "getInterface")(t)), r == null ? (z(this, "provider", null), z(this, "signer", null)) : Ro.isSigner(r) ? (z(this, "provider", r.provider || null), z(this, "signer", r)) : Pd.isProvider(r) ? (z(this, "provider", r), z(this, "signer", null)) : Et.throwArgumentError("invalid signer or provider", "signerOrProvider", r), z(this, "callStatic", {}), z(this, "estimateGas", {}), z(this, "functions", {}), z(this, "populateTransaction", {}), z(this, "filters", {});
    {
      const a = {};
      Object.keys(this.interface.events).forEach((o) => {
        const u = this.interface.events[o];
        z(this.filters, o, (...l) => ({
          address: this.address,
          topics: this.interface.encodeFilterTopics(u, l)
        })), a[u.name] || (a[u.name] = []), a[u.name].push(o);
      }), Object.keys(a).forEach((o) => {
        const u = a[o];
        u.length === 1 ? z(this.filters, o, this.filters[u[0]]) : Et.warn(`Duplicate definition of ${o} (${u.join(", ")})`);
      });
    }
    if (z(this, "_runningEvents", {}), z(this, "_wrappedEmits", {}), e == null && Et.throwArgumentError("invalid contract address or ENS name", "addressOrName", e), z(this, "address", e), this.provider)
      z(this, "resolvedAddress", Vc(this.provider, e));
    else
      try {
        z(this, "resolvedAddress", Promise.resolve(ke(e)));
      } catch {
        Et.throwError("provider is required to use ENS name as contract address", U.errors.UNSUPPORTED_OPERATION, {
          operation: "new Contract"
        });
      }
    this.resolvedAddress.catch((a) => {
    });
    const i = {}, s = {};
    Object.keys(this.interface.functions).forEach((a) => {
      const o = this.interface.functions[a];
      if (s[a]) {
        Et.warn(`Duplicate ABI entry for ${JSON.stringify(a)}`);
        return;
      }
      s[a] = !0;
      {
        const u = o.name;
        i[`%${u}`] || (i[`%${u}`] = []), i[`%${u}`].push(a);
      }
      this[a] == null && z(this, a, Vg(this, o, !0)), this.functions[a] == null && z(this.functions, a, Vg(this, o, !1)), this.callStatic[a] == null && z(this.callStatic, a, f6(this, o, !0)), this.populateTransaction[a] == null && z(this.populateTransaction, a, __(this, o)), this.estimateGas[a] == null && z(this.estimateGas, a, R_(this, o));
    }), Object.keys(i).forEach((a) => {
      const o = i[a];
      if (o.length > 1)
        return;
      a = a.substring(1);
      const u = o[0];
      try {
        this[a] == null && z(this, a, this[u]);
      } catch {
      }
      this.functions[a] == null && z(this.functions, a, this.functions[u]), this.callStatic[a] == null && z(this.callStatic, a, this.callStatic[u]), this.populateTransaction[a] == null && z(this.populateTransaction, a, this.populateTransaction[u]), this.estimateGas[a] == null && z(this.estimateGas, a, this.estimateGas[u]);
    });
  }
  static getContractAddress(e) {
    return bv(e);
  }
  static getInterface(e) {
    return $f.isInterface(e) ? e : new $f(e);
  }
  deployed() {
    return this._deployed();
  }
  _deployed(e) {
    return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then(() => this) : this._deployedPromise = this.provider.getCode(this.address, e).then((t) => (t === "0x" && Et.throwError("contract not deployed", U.errors.UNSUPPORTED_OPERATION, {
      contractAddress: this.address,
      operation: "getDeployed"
    }), this))), this._deployedPromise;
  }
  fallback(e) {
    this.signer || Et.throwError("sending a transactions require a signer", U.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction(fallback)" });
    const t = Hn(e || {});
    return ["from", "to"].forEach(function(r) {
      t[r] != null && Et.throwError("cannot override " + r, U.errors.UNSUPPORTED_OPERATION, { operation: r });
    }), t.to = this.resolvedAddress, this.deployed().then(() => this.signer.sendTransaction(t));
  }
  connect(e) {
    typeof e == "string" && (e = new w0(e, this.provider));
    const t = new this.constructor(this.address, this.interface, e);
    return this.deployTransaction && z(t, "deployTransaction", this.deployTransaction), t;
  }
  attach(e) {
    return new this.constructor(e, this.interface, this.signer || this.provider);
  }
  static isIndexed(e) {
    return $c.isIndexed(e);
  }
  _normalizeRunningEvent(e) {
    return this._runningEvents[e.tag] ? this._runningEvents[e.tag] : e;
  }
  _getRunningEvent(e) {
    if (typeof e == "string") {
      if (e === "error")
        return this._normalizeRunningEvent(new I_());
      if (e === "event")
        return this._normalizeRunningEvent(new Du("event", null));
      if (e === "*")
        return this._normalizeRunningEvent(new zg(this.address, this.interface));
      const t = this.interface.getEvent(e);
      return this._normalizeRunningEvent(new jg(this.address, this.interface, t));
    }
    if (e.topics && e.topics.length > 0) {
      try {
        const r = e.topics[0];
        if (typeof r != "string")
          throw new Error("invalid topic");
        const i = this.interface.getEvent(r);
        return this._normalizeRunningEvent(new jg(this.address, this.interface, i, e.topics));
      } catch {
      }
      const t = {
        address: this.address,
        topics: e.topics
      };
      return this._normalizeRunningEvent(new Du(h6(t), t));
    }
    return this._normalizeRunningEvent(new zg(this.address, this.interface));
  }
  _checkRunningEvents(e) {
    if (e.listenerCount() === 0) {
      delete this._runningEvents[e.tag];
      const t = this._wrappedEmits[e.tag];
      t && e.filter && (this.provider.off(e.filter, t), delete this._wrappedEmits[e.tag]);
    }
  }
  _wrapEvent(e, t, r) {
    const i = ia(t);
    return i.removeListener = () => {
      !r || (e.removeListener(r), this._checkRunningEvents(e));
    }, i.getBlock = () => this.provider.getBlock(t.blockHash), i.getTransaction = () => this.provider.getTransaction(t.transactionHash), i.getTransactionReceipt = () => this.provider.getTransactionReceipt(t.transactionHash), e.prepareEvent(i), i;
  }
  _addEventListener(e, t, r) {
    if (this.provider || Et.throwError("events require a provider or a signer with a provider", U.errors.UNSUPPORTED_OPERATION, { operation: "once" }), e.addListener(t, r), this._runningEvents[e.tag] = e, !this._wrappedEmits[e.tag]) {
      const i = (s) => {
        let a = this._wrapEvent(e, s, t);
        if (a.decodeError == null)
          try {
            const o = e.getEmit(a);
            this.emit(e.filter, ...o);
          } catch (o) {
            a.decodeError = o.error;
          }
        e.filter != null && this.emit("event", a), a.decodeError != null && this.emit("error", a.decodeError, a);
      };
      this._wrappedEmits[e.tag] = i, e.filter != null && this.provider.on(e.filter, i);
    }
  }
  queryFilter(e, t, r) {
    const i = this._getRunningEvent(e), s = Hn(i.filter);
    return typeof t == "string" && vt(t, 32) ? (r != null && Et.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", r), s.blockHash = t) : (s.fromBlock = t ?? 0, s.toBlock = r ?? "latest"), this.provider.getLogs(s).then((a) => a.map((o) => this._wrapEvent(i, o, null)));
  }
  on(e, t) {
    return this._addEventListener(this._getRunningEvent(e), t, !1), this;
  }
  once(e, t) {
    return this._addEventListener(this._getRunningEvent(e), t, !0), this;
  }
  emit(e, ...t) {
    if (!this.provider)
      return !1;
    const r = this._getRunningEvent(e), i = r.run(t) > 0;
    return this._checkRunningEvents(r), i;
  }
  listenerCount(e) {
    return this.provider ? e == null ? Object.keys(this._runningEvents).reduce((t, r) => t + this._runningEvents[r].listenerCount(), 0) : this._getRunningEvent(e).listenerCount() : 0;
  }
  listeners(e) {
    if (!this.provider)
      return [];
    if (e == null) {
      const t = [];
      for (let r in this._runningEvents)
        this._runningEvents[r].listeners().forEach((i) => {
          t.push(i);
        });
      return t;
    }
    return this._getRunningEvent(e).listeners();
  }
  removeAllListeners(e) {
    if (!this.provider)
      return this;
    if (e == null) {
      for (const r in this._runningEvents) {
        const i = this._runningEvents[r];
        i.removeAllListeners(), this._checkRunningEvents(i);
      }
      return this;
    }
    const t = this._getRunningEvent(e);
    return t.removeAllListeners(), this._checkRunningEvents(t), this;
  }
  off(e, t) {
    if (!this.provider)
      return this;
    const r = this._getRunningEvent(e);
    return r.removeListener(t), this._checkRunningEvents(r), this;
  }
  removeListener(e, t) {
    return this.off(e, t);
  }
}
class y6 extends k_ {
}
function m6(n) {
  return function(e, t, r) {
    const i = `${e.constructor.name}_${t}`, s = r.value;
    return r.value = function(...a) {
      const { storage: o } = n.call(this), u = `${i}_${JSON.stringify(a)}`;
      let l = o.getItem(u);
      return l || (l = s?.apply(this, a), o.setItem(u, l), l);
    }, r;
  };
}
var D_ = Object.defineProperty, B_ = Object.getOwnPropertyDescriptor, b6 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? B_(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && D_(e, t, i), i;
}, Gg = (n, e) => (t, r) => e(t, r, n);
const Do = pe.createInterface();
let po = class {
  constructor(n, e) {
    this.cacheService = n, this.readOnlyProvider = e;
  }
  static register(n) {
    de.singleton(Do, po).register(n);
  }
  callPopulateTransaction(n, e, ...t) {
    return n.populateTransaction[e].call(t);
  }
  async getContract(n, e, t, r) {
    const a = (eS ? await Fp(/* @__PURE__ */ Object.assign({ "../../contracts/governance/celo-test.json": () => Promise.resolve().then(() => $k), "../../contracts/monetary/celo-test.json": () => Promise.resolve().then(() => Uk) }), `../../contracts/${n}/celo-test.json`) : await Fp(/* @__PURE__ */ Object.assign({ "../../contracts/governance/celo.json": () => Promise.resolve().then(() => jk), "../../contracts/map/celo.json": () => Promise.resolve().then(() => Gk), "../../contracts/monetary/celo.json": () => Promise.resolve().then(() => Hk) }), `../../contracts/${n}/celo.json`)).contracts[e];
    let o = a.abi;
    if (typeof o == "string") {
      const u = o;
      o = await this.getSharedAbi(n, u);
    }
    if (t = t ?? a.address, !t)
      throw new Error(`ContractService: requested contract has no address: ${e}`);
    return new y6(t, o, r ?? this.readOnlyProvider);
  }
  async getSharedAbi(n, e) {
    return (await Fp(/* @__PURE__ */ Object.assign({ "../../contracts/governance/sharedAbis.json": () => Promise.resolve().then(() => qk), "../../contracts/map/sharedAbis.json": () => Promise.resolve().then(() => Jk), "../../contracts/monetary/sharedAbis.json": () => Promise.resolve().then(() => Xk) }), `../../contracts/${n}/sharedAbis.json`))[e];
  }
};
b6([
  m6(function() {
    return { storage: this.cacheService };
  })
], po.prototype, "getContract", 1);
po = b6([
  Gg(0, cl),
  Gg(1, p0)
], po);
var F_ = Object.defineProperty, N_ = Object.getOwnPropertyDescriptor, $_ = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? N_(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && F_(e, t, i), i;
}, L_ = (n, e) => (t, r) => e(t, r, n);
const g6 = pe.createInterface(), M0 = pe.createInterface();
let Bu = class {
  constructor(n) {
    this.container = n;
  }
  static register(n) {
    n.register(de.singleton(M0, Bu));
  }
  fireStore;
  async connect() {
    const { getFirestore: n } = await Promise.resolve().then(() => _2);
    return this.fireStore ??= n(await this.container.get(g6)), this.fireStore;
  }
  async getDocs(n, e, t, r) {
    const { getDocs: i, query: s, collection: a, where: o, orderBy: u } = await Promise.resolve().then(() => _2);
    return (await i(
      s(a(await this.connect(), n), o(r.fieldPath, r.opStr, r.value), u(e, t))
    )).docs.map((p) => p.data());
  }
};
Bu = $_([
  L_(0, xo)
], Bu);
var U_ = Object.defineProperty, V_ = Object.getOwnPropertyDescriptor, j_ = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? V_(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && U_(e, t, i), i;
}, z_ = (n, e) => (t, r) => e(t, r, n);
const ml = pe.createInterface("NumberService");
let Fu = class {
  constructor(n) {
    this.i18n = n;
  }
  static register(n) {
    n.register(de.singleton(ml, Fu));
  }
  toString(n, e) {
    if (n === null || typeof n > "u" || typeof n == "string")
      return n;
    if (ne.isBigNumber(n) && (n = n.toNumber()), Number.isNaN(n))
      return "NaN";
    const t = e?.useGrouping ?? !0, r = e?.isPercentage ?? !1, i = e?.isCurrency ?? !1;
    let s = this.fromString(e?.fractionDigits);
    isNaN(s) && (s = 2);
    const a = i ? { style: "currency", currency: "USD" } : r ? { style: "percent" } : { style: "decimal" };
    return this.i18n.nf(
      n,
      Object.assign(a, {
        useGrouping: t,
        minimumFractionDigits: s,
        maximumFractionDigits: s
      })
    );
  }
  fromString(n) {
    return n === null || typeof n > "u" ? NaN : typeof n == "number" ? n : this.i18n.uf(n);
  }
};
Fu = j_([
  z_(0, Sa)
], Fu);
const x6 = pe.createInterface();
var G_ = Object.defineProperty, W_ = Object.getOwnPropertyDescriptor, v6 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? W_(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && G_(e, t, i), i;
}, Jp = (n, e) => (t, r) => e(t, r, n);
const _0 = pe.createInterface();
let fo = class {
  constructor(n, e, t) {
    this.cacheService = n, this.contractService = e, this.readonlyProvider = t;
  }
  static register(n) {
    de.singleton(_0, fo).register(n);
  }
  async getTokenContract(n, e, t) {
    const r = e ? await this.contractService.getSharedAbi("monetary", "ERC721") : await this.contractService.getSharedAbi("monetary", "ERC20");
    return new y6(n, r, t ?? this.readonlyProvider);
  }
};
v6([
  m6(function() {
    return { storage: this.cacheService };
  })
], fo.prototype, "getTokenContract", 1);
fo = v6([
  Jp(0, cl),
  Jp(1, Do),
  Jp(2, p0)
], fo);
const H_ = pe.createInterface();
var K_ = Object.defineProperty, q_ = Object.getOwnPropertyDescriptor, Q_ = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? q_(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && K_(e, t, i), i;
}, J_ = (n, e) => (t, r) => e(t, r, n);
const R0 = pe.createInterface();
let jc = class {
  constructor(n) {
    this.client = n;
  }
  static register(n) {
    n.register(de.singleton(R0, jc));
  }
  async all(n) {
    const e = [];
    for await (const t of n)
      e.push(t);
    return e;
  }
  save(n, e = !0) {
    return typeof n == "string" ? this.client.add(
      { content: n },
      {
        pin: e
      }
    ).then((t) => t.cid) : this.client.dag.put(n, {
      pin: e
    });
  }
  async get(n, e = !1, t) {
    const r = (await Promise.resolve().then(() => FD)).CID.asCID(n);
    if (!!r) {
      if (!e) {
        const i = this.client.cat(n), s = (await Promise.resolve().then(() => $D)).concat(await this.all(i));
        return (await Promise.resolve().then(() => uF)).toString(s);
      }
      return JSON.stringify((await this.client.dag.get(r, { path: t })).value);
    }
  }
};
jc = Q_([
  J_(0, H_)
], jc);
const Y_ = "@kolektivo/dapp", X_ = "A collection of institutional technologies that open up new opportunities for local communities to govern and finance their own regenerative economies.", Z_ = "1.0.0", eR = {
  type: "git",
  url: "https://github.com/Kolektivo/dapp"
}, tR = "CL Cybernetix GmbH", nR = "./", rR = "MIT", iR = {
  node: ">=16.0.0"
}, sR = {
  http: !1
}, aR = {
  "lint:js": "eslint src --ext .js,.ts",
  "lint:fix": "eslint src  --fix",
  "lint:scss:fix": 'stylelint "src/**/*.scss" --fix',
  "lint:scss": 'stylelint "src/**/*.scss"',
  "lint:html": "htmlhint -c .htmlhintrc src design-system ",
  lint: "npm run lint:js && npm run lint:html && npm run lint:scss",
  clean: "npx -y rimraf node_modules package-lock.json && npm i",
  dev: "vite",
  start: "vite",
  typecheck: "tsc",
  build: "tsc && vite build",
  "build:chart-data-script": "vite build --config vite.config-lib.ts",
  "build:dev:chart-data-script": "vite build --config vite.config-lib.ts --mode development",
  "build:dev": "vite build --mode development",
  "preview-build": "vite preview --open",
  postinstall: "node build/postinstall/index.mjs",
  test: "vitest --no-threads",
  "test:ui": "vitest --ui",
  coverage: "vitest run --coverage",
  e2e: "playwright test",
  "e2e:watch": "playwright test --watch",
  "e2e:ci": "URL=$npm_config_url playwright test",
  "vercel:deploy": "vercel --token $npm_config_token",
  "vercel:deploy:production": "vercel --prod --token $npm_config_token",
  "vercel:alias": "vercel alias set $npm_config_deployment $npm_config_branch --token $npm_config_token --scope $npm_config_scope"
}, oR = {
  "@aurelia/i18n": "dev",
  "@aurelia/validation-html": "dev",
  "@celo-tools/celo-ethers-wrapper": "^0.3.0",
  "@dethcrypto/eth-sdk": "^0.3.3",
  "@dethcrypto/eth-sdk-client": "^0.1.6",
  "@material-design-icons/svg": "^0.13.0",
  "@metamask/detect-provider": "^2.0.0",
  "@metamask/providers": "^10.0.0",
  "@walletconnect/web3-provider": "^1.8.0",
  aurelia: "dev",
  "browserify-zlib": "^0.2.0",
  buffer: "^6.0.3",
  "chart.js": "^3.9.1",
  cids: "^1.1.9",
  ethers: "^5.7.2",
  events: "^3.3.0",
  firebase: "^9.12.1",
  "i18next-chained-backend": "^4.0.0",
  "i18next-http-backend": "^2.0.0",
  "i18next-intervalplural-postprocessor": "^3.0.0",
  "i18next-localstorage-backend": "^4.0.0",
  "ipfs-core": "^0.16.1",
  "ipfs-http-client": "^58.0.1",
  "lit-js-sdk": "^1.2.17",
  process: "^0.11.10",
  "stream-browserify": "^3.0.0",
  uint8arrays: "^4.0.2",
  util: "^0.12.5",
  web3modal: "^1.9.9"
}, uR = {
  "eslint-plugin-simple-import-sort": "^8.0.0",
  "@aurelia/plugin-conventions": "dev",
  "@aurelia/testing": "dev",
  "@esbuild-plugins/node-globals-polyfill": "^0.1.1",
  "@playwright/test": "^1.27.1",
  "@rollup/plugin-inject": "^5.0.2",
  "@typechain/ethers-v5": "^10.1.0",
  "@types/node": "^18.11.4",
  "@typescript-eslint/eslint-plugin": "^5.40.1",
  "@typescript-eslint/parser": "^5.40.1",
  "@vitest/ui": "^0.24.3",
  "cross-env": "^7.0.3",
  eslint: "^8.26.0",
  "eslint-config-prettier": "^8.5.0",
  "eslint-import-resolver-typescript": "^3.5.2",
  "eslint-plugin-cypress": "^2.12.1",
  "eslint-plugin-import": "^2.26.0",
  "eslint-plugin-prettier": "^4.2.1",
  "eslint-plugin-unused-imports": "^2.0.0",
  "fs-extra": "^10.1.0",
  glob: "^8.0.3",
  "happy-dom": "^7.6.0",
  "html-loader": "^4.2.0",
  htmlhint: "^1.1.4",
  "http-browserify": "1.7.0",
  "https-browserify": "^1.0.0",
  postcss: "^8.4.18",
  "postcss-loader": "^7.0.1",
  "rollup-plugin-html": "^0.2.1",
  "rollup-plugin-polyfill-node": "^0.10.2",
  "rollup-plugin-swc": "^0.2.1",
  "rollup-plugin-visualizer": "^5.8.3",
  "rollup-pluginutils": "^2.8.2",
  sass: "^1.55.0",
  stylelint: "^14.14.0",
  "stylelint-config-prettier": "^9.0.3",
  "stylelint-config-standard": "^29.0.0",
  "stylelint-config-standard-scss": "^5.0.0",
  "stylelint-prettier": "^2.0.0",
  tslib: "^2.4.0",
  typescript: "~4.8.4",
  "unplugin-swc": "^1.3.2",
  vercel: "^28.4.12",
  vite: "^3.1.8",
  "vite-svg-loader": "^3.6.0",
  "vite-tsconfig-paths": "^3.5.2",
  vitest: "^0.24.3",
  "vitest-mock-extended": "^1.0.2"
}, lR = {
  terser: "npm:@swc/core"
}, cR = {
  name: Y_,
  description: X_,
  version: Z_,
  repository: eR,
  author: tR,
  homepage: nR,
  license: rR,
  engines: iR,
  browser: sR,
  scripts: aR,
  dependencies: oR,
  devDependencies: uR,
  resolutions: lR
}, P0 = pe.createInterface("BrowserStorageService");
class O0 {
  addVersion(e, t) {
    return {
      data: e,
      _version: t
    };
  }
  getKey(e) {
    return `${cR.name}.${e}`;
  }
  set(e, t, r, i) {
    const s = typeof i == "string" ? this.addVersion(r, i) : r;
    e.setItem(this.getKey(t), JSON.stringify(s));
  }
  get(e, t, r, i) {
    const s = e.getItem(this.getKey(t));
    if (typeof s == "string")
      try {
        const a = JSON.parse(s);
        if (typeof i == "string") {
          const o = a;
          return o._version === i ? o.data : r;
        } else
          return a;
      } catch {
        return r;
      }
    return r;
  }
  remove(e, t) {
    e.removeItem(this.getKey(t));
  }
  lsSet(e, t, r) {
    this.set(localStorage, e, t, r);
  }
  lsGet(e, t, r) {
    return this.get(localStorage, e, t, r);
  }
  lsRemove(e) {
    this.remove(localStorage, e);
  }
  ssSet(e, t, r) {
    this.set(sessionStorage, e, t, r);
  }
  ssGet(e, t, r) {
    return this.get(sessionStorage, e, t, r);
  }
  ssRemove(e) {
    this.remove(sessionStorage, e);
  }
  static register(e) {
    de.singleton(P0, O0).register(e);
  }
}
const dR = pe.createInterface(), bl = pe.createInterface();
var Hf = /* @__PURE__ */ ((n) => (n[n.MONETARY_CONTROLLER = 1] = "MONETARY_CONTROLLER", n[n.RESERVE_DELEGATE = 2] = "RESERVE_DELEGATE", n[n.RESERVE_VETO_DELEGATE = 3] = "RESERVE_VETO_DELEGATE", n[n.TOPOLOGY_DELEGATE = 4] = "TOPOLOGY_DELEGATE", n[n.ECOLOGY_DELEGATE = 5] = "ECOLOGY_DELEGATE", n[n.ECOLOGY_DELEGATE_PROPOSER = 6] = "ECOLOGY_DELEGATE_PROPOSER", n[n.RESERVE_ARBITRAGEUR = 7] = "RESERVE_ARBITRAGEUR", n[n.LOCAL_MULTI_SIG_MEMBER = 8] = "LOCAL_MULTI_SIG_MEMBER", n[n.TREASURY_DELEGATE = 101] = "TREASURY_DELEGATE", n[n.TREASURY_VETO_DELEGATE = 102] = "TREASURY_VETO_DELEGATE", n[n.TREASURY_ARBITRAGEUR = 103] = "TREASURY_ARBITRAGEUR", n[n.KOLEKTIVO_MULTI_SIG_MEMBER = 104] = "KOLEKTIVO_MULTI_SIG_MEMBER", n))(Hf || {}), pR = Object.defineProperty, fR = Object.getOwnPropertyDescriptor, hR = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? fR(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && pR(e, t, i), i;
}, Yp = (n, e) => (t, r) => e(t, r, n);
const w6 = pe.createInterface("EncryptionService");
let zc = class {
  constructor(n, e, t) {
    this.logger = n, this.container = e, this.config = t, this.logger.scopeTo("EncryptionService");
  }
  client;
  static register(n) {
    de.singleton(w6, zc).register(n);
  }
  authSig;
  encryptedSymmetricKey;
  get chain() {
    return this.config.chain.toLowerCase();
  }
  getAccessControlConditions(n) {
    return [
      {
        contractAddress: n,
        standardContractType: "ERC1155",
        chain: this.chain,
        method: "balanceOfBatch",
        parameters: [":userAddress,:userAddress", `${Hf.RESERVE_DELEGATE},${Hf.ECOLOGY_DELEGATE_PROPOSER}`],
        returnValueTest: {
          comparator: ">",
          value: "0"
        }
      }
    ];
  }
  async connect() {
    if (this.client)
      return;
    const n = await this.container.get(dR);
    return this.client = n, await this.client.connect();
  }
  async encrypt(n, e, t, r) {
    if (await this.connect(), !this.client)
      return;
    const i = {
      web3: e,
      account: t.toLowerCase(),
      chainId: this.config.chainId,
      expiration: new Date(Date.now() + 3e5)
    };
    this.authSig = await this.client.getAuthSig(i);
    const { encryptedString: s, symmetricKey: a } = await this.client.encryptString(n);
    return this.encryptedSymmetricKey = this.client.uint8arrayToString(
      await this.client.saveEncryptionKey({
        accessControlConditions: this.getAccessControlConditions(r),
        symmetricKey: a,
        authSig: this.authSig,
        chain: this.chain
      }),
      "base16"
    ), { encryptedString: s, symmetricKey: a };
  }
  async decryptAs(n, e) {
    if (await this.connect(), !this.client)
      throw new Error("No encryption client connected");
    const t = await this.client.getEncryptionKey({
      accessControlConditions: this.getAccessControlConditions(e),
      toDecrypt: this.encryptedSymmetricKey,
      chain: this.chain,
      authSig: this.authSig
    }), r = await this.client.decryptString(n, t);
    try {
      return JSON.parse(r);
    } catch {
      this.logger.info("Failed to parse data from LIT");
    }
    return r;
  }
};
zc = hR([
  Yp(0, xa),
  Yp(1, xo),
  Yp(2, bl)
], zc);
var I0 = {};
const yR = /* @__PURE__ */ St(M7), mR = /* @__PURE__ */ St(oE), bR = /* @__PURE__ */ St(zE);
class k0 {
  constructor(e) {
    z(this, "alphabet", e), z(this, "base", e.length), z(this, "_alphabetMap", {}), z(this, "_leader", e.charAt(0));
    for (let t = 0; t < e.length; t++)
      this._alphabetMap[e.charAt(t)] = t;
  }
  encode(e) {
    let t = W(e);
    if (t.length === 0)
      return "";
    let r = [0];
    for (let s = 0; s < t.length; ++s) {
      let a = t[s];
      for (let o = 0; o < r.length; ++o)
        a += r[o] << 8, r[o] = a % this.base, a = a / this.base | 0;
      for (; a > 0; )
        r.push(a % this.base), a = a / this.base | 0;
    }
    let i = "";
    for (let s = 0; t[s] === 0 && s < t.length - 1; ++s)
      i += this._leader;
    for (let s = r.length - 1; s >= 0; --s)
      i += this.alphabet[r[s]];
    return i;
  }
  decode(e) {
    if (typeof e != "string")
      throw new TypeError("Expected String");
    let t = [];
    if (e.length === 0)
      return new Uint8Array(t);
    t.push(0);
    for (let r = 0; r < e.length; r++) {
      let i = this._alphabetMap[e[r]];
      if (i === void 0)
        throw new Error("Non-base" + this.base + " character");
      let s = i;
      for (let a = 0; a < t.length; ++a)
        s += t[a] * this.base, t[a] = s & 255, s >>= 8;
      for (; s > 0; )
        t.push(s & 255), s >>= 8;
    }
    for (let r = 0; e[r] === this._leader && r < e.length - 1; ++r)
      t.push(0);
    return W(new Uint8Array(t.reverse()));
  }
}
const gR = new k0("abcdefghijklmnopqrstuvwxyz234567"), D0 = new k0("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"), xR = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BaseX: k0,
  Base32: gR,
  Base58: D0
}, Symbol.toStringTag, { value: "Module" })), vR = /* @__PURE__ */ St(xR), wR = /* @__PURE__ */ St(lS), TR = /* @__PURE__ */ St(C7);
var ho;
(function(n) {
  n.sha256 = "sha256", n.sha512 = "sha512";
})(ho || (ho = {}));
const AR = "sha2/5.7.0", CR = new U(AR);
function T6(n) {
  return "0x" + gn.ripemd160().update(W(n)).digest("hex");
}
function ca(n) {
  return "0x" + gn.sha256().update(W(n)).digest("hex");
}
function SR(n) {
  return "0x" + gn.sha512().update(W(n)).digest("hex");
}
function Nu(n, e, t) {
  return ho[n] || CR.throwError("unsupported algorithm " + n, U.errors.UNSUPPORTED_OPERATION, {
    operation: "hmac",
    algorithm: n
  }), "0x" + gn.hmac(gn[n], W(e)).update(W(t)).digest("hex");
}
const ER = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  computeHmac: Nu,
  ripemd160: T6,
  sha256: ca,
  sha512: SR,
  get SupportedAlgorithm() {
    return ho;
  }
}, Symbol.toStringTag, { value: "Module" }));
function B0(n, e, t, r, i) {
  n = W(n), e = W(e);
  let s, a = 1;
  const o = new Uint8Array(r), u = new Uint8Array(e.length + 4);
  u.set(e);
  let l, p;
  for (let h = 1; h <= a; h++) {
    u[e.length] = h >> 24 & 255, u[e.length + 1] = h >> 16 & 255, u[e.length + 2] = h >> 8 & 255, u[e.length + 3] = h & 255;
    let b = W(Nu(i, n, u));
    s || (s = b.length, p = new Uint8Array(s), a = Math.ceil(r / s), l = r - (a - 1) * s), p.set(b);
    for (let T = 1; T < t; T++) {
      b = W(Nu(i, n, b));
      for (let w = 0; w < s; w++)
        p[w] ^= b[w];
    }
    const C = (h - 1) * s, v = h === a ? l : s;
    o.set(W(p).slice(0, v), C);
  }
  return J(o);
}
const MR = "wordlists/5.7.0", _R = new U(MR);
class gl {
  constructor(e) {
    _R.checkAbstract(new.target, gl), z(this, "locale", e);
  }
  split(e) {
    return e.toLowerCase().split(/ +/g);
  }
  join(e) {
    return e.join(" ");
  }
  static check(e) {
    const t = [];
    for (let r = 0; r < 2048; r++) {
      const i = e.getWord(r);
      if (r !== e.getWordIndex(i))
        return "0x";
      t.push(i);
    }
    return rs(t.join(`
`) + `
`);
  }
  static register(e, t) {
    t || (t = e.locale);
  }
}
const RR = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
let du = null;
function Wg(n) {
  if (du == null && (du = RR.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" "), gl.check(n) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"))
    throw du = null, new Error("BIP39 Wordlist for en (English) FAILED");
}
class PR extends gl {
  constructor() {
    super("en");
  }
  getWord(e) {
    return Wg(this), du[e];
  }
  getWordIndex(e) {
    return Wg(this), du.indexOf(e);
  }
}
const A6 = new PR();
gl.register(A6);
const Hg = {
  en: A6
}, OR = "hdnode/5.7.0", $u = new U(OR), IR = ne.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), kR = Gt("Bitcoin seed"), za = 2147483648;
function C6(n) {
  return (1 << n) - 1 << 8 - n;
}
function DR(n) {
  return (1 << n) - 1;
}
function $l(n) {
  return Pt(J(n), 32);
}
function Kg(n) {
  return D0.encode(Rt([n, Ci(ca(ca(n)), 0, 4)]));
}
function F0(n) {
  if (n == null)
    return Hg.en;
  if (typeof n == "string") {
    const e = Hg[n];
    return e == null && $u.throwArgumentError("unknown locale", "wordlist", n), e;
  }
  return n;
}
const Fa = {}, yo = "m/44'/60'/0'/0/0";
class Vn {
  constructor(e, t, r, i, s, a, o, u) {
    if (e !== Fa)
      throw new Error("HDNode constructor cannot be called directly");
    if (t) {
      const l = new Xs(t);
      z(this, "privateKey", l.privateKey), z(this, "publicKey", l.compressedPublicKey);
    } else
      z(this, "privateKey", null), z(this, "publicKey", J(r));
    z(this, "parentFingerprint", i), z(this, "fingerprint", Ci(T6(ca(this.publicKey)), 0, 4)), z(this, "address", ls(this.publicKey)), z(this, "chainCode", s), z(this, "index", a), z(this, "depth", o), u == null ? (z(this, "mnemonic", null), z(this, "path", null)) : typeof u == "string" ? (z(this, "mnemonic", null), z(this, "path", u)) : (z(this, "mnemonic", u), z(this, "path", u.path));
  }
  get extendedKey() {
    if (this.depth >= 256)
      throw new Error("Depth too large!");
    return Kg(Rt([
      this.privateKey != null ? "0x0488ADE4" : "0x0488B21E",
      J(this.depth),
      this.parentFingerprint,
      Pt(J(this.index), 4),
      this.chainCode,
      this.privateKey != null ? Rt(["0x00", this.privateKey]) : this.publicKey
    ]));
  }
  neuter() {
    return new Vn(Fa, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
  }
  _derive(e) {
    if (e > 4294967295)
      throw new Error("invalid index - " + String(e));
    let t = this.path;
    t && (t += "/" + (e & ~za));
    const r = new Uint8Array(37);
    if (e & za) {
      if (!this.privateKey)
        throw new Error("cannot derive child of neutered node");
      r.set(W(this.privateKey), 1), t && (t += "'");
    } else
      r.set(W(this.publicKey));
    for (let h = 24; h >= 0; h -= 8)
      r[33 + (h >> 3)] = e >> 24 - h & 255;
    const i = W(Nu(ho.sha512, this.chainCode, r)), s = i.slice(0, 32), a = i.slice(32);
    let o = null, u = null;
    this.privateKey ? o = $l(ne.from(s).add(this.privateKey).mod(IR)) : u = new Xs(J(s))._addPoint(this.publicKey);
    let l = t;
    const p = this.mnemonic;
    return p && (l = Object.freeze({
      phrase: p.phrase,
      path: t,
      locale: p.locale || "en"
    })), new Vn(Fa, o, u, this.fingerprint, $l(a), e, this.depth + 1, l);
  }
  derivePath(e) {
    const t = e.split("/");
    if (t.length === 0 || t[0] === "m" && this.depth !== 0)
      throw new Error("invalid path - " + e);
    t[0] === "m" && t.shift();
    let r = this;
    for (let i = 0; i < t.length; i++) {
      const s = t[i];
      if (s.match(/^[0-9]+'$/)) {
        const a = parseInt(s.substring(0, s.length - 1));
        if (a >= za)
          throw new Error("invalid path index - " + s);
        r = r._derive(za + a);
      } else if (s.match(/^[0-9]+$/)) {
        const a = parseInt(s);
        if (a >= za)
          throw new Error("invalid path index - " + s);
        r = r._derive(a);
      } else
        throw new Error("invalid path component - " + s);
    }
    return r;
  }
  static _fromSeed(e, t) {
    const r = W(e);
    if (r.length < 16 || r.length > 64)
      throw new Error("invalid seed");
    const i = W(Nu(ho.sha512, kR, r));
    return new Vn(Fa, $l(i.slice(0, 32)), null, "0x00000000", $l(i.slice(32)), 0, 0, t);
  }
  static fromMnemonic(e, t, r) {
    return r = F0(r), e = Fd(Bd(e, r), r), Vn._fromSeed(S6(e, t), {
      phrase: e,
      path: "m",
      locale: r.locale
    });
  }
  static fromSeed(e) {
    return Vn._fromSeed(e, null);
  }
  static fromExtendedKey(e) {
    const t = D0.decode(e);
    (t.length !== 82 || Kg(t.slice(0, 78)) !== e) && $u.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
    const r = t[4], i = J(t.slice(5, 9)), s = parseInt(J(t.slice(9, 13)).substring(2), 16), a = J(t.slice(13, 45)), o = t.slice(45, 78);
    switch (J(t.slice(0, 4))) {
      case "0x0488b21e":
      case "0x043587cf":
        return new Vn(Fa, null, J(o), i, a, s, r, null);
      case "0x0488ade4":
      case "0x04358394 ":
        if (o[0] !== 0)
          break;
        return new Vn(Fa, J(o.slice(1)), null, i, a, s, r, null);
    }
    return $u.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
  }
}
function S6(n, e) {
  e || (e = "");
  const t = Gt("mnemonic" + e, Qr.NFKD);
  return B0(Gt(n, Qr.NFKD), t, 2048, 64, "sha512");
}
function Bd(n, e) {
  e = F0(e), $u.checkNormalize();
  const t = e.split(n);
  if (t.length % 3 !== 0)
    throw new Error("invalid mnemonic");
  const r = W(new Uint8Array(Math.ceil(11 * t.length / 8)));
  let i = 0;
  for (let l = 0; l < t.length; l++) {
    let p = e.getWordIndex(t[l].normalize("NFKD"));
    if (p === -1)
      throw new Error("invalid mnemonic");
    for (let h = 0; h < 11; h++)
      p & 1 << 10 - h && (r[i >> 3] |= 1 << 7 - i % 8), i++;
  }
  const s = 32 * t.length / 3, a = t.length / 3, o = C6(a);
  if ((W(ca(r.slice(0, s / 8)))[0] & o) !== (r[r.length - 1] & o))
    throw new Error("invalid checksum");
  return J(r.slice(0, s / 8));
}
function Fd(n, e) {
  if (e = F0(e), n = W(n), n.length % 4 !== 0 || n.length < 16 || n.length > 32)
    throw new Error("invalid entropy");
  const t = [0];
  let r = 11;
  for (let a = 0; a < n.length; a++)
    r > 8 ? (t[t.length - 1] <<= 8, t[t.length - 1] |= n[a], r -= 8) : (t[t.length - 1] <<= r, t[t.length - 1] |= n[a] >> 8 - r, t.push(n[a] & DR(8 - r)), r += 3);
  const i = n.length / 4, s = W(ca(n))[0] & C6(i);
  return t[t.length - 1] <<= i, t[t.length - 1] |= s >> 8 - i, e.join(t.map((a) => e.getWord(a)));
}
function BR(n, e) {
  try {
    return Bd(n, e), !0;
  } catch {
  }
  return !1;
}
function FR(n) {
  return (typeof n != "number" || n < 0 || n >= za || n % 1) && $u.throwArgumentError("invalid account index", "index", n), `m/44'/60'/${n}'/0/0`;
}
const NR = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  defaultPath: yo,
  HDNode: Vn,
  mnemonicToSeed: S6,
  mnemonicToEntropy: Bd,
  entropyToMnemonic: Fd,
  isValidMnemonic: BR,
  getAccountPath: FR
}, Symbol.toStringTag, { value: "Module" })), $R = /* @__PURE__ */ St(NR);
var E6 = { exports: {} };
(function(n, e) {
  (function(t) {
    function r(m) {
      return parseInt(m) === m;
    }
    function i(m) {
      if (!r(m.length))
        return !1;
      for (var d = 0; d < m.length; d++)
        if (!r(m[d]) || m[d] < 0 || m[d] > 255)
          return !1;
      return !0;
    }
    function s(m, d) {
      if (m.buffer && ArrayBuffer.isView(m) && m.name === "Uint8Array")
        return d && (m.slice ? m = m.slice() : m = Array.prototype.slice.call(m)), m;
      if (Array.isArray(m)) {
        if (!i(m))
          throw new Error("Array contains invalid value: " + m);
        return new Uint8Array(m);
      }
      if (r(m.length) && i(m))
        return new Uint8Array(m);
      throw new Error("unsupported array-like object");
    }
    function a(m) {
      return new Uint8Array(m);
    }
    function o(m, d, g, O, f) {
      (O != null || f != null) && (m.slice ? m = m.slice(O, f) : m = Array.prototype.slice.call(m, O, f)), d.set(m, g);
    }
    var u = function() {
      function m(g) {
        var O = [], f = 0;
        for (g = encodeURI(g); f < g.length; ) {
          var R = g.charCodeAt(f++);
          R === 37 ? (O.push(parseInt(g.substr(f, 2), 16)), f += 2) : O.push(R);
        }
        return s(O);
      }
      function d(g) {
        for (var O = [], f = 0; f < g.length; ) {
          var R = g[f];
          R < 128 ? (O.push(String.fromCharCode(R)), f++) : R > 191 && R < 224 ? (O.push(String.fromCharCode((R & 31) << 6 | g[f + 1] & 63)), f += 2) : (O.push(String.fromCharCode((R & 15) << 12 | (g[f + 1] & 63) << 6 | g[f + 2] & 63)), f += 3);
        }
        return O.join("");
      }
      return {
        toBytes: m,
        fromBytes: d
      };
    }(), l = function() {
      function m(O) {
        for (var f = [], R = 0; R < O.length; R += 2)
          f.push(parseInt(O.substr(R, 2), 16));
        return f;
      }
      var d = "0123456789abcdef";
      function g(O) {
        for (var f = [], R = 0; R < O.length; R++) {
          var N = O[R];
          f.push(d[(N & 240) >> 4] + d[N & 15]);
        }
        return f.join("");
      }
      return {
        toBytes: m,
        fromBytes: g
      };
    }(), p = { 16: 10, 24: 12, 32: 14 }, h = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145], b = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22], C = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125], v = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986], T = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766], w = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126], M = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436], I = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890], F = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935], k = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600], D = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480], $ = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795], G = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855], V = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150], K = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
    function ae(m) {
      for (var d = [], g = 0; g < m.length; g += 4)
        d.push(
          m[g] << 24 | m[g + 1] << 16 | m[g + 2] << 8 | m[g + 3]
        );
      return d;
    }
    var q = function(m) {
      if (!(this instanceof q))
        throw Error("AES must be instanitated with `new`");
      Object.defineProperty(this, "key", {
        value: s(m, !0)
      }), this._prepare();
    };
    q.prototype._prepare = function() {
      var m = p[this.key.length];
      if (m == null)
        throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
      this._Ke = [], this._Kd = [];
      for (var d = 0; d <= m; d++)
        this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
      for (var g = (m + 1) * 4, O = this.key.length / 4, f = ae(this.key), R, d = 0; d < O; d++)
        R = d >> 2, this._Ke[R][d % 4] = f[d], this._Kd[m - R][d % 4] = f[d];
      for (var N = 0, B = O, L; B < g; ) {
        if (L = f[O - 1], f[0] ^= b[L >> 16 & 255] << 24 ^ b[L >> 8 & 255] << 16 ^ b[L & 255] << 8 ^ b[L >> 24 & 255] ^ h[N] << 24, N += 1, O != 8)
          for (var d = 1; d < O; d++)
            f[d] ^= f[d - 1];
        else {
          for (var d = 1; d < O / 2; d++)
            f[d] ^= f[d - 1];
          L = f[O / 2 - 1], f[O / 2] ^= b[L & 255] ^ b[L >> 8 & 255] << 8 ^ b[L >> 16 & 255] << 16 ^ b[L >> 24 & 255] << 24;
          for (var d = O / 2 + 1; d < O; d++)
            f[d] ^= f[d - 1];
        }
        for (var d = 0, ee, H; d < O && B < g; )
          ee = B >> 2, H = B % 4, this._Ke[ee][H] = f[d], this._Kd[m - ee][H] = f[d++], B++;
      }
      for (var ee = 1; ee < m; ee++)
        for (var H = 0; H < 4; H++)
          L = this._Kd[ee][H], this._Kd[ee][H] = $[L >> 24 & 255] ^ G[L >> 16 & 255] ^ V[L >> 8 & 255] ^ K[L & 255];
    }, q.prototype.encrypt = function(m) {
      if (m.length != 16)
        throw new Error("invalid plaintext size (must be 16 bytes)");
      for (var d = this._Ke.length - 1, g = [0, 0, 0, 0], O = ae(m), f = 0; f < 4; f++)
        O[f] ^= this._Ke[0][f];
      for (var R = 1; R < d; R++) {
        for (var f = 0; f < 4; f++)
          g[f] = v[O[f] >> 24 & 255] ^ T[O[(f + 1) % 4] >> 16 & 255] ^ w[O[(f + 2) % 4] >> 8 & 255] ^ M[O[(f + 3) % 4] & 255] ^ this._Ke[R][f];
        O = g.slice();
      }
      for (var N = a(16), B, f = 0; f < 4; f++)
        B = this._Ke[d][f], N[4 * f] = (b[O[f] >> 24 & 255] ^ B >> 24) & 255, N[4 * f + 1] = (b[O[(f + 1) % 4] >> 16 & 255] ^ B >> 16) & 255, N[4 * f + 2] = (b[O[(f + 2) % 4] >> 8 & 255] ^ B >> 8) & 255, N[4 * f + 3] = (b[O[(f + 3) % 4] & 255] ^ B) & 255;
      return N;
    }, q.prototype.decrypt = function(m) {
      if (m.length != 16)
        throw new Error("invalid ciphertext size (must be 16 bytes)");
      for (var d = this._Kd.length - 1, g = [0, 0, 0, 0], O = ae(m), f = 0; f < 4; f++)
        O[f] ^= this._Kd[0][f];
      for (var R = 1; R < d; R++) {
        for (var f = 0; f < 4; f++)
          g[f] = I[O[f] >> 24 & 255] ^ F[O[(f + 3) % 4] >> 16 & 255] ^ k[O[(f + 2) % 4] >> 8 & 255] ^ D[O[(f + 1) % 4] & 255] ^ this._Kd[R][f];
        O = g.slice();
      }
      for (var N = a(16), B, f = 0; f < 4; f++)
        B = this._Kd[d][f], N[4 * f] = (C[O[f] >> 24 & 255] ^ B >> 24) & 255, N[4 * f + 1] = (C[O[(f + 3) % 4] >> 16 & 255] ^ B >> 16) & 255, N[4 * f + 2] = (C[O[(f + 2) % 4] >> 8 & 255] ^ B >> 8) & 255, N[4 * f + 3] = (C[O[(f + 1) % 4] & 255] ^ B) & 255;
      return N;
    };
    var oe = function(m) {
      if (!(this instanceof oe))
        throw Error("AES must be instanitated with `new`");
      this.description = "Electronic Code Block", this.name = "ecb", this._aes = new q(m);
    };
    oe.prototype.encrypt = function(m) {
      if (m = s(m), m.length % 16 !== 0)
        throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var d = a(m.length), g = a(16), O = 0; O < m.length; O += 16)
        o(m, g, 0, O, O + 16), g = this._aes.encrypt(g), o(g, d, O);
      return d;
    }, oe.prototype.decrypt = function(m) {
      if (m = s(m), m.length % 16 !== 0)
        throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var d = a(m.length), g = a(16), O = 0; O < m.length; O += 16)
        o(m, g, 0, O, O + 16), g = this._aes.decrypt(g), o(g, d, O);
      return d;
    };
    var E = function(m, d) {
      if (!(this instanceof E))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Cipher Block Chaining", this.name = "cbc", !d)
        d = a(16);
      else if (d.length != 16)
        throw new Error("invalid initialation vector size (must be 16 bytes)");
      this._lastCipherblock = s(d, !0), this._aes = new q(m);
    };
    E.prototype.encrypt = function(m) {
      if (m = s(m), m.length % 16 !== 0)
        throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
      for (var d = a(m.length), g = a(16), O = 0; O < m.length; O += 16) {
        o(m, g, 0, O, O + 16);
        for (var f = 0; f < 16; f++)
          g[f] ^= this._lastCipherblock[f];
        this._lastCipherblock = this._aes.encrypt(g), o(this._lastCipherblock, d, O);
      }
      return d;
    }, E.prototype.decrypt = function(m) {
      if (m = s(m), m.length % 16 !== 0)
        throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
      for (var d = a(m.length), g = a(16), O = 0; O < m.length; O += 16) {
        o(m, g, 0, O, O + 16), g = this._aes.decrypt(g);
        for (var f = 0; f < 16; f++)
          d[O + f] = g[f] ^ this._lastCipherblock[f];
        o(m, this._lastCipherblock, 0, O, O + 16);
      }
      return d;
    };
    var c = function(m, d, g) {
      if (!(this instanceof c))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Cipher Feedback", this.name = "cfb", !d)
        d = a(16);
      else if (d.length != 16)
        throw new Error("invalid initialation vector size (must be 16 size)");
      g || (g = 1), this.segmentSize = g, this._shiftRegister = s(d, !0), this._aes = new q(m);
    };
    c.prototype.encrypt = function(m) {
      if (m.length % this.segmentSize != 0)
        throw new Error("invalid plaintext size (must be segmentSize bytes)");
      for (var d = s(m, !0), g, O = 0; O < d.length; O += this.segmentSize) {
        g = this._aes.encrypt(this._shiftRegister);
        for (var f = 0; f < this.segmentSize; f++)
          d[O + f] ^= g[f];
        o(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), o(d, this._shiftRegister, 16 - this.segmentSize, O, O + this.segmentSize);
      }
      return d;
    }, c.prototype.decrypt = function(m) {
      if (m.length % this.segmentSize != 0)
        throw new Error("invalid ciphertext size (must be segmentSize bytes)");
      for (var d = s(m, !0), g, O = 0; O < d.length; O += this.segmentSize) {
        g = this._aes.encrypt(this._shiftRegister);
        for (var f = 0; f < this.segmentSize; f++)
          d[O + f] ^= g[f];
        o(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), o(m, this._shiftRegister, 16 - this.segmentSize, O, O + this.segmentSize);
      }
      return d;
    };
    var y = function(m, d) {
      if (!(this instanceof y))
        throw Error("AES must be instanitated with `new`");
      if (this.description = "Output Feedback", this.name = "ofb", !d)
        d = a(16);
      else if (d.length != 16)
        throw new Error("invalid initialation vector size (must be 16 bytes)");
      this._lastPrecipher = s(d, !0), this._lastPrecipherIndex = 16, this._aes = new q(m);
    };
    y.prototype.encrypt = function(m) {
      for (var d = s(m, !0), g = 0; g < d.length; g++)
        this._lastPrecipherIndex === 16 && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), d[g] ^= this._lastPrecipher[this._lastPrecipherIndex++];
      return d;
    }, y.prototype.decrypt = y.prototype.encrypt;
    var x = function(m) {
      if (!(this instanceof x))
        throw Error("Counter must be instanitated with `new`");
      m !== 0 && !m && (m = 1), typeof m == "number" ? (this._counter = a(16), this.setValue(m)) : this.setBytes(m);
    };
    x.prototype.setValue = function(m) {
      if (typeof m != "number" || parseInt(m) != m)
        throw new Error("invalid counter value (must be an integer)");
      for (var d = 15; d >= 0; --d)
        this._counter[d] = m % 256, m = m >> 8;
    }, x.prototype.setBytes = function(m) {
      if (m = s(m, !0), m.length != 16)
        throw new Error("invalid counter bytes size (must be 16 bytes)");
      this._counter = m;
    }, x.prototype.increment = function() {
      for (var m = 15; m >= 0; m--)
        if (this._counter[m] === 255)
          this._counter[m] = 0;
        else {
          this._counter[m]++;
          break;
        }
    };
    var S = function(m, d) {
      if (!(this instanceof S))
        throw Error("AES must be instanitated with `new`");
      this.description = "Counter", this.name = "ctr", d instanceof x || (d = new x(d)), this._counter = d, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new q(m);
    };
    S.prototype.encrypt = function(m) {
      for (var d = s(m, !0), g = 0; g < d.length; g++)
        this._remainingCounterIndex === 16 && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), d[g] ^= this._remainingCounter[this._remainingCounterIndex++];
      return d;
    }, S.prototype.decrypt = S.prototype.encrypt;
    function A(m) {
      m = s(m, !0);
      var d = 16 - m.length % 16, g = a(m.length + d);
      o(m, g);
      for (var O = m.length; O < g.length; O++)
        g[O] = d;
      return g;
    }
    function _(m) {
      if (m = s(m, !0), m.length < 16)
        throw new Error("PKCS#7 invalid length");
      var d = m[m.length - 1];
      if (d > 16)
        throw new Error("PKCS#7 padding byte out of range");
      for (var g = m.length - d, O = 0; O < d; O++)
        if (m[g + O] !== d)
          throw new Error("PKCS#7 invalid padding byte");
      var f = a(g);
      return o(m, f, 0, 0, g), f;
    }
    var P = {
      AES: q,
      Counter: x,
      ModeOfOperation: {
        ecb: oe,
        cbc: E,
        cfb: c,
        ofb: y,
        ctr: S
      },
      utils: {
        hex: l,
        utf8: u
      },
      padding: {
        pkcs7: {
          pad: A,
          strip: _
        }
      },
      _arrayTest: {
        coerceArray: s,
        createArray: a,
        copyArray: o
      }
    };
    n.exports = P;
  })();
})(E6);
const jr = E6.exports, M6 = "json-wallets/5.7.0";
function Zs(n) {
  return typeof n == "string" && n.substring(0, 2) !== "0x" && (n = "0x" + n), W(n);
}
function Wo(n, e) {
  for (n = String(n); n.length < e; )
    n = "0" + n;
  return n;
}
function N0(n) {
  return typeof n == "string" ? Gt(n, Qr.NFKC) : W(n);
}
function Mt(n, e) {
  let t = n;
  const r = e.toLowerCase().split("/");
  for (let i = 0; i < r.length; i++) {
    let s = null;
    for (const a in t)
      if (a.toLowerCase() === r[i]) {
        s = t[a];
        break;
      }
    if (s === null)
      return null;
    t = s;
  }
  return t;
}
function LR(n) {
  const e = W(n);
  e[6] = e[6] & 15 | 64, e[8] = e[8] & 63 | 128;
  const t = J(e);
  return [
    t.substring(2, 10),
    t.substring(10, 14),
    t.substring(14, 18),
    t.substring(18, 22),
    t.substring(22, 34)
  ].join("-");
}
const UR = new U(M6);
class VR extends _a {
  isCrowdsaleAccount(e) {
    return !!(e && e._isCrowdsaleAccount);
  }
}
function $0(n, e) {
  const t = JSON.parse(n);
  e = N0(e);
  const r = ke(Mt(t, "ethaddr")), i = Zs(Mt(t, "encseed"));
  (!i || i.length % 16 !== 0) && UR.throwArgumentError("invalid encseed", "json", n);
  const s = W(B0(e, e, 2e3, 32, "sha256")).slice(0, 16), a = i.slice(0, 16), o = i.slice(16), u = new jr.ModeOfOperation.cbc(s, a), l = jr.padding.pkcs7.strip(W(u.decrypt(o)));
  let p = "";
  for (let C = 0; C < l.length; C++)
    p += String.fromCharCode(l[C]);
  const h = Gt(p), b = Pe(h);
  return new VR({
    _isCrowdsaleAccount: !0,
    address: r,
    privateKey: b
  });
}
function Nd(n) {
  let e = null;
  try {
    e = JSON.parse(n);
  } catch {
    return !1;
  }
  return e.encseed && e.ethaddr;
}
function $d(n) {
  let e = null;
  try {
    e = JSON.parse(n);
  } catch {
    return !1;
  }
  return !(!e.version || parseInt(e.version) !== e.version || parseInt(e.version) !== 3);
}
function jR(n) {
  if (Nd(n))
    try {
      return ke(JSON.parse(n).ethaddr);
    } catch {
      return null;
    }
  if ($d(n))
    try {
      return ke(JSON.parse(n).address);
    } catch {
      return null;
    }
  return null;
}
var _6 = { exports: {} };
(function(n, e) {
  (function(t) {
    function i(T) {
      const w = new Uint32Array([
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ]);
      let M = 1779033703, I = 3144134277, F = 1013904242, k = 2773480762, D = 1359893119, $ = 2600822924, G = 528734635, V = 1541459225;
      const K = new Uint32Array(64);
      function ae(S) {
        let A = 0, _ = S.length;
        for (; _ >= 64; ) {
          let P = M, m = I, d = F, g = k, O = D, f = $, R = G, N = V, B, L, ee, H, Q;
          for (L = 0; L < 16; L++)
            ee = A + L * 4, K[L] = (S[ee] & 255) << 24 | (S[ee + 1] & 255) << 16 | (S[ee + 2] & 255) << 8 | S[ee + 3] & 255;
          for (L = 16; L < 64; L++)
            B = K[L - 2], H = (B >>> 17 | B << 32 - 17) ^ (B >>> 19 | B << 32 - 19) ^ B >>> 10, B = K[L - 15], Q = (B >>> 7 | B << 32 - 7) ^ (B >>> 18 | B << 32 - 18) ^ B >>> 3, K[L] = (H + K[L - 7] | 0) + (Q + K[L - 16] | 0) | 0;
          for (L = 0; L < 64; L++)
            H = (((O >>> 6 | O << 32 - 6) ^ (O >>> 11 | O << 32 - 11) ^ (O >>> 25 | O << 32 - 25)) + (O & f ^ ~O & R) | 0) + (N + (w[L] + K[L] | 0) | 0) | 0, Q = ((P >>> 2 | P << 32 - 2) ^ (P >>> 13 | P << 32 - 13) ^ (P >>> 22 | P << 32 - 22)) + (P & m ^ P & d ^ m & d) | 0, N = R, R = f, f = O, O = g + H | 0, g = d, d = m, m = P, P = H + Q | 0;
          M = M + P | 0, I = I + m | 0, F = F + d | 0, k = k + g | 0, D = D + O | 0, $ = $ + f | 0, G = G + R | 0, V = V + N | 0, A += 64, _ -= 64;
        }
      }
      ae(T);
      let q, oe = T.length % 64, E = T.length / 536870912 | 0, c = T.length << 3, y = oe < 56 ? 56 : 120, x = T.slice(T.length - oe, T.length);
      for (x.push(128), q = oe + 1; q < y; q++)
        x.push(0);
      return x.push(E >>> 24 & 255), x.push(E >>> 16 & 255), x.push(E >>> 8 & 255), x.push(E >>> 0 & 255), x.push(c >>> 24 & 255), x.push(c >>> 16 & 255), x.push(c >>> 8 & 255), x.push(c >>> 0 & 255), ae(x), [
        M >>> 24 & 255,
        M >>> 16 & 255,
        M >>> 8 & 255,
        M >>> 0 & 255,
        I >>> 24 & 255,
        I >>> 16 & 255,
        I >>> 8 & 255,
        I >>> 0 & 255,
        F >>> 24 & 255,
        F >>> 16 & 255,
        F >>> 8 & 255,
        F >>> 0 & 255,
        k >>> 24 & 255,
        k >>> 16 & 255,
        k >>> 8 & 255,
        k >>> 0 & 255,
        D >>> 24 & 255,
        D >>> 16 & 255,
        D >>> 8 & 255,
        D >>> 0 & 255,
        $ >>> 24 & 255,
        $ >>> 16 & 255,
        $ >>> 8 & 255,
        $ >>> 0 & 255,
        G >>> 24 & 255,
        G >>> 16 & 255,
        G >>> 8 & 255,
        G >>> 0 & 255,
        V >>> 24 & 255,
        V >>> 16 & 255,
        V >>> 8 & 255,
        V >>> 0 & 255
      ];
    }
    function s(T, w, M) {
      T = T.length <= 64 ? T : i(T);
      const I = 64 + w.length + 4, F = new Array(I), k = new Array(64);
      let D, $ = [];
      for (D = 0; D < 64; D++)
        F[D] = 54;
      for (D = 0; D < T.length; D++)
        F[D] ^= T[D];
      for (D = 0; D < w.length; D++)
        F[64 + D] = w[D];
      for (D = I - 4; D < I; D++)
        F[D] = 0;
      for (D = 0; D < 64; D++)
        k[D] = 92;
      for (D = 0; D < T.length; D++)
        k[D] ^= T[D];
      function G() {
        for (let V = I - 1; V >= I - 4; V--) {
          if (F[V]++, F[V] <= 255)
            return;
          F[V] = 0;
        }
      }
      for (; M >= 32; )
        G(), $ = $.concat(i(k.concat(i(F)))), M -= 32;
      return M > 0 && (G(), $ = $.concat(i(k.concat(i(F))).slice(0, M))), $;
    }
    function a(T, w, M, I, F) {
      let k;
      for (p(T, (2 * M - 1) * 16, F, 0, 16), k = 0; k < 2 * M; k++)
        l(T, k * 16, F, 16), u(F, I), p(F, 0, T, w + k * 16, 16);
      for (k = 0; k < M; k++)
        p(T, w + k * 2 * 16, T, k * 16, 16);
      for (k = 0; k < M; k++)
        p(T, w + (k * 2 + 1) * 16, T, (k + M) * 16, 16);
    }
    function o(T, w) {
      return T << w | T >>> 32 - w;
    }
    function u(T, w) {
      p(T, 0, w, 0, 16);
      for (let M = 8; M > 0; M -= 2)
        w[4] ^= o(w[0] + w[12], 7), w[8] ^= o(w[4] + w[0], 9), w[12] ^= o(w[8] + w[4], 13), w[0] ^= o(w[12] + w[8], 18), w[9] ^= o(w[5] + w[1], 7), w[13] ^= o(w[9] + w[5], 9), w[1] ^= o(w[13] + w[9], 13), w[5] ^= o(w[1] + w[13], 18), w[14] ^= o(w[10] + w[6], 7), w[2] ^= o(w[14] + w[10], 9), w[6] ^= o(w[2] + w[14], 13), w[10] ^= o(w[6] + w[2], 18), w[3] ^= o(w[15] + w[11], 7), w[7] ^= o(w[3] + w[15], 9), w[11] ^= o(w[7] + w[3], 13), w[15] ^= o(w[11] + w[7], 18), w[1] ^= o(w[0] + w[3], 7), w[2] ^= o(w[1] + w[0], 9), w[3] ^= o(w[2] + w[1], 13), w[0] ^= o(w[3] + w[2], 18), w[6] ^= o(w[5] + w[4], 7), w[7] ^= o(w[6] + w[5], 9), w[4] ^= o(w[7] + w[6], 13), w[5] ^= o(w[4] + w[7], 18), w[11] ^= o(w[10] + w[9], 7), w[8] ^= o(w[11] + w[10], 9), w[9] ^= o(w[8] + w[11], 13), w[10] ^= o(w[9] + w[8], 18), w[12] ^= o(w[15] + w[14], 7), w[13] ^= o(w[12] + w[15], 9), w[14] ^= o(w[13] + w[12], 13), w[15] ^= o(w[14] + w[13], 18);
      for (let M = 0; M < 16; ++M)
        T[M] += w[M];
    }
    function l(T, w, M, I) {
      for (let F = 0; F < I; F++)
        M[F] ^= T[w + F];
    }
    function p(T, w, M, I, F) {
      for (; F--; )
        M[I++] = T[w++];
    }
    function h(T) {
      if (!T || typeof T.length != "number")
        return !1;
      for (let w = 0; w < T.length; w++) {
        const M = T[w];
        if (typeof M != "number" || M % 1 || M < 0 || M >= 256)
          return !1;
      }
      return !0;
    }
    function b(T, w) {
      if (typeof T != "number" || T % 1)
        throw new Error("invalid " + w);
      return T;
    }
    function C(T, w, M, I, F, k, D) {
      if (M = b(M, "N"), I = b(I, "r"), F = b(F, "p"), k = b(k, "dkLen"), M === 0 || (M & M - 1) !== 0)
        throw new Error("N must be power of 2");
      if (M > 2147483647 / 128 / I)
        throw new Error("N too large");
      if (I > 2147483647 / 128 / F)
        throw new Error("r too large");
      if (!h(T))
        throw new Error("password must be an array or buffer");
      if (T = Array.prototype.slice.call(T), !h(w))
        throw new Error("salt must be an array or buffer");
      w = Array.prototype.slice.call(w);
      let $ = s(T, w, F * 128 * I);
      const G = new Uint32Array(F * 32 * I);
      for (let O = 0; O < G.length; O++) {
        const f = O * 4;
        G[O] = ($[f + 3] & 255) << 24 | ($[f + 2] & 255) << 16 | ($[f + 1] & 255) << 8 | ($[f + 0] & 255) << 0;
      }
      const V = new Uint32Array(64 * I), K = new Uint32Array(32 * I * M), ae = 32 * I, q = new Uint32Array(16), oe = new Uint32Array(16), E = F * M * 2;
      let c = 0, y = null, x = !1, S = 0, A = 0, _, P;
      const m = D ? parseInt(1e3 / I) : 4294967295, d = typeof setImmediate < "u" ? setImmediate : setTimeout, g = function() {
        if (x)
          return D(new Error("cancelled"), c / E);
        let O;
        switch (S) {
          case 0:
            P = A * 32 * I, p(G, P, V, 0, ae), S = 1, _ = 0;
          case 1:
            O = M - _, O > m && (O = m);
            for (let R = 0; R < O; R++)
              p(V, 0, K, (_ + R) * ae, ae), a(V, ae, I, q, oe);
            if (_ += O, c += O, D) {
              const R = parseInt(1e3 * c / E);
              if (R !== y) {
                if (x = D(null, c / E), x)
                  break;
                y = R;
              }
            }
            if (_ < M)
              break;
            _ = 0, S = 2;
          case 2:
            O = M - _, O > m && (O = m);
            for (let R = 0; R < O; R++) {
              const N = (2 * I - 1) * 16, B = V[N] & M - 1;
              l(K, B * ae, V, ae), a(V, ae, I, q, oe);
            }
            if (_ += O, c += O, D) {
              const R = parseInt(1e3 * c / E);
              if (R !== y) {
                if (x = D(null, c / E), x)
                  break;
                y = R;
              }
            }
            if (_ < M)
              break;
            if (p(V, 0, G, P, ae), A++, A < F) {
              S = 0;
              break;
            }
            $ = [];
            for (let R = 0; R < G.length; R++)
              $.push(G[R] >> 0 & 255), $.push(G[R] >> 8 & 255), $.push(G[R] >> 16 & 255), $.push(G[R] >> 24 & 255);
            const f = s(T, $, k);
            return D && D(null, 1, f), f;
        }
        D && d(g);
      };
      if (!D)
        for (; ; ) {
          const O = g();
          if (O != null)
            return O;
        }
      g();
    }
    const v = {
      scrypt: function(T, w, M, I, F, k, D) {
        return new Promise(function($, G) {
          let V = 0;
          D && D(0), C(T, w, M, I, F, k, function(K, ae, q) {
            if (K)
              G(K);
            else if (q)
              D && V !== 1 && D(1), $(new Uint8Array(q));
            else if (D && ae !== V)
              return V = ae, D(ae);
          });
        });
      },
      syncScrypt: function(T, w, M, I, F, k) {
        return new Uint8Array(C(T, w, M, I, F, k));
      }
    };
    n.exports = v;
  })();
})(_6);
const L0 = _6.exports, zR = "random/5.7.0", Kf = new U(zR);
function GR() {
  if (typeof self < "u")
    return self;
  if (typeof window < "u")
    return window;
  if (typeof aa < "u")
    return aa;
  throw new Error("unable to locate global object");
}
const qg = GR();
let lc = qg.crypto || qg.msCrypto;
(!lc || !lc.getRandomValues) && (Kf.warn("WARNING: Missing strong random number source"), lc = {
  getRandomValues: function(n) {
    return Kf.throwError("no secure random source avaialble", U.errors.UNSUPPORTED_OPERATION, {
      operation: "crypto.getRandomValues"
    });
  }
});
function Qa(n) {
  (n <= 0 || n > 1024 || n % 1 || n != n) && Kf.throwArgumentError("invalid length", "length", n);
  const e = new Uint8Array(n);
  return lc.getRandomValues(e), W(e);
}
function WR(n) {
  n = n.slice();
  for (let e = n.length - 1; e > 0; e--) {
    const t = Math.floor(Math.random() * (e + 1)), r = n[e];
    n[e] = n[t], n[t] = r;
  }
  return n;
}
const HR = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  randomBytes: Qa,
  shuffled: WR
}, Symbol.toStringTag, { value: "Module" }));
var KR = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const qf = new U(M6);
function Qg(n) {
  return n != null && n.mnemonic && n.mnemonic.phrase;
}
class qR extends _a {
  isKeystoreAccount(e) {
    return !!(e && e._isKeystoreAccount);
  }
}
function QR(n, e, t) {
  if (Mt(n, "crypto/cipher") === "aes-128-ctr") {
    const i = Zs(Mt(n, "crypto/cipherparams/iv")), s = new jr.Counter(i), a = new jr.ModeOfOperation.ctr(e, s);
    return W(a.decrypt(t));
  }
  return null;
}
function R6(n, e) {
  const t = Zs(Mt(n, "crypto/ciphertext"));
  if (J(Pe(Rt([e.slice(16, 32), t]))).substring(2) !== Mt(n, "crypto/mac").toLowerCase())
    throw new Error("invalid password");
  const i = QR(n, e.slice(0, 16), t);
  i || qf.throwError("unsupported cipher", U.errors.UNSUPPORTED_OPERATION, {
    operation: "decrypt"
  });
  const s = e.slice(32, 64), a = ls(i);
  if (n.address) {
    let u = n.address.toLowerCase();
    if (u.substring(0, 2) !== "0x" && (u = "0x" + u), ke(u) !== a)
      throw new Error("address mismatch");
  }
  const o = {
    _isKeystoreAccount: !0,
    address: a,
    privateKey: J(i)
  };
  if (Mt(n, "x-ethers/version") === "0.1") {
    const u = Zs(Mt(n, "x-ethers/mnemonicCiphertext")), l = Zs(Mt(n, "x-ethers/mnemonicCounter")), p = new jr.Counter(l), h = new jr.ModeOfOperation.ctr(s, p), b = Mt(n, "x-ethers/path") || yo, C = Mt(n, "x-ethers/locale") || "en", v = W(h.decrypt(u));
    try {
      const T = Fd(v, C), w = Vn.fromMnemonic(T, null, C).derivePath(b);
      if (w.privateKey != o.privateKey)
        throw new Error("mnemonic mismatch");
      o.mnemonic = w.mnemonic;
    } catch (T) {
      if (T.code !== U.errors.INVALID_ARGUMENT || T.argument !== "wordlist")
        throw T;
    }
  }
  return new qR(o);
}
function P6(n, e, t, r, i) {
  return W(B0(n, e, t, r, i));
}
function JR(n, e, t, r, i) {
  return Promise.resolve(P6(n, e, t, r, i));
}
function O6(n, e, t, r, i) {
  const s = N0(e), a = Mt(n, "crypto/kdf");
  if (a && typeof a == "string") {
    const o = function(u, l) {
      return qf.throwArgumentError("invalid key-derivation function parameters", u, l);
    };
    if (a.toLowerCase() === "scrypt") {
      const u = Zs(Mt(n, "crypto/kdfparams/salt")), l = parseInt(Mt(n, "crypto/kdfparams/n")), p = parseInt(Mt(n, "crypto/kdfparams/r")), h = parseInt(Mt(n, "crypto/kdfparams/p"));
      (!l || !p || !h) && o("kdf", a), (l & l - 1) !== 0 && o("N", l);
      const b = parseInt(Mt(n, "crypto/kdfparams/dklen"));
      return b !== 32 && o("dklen", b), r(s, u, l, p, h, 64, i);
    } else if (a.toLowerCase() === "pbkdf2") {
      const u = Zs(Mt(n, "crypto/kdfparams/salt"));
      let l = null;
      const p = Mt(n, "crypto/kdfparams/prf");
      p === "hmac-sha256" ? l = "sha256" : p === "hmac-sha512" ? l = "sha512" : o("prf", p);
      const h = parseInt(Mt(n, "crypto/kdfparams/c")), b = parseInt(Mt(n, "crypto/kdfparams/dklen"));
      return b !== 32 && o("dklen", b), t(s, u, h, b, l);
    }
  }
  return qf.throwArgumentError("unsupported key-derivation function", "kdf", a);
}
function I6(n, e) {
  const t = JSON.parse(n), r = O6(t, e, P6, L0.syncScrypt);
  return R6(t, r);
}
function k6(n, e, t) {
  return KR(this, void 0, void 0, function* () {
    const r = JSON.parse(n), i = yield O6(r, e, JR, L0.scrypt, t);
    return R6(r, i);
  });
}
function D6(n, e, t, r) {
  try {
    if (ke(n.address) !== ls(n.privateKey))
      throw new Error("address/privateKey mismatch");
    if (Qg(n)) {
      const w = n.mnemonic;
      if (Vn.fromMnemonic(w.phrase, null, w.locale).derivePath(w.path || yo).privateKey != n.privateKey)
        throw new Error("mnemonic mismatch");
    }
  } catch (w) {
    return Promise.reject(w);
  }
  typeof t == "function" && !r && (r = t, t = {}), t || (t = {});
  const i = W(n.privateKey), s = N0(e);
  let a = null, o = null, u = null;
  if (Qg(n)) {
    const w = n.mnemonic;
    a = W(Bd(w.phrase, w.locale || "en")), o = w.path || yo, u = w.locale || "en";
  }
  let l = t.client;
  l || (l = "ethers.js");
  let p = null;
  t.salt ? p = W(t.salt) : p = Qa(32);
  let h = null;
  if (t.iv) {
    if (h = W(t.iv), h.length !== 16)
      throw new Error("invalid iv");
  } else
    h = Qa(16);
  let b = null;
  if (t.uuid) {
    if (b = W(t.uuid), b.length !== 16)
      throw new Error("invalid uuid");
  } else
    b = Qa(16);
  let C = 1 << 17, v = 8, T = 1;
  return t.scrypt && (t.scrypt.N && (C = t.scrypt.N), t.scrypt.r && (v = t.scrypt.r), t.scrypt.p && (T = t.scrypt.p)), L0.scrypt(s, p, C, v, T, 64, r).then((w) => {
    w = W(w);
    const M = w.slice(0, 16), I = w.slice(16, 32), F = w.slice(32, 64), k = new jr.Counter(h), D = new jr.ModeOfOperation.ctr(M, k), $ = W(D.encrypt(i)), G = Pe(Rt([I, $])), V = {
      address: n.address.substring(2).toLowerCase(),
      id: LR(b),
      version: 3,
      crypto: {
        cipher: "aes-128-ctr",
        cipherparams: {
          iv: J(h).substring(2)
        },
        ciphertext: J($).substring(2),
        kdf: "scrypt",
        kdfparams: {
          salt: J(p).substring(2),
          n: C,
          dklen: 32,
          p: T,
          r: v
        },
        mac: G.substring(2)
      }
    };
    if (a) {
      const K = Qa(16), ae = new jr.Counter(K), q = new jr.ModeOfOperation.ctr(F, ae), oe = W(q.encrypt(a)), E = new Date(), c = E.getUTCFullYear() + "-" + Wo(E.getUTCMonth() + 1, 2) + "-" + Wo(E.getUTCDate(), 2) + "T" + Wo(E.getUTCHours(), 2) + "-" + Wo(E.getUTCMinutes(), 2) + "-" + Wo(E.getUTCSeconds(), 2) + ".0Z";
      V["x-ethers"] = {
        client: l,
        gethFilename: "UTC--" + c + "--" + V.address,
        mnemonicCounter: J(K).substring(2),
        mnemonicCiphertext: J(oe).substring(2),
        path: o,
        locale: u,
        version: "0.1"
      };
    }
    return JSON.stringify(V);
  });
}
function B6(n, e, t) {
  if (Nd(n)) {
    t && t(0);
    const r = $0(n, e);
    return t && t(1), Promise.resolve(r);
  }
  return $d(n) ? k6(n, e, t) : Promise.reject(new Error("invalid JSON wallet"));
}
function F6(n, e) {
  if (Nd(n))
    return $0(n, e);
  if ($d(n))
    return I6(n, e);
  throw new Error("invalid JSON wallet");
}
const YR = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  decryptCrowdsale: $0,
  decryptKeystore: k6,
  decryptKeystoreSync: I6,
  encryptKeystore: D6,
  isCrowdsaleWallet: Nd,
  isKeystoreWallet: $d,
  getJsonWalletAddress: jR,
  decryptJsonWallet: B6,
  decryptJsonWalletSync: F6
}, Symbol.toStringTag, { value: "Module" })), XR = /* @__PURE__ */ St(YR), ZR = /* @__PURE__ */ St(XS), e9 = /* @__PURE__ */ St(aS), Jg = /* @__PURE__ */ St(ER), t9 = "solidity/5.7.0", n9 = new RegExp("^bytes([0-9]+)$"), r9 = new RegExp("^(u?int)([0-9]*)$"), i9 = new RegExp("^(.*)\\[([0-9]*)\\]$"), s9 = "0000000000000000000000000000000000000000000000000000000000000000", Ga = new U(t9);
function N6(n, e, t) {
  switch (n) {
    case "address":
      return t ? uu(e, 32) : W(e);
    case "string":
      return Gt(e);
    case "bytes":
      return W(e);
    case "bool":
      return e = e ? "0x01" : "0x00", t ? uu(e, 32) : W(e);
  }
  let r = n.match(r9);
  if (r) {
    let i = parseInt(r[2] || "256");
    return (r[2] && String(i) !== r[2] || i % 8 !== 0 || i === 0 || i > 256) && Ga.throwArgumentError("invalid number type", "type", n), t && (i = 256), e = ne.from(e).toTwos(i), uu(e, i / 8);
  }
  if (r = n.match(n9), r) {
    const i = parseInt(r[1]);
    return (String(i) !== r[1] || i === 0 || i > 32) && Ga.throwArgumentError("invalid bytes type", "type", n), W(e).byteLength !== i && Ga.throwArgumentError(`invalid value for ${n}`, "value", e), t ? W((e + s9).substring(0, 66)) : e;
  }
  if (r = n.match(i9), r && Array.isArray(e)) {
    const i = r[1];
    parseInt(r[2] || String(e.length)) != e.length && Ga.throwArgumentError(`invalid array length for ${n}`, "value", e);
    const a = [];
    return e.forEach(function(o) {
      a.push(N6(i, o, !0));
    }), Rt(a);
  }
  return Ga.throwArgumentError("invalid type", "type", n);
}
function U0(n, e) {
  n.length != e.length && Ga.throwArgumentError("wrong number of values; expected ${ types.length }", "values", e);
  const t = [];
  return n.forEach(function(r, i) {
    t.push(N6(r, e[i]));
  }), J(Rt(t));
}
function a9(n, e) {
  return Pe(U0(n, e));
}
function o9(n, e) {
  return ca(U0(n, e));
}
const u9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  pack: U0,
  keccak256: a9,
  sha256: o9
}, Symbol.toStringTag, { value: "Module" })), l9 = /* @__PURE__ */ St(u9), c9 = /* @__PURE__ */ St(HR), d9 = /* @__PURE__ */ St(gS), p9 = /* @__PURE__ */ St(eE), f9 = /* @__PURE__ */ St(b_), Yg = /* @__PURE__ */ St(LE), h9 = /* @__PURE__ */ St(E_), y9 = "units/5.7.0", $6 = new U(y9), L6 = [
  "wei",
  "kwei",
  "mwei",
  "gwei",
  "szabo",
  "finney",
  "ether"
];
function m9(n) {
  const e = String(n).split(".");
  (e.length > 2 || !e[0].match(/^-?[0-9]*$/) || e[1] && !e[1].match(/^[0-9]*$/) || n === "." || n === "-.") && $6.throwArgumentError("invalid value", "value", n);
  let t = e[0], r = "";
  for (t.substring(0, 1) === "-" && (r = "-", t = t.substring(1)); t.substring(0, 1) === "0"; )
    t = t.substring(1);
  t === "" && (t = "0");
  let i = "";
  for (e.length === 2 && (i = "." + (e[1] || "0")); i.length > 2 && i[i.length - 1] === "0"; )
    i = i.substring(0, i.length - 1);
  const s = [];
  for (; t.length; )
    if (t.length <= 3) {
      s.unshift(t);
      break;
    } else {
      const a = t.length - 3;
      s.unshift(t.substring(a)), t = t.substring(0, a);
    }
  return r + s.join(",") + i;
}
function U6(n, e) {
  if (typeof e == "string") {
    const t = L6.indexOf(e);
    t !== -1 && (e = 3 * t);
  }
  return nc(n, e ?? 18);
}
function V6(n, e) {
  if (typeof n != "string" && $6.throwArgumentError("value must be a string", "value", n), typeof e == "string") {
    const t = L6.indexOf(e);
    t !== -1 && (e = 3 * t);
  }
  return kr(n, e ?? 18);
}
function b9(n) {
  return U6(n, 18);
}
function g9(n) {
  return V6(n, 18);
}
const x9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  commify: m9,
  formatUnits: U6,
  parseUnits: V6,
  formatEther: b9,
  parseEther: g9
}, Symbol.toStringTag, { value: "Module" })), v9 = /* @__PURE__ */ St(x9), w9 = "wallet/5.7.0";
var Xg = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const Na = new U(w9);
function T9(n) {
  return n != null && vt(n.privateKey, 32) && n.address != null;
}
function A9(n) {
  const e = n.mnemonic;
  return e && e.phrase;
}
class Ks extends Ro {
  constructor(e, t) {
    if (super(), T9(e)) {
      const r = new Xs(e.privateKey);
      if (z(this, "_signingKey", () => r), z(this, "address", ls(this.publicKey)), this.address !== ke(e.address) && Na.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]"), A9(e)) {
        const i = e.mnemonic;
        z(this, "_mnemonic", () => ({
          phrase: i.phrase,
          path: i.path || yo,
          locale: i.locale || "en"
        }));
        const s = this.mnemonic, a = Vn.fromMnemonic(s.phrase, null, s.locale).derivePath(s.path);
        ls(a.privateKey) !== this.address && Na.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
      } else
        z(this, "_mnemonic", () => null);
    } else {
      if (Xs.isSigningKey(e))
        e.curve !== "secp256k1" && Na.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]"), z(this, "_signingKey", () => e);
      else {
        typeof e == "string" && e.match(/^[0-9a-f]*$/i) && e.length === 64 && (e = "0x" + e);
        const r = new Xs(e);
        z(this, "_signingKey", () => r);
      }
      z(this, "_mnemonic", () => null), z(this, "address", ls(this.publicKey));
    }
    t && !Pd.isProvider(t) && Na.throwArgumentError("invalid provider", "provider", t), z(this, "provider", t || null);
  }
  get mnemonic() {
    return this._mnemonic();
  }
  get privateKey() {
    return this._signingKey().privateKey;
  }
  get publicKey() {
    return this._signingKey().publicKey;
  }
  getAddress() {
    return Promise.resolve(this.address);
  }
  connect(e) {
    return new Ks(this, e);
  }
  signTransaction(e) {
    return Ur(e).then((t) => {
      t.from != null && (ke(t.from) !== this.address && Na.throwArgumentError("transaction from address mismatch", "transaction.from", e.from), delete t.from);
      const r = this._signingKey().signDigest(Pe(Wf(t)));
      return Wf(t, r);
    });
  }
  signMessage(e) {
    return Xg(this, void 0, void 0, function* () {
      return Bf(this._signingKey().signDigest(v0(e)));
    });
  }
  _signTypedData(e, t, r) {
    return Xg(this, void 0, void 0, function* () {
      const i = yield bn.resolveNames(e, t, r, (s) => (this.provider == null && Na.throwError("cannot resolve ENS names without a provider", U.errors.UNSUPPORTED_OPERATION, {
        operation: "resolveName",
        value: s
      }), this.provider.resolveName(s)));
      return Bf(this._signingKey().signDigest(bn.hash(i.domain, t, i.value)));
    });
  }
  encrypt(e, t, r) {
    if (typeof t == "function" && !r && (r = t, t = {}), r && typeof r != "function")
      throw new Error("invalid callback");
    return t || (t = {}), D6(this, e, t, r);
  }
  static createRandom(e) {
    let t = Qa(16);
    e || (e = {}), e.extraEntropy && (t = W(Ci(Pe(Rt([t, e.extraEntropy])), 0, 16)));
    const r = Fd(t, e.locale);
    return Ks.fromMnemonic(r, e.path, e.locale);
  }
  static fromEncryptedJson(e, t, r) {
    return B6(e, t, r).then((i) => new Ks(i));
  }
  static fromEncryptedJsonSync(e, t) {
    return new Ks(F6(e, t));
  }
  static fromMnemonic(e, t, r) {
    return t || (t = yo), new Ks(Vn.fromMnemonic(e, null, r).derivePath(t));
  }
}
function C9(n, e) {
  return hl(v0(n), e);
}
function S9(n, e, t, r) {
  return hl(bn.hash(n, e, t), r);
}
const E9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  Wallet: Ks,
  verifyMessage: C9,
  verifyTypedData: S9
}, Symbol.toStringTag, { value: "Module" })), M9 = /* @__PURE__ */ St(E9), _9 = "web/5.7.1";
var R9 = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
function P9(n, e) {
  return R9(this, void 0, void 0, function* () {
    e == null && (e = {});
    const t = {
      method: e.method || "GET",
      headers: e.headers || {},
      body: e.body || void 0
    };
    if (e.skipFetchSetup !== !0 && (t.mode = "cors", t.cache = "no-cache", t.credentials = "same-origin", t.redirect = "follow", t.referrer = "client"), e.fetchOptions != null) {
      const a = e.fetchOptions;
      a.mode && (t.mode = a.mode), a.cache && (t.cache = a.cache), a.credentials && (t.credentials = a.credentials), a.redirect && (t.redirect = a.redirect), a.referrer && (t.referrer = a.referrer);
    }
    const r = yield fetch(n, t), i = yield r.arrayBuffer(), s = {};
    return r.headers.forEach ? r.headers.forEach((a, o) => {
      s[o.toLowerCase()] = a;
    }) : r.headers.keys().forEach((a) => {
      s[a.toLowerCase()] = r.headers.get(a);
    }), {
      headers: s,
      statusCode: r.status,
      statusMessage: r.statusText,
      body: W(new Uint8Array(i))
    };
  });
}
var O9 = globalThis && globalThis.__awaiter || function(n, e, t, r) {
  function i(s) {
    return s instanceof t ? s : new t(function(a) {
      a(s);
    });
  }
  return new (t || (t = Promise))(function(s, a) {
    function o(p) {
      try {
        l(r.next(p));
      } catch (h) {
        a(h);
      }
    }
    function u(p) {
      try {
        l(r.throw(p));
      } catch (h) {
        a(h);
      }
    }
    function l(p) {
      p.done ? s(p.value) : i(p.value).then(o, u);
    }
    l((r = r.apply(n, e || [])).next());
  });
};
const gr = new U(_9);
function Zg(n) {
  return new Promise((e) => {
    setTimeout(e, n);
  });
}
function Hi(n, e) {
  if (n == null)
    return null;
  if (typeof n == "string")
    return n;
  if (dl(n)) {
    if (e && (e.split("/")[0] === "text" || e.split(";")[0].trim() === "application/json"))
      try {
        return _o(n);
      } catch {
      }
    return J(n);
  }
  return n;
}
function I9(n) {
  return Gt(n.replace(/%([0-9a-f][0-9a-f])/gi, (e, t) => String.fromCharCode(parseInt(t, 16))));
}
function j6(n, e, t) {
  const r = typeof n == "object" && n.throttleLimit != null ? n.throttleLimit : 12;
  gr.assertArgument(r > 0 && r % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", r);
  const i = typeof n == "object" ? n.throttleCallback : null, s = typeof n == "object" && typeof n.throttleSlotInterval == "number" ? n.throttleSlotInterval : 100;
  gr.assertArgument(s > 0 && s % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", s);
  const a = typeof n == "object" ? !!n.errorPassThrough : !1, o = {};
  let u = null;
  const l = {
    method: "GET"
  };
  let p = !1, h = 2 * 60 * 1e3;
  if (typeof n == "string")
    u = n;
  else if (typeof n == "object") {
    if ((n == null || n.url == null) && gr.throwArgumentError("missing URL", "connection.url", n), u = n.url, typeof n.timeout == "number" && n.timeout > 0 && (h = n.timeout), n.headers)
      for (const M in n.headers)
        o[M.toLowerCase()] = { key: M, value: String(n.headers[M]) }, ["if-none-match", "if-modified-since"].indexOf(M.toLowerCase()) >= 0 && (p = !0);
    if (l.allowGzip = !!n.allowGzip, n.user != null && n.password != null) {
      u.substring(0, 6) !== "https:" && n.allowInsecureAuthentication !== !0 && gr.throwError("basic authentication requires a secure https url", U.errors.INVALID_ARGUMENT, { argument: "url", url: u, user: n.user, password: "[REDACTED]" });
      const M = n.user + ":" + n.password;
      o.authorization = {
        key: "Authorization",
        value: "Basic " + Rv(Gt(M))
      };
    }
    n.skipFetchSetup != null && (l.skipFetchSetup = !!n.skipFetchSetup), n.fetchOptions != null && (l.fetchOptions = Hn(n.fetchOptions));
  }
  const b = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"), C = u ? u.match(b) : null;
  if (C)
    try {
      const M = {
        statusCode: 200,
        statusMessage: "OK",
        headers: { "content-type": C[1] || "text/plain" },
        body: C[2] ? x0(C[3]) : I9(C[3])
      };
      let I = M.body;
      return t && (I = t(M.body, M)), Promise.resolve(I);
    } catch (M) {
      gr.throwError("processing response error", U.errors.SERVER_ERROR, {
        body: Hi(C[1], C[2]),
        error: M,
        requestBody: null,
        requestMethod: "GET",
        url: u
      });
    }
  e && (l.method = "POST", l.body = e, o["content-type"] == null && (o["content-type"] = { key: "Content-Type", value: "application/octet-stream" }), o["content-length"] == null && (o["content-length"] = { key: "Content-Length", value: String(e.length) }));
  const v = {};
  Object.keys(o).forEach((M) => {
    const I = o[M];
    v[I.key] = I.value;
  }), l.headers = v;
  const T = function() {
    let M = null;
    return { promise: new Promise(function(k, D) {
      h && (M = setTimeout(() => {
        M != null && (M = null, D(gr.makeError("timeout", U.errors.TIMEOUT, {
          requestBody: Hi(l.body, v["content-type"]),
          requestMethod: l.method,
          timeout: h,
          url: u
        })));
      }, h));
    }), cancel: function() {
      M != null && (clearTimeout(M), M = null);
    } };
  }(), w = function() {
    return O9(this, void 0, void 0, function* () {
      for (let M = 0; M < r; M++) {
        let I = null;
        try {
          if (I = yield P9(u, l), M < r) {
            if (I.statusCode === 301 || I.statusCode === 302) {
              const k = I.headers.location || "";
              if (l.method === "GET" && k.match(/^https:/)) {
                u = I.headers.location;
                continue;
              }
            } else if (I.statusCode === 429) {
              let k = !0;
              if (i && (k = yield i(M, u)), k) {
                let D = 0;
                const $ = I.headers["retry-after"];
                typeof $ == "string" && $.match(/^[1-9][0-9]*$/) ? D = parseInt($) * 1e3 : D = s * parseInt(String(Math.random() * Math.pow(2, M))), yield Zg(D);
                continue;
              }
            }
          }
        } catch (k) {
          I = k.response, I == null && (T.cancel(), gr.throwError("missing response", U.errors.SERVER_ERROR, {
            requestBody: Hi(l.body, v["content-type"]),
            requestMethod: l.method,
            serverError: k,
            url: u
          }));
        }
        let F = I.body;
        if (p && I.statusCode === 304 ? F = null : !a && (I.statusCode < 200 || I.statusCode >= 300) && (T.cancel(), gr.throwError("bad response", U.errors.SERVER_ERROR, {
          status: I.statusCode,
          headers: I.headers,
          body: Hi(F, I.headers ? I.headers["content-type"] : null),
          requestBody: Hi(l.body, v["content-type"]),
          requestMethod: l.method,
          url: u
        })), t)
          try {
            const k = yield t(F, I);
            return T.cancel(), k;
          } catch (k) {
            if (k.throttleRetry && M < r) {
              let D = !0;
              if (i && (D = yield i(M, u)), D) {
                const $ = s * parseInt(String(Math.random() * Math.pow(2, M)));
                yield Zg($);
                continue;
              }
            }
            T.cancel(), gr.throwError("processing response error", U.errors.SERVER_ERROR, {
              body: Hi(F, I.headers ? I.headers["content-type"] : null),
              error: k,
              requestBody: Hi(l.body, v["content-type"]),
              requestMethod: l.method,
              url: u
            });
          }
        return T.cancel(), F;
      }
      return gr.throwError("failed response", U.errors.SERVER_ERROR, {
        requestBody: Hi(l.body, v["content-type"]),
        requestMethod: l.method,
        url: u
      });
    });
  }();
  return Promise.race([T.promise, w]);
}
function k9(n, e, t) {
  let r = (s, a) => {
    let o = null;
    if (s != null)
      try {
        o = JSON.parse(_o(s));
      } catch (u) {
        gr.throwError("invalid JSON", U.errors.SERVER_ERROR, {
          body: s,
          error: u
        });
      }
    return t && (o = t(o, a)), o;
  }, i = null;
  if (e != null) {
    i = Gt(e);
    const s = typeof n == "string" ? { url: n } : Hn(n);
    s.headers ? Object.keys(s.headers).filter((o) => o.toLowerCase() === "content-type").length !== 0 || (s.headers = Hn(s.headers), s.headers["content-type"] = "application/json") : s.headers = { "content-type": "application/json" }, n = s;
  }
  return j6(n, i, r);
}
function D9(n, e) {
  return e || (e = {}), e = Hn(e), e.floor == null && (e.floor = 0), e.ceiling == null && (e.ceiling = 1e4), e.interval == null && (e.interval = 250), new Promise(function(t, r) {
    let i = null, s = !1;
    const a = () => s ? !1 : (s = !0, i && clearTimeout(i), !0);
    e.timeout && (i = setTimeout(() => {
      a() && r(new Error("timeout"));
    }, e.timeout));
    const o = e.retryLimit;
    let u = 0;
    function l() {
      return n().then(function(p) {
        if (p !== void 0)
          a() && t(p);
        else if (e.oncePoll)
          e.oncePoll.once("poll", l);
        else if (e.onceBlock)
          e.onceBlock.once("block", l);
        else if (!s) {
          if (u++, u > o) {
            a() && r(new Error("retry limit reached"));
            return;
          }
          let h = e.interval * parseInt(String(Math.random() * Math.pow(2, u)));
          h < e.floor && (h = e.floor), h > e.ceiling && (h = e.ceiling), setTimeout(l, h);
        }
        return null;
      }, function(p) {
        a() && r(p);
      });
    }
    l();
  });
}
const B9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  _fetchData: j6,
  fetchJson: k9,
  poll: D9
}, Symbol.toStringTag, { value: "Module" })), F9 = /* @__PURE__ */ St(B9);
(function(n) {
  var e = Yi && Yi.__createBinding || (Object.create ? function(q, oe, E, c) {
    c === void 0 && (c = E), Object.defineProperty(q, c, { enumerable: !0, get: function() {
      return oe[E];
    } });
  } : function(q, oe, E, c) {
    c === void 0 && (c = E), q[c] = oe[E];
  }), t = Yi && Yi.__setModuleDefault || (Object.create ? function(q, oe) {
    Object.defineProperty(q, "default", { enumerable: !0, value: oe });
  } : function(q, oe) {
    q.default = oe;
  }), r = Yi && Yi.__importStar || function(q) {
    if (q && q.__esModule)
      return q;
    var oe = {};
    if (q != null)
      for (var E in q)
        E !== "default" && Object.prototype.hasOwnProperty.call(q, E) && e(oe, q, E);
    return t(oe, q), oe;
  };
  Object.defineProperty(n, "__esModule", { value: !0 }), n.formatBytes32String = n.Utf8ErrorFuncs = n.toUtf8String = n.toUtf8CodePoints = n.toUtf8Bytes = n._toEscapedUtf8String = n.nameprep = n.hexDataSlice = n.hexDataLength = n.hexZeroPad = n.hexValue = n.hexStripZeros = n.hexConcat = n.isHexString = n.hexlify = n.base64 = n.base58 = n.TransactionDescription = n.LogDescription = n.Interface = n.SigningKey = n.HDNode = n.defaultPath = n.isBytesLike = n.isBytes = n.zeroPad = n.stripZeros = n.concat = n.arrayify = n.shallowCopy = n.resolveProperties = n.getStatic = n.defineReadOnly = n.deepCopy = n.checkProperties = n.poll = n.fetchJson = n._fetchData = n.RLP = n.Logger = n.checkResultErrors = n.FormatTypes = n.ParamType = n.FunctionFragment = n.EventFragment = n.ErrorFragment = n.ConstructorFragment = n.Fragment = n.defaultAbiCoder = n.AbiCoder = void 0, n.Indexed = n.Utf8ErrorReason = n.UnicodeNormalizationForm = n.SupportedAlgorithm = n.mnemonicToSeed = n.isValidMnemonic = n.entropyToMnemonic = n.mnemonicToEntropy = n.getAccountPath = n.verifyTypedData = n.verifyMessage = n.recoverPublicKey = n.computePublicKey = n.recoverAddress = n.computeAddress = n.getJsonWalletAddress = n.TransactionTypes = n.serializeTransaction = n.parseTransaction = n.accessListify = n.joinSignature = n.splitSignature = n.soliditySha256 = n.solidityKeccak256 = n.solidityPack = n.shuffled = n.randomBytes = n.sha512 = n.sha256 = n.ripemd160 = n.keccak256 = n.computeHmac = n.commify = n.parseUnits = n.formatUnits = n.parseEther = n.formatEther = n.isAddress = n.getCreate2Address = n.getContractAddress = n.getIcapAddress = n.getAddress = n._TypedDataEncoder = n.id = n.isValidName = n.namehash = n.hashMessage = n.dnsEncode = n.parseBytes32String = void 0;
  var i = yR;
  Object.defineProperty(n, "AbiCoder", { enumerable: !0, get: function() {
    return i.AbiCoder;
  } }), Object.defineProperty(n, "checkResultErrors", { enumerable: !0, get: function() {
    return i.checkResultErrors;
  } }), Object.defineProperty(n, "ConstructorFragment", { enumerable: !0, get: function() {
    return i.ConstructorFragment;
  } }), Object.defineProperty(n, "defaultAbiCoder", { enumerable: !0, get: function() {
    return i.defaultAbiCoder;
  } }), Object.defineProperty(n, "ErrorFragment", { enumerable: !0, get: function() {
    return i.ErrorFragment;
  } }), Object.defineProperty(n, "EventFragment", { enumerable: !0, get: function() {
    return i.EventFragment;
  } }), Object.defineProperty(n, "FormatTypes", { enumerable: !0, get: function() {
    return i.FormatTypes;
  } }), Object.defineProperty(n, "Fragment", { enumerable: !0, get: function() {
    return i.Fragment;
  } }), Object.defineProperty(n, "FunctionFragment", { enumerable: !0, get: function() {
    return i.FunctionFragment;
  } }), Object.defineProperty(n, "Indexed", { enumerable: !0, get: function() {
    return i.Indexed;
  } }), Object.defineProperty(n, "Interface", { enumerable: !0, get: function() {
    return i.Interface;
  } }), Object.defineProperty(n, "LogDescription", { enumerable: !0, get: function() {
    return i.LogDescription;
  } }), Object.defineProperty(n, "ParamType", { enumerable: !0, get: function() {
    return i.ParamType;
  } }), Object.defineProperty(n, "TransactionDescription", { enumerable: !0, get: function() {
    return i.TransactionDescription;
  } });
  var s = mR;
  Object.defineProperty(n, "getAddress", { enumerable: !0, get: function() {
    return s.getAddress;
  } }), Object.defineProperty(n, "getCreate2Address", { enumerable: !0, get: function() {
    return s.getCreate2Address;
  } }), Object.defineProperty(n, "getContractAddress", { enumerable: !0, get: function() {
    return s.getContractAddress;
  } }), Object.defineProperty(n, "getIcapAddress", { enumerable: !0, get: function() {
    return s.getIcapAddress;
  } }), Object.defineProperty(n, "isAddress", { enumerable: !0, get: function() {
    return s.isAddress;
  } });
  var a = r(bR);
  n.base64 = a;
  var o = vR;
  Object.defineProperty(n, "base58", { enumerable: !0, get: function() {
    return o.Base58;
  } });
  var u = wR;
  Object.defineProperty(n, "arrayify", { enumerable: !0, get: function() {
    return u.arrayify;
  } }), Object.defineProperty(n, "concat", { enumerable: !0, get: function() {
    return u.concat;
  } }), Object.defineProperty(n, "hexConcat", { enumerable: !0, get: function() {
    return u.hexConcat;
  } }), Object.defineProperty(n, "hexDataSlice", { enumerable: !0, get: function() {
    return u.hexDataSlice;
  } }), Object.defineProperty(n, "hexDataLength", { enumerable: !0, get: function() {
    return u.hexDataLength;
  } }), Object.defineProperty(n, "hexlify", { enumerable: !0, get: function() {
    return u.hexlify;
  } }), Object.defineProperty(n, "hexStripZeros", { enumerable: !0, get: function() {
    return u.hexStripZeros;
  } }), Object.defineProperty(n, "hexValue", { enumerable: !0, get: function() {
    return u.hexValue;
  } }), Object.defineProperty(n, "hexZeroPad", { enumerable: !0, get: function() {
    return u.hexZeroPad;
  } }), Object.defineProperty(n, "isBytes", { enumerable: !0, get: function() {
    return u.isBytes;
  } }), Object.defineProperty(n, "isBytesLike", { enumerable: !0, get: function() {
    return u.isBytesLike;
  } }), Object.defineProperty(n, "isHexString", { enumerable: !0, get: function() {
    return u.isHexString;
  } }), Object.defineProperty(n, "joinSignature", { enumerable: !0, get: function() {
    return u.joinSignature;
  } }), Object.defineProperty(n, "zeroPad", { enumerable: !0, get: function() {
    return u.zeroPad;
  } }), Object.defineProperty(n, "splitSignature", { enumerable: !0, get: function() {
    return u.splitSignature;
  } }), Object.defineProperty(n, "stripZeros", { enumerable: !0, get: function() {
    return u.stripZeros;
  } });
  var l = TR;
  Object.defineProperty(n, "_TypedDataEncoder", { enumerable: !0, get: function() {
    return l._TypedDataEncoder;
  } }), Object.defineProperty(n, "dnsEncode", { enumerable: !0, get: function() {
    return l.dnsEncode;
  } }), Object.defineProperty(n, "hashMessage", { enumerable: !0, get: function() {
    return l.hashMessage;
  } }), Object.defineProperty(n, "id", { enumerable: !0, get: function() {
    return l.id;
  } }), Object.defineProperty(n, "isValidName", { enumerable: !0, get: function() {
    return l.isValidName;
  } }), Object.defineProperty(n, "namehash", { enumerable: !0, get: function() {
    return l.namehash;
  } });
  var p = $R;
  Object.defineProperty(n, "defaultPath", { enumerable: !0, get: function() {
    return p.defaultPath;
  } }), Object.defineProperty(n, "entropyToMnemonic", { enumerable: !0, get: function() {
    return p.entropyToMnemonic;
  } }), Object.defineProperty(n, "getAccountPath", { enumerable: !0, get: function() {
    return p.getAccountPath;
  } }), Object.defineProperty(n, "HDNode", { enumerable: !0, get: function() {
    return p.HDNode;
  } }), Object.defineProperty(n, "isValidMnemonic", { enumerable: !0, get: function() {
    return p.isValidMnemonic;
  } }), Object.defineProperty(n, "mnemonicToEntropy", { enumerable: !0, get: function() {
    return p.mnemonicToEntropy;
  } }), Object.defineProperty(n, "mnemonicToSeed", { enumerable: !0, get: function() {
    return p.mnemonicToSeed;
  } });
  var h = XR;
  Object.defineProperty(n, "getJsonWalletAddress", { enumerable: !0, get: function() {
    return h.getJsonWalletAddress;
  } });
  var b = ZR;
  Object.defineProperty(n, "keccak256", { enumerable: !0, get: function() {
    return b.keccak256;
  } });
  var C = e9;
  Object.defineProperty(n, "Logger", { enumerable: !0, get: function() {
    return C.Logger;
  } });
  var v = Jg;
  Object.defineProperty(n, "computeHmac", { enumerable: !0, get: function() {
    return v.computeHmac;
  } }), Object.defineProperty(n, "ripemd160", { enumerable: !0, get: function() {
    return v.ripemd160;
  } }), Object.defineProperty(n, "sha256", { enumerable: !0, get: function() {
    return v.sha256;
  } }), Object.defineProperty(n, "sha512", { enumerable: !0, get: function() {
    return v.sha512;
  } });
  var T = l9;
  Object.defineProperty(n, "solidityKeccak256", { enumerable: !0, get: function() {
    return T.keccak256;
  } }), Object.defineProperty(n, "solidityPack", { enumerable: !0, get: function() {
    return T.pack;
  } }), Object.defineProperty(n, "soliditySha256", { enumerable: !0, get: function() {
    return T.sha256;
  } });
  var w = c9;
  Object.defineProperty(n, "randomBytes", { enumerable: !0, get: function() {
    return w.randomBytes;
  } }), Object.defineProperty(n, "shuffled", { enumerable: !0, get: function() {
    return w.shuffled;
  } });
  var M = d9;
  Object.defineProperty(n, "checkProperties", { enumerable: !0, get: function() {
    return M.checkProperties;
  } }), Object.defineProperty(n, "deepCopy", { enumerable: !0, get: function() {
    return M.deepCopy;
  } }), Object.defineProperty(n, "defineReadOnly", { enumerable: !0, get: function() {
    return M.defineReadOnly;
  } }), Object.defineProperty(n, "getStatic", { enumerable: !0, get: function() {
    return M.getStatic;
  } }), Object.defineProperty(n, "resolveProperties", { enumerable: !0, get: function() {
    return M.resolveProperties;
  } }), Object.defineProperty(n, "shallowCopy", { enumerable: !0, get: function() {
    return M.shallowCopy;
  } });
  var I = r(p9);
  n.RLP = I;
  var F = f9;
  Object.defineProperty(n, "computePublicKey", { enumerable: !0, get: function() {
    return F.computePublicKey;
  } }), Object.defineProperty(n, "recoverPublicKey", { enumerable: !0, get: function() {
    return F.recoverPublicKey;
  } }), Object.defineProperty(n, "SigningKey", { enumerable: !0, get: function() {
    return F.SigningKey;
  } });
  var k = Yg;
  Object.defineProperty(n, "formatBytes32String", { enumerable: !0, get: function() {
    return k.formatBytes32String;
  } }), Object.defineProperty(n, "nameprep", { enumerable: !0, get: function() {
    return k.nameprep;
  } }), Object.defineProperty(n, "parseBytes32String", { enumerable: !0, get: function() {
    return k.parseBytes32String;
  } }), Object.defineProperty(n, "_toEscapedUtf8String", { enumerable: !0, get: function() {
    return k._toEscapedUtf8String;
  } }), Object.defineProperty(n, "toUtf8Bytes", { enumerable: !0, get: function() {
    return k.toUtf8Bytes;
  } }), Object.defineProperty(n, "toUtf8CodePoints", { enumerable: !0, get: function() {
    return k.toUtf8CodePoints;
  } }), Object.defineProperty(n, "toUtf8String", { enumerable: !0, get: function() {
    return k.toUtf8String;
  } }), Object.defineProperty(n, "Utf8ErrorFuncs", { enumerable: !0, get: function() {
    return k.Utf8ErrorFuncs;
  } });
  var D = h9;
  Object.defineProperty(n, "accessListify", { enumerable: !0, get: function() {
    return D.accessListify;
  } }), Object.defineProperty(n, "computeAddress", { enumerable: !0, get: function() {
    return D.computeAddress;
  } }), Object.defineProperty(n, "parseTransaction", { enumerable: !0, get: function() {
    return D.parse;
  } }), Object.defineProperty(n, "recoverAddress", { enumerable: !0, get: function() {
    return D.recoverAddress;
  } }), Object.defineProperty(n, "serializeTransaction", { enumerable: !0, get: function() {
    return D.serialize;
  } }), Object.defineProperty(n, "TransactionTypes", { enumerable: !0, get: function() {
    return D.TransactionTypes;
  } });
  var $ = v9;
  Object.defineProperty(n, "commify", { enumerable: !0, get: function() {
    return $.commify;
  } }), Object.defineProperty(n, "formatEther", { enumerable: !0, get: function() {
    return $.formatEther;
  } }), Object.defineProperty(n, "parseEther", { enumerable: !0, get: function() {
    return $.parseEther;
  } }), Object.defineProperty(n, "formatUnits", { enumerable: !0, get: function() {
    return $.formatUnits;
  } }), Object.defineProperty(n, "parseUnits", { enumerable: !0, get: function() {
    return $.parseUnits;
  } });
  var G = M9;
  Object.defineProperty(n, "verifyMessage", { enumerable: !0, get: function() {
    return G.verifyMessage;
  } }), Object.defineProperty(n, "verifyTypedData", { enumerable: !0, get: function() {
    return G.verifyTypedData;
  } });
  var V = F9;
  Object.defineProperty(n, "_fetchData", { enumerable: !0, get: function() {
    return V._fetchData;
  } }), Object.defineProperty(n, "fetchJson", { enumerable: !0, get: function() {
    return V.fetchJson;
  } }), Object.defineProperty(n, "poll", { enumerable: !0, get: function() {
    return V.poll;
  } });
  var K = Jg;
  Object.defineProperty(n, "SupportedAlgorithm", { enumerable: !0, get: function() {
    return K.SupportedAlgorithm;
  } });
  var ae = Yg;
  Object.defineProperty(n, "UnicodeNormalizationForm", { enumerable: !0, get: function() {
    return ae.UnicodeNormalizationForm;
  } }), Object.defineProperty(n, "Utf8ErrorReason", { enumerable: !0, get: function() {
    return ae.Utf8ErrorReason;
  } });
})(I0);
var Tr = /* @__PURE__ */ ((n) => (n[n["1h"] = 0] = "1h", n[n["1d"] = 1] = "1d", n[n["1w"] = 2] = "1w", n[n["1m"] = 3] = "1m", n[n["1y"] = 4] = "1y", n))(Tr || {});
function N9(n, e) {
  if (typeof n != "number" || Number.isInteger(n) || isNaN(n))
    return n;
  const t = n.toString().split(".");
  return Number(`${t[0]}.${t[1].slice(0, e)}`);
}
function z6(n) {
  switch (n) {
    case Tr["1d"]:
      return "hour";
    case Tr["1h"]:
      return "minute";
    case Tr["1m"]:
    case Tr["1w"]:
    case Tr["1y"]:
      return "day";
  }
}
function G6(n) {
  const e = new Date();
  switch (n) {
    case Tr["1h"]:
      e.setMinutes(e.getMinutes() - 60);
      break;
    case Tr["1d"]:
      e.setHours(e.getHours() - 24);
      break;
    case Tr["1w"]:
      e.setDate(e.getDate() - 7);
      break;
    case Tr["1m"]:
      e.setMonth(e.getMonth() - 1);
      break;
    case Tr["1y"]:
      e.setFullYear(e.getFullYear() - 1);
      break;
  }
  return e.getTime();
}
const $9 = (n, e) => {
  for (const t in e) {
    const r = new RegExp("{" + t + "}", "gm");
    n = n.replace(r, e[t]);
  }
  return n;
}, e2 = (n, e) => {
  const t = typeof n;
  return (t === "string" || t === "number") && (n = N9(Number(n), Number(e))), I0.parseUnits(n.toString(), e);
}, Vt = (n, e) => I0.formatUnits(n.toString(), e), V0 = pe.createInterface();
function L9({ mustBeMetaMask: n = !1, silent: e = !1, timeout: t = 3e3 } = {}) {
  i();
  let r = !1;
  return new Promise((s) => {
    window.ethereum ? a() : (window.addEventListener("ethereum#initialized", a, { once: !0 }), setTimeout(() => {
      a();
    }, t));
    function a() {
      if (r)
        return;
      r = !0, window.removeEventListener("ethereum#initialized", a);
      const { ethereum: o } = window;
      o && (!n || o.isMetaMask) ? s(o) : (!e && console.error("@metamask/detect-provider:", n && o ? "Non-MetaMask window.ethereum detected." : "Unable to detect window.ethereum."), s(null));
    }
  });
  function i() {
    if (typeof n != "boolean")
      throw new Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");
    if (typeof e != "boolean")
      throw new Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");
    if (typeof t != "number")
      throw new Error("@metamask/detect-provider: Expected option 'timeout' to be a number.");
  }
}
var U9 = L9;
const V9 = "ethers/5.7.2";
new U(V9);
var j9 = Object.defineProperty, z9 = Object.getOwnPropertyDescriptor, G9 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? z9(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && j9(e, t, i), i;
}, Ho = (n, e) => (t, r) => e(t, r, n);
const W6 = pe.createInterface("EthereumService");
let Lu = class {
  constructor(n, e, t, r, i) {
    this.eventAggregator = n, this.logger = e, this.configuration = t, this.readOnlyProvider = r, this.walletConnector = i, this.logger = e.scopeTo("EthereumService");
  }
  static register(n) {
    de.singleton(W6, Lu).register(n);
  }
  get targetedChainId() {
    return this.configuration.chainId;
  }
  lastBlock;
  async connect(n) {
    return n ? await this.walletConnector.connectTo(n) : await this.walletConnector.connect();
  }
  async getMetaMaskProvider() {
    const n = await U9({ mustBeMetaMask: !0 });
    if (!n)
      return null;
    if (!!await n._metamask.isUnlocked() && !!(await n.request({ method: "eth_accounts" })).length)
      return n;
  }
  async getAccountsForProvider(n) {
    return Ro.isSigner(n) ? [await n.getAddress()] : await n.listAccounts();
  }
  async switchToTargetedNetwork(n) {
    try {
      return await n.provider.request?.({
        method: "wallet_switchEthereumChain",
        params: [{ chainId: `0x${this.targetedChainId.toString(16)}` }]
      }), n.provider;
    } catch (e) {
      if (e.code !== 4902)
        return;
      throw new Error(`The ${this.configuration.chain} network is not installed in your Metamask configuration`);
    }
  }
  async addTokenToMetamask(n, e, t, r, i) {
    try {
      await n.request({
        method: "wallet_watchAsset",
        params: {
          type: "ERC20",
          options: {
            address: e,
            symbol: t,
            decimals: r,
            image: i
          }
        }
      });
    } catch (s) {
      this.logger.error(s);
    }
  }
  async getBlock(n) {
    const e = await this.readOnlyProvider.getBlock(n);
    return e.blockDate = new Date(e.timestamp * 1e3), e;
  }
  getEtherscanLink(n, e = !1) {
    return $9(this.configuration.scanLink, { type: e ? "tx" : "address", address: n });
  }
};
Lu = G9([
  Ho(0, md),
  Ho(1, xa),
  Ho(2, bl),
  Ho(3, p0),
  Ho(4, V0)
], Lu);
var W9 = Object.defineProperty, H9 = Object.getOwnPropertyDescriptor, K9 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? H9(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && W9(e, t, i), i;
}, q9 = (n, e) => (t, r) => e(t, r, n);
const H6 = pe.createInterface("HttpService"), K6 = { accept: "application/json" }, Q9 = { "content-type": "application/json", ...K6 };
let Gc = class {
  constructor(n) {
    this.logger = n, this.logger = n.scopeTo("HttpService");
  }
  static register(n) {
    n.register(de.singleton(H6, Gc));
  }
  async call(n, e, t) {
    const r = await fetch(n, {
      body: e,
      method: e ? "POST" : "GET",
      headers: e ? Q9 : K6,
      ...t
    });
    if (r.ok)
      return await r.json();
    const i = new Error(await r.text());
    return this.logger.error({ response: r, error: i }), Promise.reject(i);
  }
};
Gc = K9([
  q9(0, xa)
], Gc);
var J9 = Object.defineProperty, Y9 = Object.getOwnPropertyDescriptor, X9 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? Y9(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && J9(e, t, i), i;
}, t2 = (n, e) => (t, r) => e(t, r, n);
const q6 = pe.createInterface("ObserverService");
let Wc = class {
  constructor(n, e) {
    this.locator = n, this.cacheService = e;
  }
  static register(n) {
    n.register(de.singleton(q6, Wc));
  }
  listen(n, e, t) {
    const r = this.locator.getObserver(n, e), i = {
      handleChange: t
    };
    return r.subscribe(i), () => r.unsubscribe(i);
  }
};
Wc = X9([
  t2(0, va),
  t2(1, cl)
], Wc);
var Z9 = Object.defineProperty, eP = Object.getOwnPropertyDescriptor, tP = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? eP(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && Z9(e, t, i), i;
}, nP = (n, e) => (t, r) => e(t, r, n);
const Q6 = pe.createInterface("TimingService");
let Hc = class {
  constructor(n) {
    this.config = n;
  }
  static register(n) {
    de.singleton(Q6, Hc).register(n);
  }
  startTimer(n) {
    this.config.isDevelopment && console.time(n);
  }
  endTimer(n) {
    this.config.isDevelopment && console.timeEnd(n);
  }
};
Hc = tP([
  nP(0, bl)
], Hc);
var rP = Object.defineProperty, iP = Object.getOwnPropertyDescriptor, sP = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? iP(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && rP(e, t, i), i;
}, er = (n, e) => (t, r) => e(t, r, n);
const aP = pe.createInterface();
let Qf = class {
  constructor(n, e, t, r, i, s, a, o, u, l, p, h) {
    this.httpService = n, this.numberService = e, this.ethereumService = t, this.browserStorageService = r, this.timingService = i, this.cacheService = s, this.observerService = a, this.encryptionService = o, this.contractService = u, this.tokenService = l, this.ipfsService = p, this.configuration = h;
  }
  static register(n) {
    n.register(de.singleton(aP, Qf)).register(Wc).register(Hc).register(Ed).register(Bu).register(Gc).register(Fu).register(Lu).register(zc).register(O0).register(jc).register(po).register(fo);
  }
};
Qf = sP([
  er(0, H6),
  er(1, ml),
  er(2, W6),
  er(3, P0),
  er(4, Q6),
  er(5, cl),
  er(6, q6),
  er(7, w6),
  er(8, Do),
  er(9, _0),
  er(10, R0),
  er(11, bl)
], Qf);
pe.createInterface("DateServiceIntl");
var oP = Object.defineProperty, uP = Object.getOwnPropertyDescriptor, lP = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? uP(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && oP(e, t, i), i;
};
let n2 = class {
  disposables;
  constructor() {
    this.disposables = new Array();
  }
  push(n) {
    return this.disposables.push(n);
  }
  dispose(n) {
    if (n)
      this._dispose(n);
    else {
      for (n of this.disposables)
        n.dispose();
      this.disposables.length = 0;
    }
  }
  _dispose(n) {
    n.dispose(), this.disposables.splice(this.disposables.indexOf(n), 1);
  }
};
n2 = lP([
  o1()
], n2);
var cP = Object.defineProperty, dP = Object.getOwnPropertyDescriptor, pP = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? dP(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && cP(e, t, i), i;
}, fP = (n, e) => (t, r) => e(t, r, n);
const hP = pe.createInterface("TransactionsService");
let Kc = class {
  constructor(n) {
    this.eventAggregator = n;
  }
  static blocksToConfirm = 1;
  static register(n) {
    de.singleton(hP, Kc).register(n);
  }
  async send(n) {
    let e;
    try {
      this.eventAggregator.publish("transaction.sending");
      const t = await n();
      return this.eventAggregator.publish("transaction.sent", t), e = await t.wait(1), this.eventAggregator.publish("transaction.mined", { message: "Transaction was mined", receipt: e }), e = await t.wait(Kc.blocksToConfirm), this.eventAggregator.publish("transaction.confirmed", { message: "Transaction was confirmed", receipt: e }), e;
    } catch (t) {
      return this.eventAggregator.publish("transaction.failed", t), null;
    }
  }
};
Kc = pP([
  fP(0, md)
], Kc);
var Xi = /* @__PURE__ */ ((n) => (n[n.NonStablecoin = 0] = "NonStablecoin", n[n.Stablecoin = 1] = "Stablecoin", n[n.Ecological = 2] = "Ecological", n))(Xi || {}), yP = Object.defineProperty, mP = Object.getOwnPropertyDescriptor, bP = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? mP(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && yP(e, t, i), i;
}, Ko = (n, e) => (t, r) => e(t, r, n);
const j0 = pe.createInterface("IContractStore");
let qc = class {
  constructor(n, e, t, r, i) {
    this.contractService = n, this.tokenService = e, this.logger = t, this.numberService = r, this.tokenInfo = i;
  }
  static register(n) {
    n.register(de.singleton(j0, qc));
  }
  async getAsset(n, e, t, r, i, s) {
    let a;
    e && (a = Number(e));
    const u = (await this.tokenInfo.tokens).find((w) => w.address === n && w.id == a);
    if (!u) {
      this.logger.error(`No token info was found for ${n}`);
      return;
    }
    const l = await this.tokenService.getTokenContract(n, u.id);
    if (s || (u.id ? s = await t.oraclePerERC721Id(n, u.id) : s = await t.oraclePerERC20(n)), !s || ne.from(s).isZero())
      return;
    const h = await (await this.contractService.getContract("monetary", "Oracle", s)).getData();
    if (!h[1])
      return;
    u.price = this.numberService.fromString(Vt(h[0], 18));
    let b = e2(1, 18), C;
    u.id || (C = await l.totalSupply(), b = await l.balanceOf(r));
    let v;
    u.id ? v = Xi.Ecological : v = await t.assetTypeOfERC20(n), i && this.populateTransactionsForAsset(i, l, r, u);
    const T = {
      quantity: b,
      token: u,
      total: 0,
      type: v,
      totalSupply: C
    };
    return T.total = u.id ? u.price : this.numberService.fromString(Vt(T.quantity, 18)) * u.price, T;
  }
  async populateTransactionsForAsset(n, e, t, r) {
    const i = await e.queryFilter(e.filters.Transfer(void 0, t)), s = await this.mapTransactions(i, "deposit", r);
    n.push(...s);
    const a = await e.queryFilter(e.filters.Transfer(t)), o = await this.mapTransactions(a, "withdrawl", r);
    n.push(...o);
  }
  async mapTransactions(n, e, t) {
    return await Promise.all(
      n.map(async (r) => {
        const i = await r.getBlock();
        return {
          address: e === "deposit" ? r.args.from : r.args.to,
          amount: "amount" in r.args ? r.args.amount : e2(1, 18),
          date: i.timestamp,
          id: r.transactionHash,
          token: t,
          type: e
        };
      })
    );
  }
};
qc = bP([
  Ko(0, Do),
  Ko(1, _0),
  Ko(2, xa),
  Ko(3, ml),
  Ko(4, x6)
], qc);
var gP = Object.defineProperty, xP = Object.getOwnPropertyDescriptor, vP = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? xP(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && gP(e, t, i), i;
}, wP = (n, e) => (t, r) => e(t, r, n);
const z0 = pe.createInterface("DataStore");
let Qc = class {
  constructor(n) {
    this.firebaseService = n;
  }
  static register(n) {
    n.register(de.singleton(z0, Qc));
  }
  async getDocs(...n) {
    return this.firebaseService.getDocs(...n);
  }
};
Qc = vP([
  wP(0, M0)
], Qc);
function Ld(n = "") {
  const e = /* @__PURE__ */ new WeakMap();
  return function(t, r, i) {
    const s = t[r];
    if (typeof s != "function")
      throw { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_45880_UWUMZIVXPRYDKNKX", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" }.NODE_ENV !== "production" ? new Error(`ER: @callOnce: Invalid decorator target: "${String(r)}", can only be used on a method.`) : new Error(`ER: @callOnce: > ${String(r)}`);
    i.value = function(...a) {
      if (e.has(this))
        return { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_45880_UWUMZIVXPRYDKNKX", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" }.NODE_ENV !== "production" && n && (console.warn(`Warning: @callOnce: ${String(r)} ${n}`), console.warn(new Error().stack)), e.get(this);
      const o = s.apply(this, a);
      return e.set(this, o), o;
    };
  };
}
var TP = Object.defineProperty, AP = Object.getOwnPropertyDescriptor, J6 = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? AP(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && TP(e, t, i), i;
}, Ll = (n, e) => (t, r) => e(t, r, n);
const Y6 = pe.createInterface("TreasuryStore");
let Uu = class {
  constructor(n, e, t, r) {
    this.numberService = n, this.contractStore = e, this.contractService = t, this.dataStore = r;
  }
  totalSupply;
  totalValuation;
  treasuryDistribution;
  reservesDistribution;
  treasuryContract;
  lastRebaseTime;
  treasuryAssets = [];
  transactions = [];
  static register(n) {
    n.register(de.singleton(Y6, Uu));
  }
  get treasuryValue() {
    return this.treasuryAssets?.length === 0 ? 0 : this.treasuryAssets?.map((n) => n?.total ?? 0).sum() ?? 0;
  }
  async loadTokenData() {
    if (this.totalValuation && this.totalSupply)
      return;
    const n = await this.getTreasuryContract();
    this.totalValuation = await n.totalValuation(), this.totalSupply = await n.totalSupply(), this.treasuryDistribution = (await this.getDistributionPercentage("Treasury")).toNumber() / 100, this.reservesDistribution = (await this.getDistributionPercentage("Reserve")).toNumber() / 100;
  }
  async loadAssets() {
    const n = await this.getTreasuryContract(), e = n.address;
    if (!e)
      return;
    const t = (await Promise.all([
      n.allRegisteredERC20s().then((r) => r.map((i) => ({ tokenId: void 0, address: i }))),
      n.allRegisteredERC721Ids().then((r) => r.map((i) => ({ tokenId: i.id, address: i.erc721 })))
    ])).flatMap((r) => r);
    this.treasuryAssets = (await Promise.all(
      t.map(
        (r) => this.contractStore.getAsset(r.address, r.tokenId, n, e, this.transactions).catch()
      )
    )).filter(Boolean);
  }
  async getValueOverTime(n) {
    const e = G6(n), r = (await this.dataStore.getDocs(
      `chartData/ktt/${z6(n)}`,
      "createdAt",
      "desc",
      { fieldPath: "createdAt", opStr: ">=", value: e }
    )).map((a) => ({
      createdAt: new Date(a.createdAt),
      value: this.numberService.fromString(Vt(a.value, 18))
    }));
    r.sort((a, o) => new Date(a.createdAt).getTime() - new Date(o.createdAt).getTime());
    const s = await (await this.getTreasuryContract()).totalValuation();
    return r.push({
      createdAt: new Date(),
      value: this.numberService.fromString(Vt(s, 18))
    }), r;
  }
  async getLastRebaseTime() {
    const n = await this.getTreasuryContract(), e = await n.queryFilter(n.filters.Rebase());
    e.sort((t, r) => r.blockNumber - t.blockNumber), this.lastRebaseTime = e[0] && new Date((await e[0].getBlock()).timestamp * 1e3);
  }
  get circulatingDistribution() {
    return this.treasuryDistribution == null || this.reservesDistribution == null ? 0 : 1 - (this.treasuryDistribution + this.reservesDistribution);
  }
  get currentPrice() {
    return !this.totalSupply || !this.totalValuation ? 0 : Number(Vt(this.totalSupply, 18)) / Number(Vt(this.totalValuation, 18));
  }
  async getTreasuryContract() {
    return this.treasuryContract ? this.treasuryContract : (this.treasuryContract = await this.contractService.getContract("monetary", "Treasury"), this.treasuryContract);
  }
  async getDistributionPercentage(n) {
    const e = (await this.contractService.getContract("monetary", n)).address;
    return !e || !this.totalSupply ? ne.from(0) : (await (await this.getTreasuryContract()).balanceOf(e)).div(this.totalSupply);
  }
};
J6([
  Ld()
], Uu.prototype, "loadAssets", 1);
Uu = J6([
  Ll(0, ml),
  Ll(1, j0),
  Ll(2, Do),
  Ll(3, z0)
], Uu);
const CP = "Kolektivo Tokenlist", SP = "2022-08-16T22:25:12+00:00", EP = {
  major: 1,
  minor: 2,
  patch: 0
}, MP = [
  "kolektivo",
  "tokens"
], _P = [
  {
    address: "0x74b06277Cd1efaA9f6595D25AdB54b4530d15BF5",
    chainId: 42220,
    name: "Kolektivo Treasury Token",
    symbol: "KTT",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/ktt.svg"
  },
  {
    address: "0xf4cb43D02842c65101e5DA329ED01dFeC2280EdA",
    chainId: 42220,
    name: "Kolektivo Curacao Token",
    symbol: "kCUR",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/kcur.svg"
  },
  {
    address: "0x4cB13ED364bd2c212B694921CdAca979DCA76054",
    chainId: 42220,
    name: "Test Token #1",
    symbol: "TT1",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/tt1.svg"
  },
  {
    address: "0x5bFE78b0d15eF0cdcA4077336e0bEbEc15CFb142",
    chainId: 42220,
    name: "Test Token #2",
    symbol: "TT2",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/tt1.svg"
  },
  {
    address: "0xd312bCeA257799a39e0C85d7EC45031612e4dd50",
    chainId: 42220,
    name: "Test Token #3",
    symbol: "TT3",
    decimals: 18,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/tt1.svg"
  },
  {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    chainId: 42220,
    name: "GeoNFT #1",
    symbol: "GEO1",
    decimals: 1,
    id: 1,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/geo1.svg"
  },
  {
    address: "0x9fC5461A1e6CF567C7E19Befa7c0351C9C6CB719",
    chainId: 42220,
    name: "GeoNFT #2",
    symbol: "GEO2",
    decimals: 1,
    id: 2,
    logoURI: "https://gateway.pinata.cloud/ipfs/QmcRYtXPMK54EtwzPqP3Bs59x7oQzNN8X5X3oMZFHe1SBj/geo1.svg"
  }
], RP = {
  name: CP,
  timestamp: SP,
  version: EP,
  keywords: MP,
  tokens: _P
}, PP = {
  authDomain: "kolektivo-36b63.firebaseapp.com",
  projectId: "kolektivo-36b63",
  storageBucket: "kolektivo-36b63.appspot.com",
  messagingSenderId: "324595180464",
  appId: "1:324595180464:web:69e6b83cdba3bf2d30ac75",
  measurementId: "G-7BSHV1Y6VS"
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const X6 = function(n) {
  const e = [];
  let t = 0;
  for (let r = 0; r < n.length; r++) {
    let i = n.charCodeAt(r);
    i < 128 ? e[t++] = i : i < 2048 ? (e[t++] = i >> 6 | 192, e[t++] = i & 63 | 128) : (i & 64512) === 55296 && r + 1 < n.length && (n.charCodeAt(r + 1) & 64512) === 56320 ? (i = 65536 + ((i & 1023) << 10) + (n.charCodeAt(++r) & 1023), e[t++] = i >> 18 | 240, e[t++] = i >> 12 & 63 | 128, e[t++] = i >> 6 & 63 | 128, e[t++] = i & 63 | 128) : (e[t++] = i >> 12 | 224, e[t++] = i >> 6 & 63 | 128, e[t++] = i & 63 | 128);
  }
  return e;
}, OP = function(n) {
  const e = [];
  let t = 0, r = 0;
  for (; t < n.length; ) {
    const i = n[t++];
    if (i < 128)
      e[r++] = String.fromCharCode(i);
    else if (i > 191 && i < 224) {
      const s = n[t++];
      e[r++] = String.fromCharCode((i & 31) << 6 | s & 63);
    } else if (i > 239 && i < 365) {
      const s = n[t++], a = n[t++], o = n[t++], u = ((i & 7) << 18 | (s & 63) << 12 | (a & 63) << 6 | o & 63) - 65536;
      e[r++] = String.fromCharCode(55296 + (u >> 10)), e[r++] = String.fromCharCode(56320 + (u & 1023));
    } else {
      const s = n[t++], a = n[t++];
      e[r++] = String.fromCharCode((i & 15) << 12 | (s & 63) << 6 | a & 63);
    }
  }
  return e.join("");
}, Z6 = {
  byteToCharMap_: null,
  charToByteMap_: null,
  byteToCharMapWebSafe_: null,
  charToByteMapWebSafe_: null,
  ENCODED_VALS_BASE: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
  get ENCODED_VALS() {
    return this.ENCODED_VALS_BASE + "+/=";
  },
  get ENCODED_VALS_WEBSAFE() {
    return this.ENCODED_VALS_BASE + "-_.";
  },
  HAS_NATIVE_SUPPORT: typeof atob == "function",
  encodeByteArray(n, e) {
    if (!Array.isArray(n))
      throw Error("encodeByteArray takes an array as a parameter");
    this.init_();
    const t = e ? this.byteToCharMapWebSafe_ : this.byteToCharMap_, r = [];
    for (let i = 0; i < n.length; i += 3) {
      const s = n[i], a = i + 1 < n.length, o = a ? n[i + 1] : 0, u = i + 2 < n.length, l = u ? n[i + 2] : 0, p = s >> 2, h = (s & 3) << 4 | o >> 4;
      let b = (o & 15) << 2 | l >> 6, C = l & 63;
      u || (C = 64, a || (b = 64)), r.push(t[p], t[h], t[b], t[C]);
    }
    return r.join("");
  },
  encodeString(n, e) {
    return this.HAS_NATIVE_SUPPORT && !e ? btoa(n) : this.encodeByteArray(X6(n), e);
  },
  decodeString(n, e) {
    return this.HAS_NATIVE_SUPPORT && !e ? atob(n) : OP(this.decodeStringToByteArray(n, e));
  },
  decodeStringToByteArray(n, e) {
    this.init_();
    const t = e ? this.charToByteMapWebSafe_ : this.charToByteMap_, r = [];
    for (let i = 0; i < n.length; ) {
      const s = t[n.charAt(i++)], o = i < n.length ? t[n.charAt(i)] : 0;
      ++i;
      const l = i < n.length ? t[n.charAt(i)] : 64;
      ++i;
      const h = i < n.length ? t[n.charAt(i)] : 64;
      if (++i, s == null || o == null || l == null || h == null)
        throw Error();
      const b = s << 2 | o >> 4;
      if (r.push(b), l !== 64) {
        const C = o << 4 & 240 | l >> 2;
        if (r.push(C), h !== 64) {
          const v = l << 6 & 192 | h;
          r.push(v);
        }
      }
    }
    return r;
  },
  init_() {
    if (!this.byteToCharMap_) {
      this.byteToCharMap_ = {}, this.charToByteMap_ = {}, this.byteToCharMapWebSafe_ = {}, this.charToByteMapWebSafe_ = {};
      for (let n = 0; n < this.ENCODED_VALS.length; n++)
        this.byteToCharMap_[n] = this.ENCODED_VALS.charAt(n), this.charToByteMap_[this.byteToCharMap_[n]] = n, this.byteToCharMapWebSafe_[n] = this.ENCODED_VALS_WEBSAFE.charAt(n), this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[n]] = n, n >= this.ENCODED_VALS_BASE.length && (this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(n)] = n, this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(n)] = n);
    }
  }
}, IP = function(n) {
  const e = X6(n);
  return Z6.encodeByteArray(e, !0);
}, Jc = function(n) {
  return IP(n).replace(/\./g, "");
}, kP = function(n) {
  try {
    return Z6.decodeString(n, !0);
  } catch (e) {
    console.error("base64Decode failed: ", e);
  }
  return null;
};
function DP() {
  return typeof indexedDB == "object";
}
function BP() {
  return new Promise((n, e) => {
    try {
      let t = !0;
      const r = "validate-browser-context-for-indexeddb-analytics-module", i = self.indexedDB.open(r);
      i.onsuccess = () => {
        i.result.close(), t || self.indexedDB.deleteDatabase(r), n(!0);
      }, i.onupgradeneeded = () => {
        t = !1;
      }, i.onerror = () => {
        var s;
        e(((s = i.error) === null || s === void 0 ? void 0 : s.message) || "");
      };
    } catch (t) {
      e(t);
    }
  });
}
function FP() {
  if (typeof self < "u")
    return self;
  if (typeof window < "u")
    return window;
  if (typeof aa < "u")
    return aa;
  throw new Error("Unable to locate global object.");
}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const NP = () => FP().__FIREBASE_DEFAULTS__, $P = () => {
  if (typeof sc > "u" || typeof { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_45880_UWUMZIVXPRYDKNKX", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" } > "u")
    return;
  const n = { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_45880_UWUMZIVXPRYDKNKX", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" }.__FIREBASE_DEFAULTS__;
  if (n)
    return JSON.parse(n);
}, LP = () => {
  if (typeof document > "u")
    return;
  let n;
  try {
    n = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);
  } catch {
    return;
  }
  const e = n && kP(n[1]);
  return e && JSON.parse(e);
}, ew = () => {
  try {
    return NP() || $P() || LP();
  } catch (n) {
    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${n}`);
    return;
  }
}, UP = (n) => {
  var e, t;
  return (t = (e = ew()) === null || e === void 0 ? void 0 : e.emulatorHosts) === null || t === void 0 ? void 0 : t[n];
}, VP = (n) => {
  const e = UP(n);
  if (!e)
    return;
  const t = e.lastIndexOf(":");
  if (t <= 0 || t + 1 === e.length)
    throw new Error(`Invalid host ${e} with no separate hostname and port!`);
  const r = parseInt(e.substring(t + 1), 10);
  return e[0] === "[" ? [e.substring(1, t - 1), r] : [e.substring(0, t), r];
}, jP = () => {
  var n;
  return (n = ew()) === null || n === void 0 ? void 0 : n.config;
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class zP {
  constructor() {
    this.reject = () => {
    }, this.resolve = () => {
    }, this.promise = new Promise((e, t) => {
      this.resolve = e, this.reject = t;
    });
  }
  wrapCallback(e) {
    return (t, r) => {
      t ? this.reject(t) : this.resolve(r), typeof e == "function" && (this.promise.catch(() => {
      }), e.length === 1 ? e(t) : e(t, r));
    };
  }
}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function GP(n, e) {
  if (n.uid)
    throw new Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');
  const t = {
    alg: "none",
    type: "JWT"
  }, r = e || "demo-project", i = n.iat || 0, s = n.sub || n.user_id;
  if (!s)
    throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
  const a = Object.assign({
    iss: `https://securetoken.google.com/${r}`,
    aud: r,
    iat: i,
    exp: i + 3600,
    auth_time: i,
    sub: s,
    user_id: s,
    firebase: {
      sign_in_provider: "custom",
      identities: {}
    }
  }, n), o = "";
  return [
    Jc(JSON.stringify(t)),
    Jc(JSON.stringify(a)),
    o
  ].join(".");
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const WP = "FirebaseError";
class Bo extends Error {
  constructor(e, t, r) {
    super(t), this.code = e, this.customData = r, this.name = WP, Object.setPrototypeOf(this, Bo.prototype), Error.captureStackTrace && Error.captureStackTrace(this, tw.prototype.create);
  }
}
class tw {
  constructor(e, t, r) {
    this.service = e, this.serviceName = t, this.errors = r;
  }
  create(e, ...t) {
    const r = t[0] || {}, i = `${this.service}/${e}`, s = this.errors[e], a = s ? HP(s, r) : "Error", o = `${this.serviceName}: ${a} (${i}).`;
    return new Bo(i, o, r);
  }
}
function HP(n, e) {
  return n.replace(KP, (t, r) => {
    const i = e[r];
    return i != null ? String(i) : `<${r}?>`;
  });
}
const KP = /\{\$([^}]+)}/g;
function Yc(n, e) {
  if (n === e)
    return !0;
  const t = Object.keys(n), r = Object.keys(e);
  for (const i of t) {
    if (!r.includes(i))
      return !1;
    const s = n[i], a = e[i];
    if (r2(s) && r2(a)) {
      if (!Yc(s, a))
        return !1;
    } else if (s !== a)
      return !1;
  }
  for (const i of r)
    if (!t.includes(i))
      return !1;
  return !0;
}
function r2(n) {
  return n !== null && typeof n == "object";
}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function $t(n) {
  return n && n._delegate ? n._delegate : n;
}
class Vu {
  constructor(e, t, r) {
    this.name = e, this.instanceFactory = t, this.type = r, this.multipleInstances = !1, this.serviceProps = {}, this.instantiationMode = "LAZY", this.onInstanceCreated = null;
  }
  setInstantiationMode(e) {
    return this.instantiationMode = e, this;
  }
  setMultipleInstances(e) {
    return this.multipleInstances = e, this;
  }
  setServiceProps(e) {
    return this.serviceProps = e, this;
  }
  setInstanceCreatedCallback(e) {
    return this.onInstanceCreated = e, this;
  }
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Ws = "[DEFAULT]";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class qP {
  constructor(e, t) {
    this.name = e, this.container = t, this.component = null, this.instances = /* @__PURE__ */ new Map(), this.instancesDeferred = /* @__PURE__ */ new Map(), this.instancesOptions = /* @__PURE__ */ new Map(), this.onInitCallbacks = /* @__PURE__ */ new Map();
  }
  get(e) {
    const t = this.normalizeInstanceIdentifier(e);
    if (!this.instancesDeferred.has(t)) {
      const r = new zP();
      if (this.instancesDeferred.set(t, r), this.isInitialized(t) || this.shouldAutoInitialize())
        try {
          const i = this.getOrInitializeService({
            instanceIdentifier: t
          });
          i && r.resolve(i);
        } catch {
        }
    }
    return this.instancesDeferred.get(t).promise;
  }
  getImmediate(e) {
    var t;
    const r = this.normalizeInstanceIdentifier(e?.identifier), i = (t = e?.optional) !== null && t !== void 0 ? t : !1;
    if (this.isInitialized(r) || this.shouldAutoInitialize())
      try {
        return this.getOrInitializeService({
          instanceIdentifier: r
        });
      } catch (s) {
        if (i)
          return null;
        throw s;
      }
    else {
      if (i)
        return null;
      throw Error(`Service ${this.name} is not available`);
    }
  }
  getComponent() {
    return this.component;
  }
  setComponent(e) {
    if (e.name !== this.name)
      throw Error(`Mismatching Component ${e.name} for Provider ${this.name}.`);
    if (this.component)
      throw Error(`Component for ${this.name} has already been provided`);
    if (this.component = e, !!this.shouldAutoInitialize()) {
      if (JP(e))
        try {
          this.getOrInitializeService({ instanceIdentifier: Ws });
        } catch {
        }
      for (const [t, r] of this.instancesDeferred.entries()) {
        const i = this.normalizeInstanceIdentifier(t);
        try {
          const s = this.getOrInitializeService({
            instanceIdentifier: i
          });
          r.resolve(s);
        } catch {
        }
      }
    }
  }
  clearInstance(e = Ws) {
    this.instancesDeferred.delete(e), this.instancesOptions.delete(e), this.instances.delete(e);
  }
  async delete() {
    const e = Array.from(this.instances.values());
    await Promise.all([
      ...e.filter((t) => "INTERNAL" in t).map((t) => t.INTERNAL.delete()),
      ...e.filter((t) => "_delete" in t).map((t) => t._delete())
    ]);
  }
  isComponentSet() {
    return this.component != null;
  }
  isInitialized(e = Ws) {
    return this.instances.has(e);
  }
  getOptions(e = Ws) {
    return this.instancesOptions.get(e) || {};
  }
  initialize(e = {}) {
    const { options: t = {} } = e, r = this.normalizeInstanceIdentifier(e.instanceIdentifier);
    if (this.isInitialized(r))
      throw Error(`${this.name}(${r}) has already been initialized`);
    if (!this.isComponentSet())
      throw Error(`Component ${this.name} has not been registered yet`);
    const i = this.getOrInitializeService({
      instanceIdentifier: r,
      options: t
    });
    for (const [s, a] of this.instancesDeferred.entries()) {
      const o = this.normalizeInstanceIdentifier(s);
      r === o && a.resolve(i);
    }
    return i;
  }
  onInit(e, t) {
    var r;
    const i = this.normalizeInstanceIdentifier(t), s = (r = this.onInitCallbacks.get(i)) !== null && r !== void 0 ? r : /* @__PURE__ */ new Set();
    s.add(e), this.onInitCallbacks.set(i, s);
    const a = this.instances.get(i);
    return a && e(a, i), () => {
      s.delete(e);
    };
  }
  invokeOnInitCallbacks(e, t) {
    const r = this.onInitCallbacks.get(t);
    if (!!r)
      for (const i of r)
        try {
          i(e, t);
        } catch {
        }
  }
  getOrInitializeService({ instanceIdentifier: e, options: t = {} }) {
    let r = this.instances.get(e);
    if (!r && this.component && (r = this.component.instanceFactory(this.container, {
      instanceIdentifier: QP(e),
      options: t
    }), this.instances.set(e, r), this.instancesOptions.set(e, t), this.invokeOnInitCallbacks(r, e), this.component.onInstanceCreated))
      try {
        this.component.onInstanceCreated(this.container, e, r);
      } catch {
      }
    return r || null;
  }
  normalizeInstanceIdentifier(e = Ws) {
    return this.component ? this.component.multipleInstances ? e : Ws : e;
  }
  shouldAutoInitialize() {
    return !!this.component && this.component.instantiationMode !== "EXPLICIT";
  }
}
function QP(n) {
  return n === Ws ? void 0 : n;
}
function JP(n) {
  return n.instantiationMode === "EAGER";
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class YP {
  constructor(e) {
    this.name = e, this.providers = /* @__PURE__ */ new Map();
  }
  addComponent(e) {
    const t = this.getProvider(e.name);
    if (t.isComponentSet())
      throw new Error(`Component ${e.name} has already been registered with ${this.name}`);
    t.setComponent(e);
  }
  addOrOverwriteComponent(e) {
    this.getProvider(e.name).isComponentSet() && this.providers.delete(e.name), this.addComponent(e);
  }
  getProvider(e) {
    if (this.providers.has(e))
      return this.providers.get(e);
    const t = new qP(e, this);
    return this.providers.set(e, t), t;
  }
  getProviders() {
    return Array.from(this.providers.values());
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Re;
(function(n) {
  n[n.DEBUG = 0] = "DEBUG", n[n.VERBOSE = 1] = "VERBOSE", n[n.INFO = 2] = "INFO", n[n.WARN = 3] = "WARN", n[n.ERROR = 4] = "ERROR", n[n.SILENT = 5] = "SILENT";
})(Re || (Re = {}));
const XP = {
  debug: Re.DEBUG,
  verbose: Re.VERBOSE,
  info: Re.INFO,
  warn: Re.WARN,
  error: Re.ERROR,
  silent: Re.SILENT
}, ZP = Re.INFO, eO = {
  [Re.DEBUG]: "log",
  [Re.VERBOSE]: "log",
  [Re.INFO]: "info",
  [Re.WARN]: "warn",
  [Re.ERROR]: "error"
}, tO = (n, e, ...t) => {
  if (e < n.logLevel)
    return;
  const r = new Date().toISOString(), i = eO[e];
  if (i)
    console[i](`[${r}]  ${n.name}:`, ...t);
  else
    throw new Error(`Attempted to log a message with an invalid logType (value: ${e})`);
};
class nw {
  constructor(e) {
    this.name = e, this._logLevel = ZP, this._logHandler = tO, this._userLogHandler = null;
  }
  get logLevel() {
    return this._logLevel;
  }
  set logLevel(e) {
    if (!(e in Re))
      throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);
    this._logLevel = e;
  }
  setLogLevel(e) {
    this._logLevel = typeof e == "string" ? XP[e] : e;
  }
  get logHandler() {
    return this._logHandler;
  }
  set logHandler(e) {
    if (typeof e != "function")
      throw new TypeError("Value assigned to `logHandler` must be a function");
    this._logHandler = e;
  }
  get userLogHandler() {
    return this._userLogHandler;
  }
  set userLogHandler(e) {
    this._userLogHandler = e;
  }
  debug(...e) {
    this._userLogHandler && this._userLogHandler(this, Re.DEBUG, ...e), this._logHandler(this, Re.DEBUG, ...e);
  }
  log(...e) {
    this._userLogHandler && this._userLogHandler(this, Re.VERBOSE, ...e), this._logHandler(this, Re.VERBOSE, ...e);
  }
  info(...e) {
    this._userLogHandler && this._userLogHandler(this, Re.INFO, ...e), this._logHandler(this, Re.INFO, ...e);
  }
  warn(...e) {
    this._userLogHandler && this._userLogHandler(this, Re.WARN, ...e), this._logHandler(this, Re.WARN, ...e);
  }
  error(...e) {
    this._userLogHandler && this._userLogHandler(this, Re.ERROR, ...e), this._logHandler(this, Re.ERROR, ...e);
  }
}
const nO = (n, e) => e.some((t) => n instanceof t);
let i2, s2;
function rO() {
  return i2 || (i2 = [
    IDBDatabase,
    IDBObjectStore,
    IDBIndex,
    IDBCursor,
    IDBTransaction
  ]);
}
function iO() {
  return s2 || (s2 = [
    IDBCursor.prototype.advance,
    IDBCursor.prototype.continue,
    IDBCursor.prototype.continuePrimaryKey
  ]);
}
const rw = /* @__PURE__ */ new WeakMap(), Jf = /* @__PURE__ */ new WeakMap(), iw = /* @__PURE__ */ new WeakMap(), Xp = /* @__PURE__ */ new WeakMap(), G0 = /* @__PURE__ */ new WeakMap();
function sO(n) {
  const e = new Promise((t, r) => {
    const i = () => {
      n.removeEventListener("success", s), n.removeEventListener("error", a);
    }, s = () => {
      t(cs(n.result)), i();
    }, a = () => {
      r(n.error), i();
    };
    n.addEventListener("success", s), n.addEventListener("error", a);
  });
  return e.then((t) => {
    t instanceof IDBCursor && rw.set(t, n);
  }).catch(() => {
  }), G0.set(e, n), e;
}
function aO(n) {
  if (Jf.has(n))
    return;
  const e = new Promise((t, r) => {
    const i = () => {
      n.removeEventListener("complete", s), n.removeEventListener("error", a), n.removeEventListener("abort", a);
    }, s = () => {
      t(), i();
    }, a = () => {
      r(n.error || new DOMException("AbortError", "AbortError")), i();
    };
    n.addEventListener("complete", s), n.addEventListener("error", a), n.addEventListener("abort", a);
  });
  Jf.set(n, e);
}
let Yf = {
  get(n, e, t) {
    if (n instanceof IDBTransaction) {
      if (e === "done")
        return Jf.get(n);
      if (e === "objectStoreNames")
        return n.objectStoreNames || iw.get(n);
      if (e === "store")
        return t.objectStoreNames[1] ? void 0 : t.objectStore(t.objectStoreNames[0]);
    }
    return cs(n[e]);
  },
  set(n, e, t) {
    return n[e] = t, !0;
  },
  has(n, e) {
    return n instanceof IDBTransaction && (e === "done" || e === "store") ? !0 : e in n;
  }
};
function oO(n) {
  Yf = n(Yf);
}
function uO(n) {
  return n === IDBDatabase.prototype.transaction && !("objectStoreNames" in IDBTransaction.prototype) ? function(e, ...t) {
    const r = n.call(Zp(this), e, ...t);
    return iw.set(r, e.sort ? e.sort() : [e]), cs(r);
  } : iO().includes(n) ? function(...e) {
    return n.apply(Zp(this), e), cs(rw.get(this));
  } : function(...e) {
    return cs(n.apply(Zp(this), e));
  };
}
function lO(n) {
  return typeof n == "function" ? uO(n) : (n instanceof IDBTransaction && aO(n), nO(n, rO()) ? new Proxy(n, Yf) : n);
}
function cs(n) {
  if (n instanceof IDBRequest)
    return sO(n);
  if (Xp.has(n))
    return Xp.get(n);
  const e = lO(n);
  return e !== n && (Xp.set(n, e), G0.set(e, n)), e;
}
const Zp = (n) => G0.get(n);
function cO(n, e, { blocked: t, upgrade: r, blocking: i, terminated: s } = {}) {
  const a = indexedDB.open(n, e), o = cs(a);
  return r && a.addEventListener("upgradeneeded", (u) => {
    r(cs(a.result), u.oldVersion, u.newVersion, cs(a.transaction));
  }), t && a.addEventListener("blocked", () => t()), o.then((u) => {
    s && u.addEventListener("close", () => s()), i && u.addEventListener("versionchange", () => i());
  }).catch(() => {
  }), o;
}
const dO = ["get", "getKey", "getAll", "getAllKeys", "count"], pO = ["put", "add", "delete", "clear"], ef = /* @__PURE__ */ new Map();
function a2(n, e) {
  if (!(n instanceof IDBDatabase && !(e in n) && typeof e == "string"))
    return;
  if (ef.get(e))
    return ef.get(e);
  const t = e.replace(/FromIndex$/, ""), r = e !== t, i = pO.includes(t);
  if (!(t in (r ? IDBIndex : IDBObjectStore).prototype) || !(i || dO.includes(t)))
    return;
  const s = async function(a, ...o) {
    const u = this.transaction(a, i ? "readwrite" : "readonly");
    let l = u.store;
    return r && (l = l.index(o.shift())), (await Promise.all([
      l[t](...o),
      i && u.done
    ]))[0];
  };
  return ef.set(e, s), s;
}
oO((n) => ({
  ...n,
  get: (e, t, r) => a2(e, t) || n.get(e, t, r),
  has: (e, t) => !!a2(e, t) || n.has(e, t)
}));
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class fO {
  constructor(e) {
    this.container = e;
  }
  getPlatformInfoString() {
    return this.container.getProviders().map((t) => {
      if (hO(t)) {
        const r = t.getImmediate();
        return `${r.library}/${r.version}`;
      } else
        return null;
    }).filter((t) => t).join(" ");
  }
}
function hO(n) {
  const e = n.getComponent();
  return e?.type === "VERSION";
}
const Xf = "@firebase/app", o2 = "0.8.4";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const da = new nw("@firebase/app"), yO = "@firebase/app-compat", mO = "@firebase/analytics-compat", bO = "@firebase/analytics", gO = "@firebase/app-check-compat", xO = "@firebase/app-check", vO = "@firebase/auth", wO = "@firebase/auth-compat", TO = "@firebase/database", AO = "@firebase/database-compat", CO = "@firebase/functions", SO = "@firebase/functions-compat", EO = "@firebase/installations", MO = "@firebase/installations-compat", _O = "@firebase/messaging", RO = "@firebase/messaging-compat", PO = "@firebase/performance", OO = "@firebase/performance-compat", IO = "@firebase/remote-config", kO = "@firebase/remote-config-compat", DO = "@firebase/storage", BO = "@firebase/storage-compat", FO = "@firebase/firestore", NO = "@firebase/firestore-compat", $O = "firebase", LO = "9.14.0";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Xc = "[DEFAULT]", UO = {
  [Xf]: "fire-core",
  [yO]: "fire-core-compat",
  [bO]: "fire-analytics",
  [mO]: "fire-analytics-compat",
  [xO]: "fire-app-check",
  [gO]: "fire-app-check-compat",
  [vO]: "fire-auth",
  [wO]: "fire-auth-compat",
  [TO]: "fire-rtdb",
  [AO]: "fire-rtdb-compat",
  [CO]: "fire-fn",
  [SO]: "fire-fn-compat",
  [EO]: "fire-iid",
  [MO]: "fire-iid-compat",
  [_O]: "fire-fcm",
  [RO]: "fire-fcm-compat",
  [PO]: "fire-perf",
  [OO]: "fire-perf-compat",
  [IO]: "fire-rc",
  [kO]: "fire-rc-compat",
  [DO]: "fire-gcs",
  [BO]: "fire-gcs-compat",
  [FO]: "fire-fst",
  [NO]: "fire-fst-compat",
  "fire-js": "fire-js",
  [$O]: "fire-js-all"
};
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Zc = /* @__PURE__ */ new Map(), Zf = /* @__PURE__ */ new Map();
function VO(n, e) {
  try {
    n.container.addComponent(e);
  } catch (t) {
    da.debug(`Component ${e.name} failed to register with FirebaseApp ${n.name}`, t);
  }
}
function ed(n) {
  const e = n.name;
  if (Zf.has(e))
    return da.debug(`There were multiple attempts to register component ${e}.`), !1;
  Zf.set(e, n);
  for (const t of Zc.values())
    VO(t, n);
  return !0;
}
function W0(n, e) {
  const t = n.container.getProvider("heartbeat").getImmediate({ optional: !0 });
  return t && t.triggerHeartbeat(), n.container.getProvider(e);
}
function jO(n, e, t = Xc) {
  W0(n, e).clearInstance(t);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const zO = {
  ["no-app"]: "No Firebase App '{$appName}' has been created - call Firebase App.initializeApp()",
  ["bad-app-name"]: "Illegal App name: '{$appName}",
  ["duplicate-app"]: "Firebase App named '{$appName}' already exists with different options or config",
  ["app-deleted"]: "Firebase App named '{$appName}' already deleted",
  ["no-options"]: "Need to provide options, when not being deployed to hosting via source.",
  ["invalid-app-argument"]: "firebase.{$appName}() takes either no argument or a Firebase App instance.",
  ["invalid-log-argument"]: "First argument to `onLog` must be null or a function.",
  ["idb-open"]: "Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.",
  ["idb-get"]: "Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.",
  ["idb-set"]: "Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.",
  ["idb-delete"]: "Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}."
}, ds = new tw("app", "Firebase", zO);
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class GO {
  constructor(e, t, r) {
    this._isDeleted = !1, this._options = Object.assign({}, e), this._config = Object.assign({}, t), this._name = t.name, this._automaticDataCollectionEnabled = t.automaticDataCollectionEnabled, this._container = r, this.container.addComponent(new Vu("app", () => this, "PUBLIC"));
  }
  get automaticDataCollectionEnabled() {
    return this.checkDestroyed(), this._automaticDataCollectionEnabled;
  }
  set automaticDataCollectionEnabled(e) {
    this.checkDestroyed(), this._automaticDataCollectionEnabled = e;
  }
  get name() {
    return this.checkDestroyed(), this._name;
  }
  get options() {
    return this.checkDestroyed(), this._options;
  }
  get config() {
    return this.checkDestroyed(), this._config;
  }
  get container() {
    return this._container;
  }
  get isDeleted() {
    return this._isDeleted;
  }
  set isDeleted(e) {
    this._isDeleted = e;
  }
  checkDestroyed() {
    if (this.isDeleted)
      throw ds.create("app-deleted", { appName: this._name });
  }
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const WO = LO;
function sw(n, e = {}) {
  let t = n;
  typeof e != "object" && (e = { name: e });
  const r = Object.assign({ name: Xc, automaticDataCollectionEnabled: !1 }, e), i = r.name;
  if (typeof i != "string" || !i)
    throw ds.create("bad-app-name", {
      appName: String(i)
    });
  if (t || (t = jP()), !t)
    throw ds.create("no-options");
  const s = Zc.get(i);
  if (s) {
    if (Yc(t, s.options) && Yc(r, s.config))
      return s;
    throw ds.create("duplicate-app", { appName: i });
  }
  const a = new YP(i);
  for (const u of Zf.values())
    a.addComponent(u);
  const o = new GO(t, r, a);
  return Zc.set(i, o), o;
}
function HO(n = Xc) {
  const e = Zc.get(n);
  if (!e && n === Xc)
    return sw();
  if (!e)
    throw ds.create("no-app", { appName: n });
  return e;
}
function to(n, e, t) {
  var r;
  let i = (r = UO[n]) !== null && r !== void 0 ? r : n;
  t && (i += `-${t}`);
  const s = i.match(/\s|\//), a = e.match(/\s|\//);
  if (s || a) {
    const o = [
      `Unable to register library "${i}" with version "${e}":`
    ];
    s && o.push(`library name "${i}" contains illegal characters (whitespace or "/")`), s && a && o.push("and"), a && o.push(`version name "${e}" contains illegal characters (whitespace or "/")`), da.warn(o.join(" "));
    return;
  }
  ed(new Vu(`${i}-version`, () => ({ library: i, version: e }), "VERSION"));
}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const KO = "firebase-heartbeat-database", qO = 1, ju = "firebase-heartbeat-store";
let tf = null;
function aw() {
  return tf || (tf = cO(KO, qO, {
    upgrade: (n, e) => {
      switch (e) {
        case 0:
          n.createObjectStore(ju);
      }
    }
  }).catch((n) => {
    throw ds.create("idb-open", {
      originalErrorMessage: n.message
    });
  })), tf;
}
async function QO(n) {
  var e;
  try {
    return (await aw()).transaction(ju).objectStore(ju).get(ow(n));
  } catch (t) {
    if (t instanceof Bo)
      da.warn(t.message);
    else {
      const r = ds.create("idb-get", {
        originalErrorMessage: (e = t) === null || e === void 0 ? void 0 : e.message
      });
      da.warn(r.message);
    }
  }
}
async function u2(n, e) {
  var t;
  try {
    const i = (await aw()).transaction(ju, "readwrite");
    return await i.objectStore(ju).put(e, ow(n)), i.done;
  } catch (r) {
    if (r instanceof Bo)
      da.warn(r.message);
    else {
      const i = ds.create("idb-set", {
        originalErrorMessage: (t = r) === null || t === void 0 ? void 0 : t.message
      });
      da.warn(i.message);
    }
  }
}
function ow(n) {
  return `${n.name}!${n.options.appId}`;
}
/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const JO = 1024, YO = 30 * 24 * 60 * 60 * 1e3;
class XO {
  constructor(e) {
    this.container = e, this._heartbeatsCache = null;
    const t = this.container.getProvider("app").getImmediate();
    this._storage = new eI(t), this._heartbeatsCachePromise = this._storage.read().then((r) => (this._heartbeatsCache = r, r));
  }
  async triggerHeartbeat() {
    const t = this.container.getProvider("platform-logger").getImmediate().getPlatformInfoString(), r = l2();
    if (this._heartbeatsCache === null && (this._heartbeatsCache = await this._heartbeatsCachePromise), !(this._heartbeatsCache.lastSentHeartbeatDate === r || this._heartbeatsCache.heartbeats.some((i) => i.date === r)))
      return this._heartbeatsCache.heartbeats.push({ date: r, agent: t }), this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter((i) => {
        const s = new Date(i.date).valueOf();
        return Date.now() - s <= YO;
      }), this._storage.overwrite(this._heartbeatsCache);
  }
  async getHeartbeatsHeader() {
    if (this._heartbeatsCache === null && await this._heartbeatsCachePromise, this._heartbeatsCache === null || this._heartbeatsCache.heartbeats.length === 0)
      return "";
    const e = l2(), { heartbeatsToSend: t, unsentEntries: r } = ZO(this._heartbeatsCache.heartbeats), i = Jc(JSON.stringify({ version: 2, heartbeats: t }));
    return this._heartbeatsCache.lastSentHeartbeatDate = e, r.length > 0 ? (this._heartbeatsCache.heartbeats = r, await this._storage.overwrite(this._heartbeatsCache)) : (this._heartbeatsCache.heartbeats = [], this._storage.overwrite(this._heartbeatsCache)), i;
  }
}
function l2() {
  return new Date().toISOString().substring(0, 10);
}
function ZO(n, e = JO) {
  const t = [];
  let r = n.slice();
  for (const i of n) {
    const s = t.find((a) => a.agent === i.agent);
    if (s) {
      if (s.dates.push(i.date), c2(t) > e) {
        s.dates.pop();
        break;
      }
    } else if (t.push({
      agent: i.agent,
      dates: [i.date]
    }), c2(t) > e) {
      t.pop();
      break;
    }
    r = r.slice(1);
  }
  return {
    heartbeatsToSend: t,
    unsentEntries: r
  };
}
class eI {
  constructor(e) {
    this.app = e, this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();
  }
  async runIndexedDBEnvironmentCheck() {
    return DP() ? BP().then(() => !0).catch(() => !1) : !1;
  }
  async read() {
    return await this._canUseIndexedDBPromise ? await QO(this.app) || { heartbeats: [] } : { heartbeats: [] };
  }
  async overwrite(e) {
    var t;
    if (await this._canUseIndexedDBPromise) {
      const i = await this.read();
      return u2(this.app, {
        lastSentHeartbeatDate: (t = e.lastSentHeartbeatDate) !== null && t !== void 0 ? t : i.lastSentHeartbeatDate,
        heartbeats: e.heartbeats
      });
    } else
      return;
  }
  async add(e) {
    var t;
    if (await this._canUseIndexedDBPromise) {
      const i = await this.read();
      return u2(this.app, {
        lastSentHeartbeatDate: (t = e.lastSentHeartbeatDate) !== null && t !== void 0 ? t : i.lastSentHeartbeatDate,
        heartbeats: [
          ...i.heartbeats,
          ...e.heartbeats
        ]
      });
    } else
      return;
  }
}
function c2(n) {
  return Jc(
    JSON.stringify({ version: 2, heartbeats: n })
  ).length;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function tI(n) {
  ed(new Vu("platform-logger", (e) => new fO(e), "PRIVATE")), ed(new Vu("heartbeat", (e) => new XO(e), "PRIVATE")), to(Xf, o2, n), to(Xf, o2, "esm2017"), to("fire-js", "");
}
tI("");
var nI = "firebase", rI = "9.14.0";
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
to(nI, rI, "app");
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class En {
  constructor(e) {
    this.uid = e;
  }
  isAuthenticated() {
    return this.uid != null;
  }
  toKey() {
    return this.isAuthenticated() ? "uid:" + this.uid : "anonymous-user";
  }
  isEqual(e) {
    return e.uid === this.uid;
  }
}
En.UNAUTHENTICATED = new En(null), En.GOOGLE_CREDENTIALS = new En("google-credentials-uid"), En.FIRST_PARTY = new En("first-party-uid"), En.MOCK_USER = new En("mock-user");
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
let Fo = "9.14.0";
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const pa = new nw("@firebase/firestore");
function iI(n) {
  pa.setLogLevel(n);
}
function fa(n, ...e) {
  if (pa.logLevel <= Re.DEBUG) {
    const t = e.map(H0);
    pa.debug(`Firestore (${Fo}): ${n}`, ...t);
  }
}
function Ud(n, ...e) {
  if (pa.logLevel <= Re.ERROR) {
    const t = e.map(H0);
    pa.error(`Firestore (${Fo}): ${n}`, ...t);
  }
}
function uw(n, ...e) {
  if (pa.logLevel <= Re.WARN) {
    const t = e.map(H0);
    pa.warn(`Firestore (${Fo}): ${n}`, ...t);
  }
}
function H0(n) {
  if (typeof n == "string")
    return n;
  try {
    return e = n, JSON.stringify(e);
  } catch {
    return n;
  }
  /**
  * @license
  * Copyright 2020 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  var e;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Oe(n = "Unexpected state") {
  const e = `FIRESTORE (${Fo}) INTERNAL ASSERTION FAILED: ` + n;
  throw Ud(e), new Error(e);
}
function pn(n, e) {
  n || Oe();
}
function No(n, e) {
  return n;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const d2 = "ok", K0 = "cancelled", no = "unknown", ie = "invalid-argument", lw = "deadline-exceeded", q0 = "not-found", sI = "already-exists", cw = "permission-denied", td = "unauthenticated", dw = "resource-exhausted", Mi = "failed-precondition", Q0 = "aborted", pw = "out-of-range", J0 = "unimplemented", fw = "internal", hw = "unavailable", aI = "data-loss";
class X extends Bo {
  constructor(e, t) {
    super(e, t), this.code = e, this.message = t, this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Y0 {
  constructor() {
    this.promise = new Promise((e, t) => {
      this.resolve = e, this.reject = t;
    });
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class yw {
  constructor(e, t) {
    this.user = t, this.type = "OAuth", this.headers = /* @__PURE__ */ new Map(), this.headers.set("Authorization", `Bearer ${e}`);
  }
}
class oI {
  getToken() {
    return Promise.resolve(null);
  }
  invalidateToken() {
  }
  start(e, t) {
    e.enqueueRetryable(() => t(En.UNAUTHENTICATED));
  }
  shutdown() {
  }
}
class uI {
  constructor(e) {
    this.token = e, this.changeListener = null;
  }
  getToken() {
    return Promise.resolve(this.token);
  }
  invalidateToken() {
  }
  start(e, t) {
    this.changeListener = t, e.enqueueRetryable(() => t(this.token.user));
  }
  shutdown() {
    this.changeListener = null;
  }
}
class lI {
  constructor(e) {
    this.auth = null, e.onInit((t) => {
      this.auth = t;
    });
  }
  getToken() {
    return this.auth ? this.auth.getToken().then((e) => e ? (pn(typeof e.accessToken == "string"), new yw(e.accessToken, new En(this.auth.getUid()))) : null) : Promise.resolve(null);
  }
  invalidateToken() {
  }
  start(e, t) {
  }
  shutdown() {
  }
}
class cI {
  constructor(e, t, r, i) {
    this.t = e, this.i = t, this.o = r, this.u = i, this.type = "FirstParty", this.user = En.FIRST_PARTY, this.h = /* @__PURE__ */ new Map();
  }
  l() {
    return this.u ? this.u() : (pn(!(typeof this.t != "object" || this.t === null || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), this.t.auth.getAuthHeaderValueForFirstParty([]));
  }
  get headers() {
    this.h.set("X-Goog-AuthUser", this.i);
    const e = this.l();
    return e && this.h.set("Authorization", e), this.o && this.h.set("X-Goog-Iam-Authorization-Token", this.o), this.h;
  }
}
class dI {
  constructor(e, t, r, i) {
    this.t = e, this.i = t, this.o = r, this.u = i;
  }
  getToken() {
    return Promise.resolve(new cI(this.t, this.i, this.o, this.u));
  }
  start(e, t) {
    e.enqueueRetryable(() => t(En.FIRST_PARTY));
  }
  shutdown() {
  }
  invalidateToken() {
  }
}
class pI {
  constructor(e) {
    this.value = e, this.type = "AppCheck", this.headers = /* @__PURE__ */ new Map(), e && e.length > 0 && this.headers.set("x-firebase-appcheck", this.value);
  }
}
class fI {
  constructor(e) {
    this.m = e, this.appCheck = null, e.onInit((t) => {
      this.appCheck = t;
    });
  }
  getToken() {
    return this.appCheck ? this.appCheck.getToken().then((e) => e ? (pn(typeof e.token == "string"), new pI(e.token)) : null) : Promise.resolve(null);
  }
  invalidateToken() {
  }
  start(e, t) {
  }
  shutdown() {
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class hI {
  constructor(e, t, r, i, s, a, o, u) {
    this.databaseId = e, this.appId = t, this.persistenceKey = r, this.host = i, this.ssl = s, this.forceLongPolling = a, this.autoDetectLongPolling = o, this.useFetchStreams = u;
  }
}
class zu {
  constructor(e, t) {
    this.projectId = e, this.database = t || "(default)";
  }
  static empty() {
    return new zu("", "");
  }
  get isDefaultDatabase() {
    return this.database === "(default)";
  }
  isEqual(e) {
    return e instanceof zu && e.projectId === this.projectId && e.database === this.database;
  }
}
class Gu {
  constructor(e, t, r) {
    t === void 0 ? t = 0 : t > e.length && Oe(), r === void 0 ? r = e.length - t : r > e.length - t && Oe(), this.segments = e, this.offset = t, this.len = r;
  }
  get length() {
    return this.len;
  }
  isEqual(e) {
    return Gu.comparator(this, e) === 0;
  }
  child(e) {
    const t = this.segments.slice(this.offset, this.limit());
    return e instanceof Gu ? e.forEach((r) => {
      t.push(r);
    }) : t.push(e), this.construct(t);
  }
  limit() {
    return this.offset + this.length;
  }
  popFirst(e) {
    return e = e === void 0 ? 1 : e, this.construct(this.segments, this.offset + e, this.length - e);
  }
  popLast() {
    return this.construct(this.segments, this.offset, this.length - 1);
  }
  firstSegment() {
    return this.segments[this.offset];
  }
  lastSegment() {
    return this.get(this.length - 1);
  }
  get(e) {
    return this.segments[this.offset + e];
  }
  isEmpty() {
    return this.length === 0;
  }
  isPrefixOf(e) {
    if (e.length < this.length)
      return !1;
    for (let t = 0; t < this.length; t++)
      if (this.get(t) !== e.get(t))
        return !1;
    return !0;
  }
  isImmediateParentOf(e) {
    if (this.length + 1 !== e.length)
      return !1;
    for (let t = 0; t < this.length; t++)
      if (this.get(t) !== e.get(t))
        return !1;
    return !0;
  }
  forEach(e) {
    for (let t = this.offset, r = this.limit(); t < r; t++)
      e(this.segments[t]);
  }
  toArray() {
    return this.segments.slice(this.offset, this.limit());
  }
  static comparator(e, t) {
    const r = Math.min(e.length, t.length);
    for (let i = 0; i < r; i++) {
      const s = e.get(i), a = t.get(i);
      if (s < a)
        return -1;
      if (s > a)
        return 1;
    }
    return e.length < t.length ? -1 : e.length > t.length ? 1 : 0;
  }
}
class _t extends Gu {
  construct(e, t, r) {
    return new _t(e, t, r);
  }
  canonicalString() {
    return this.toArray().join("/");
  }
  toString() {
    return this.canonicalString();
  }
  static fromString(...e) {
    const t = [];
    for (const r of e) {
      if (r.indexOf("//") >= 0)
        throw new X(ie, `Invalid segment (${r}). Paths must not contain // in them.`);
      t.push(...r.split("/").filter((i) => i.length > 0));
    }
    return new _t(t);
  }
  static emptyPath() {
    return new _t([]);
  }
}
const yI = /^[_a-zA-Z][_a-zA-Z0-9]*$/;
class zn extends Gu {
  construct(e, t, r) {
    return new zn(e, t, r);
  }
  static isValidIdentifier(e) {
    return yI.test(e);
  }
  canonicalString() {
    return this.toArray().map((e) => (e = e.replace(/\\/g, "\\\\").replace(/`/g, "\\`"), zn.isValidIdentifier(e) || (e = "`" + e + "`"), e)).join(".");
  }
  toString() {
    return this.canonicalString();
  }
  isKeyField() {
    return this.length === 1 && this.get(0) === "__name__";
  }
  static keyField() {
    return new zn(["__name__"]);
  }
  static fromServerFormat(e) {
    const t = [];
    let r = "", i = 0;
    const s = () => {
      if (r.length === 0)
        throw new X(ie, `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);
      t.push(r), r = "";
    };
    let a = !1;
    for (; i < e.length; ) {
      const o = e[i];
      if (o === "\\") {
        if (i + 1 === e.length)
          throw new X(ie, "Path has trailing escape character: " + e);
        const u = e[i + 1];
        if (u !== "\\" && u !== "." && u !== "`")
          throw new X(ie, "Path has invalid escape sequence: " + e);
        r += u, i += 2;
      } else
        o === "`" ? (a = !a, i++) : o !== "." || a ? (r += o, i++) : (s(), i++);
    }
    if (s(), a)
      throw new X(ie, "Unterminated ` in path: " + e);
    return new zn(t);
  }
  static emptyPath() {
    return new zn([]);
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class It {
  constructor(e) {
    this.path = e;
  }
  static fromPath(e) {
    return new It(_t.fromString(e));
  }
  static fromName(e) {
    return new It(_t.fromString(e).popFirst(5));
  }
  static empty() {
    return new It(_t.emptyPath());
  }
  get collectionGroup() {
    return this.path.popLast().lastSegment();
  }
  hasCollectionId(e) {
    return this.path.length >= 2 && this.path.get(this.path.length - 2) === e;
  }
  getCollectionGroup() {
    return this.path.get(this.path.length - 2);
  }
  getCollectionPath() {
    return this.path.popLast();
  }
  isEqual(e) {
    return e !== null && _t.comparator(this.path, e.path) === 0;
  }
  toString() {
    return this.path.toString();
  }
  static comparator(e, t) {
    return _t.comparator(e.path, t.path);
  }
  static isDocumentKey(e) {
    return e.length % 2 == 0;
  }
  static fromSegments(e) {
    return new It(new _t(e.slice()));
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function X0(n, e, t) {
  if (!t)
    throw new X(ie, `Function ${n}() cannot be called with an empty ${e}.`);
}
function p2(n) {
  if (!It.isDocumentKey(n))
    throw new X(ie, `Invalid document reference. Document references must have an even number of segments, but ${n} has ${n.length}.`);
}
function f2(n) {
  if (It.isDocumentKey(n))
    throw new X(ie, `Invalid collection reference. Collection references must have an odd number of segments, but ${n} has ${n.length}.`);
}
function Vd(n) {
  if (n === void 0)
    return "undefined";
  if (n === null)
    return "null";
  if (typeof n == "string")
    return n.length > 20 && (n = `${n.substring(0, 20)}...`), JSON.stringify(n);
  if (typeof n == "number" || typeof n == "boolean")
    return "" + n;
  if (typeof n == "object") {
    if (n instanceof Array)
      return "an array";
    {
      const e = function(t) {
        return t.constructor ? t.constructor.name : null;
      }(n);
      return e ? `a custom ${e} object` : "an object";
    }
  }
  return typeof n == "function" ? "a function" : Oe();
}
function hr(n, e) {
  if ("_delegate" in n && (n = n._delegate), !(n instanceof e)) {
    if (e.name === n.constructor.name)
      throw new X(ie, "Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?");
    {
      const t = Vd(n);
      throw new X(ie, `Expected type '${e.name}', but it was: ${t}`);
    }
  }
  return n;
}
function mw(n, e) {
  if (e <= 0)
    throw new X(ie, `Function ${n}() requires a positive number, but it was: ${e}.`);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function bw(n) {
  return n == null;
}
function nd(n) {
  return n === 0 && 1 / n == -1 / 0;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const mI = {
  BatchGetDocuments: "batchGet",
  Commit: "commit",
  RunQuery: "runQuery",
  RunAggregationQuery: "runAggregationQuery"
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var h2, xe;
function y2(n) {
  if (n === void 0)
    return Ud("RPC_ERROR", "HTTP error has no status"), no;
  switch (n) {
    case 200:
      return d2;
    case 400:
      return Mi;
    case 401:
      return td;
    case 403:
      return cw;
    case 404:
      return q0;
    case 409:
      return Q0;
    case 416:
      return pw;
    case 429:
      return dw;
    case 499:
      return K0;
    case 500:
      return no;
    case 501:
      return J0;
    case 503:
      return hw;
    case 504:
      return lw;
    default:
      return n >= 200 && n < 300 ? d2 : n >= 400 && n < 500 ? Mi : n >= 500 && n < 600 ? fw : no;
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
(xe = h2 || (h2 = {}))[xe.OK = 0] = "OK", xe[xe.CANCELLED = 1] = "CANCELLED", xe[xe.UNKNOWN = 2] = "UNKNOWN", xe[xe.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", xe[xe.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", xe[xe.NOT_FOUND = 5] = "NOT_FOUND", xe[xe.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", xe[xe.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", xe[xe.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", xe[xe.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", xe[xe.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", xe[xe.ABORTED = 10] = "ABORTED", xe[xe.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", xe[xe.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", xe[xe.INTERNAL = 13] = "INTERNAL", xe[xe.UNAVAILABLE = 14] = "UNAVAILABLE", xe[xe.DATA_LOSS = 15] = "DATA_LOSS";
class bI extends class {
  constructor(e) {
    this.databaseInfo = e, this.databaseId = e.databaseId;
    const t = e.ssl ? "https" : "http";
    this.p = t + "://" + e.host, this.g = "projects/" + this.databaseId.projectId + "/databases/" + this.databaseId.database + "/documents";
  }
  get v() {
    return !1;
  }
  I(e, t, r, i, s) {
    const a = this.T(e, t);
    fa("RestConnection", "Sending: ", a, r);
    const o = {};
    return this.A(o, i, s), this.R(e, a, o, r).then((u) => (fa("RestConnection", "Received: ", u), u), (u) => {
      throw uw("RestConnection", `${e} failed with error: `, u, "url: ", a, "request:", r), u;
    });
  }
  P(e, t, r, i, s, a) {
    return this.I(e, t, r, i, s);
  }
  A(e, t, r) {
    e["X-Goog-Api-Client"] = "gl-js/ fire/" + Fo, e["Content-Type"] = "text/plain", this.databaseInfo.appId && (e["X-Firebase-GMPID"] = this.databaseInfo.appId), t && t.headers.forEach((i, s) => e[s] = i), r && r.headers.forEach((i, s) => e[s] = i);
  }
  T(e, t) {
    const r = mI[e];
    return `${this.p}/v1/${t}:${r}`;
  }
} {
  constructor(e, t) {
    super(e), this.V = t;
  }
  N(e, t) {
    throw new Error("Not supported by FetchConnection");
  }
  async R(e, t, r, i) {
    var s;
    const a = JSON.stringify(i);
    let o;
    try {
      o = await this.V(t, {
        method: "POST",
        headers: r,
        body: a
      });
    } catch (u) {
      throw new X(y2(u.status), "Request failed with error: " + u.statusText);
    }
    if (!o.ok) {
      let u = await o.json();
      Array.isArray(u) && (u = u[0]);
      const l = (s = u?.error) === null || s === void 0 ? void 0 : s.message;
      throw new X(y2(o.status), `Request failed with error: ${l ?? o.statusText}`);
    }
    return o.json();
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function gI(n) {
  const e = typeof self < "u" && (self.crypto || self.msCrypto), t = new Uint8Array(n);
  if (e && typeof e.getRandomValues == "function")
    e.getRandomValues(t);
  else
    for (let r = 0; r < n; r++)
      t[r] = Math.floor(256 * Math.random());
  return t;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class xI {
  static $() {
    const e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", t = Math.floor(256 / e.length) * e.length;
    let r = "";
    for (; r.length < 20; ) {
      const i = gI(40);
      for (let s = 0; s < i.length; ++s)
        r.length < 20 && i[s] < t && (r += e.charAt(i[s] % e.length));
    }
    return r;
  }
}
function jt(n, e) {
  return n < e ? -1 : n > e ? 1 : 0;
}
function Z0(n, e, t) {
  return n.length === e.length && n.every((r, i) => t(r, e[i]));
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class In {
  constructor(e, t) {
    if (this.seconds = e, this.nanoseconds = t, t < 0)
      throw new X(ie, "Timestamp nanoseconds out of range: " + t);
    if (t >= 1e9)
      throw new X(ie, "Timestamp nanoseconds out of range: " + t);
    if (e < -62135596800)
      throw new X(ie, "Timestamp seconds out of range: " + e);
    if (e >= 253402300800)
      throw new X(ie, "Timestamp seconds out of range: " + e);
  }
  static now() {
    return In.fromMillis(Date.now());
  }
  static fromDate(e) {
    return In.fromMillis(e.getTime());
  }
  static fromMillis(e) {
    const t = Math.floor(e / 1e3), r = Math.floor(1e6 * (e - 1e3 * t));
    return new In(t, r);
  }
  toDate() {
    return new Date(this.toMillis());
  }
  toMillis() {
    return 1e3 * this.seconds + this.nanoseconds / 1e6;
  }
  _compareTo(e) {
    return this.seconds === e.seconds ? jt(this.nanoseconds, e.nanoseconds) : jt(this.seconds, e.seconds);
  }
  isEqual(e) {
    return e.seconds === this.seconds && e.nanoseconds === this.nanoseconds;
  }
  toString() {
    return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
  }
  toJSON() {
    return {
      seconds: this.seconds,
      nanoseconds: this.nanoseconds
    };
  }
  valueOf() {
    const e = this.seconds - -62135596800;
    return String(e).padStart(12, "0") + "." + String(this.nanoseconds).padStart(9, "0");
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class _n {
  constructor(e) {
    this.timestamp = e;
  }
  static fromTimestamp(e) {
    return new _n(e);
  }
  static min() {
    return new _n(new In(0, 0));
  }
  static max() {
    return new _n(new In(253402300799, 999999999));
  }
  compareTo(e) {
    return this.timestamp._compareTo(e.timestamp);
  }
  isEqual(e) {
    return this.timestamp.isEqual(e.timestamp);
  }
  toMicroseconds() {
    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
  }
  toString() {
    return "SnapshotVersion(" + this.timestamp.toString() + ")";
  }
  toTimestamp() {
    return this.timestamp;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function m2(n) {
  let e = 0;
  for (const t in n)
    Object.prototype.hasOwnProperty.call(n, t) && e++;
  return e;
}
function xl(n, e) {
  for (const t in n)
    Object.prototype.hasOwnProperty.call(n, t) && e(t, n[t]);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class rd {
  constructor(e, t) {
    this.comparator = e, this.root = t || Kt.EMPTY;
  }
  insert(e, t) {
    return new rd(this.comparator, this.root.insert(e, t, this.comparator).copy(null, null, Kt.BLACK, null, null));
  }
  remove(e) {
    return new rd(this.comparator, this.root.remove(e, this.comparator).copy(null, null, Kt.BLACK, null, null));
  }
  get(e) {
    let t = this.root;
    for (; !t.isEmpty(); ) {
      const r = this.comparator(e, t.key);
      if (r === 0)
        return t.value;
      r < 0 ? t = t.left : r > 0 && (t = t.right);
    }
    return null;
  }
  indexOf(e) {
    let t = 0, r = this.root;
    for (; !r.isEmpty(); ) {
      const i = this.comparator(e, r.key);
      if (i === 0)
        return t + r.left.size;
      i < 0 ? r = r.left : (t += r.left.size + 1, r = r.right);
    }
    return -1;
  }
  isEmpty() {
    return this.root.isEmpty();
  }
  get size() {
    return this.root.size;
  }
  minKey() {
    return this.root.minKey();
  }
  maxKey() {
    return this.root.maxKey();
  }
  inorderTraversal(e) {
    return this.root.inorderTraversal(e);
  }
  forEach(e) {
    this.inorderTraversal((t, r) => (e(t, r), !1));
  }
  toString() {
    const e = [];
    return this.inorderTraversal((t, r) => (e.push(`${t}:${r}`), !1)), `{${e.join(", ")}}`;
  }
  reverseTraversal(e) {
    return this.root.reverseTraversal(e);
  }
  getIterator() {
    return new Ul(this.root, null, this.comparator, !1);
  }
  getIteratorFrom(e) {
    return new Ul(this.root, e, this.comparator, !1);
  }
  getReverseIterator() {
    return new Ul(this.root, null, this.comparator, !0);
  }
  getReverseIteratorFrom(e) {
    return new Ul(this.root, e, this.comparator, !0);
  }
}
class Ul {
  constructor(e, t, r, i) {
    this.isReverse = i, this.nodeStack = [];
    let s = 1;
    for (; !e.isEmpty(); )
      if (s = t ? r(e.key, t) : 1, t && i && (s *= -1), s < 0)
        e = this.isReverse ? e.left : e.right;
      else {
        if (s === 0) {
          this.nodeStack.push(e);
          break;
        }
        this.nodeStack.push(e), e = this.isReverse ? e.right : e.left;
      }
  }
  getNext() {
    let e = this.nodeStack.pop();
    const t = {
      key: e.key,
      value: e.value
    };
    if (this.isReverse)
      for (e = e.left; !e.isEmpty(); )
        this.nodeStack.push(e), e = e.right;
    else
      for (e = e.right; !e.isEmpty(); )
        this.nodeStack.push(e), e = e.left;
    return t;
  }
  hasNext() {
    return this.nodeStack.length > 0;
  }
  peek() {
    if (this.nodeStack.length === 0)
      return null;
    const e = this.nodeStack[this.nodeStack.length - 1];
    return {
      key: e.key,
      value: e.value
    };
  }
}
class Kt {
  constructor(e, t, r, i, s) {
    this.key = e, this.value = t, this.color = r ?? Kt.RED, this.left = i ?? Kt.EMPTY, this.right = s ?? Kt.EMPTY, this.size = this.left.size + 1 + this.right.size;
  }
  copy(e, t, r, i, s) {
    return new Kt(e ?? this.key, t ?? this.value, r ?? this.color, i ?? this.left, s ?? this.right);
  }
  isEmpty() {
    return !1;
  }
  inorderTraversal(e) {
    return this.left.inorderTraversal(e) || e(this.key, this.value) || this.right.inorderTraversal(e);
  }
  reverseTraversal(e) {
    return this.right.reverseTraversal(e) || e(this.key, this.value) || this.left.reverseTraversal(e);
  }
  min() {
    return this.left.isEmpty() ? this : this.left.min();
  }
  minKey() {
    return this.min().key;
  }
  maxKey() {
    return this.right.isEmpty() ? this.key : this.right.maxKey();
  }
  insert(e, t, r) {
    let i = this;
    const s = r(e, i.key);
    return i = s < 0 ? i.copy(null, null, null, i.left.insert(e, t, r), null) : s === 0 ? i.copy(null, t, null, null, null) : i.copy(null, null, null, null, i.right.insert(e, t, r)), i.fixUp();
  }
  removeMin() {
    if (this.left.isEmpty())
      return Kt.EMPTY;
    let e = this;
    return e.left.isRed() || e.left.left.isRed() || (e = e.moveRedLeft()), e = e.copy(null, null, null, e.left.removeMin(), null), e.fixUp();
  }
  remove(e, t) {
    let r, i = this;
    if (t(e, i.key) < 0)
      i.left.isEmpty() || i.left.isRed() || i.left.left.isRed() || (i = i.moveRedLeft()), i = i.copy(null, null, null, i.left.remove(e, t), null);
    else {
      if (i.left.isRed() && (i = i.rotateRight()), i.right.isEmpty() || i.right.isRed() || i.right.left.isRed() || (i = i.moveRedRight()), t(e, i.key) === 0) {
        if (i.right.isEmpty())
          return Kt.EMPTY;
        r = i.right.min(), i = i.copy(r.key, r.value, null, null, i.right.removeMin());
      }
      i = i.copy(null, null, null, null, i.right.remove(e, t));
    }
    return i.fixUp();
  }
  isRed() {
    return this.color;
  }
  fixUp() {
    let e = this;
    return e.right.isRed() && !e.left.isRed() && (e = e.rotateLeft()), e.left.isRed() && e.left.left.isRed() && (e = e.rotateRight()), e.left.isRed() && e.right.isRed() && (e = e.colorFlip()), e;
  }
  moveRedLeft() {
    let e = this.colorFlip();
    return e.right.left.isRed() && (e = e.copy(null, null, null, null, e.right.rotateRight()), e = e.rotateLeft(), e = e.colorFlip()), e;
  }
  moveRedRight() {
    let e = this.colorFlip();
    return e.left.left.isRed() && (e = e.rotateRight(), e = e.colorFlip()), e;
  }
  rotateLeft() {
    const e = this.copy(null, null, Kt.RED, null, this.right.left);
    return this.right.copy(null, null, this.color, e, null);
  }
  rotateRight() {
    const e = this.copy(null, null, Kt.RED, this.left.right, null);
    return this.left.copy(null, null, this.color, null, e);
  }
  colorFlip() {
    const e = this.left.copy(null, null, !this.left.color, null, null), t = this.right.copy(null, null, !this.right.color, null, null);
    return this.copy(null, null, !this.color, e, t);
  }
  checkMaxDepth() {
    const e = this.check();
    return Math.pow(2, e) <= this.size + 1;
  }
  check() {
    if (this.isRed() && this.left.isRed() || this.right.isRed())
      throw Oe();
    const e = this.left.check();
    if (e !== this.right.check())
      throw Oe();
    return e + (this.isRed() ? 0 : 1);
  }
}
Kt.EMPTY = null, Kt.RED = !0, Kt.BLACK = !1;
Kt.EMPTY = new class {
  constructor() {
    this.size = 0;
  }
  get key() {
    throw Oe();
  }
  get value() {
    throw Oe();
  }
  get color() {
    throw Oe();
  }
  get left() {
    throw Oe();
  }
  get right() {
    throw Oe();
  }
  copy(n, e, t, r, i) {
    return this;
  }
  insert(n, e, t) {
    return new Kt(n, e);
  }
  remove(n, e) {
    return this;
  }
  isEmpty() {
    return !0;
  }
  inorderTraversal(n) {
    return !1;
  }
  reverseTraversal(n) {
    return !1;
  }
  minKey() {
    return null;
  }
  maxKey() {
    return null;
  }
  isRed() {
    return !1;
  }
  checkMaxDepth() {
    return !0;
  }
  check() {
    return 0;
  }
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class id {
  constructor(e) {
    this.comparator = e, this.data = new rd(this.comparator);
  }
  has(e) {
    return this.data.get(e) !== null;
  }
  first() {
    return this.data.minKey();
  }
  last() {
    return this.data.maxKey();
  }
  get size() {
    return this.data.size;
  }
  indexOf(e) {
    return this.data.indexOf(e);
  }
  forEach(e) {
    this.data.inorderTraversal((t, r) => (e(t), !1));
  }
  forEachInRange(e, t) {
    const r = this.data.getIteratorFrom(e[0]);
    for (; r.hasNext(); ) {
      const i = r.getNext();
      if (this.comparator(i.key, e[1]) >= 0)
        return;
      t(i.key);
    }
  }
  forEachWhile(e, t) {
    let r;
    for (r = t !== void 0 ? this.data.getIteratorFrom(t) : this.data.getIterator(); r.hasNext(); )
      if (!e(r.getNext().key))
        return;
  }
  firstAfterOrEqual(e) {
    const t = this.data.getIteratorFrom(e);
    return t.hasNext() ? t.getNext().key : null;
  }
  getIterator() {
    return new b2(this.data.getIterator());
  }
  getIteratorFrom(e) {
    return new b2(this.data.getIteratorFrom(e));
  }
  add(e) {
    return this.copy(this.data.remove(e).insert(e, !0));
  }
  delete(e) {
    return this.has(e) ? this.copy(this.data.remove(e)) : this;
  }
  isEmpty() {
    return this.data.isEmpty();
  }
  unionWith(e) {
    let t = this;
    return t.size < e.size && (t = e, e = this), e.forEach((r) => {
      t = t.add(r);
    }), t;
  }
  isEqual(e) {
    if (!(e instanceof id) || this.size !== e.size)
      return !1;
    const t = this.data.getIterator(), r = e.data.getIterator();
    for (; t.hasNext(); ) {
      const i = t.getNext().key, s = r.getNext().key;
      if (this.comparator(i, s) !== 0)
        return !1;
    }
    return !0;
  }
  toArray() {
    const e = [];
    return this.forEach((t) => {
      e.push(t);
    }), e;
  }
  toString() {
    const e = [];
    return this.forEach((t) => e.push(t)), "SortedSet(" + e.toString() + ")";
  }
  copy(e) {
    const t = new id(this.comparator);
    return t.data = e, t;
  }
}
class b2 {
  constructor(e) {
    this.iter = e;
  }
  getNext() {
    return this.iter.getNext().key;
  }
  hasNext() {
    return this.iter.hasNext();
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ha {
  constructor(e) {
    this.fields = e, e.sort(zn.comparator);
  }
  static empty() {
    return new ha([]);
  }
  unionWith(e) {
    let t = new id(zn.comparator);
    for (const r of this.fields)
      t = t.add(r);
    for (const r of e)
      t = t.add(r);
    return new ha(t.toArray());
  }
  covers(e) {
    for (const t of this.fields)
      if (t.isPrefixOf(e))
        return !0;
    return !1;
  }
  isEqual(e) {
    return Z0(this.fields, e.fields, (t, r) => t.isEqual(r));
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class _i {
  constructor(e) {
    this.binaryString = e;
  }
  static fromBase64String(e) {
    const t = atob(e);
    return new _i(t);
  }
  static fromUint8Array(e) {
    const t = function(r) {
      let i = "";
      for (let s = 0; s < r.length; ++s)
        i += String.fromCharCode(r[s]);
      return i;
    }(e);
    return new _i(t);
  }
  [Symbol.iterator]() {
    let e = 0;
    return {
      next: () => e < this.binaryString.length ? {
        value: this.binaryString.charCodeAt(e++),
        done: !1
      } : {
        value: void 0,
        done: !0
      }
    };
  }
  toBase64() {
    return e = this.binaryString, btoa(e);
    var e;
  }
  toUint8Array() {
    return function(e) {
      const t = new Uint8Array(e.length);
      for (let r = 0; r < e.length; r++)
        t[r] = e.charCodeAt(r);
      return t;
    }(this.binaryString);
  }
  approximateByteSize() {
    return 2 * this.binaryString.length;
  }
  compareTo(e) {
    return jt(this.binaryString, e.binaryString);
  }
  isEqual(e) {
    return this.binaryString === e.binaryString;
  }
}
_i.EMPTY_BYTE_STRING = new _i("");
const vI = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
function ya(n) {
  if (pn(!!n), typeof n == "string") {
    let e = 0;
    const t = vI.exec(n);
    if (pn(!!t), t[1]) {
      let i = t[1];
      i = (i + "000000000").substr(0, 9), e = Number(i);
    }
    const r = new Date(n);
    return {
      seconds: Math.floor(r.getTime() / 1e3),
      nanos: e
    };
  }
  return {
    seconds: Dt(n.seconds),
    nanos: Dt(n.nanos)
  };
}
function Dt(n) {
  return typeof n == "number" ? n : typeof n == "string" ? Number(n) : 0;
}
function Wu(n) {
  return typeof n == "string" ? _i.fromBase64String(n) : _i.fromUint8Array(n);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function ey(n) {
  var e, t;
  return ((t = (((e = n?.mapValue) === null || e === void 0 ? void 0 : e.fields) || {}).__type__) === null || t === void 0 ? void 0 : t.stringValue) === "server_timestamp";
}
function gw(n) {
  const e = n.mapValue.fields.__previous_value__;
  return ey(e) ? gw(e) : e;
}
function Hu(n) {
  const e = ya(n.mapValue.fields.__local_write_time__.timestampValue);
  return new In(e.seconds, e.nanos);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Vl = {
  fields: {
    __type__: {
      stringValue: "__max__"
    }
  }
};
function ma(n) {
  return "nullValue" in n ? 0 : "booleanValue" in n ? 1 : "integerValue" in n || "doubleValue" in n ? 2 : "timestampValue" in n ? 3 : "stringValue" in n ? 5 : "bytesValue" in n ? 6 : "referenceValue" in n ? 7 : "geoPointValue" in n ? 8 : "arrayValue" in n ? 9 : "mapValue" in n ? ey(n) ? 4 : function(e) {
    return (((e.mapValue || {}).fields || {}).__type__ || {}).stringValue === "__max__";
  }(n) ? 9007199254740991 : 10 : Oe();
}
function mo(n, e) {
  if (n === e)
    return !0;
  const t = ma(n);
  if (t !== ma(e))
    return !1;
  switch (t) {
    case 0:
    case 9007199254740991:
      return !0;
    case 1:
      return n.booleanValue === e.booleanValue;
    case 4:
      return Hu(n).isEqual(Hu(e));
    case 3:
      return function(r, i) {
        if (typeof r.timestampValue == "string" && typeof i.timestampValue == "string" && r.timestampValue.length === i.timestampValue.length)
          return r.timestampValue === i.timestampValue;
        const s = ya(r.timestampValue), a = ya(i.timestampValue);
        return s.seconds === a.seconds && s.nanos === a.nanos;
      }(n, e);
    case 5:
      return n.stringValue === e.stringValue;
    case 6:
      return function(r, i) {
        return Wu(r.bytesValue).isEqual(Wu(i.bytesValue));
      }(n, e);
    case 7:
      return n.referenceValue === e.referenceValue;
    case 8:
      return function(r, i) {
        return Dt(r.geoPointValue.latitude) === Dt(i.geoPointValue.latitude) && Dt(r.geoPointValue.longitude) === Dt(i.geoPointValue.longitude);
      }(n, e);
    case 2:
      return function(r, i) {
        if ("integerValue" in r && "integerValue" in i)
          return Dt(r.integerValue) === Dt(i.integerValue);
        if ("doubleValue" in r && "doubleValue" in i) {
          const s = Dt(r.doubleValue), a = Dt(i.doubleValue);
          return s === a ? nd(s) === nd(a) : isNaN(s) && isNaN(a);
        }
        return !1;
      }(n, e);
    case 9:
      return Z0(n.arrayValue.values || [], e.arrayValue.values || [], mo);
    case 10:
      return function(r, i) {
        const s = r.mapValue.fields || {}, a = i.mapValue.fields || {};
        if (m2(s) !== m2(a))
          return !1;
        for (const o in s)
          if (s.hasOwnProperty(o) && (a[o] === void 0 || !mo(s[o], a[o])))
            return !1;
        return !0;
      }(n, e);
    default:
      return Oe();
  }
}
function Ku(n, e) {
  return (n.values || []).find((t) => mo(t, e)) !== void 0;
}
function sd(n, e) {
  if (n === e)
    return 0;
  const t = ma(n), r = ma(e);
  if (t !== r)
    return jt(t, r);
  switch (t) {
    case 0:
    case 9007199254740991:
      return 0;
    case 1:
      return jt(n.booleanValue, e.booleanValue);
    case 2:
      return function(i, s) {
        const a = Dt(i.integerValue || i.doubleValue), o = Dt(s.integerValue || s.doubleValue);
        return a < o ? -1 : a > o ? 1 : a === o ? 0 : isNaN(a) ? isNaN(o) ? 0 : -1 : 1;
      }(n, e);
    case 3:
      return g2(n.timestampValue, e.timestampValue);
    case 4:
      return g2(Hu(n), Hu(e));
    case 5:
      return jt(n.stringValue, e.stringValue);
    case 6:
      return function(i, s) {
        const a = Wu(i), o = Wu(s);
        return a.compareTo(o);
      }(n.bytesValue, e.bytesValue);
    case 7:
      return function(i, s) {
        const a = i.split("/"), o = s.split("/");
        for (let u = 0; u < a.length && u < o.length; u++) {
          const l = jt(a[u], o[u]);
          if (l !== 0)
            return l;
        }
        return jt(a.length, o.length);
      }(n.referenceValue, e.referenceValue);
    case 8:
      return function(i, s) {
        const a = jt(Dt(i.latitude), Dt(s.latitude));
        return a !== 0 ? a : jt(Dt(i.longitude), Dt(s.longitude));
      }(n.geoPointValue, e.geoPointValue);
    case 9:
      return function(i, s) {
        const a = i.values || [], o = s.values || [];
        for (let u = 0; u < a.length && u < o.length; ++u) {
          const l = sd(a[u], o[u]);
          if (l)
            return l;
        }
        return jt(a.length, o.length);
      }(n.arrayValue, e.arrayValue);
    case 10:
      return function(i, s) {
        if (i === Vl && s === Vl)
          return 0;
        if (i === Vl)
          return 1;
        if (s === Vl)
          return -1;
        const a = i.fields || {}, o = Object.keys(a), u = s.fields || {}, l = Object.keys(u);
        o.sort(), l.sort();
        for (let p = 0; p < o.length && p < l.length; ++p) {
          const h = jt(o[p], l[p]);
          if (h !== 0)
            return h;
          const b = sd(a[o[p]], u[l[p]]);
          if (b !== 0)
            return b;
        }
        return jt(o.length, l.length);
      }(n.mapValue, e.mapValue);
    default:
      throw Oe();
  }
}
function g2(n, e) {
  if (typeof n == "string" && typeof e == "string" && n.length === e.length)
    return jt(n, e);
  const t = ya(n), r = ya(e), i = jt(t.seconds, r.seconds);
  return i !== 0 ? i : jt(t.nanos, r.nanos);
}
function ad(n, e) {
  return {
    referenceValue: `projects/${n.projectId}/databases/${n.database}/documents/${e.path.canonicalString()}`
  };
}
function xw(n) {
  return !!n && "arrayValue" in n;
}
function x2(n) {
  return !!n && "nullValue" in n;
}
function v2(n) {
  return !!n && "doubleValue" in n && isNaN(Number(n.doubleValue));
}
function nf(n) {
  return !!n && "mapValue" in n;
}
function pu(n) {
  if (n.geoPointValue)
    return {
      geoPointValue: Object.assign({}, n.geoPointValue)
    };
  if (n.timestampValue && typeof n.timestampValue == "object")
    return {
      timestampValue: Object.assign({}, n.timestampValue)
    };
  if (n.mapValue) {
    const e = {
      mapValue: {
        fields: {}
      }
    };
    return xl(n.mapValue.fields, (t, r) => e.mapValue.fields[t] = pu(r)), e;
  }
  if (n.arrayValue) {
    const e = {
      arrayValue: {
        values: []
      }
    };
    for (let t = 0; t < (n.arrayValue.values || []).length; ++t)
      e.arrayValue.values[t] = pu(n.arrayValue.values[t]);
    return e;
  }
  return Object.assign({}, n);
}
class Gn {
  constructor(e) {
    this.value = e;
  }
  static empty() {
    return new Gn({
      mapValue: {}
    });
  }
  field(e) {
    if (e.isEmpty())
      return this.value;
    {
      let t = this.value;
      for (let r = 0; r < e.length - 1; ++r)
        if (t = (t.mapValue.fields || {})[e.get(r)], !nf(t))
          return null;
      return t = (t.mapValue.fields || {})[e.lastSegment()], t || null;
    }
  }
  set(e, t) {
    this.getFieldsMap(e.popLast())[e.lastSegment()] = pu(t);
  }
  setAll(e) {
    let t = zn.emptyPath(), r = {}, i = [];
    e.forEach((a, o) => {
      if (!t.isImmediateParentOf(o)) {
        const u = this.getFieldsMap(t);
        this.applyChanges(u, r, i), r = {}, i = [], t = o.popLast();
      }
      a ? r[o.lastSegment()] = pu(a) : i.push(o.lastSegment());
    });
    const s = this.getFieldsMap(t);
    this.applyChanges(s, r, i);
  }
  delete(e) {
    const t = this.field(e.popLast());
    nf(t) && t.mapValue.fields && delete t.mapValue.fields[e.lastSegment()];
  }
  isEqual(e) {
    return mo(this.value, e.value);
  }
  getFieldsMap(e) {
    let t = this.value;
    t.mapValue.fields || (t.mapValue = {
      fields: {}
    });
    for (let r = 0; r < e.length; ++r) {
      let i = t.mapValue.fields[e.get(r)];
      nf(i) && i.mapValue.fields || (i = {
        mapValue: {
          fields: {}
        }
      }, t.mapValue.fields[e.get(r)] = i), t = i;
    }
    return t.mapValue.fields;
  }
  applyChanges(e, t, r) {
    xl(t, (i, s) => e[i] = s);
    for (const i of r)
      delete e[i];
  }
  clone() {
    return new Gn(pu(this.value));
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Fr {
  constructor(e, t, r, i, s, a) {
    this.key = e, this.documentType = t, this.version = r, this.readTime = i, this.data = s, this.documentState = a;
  }
  static newInvalidDocument(e) {
    return new Fr(e, 0, _n.min(), _n.min(), Gn.empty(), 0);
  }
  static newFoundDocument(e, t, r) {
    return new Fr(e, 1, t, _n.min(), r, 0);
  }
  static newNoDocument(e, t) {
    return new Fr(e, 2, t, _n.min(), Gn.empty(), 0);
  }
  static newUnknownDocument(e, t) {
    return new Fr(e, 3, t, _n.min(), Gn.empty(), 2);
  }
  convertToFoundDocument(e, t) {
    return this.version = e, this.documentType = 1, this.data = t, this.documentState = 0, this;
  }
  convertToNoDocument(e) {
    return this.version = e, this.documentType = 2, this.data = Gn.empty(), this.documentState = 0, this;
  }
  convertToUnknownDocument(e) {
    return this.version = e, this.documentType = 3, this.data = Gn.empty(), this.documentState = 2, this;
  }
  setHasCommittedMutations() {
    return this.documentState = 2, this;
  }
  setHasLocalMutations() {
    return this.documentState = 1, this.version = _n.min(), this;
  }
  setReadTime(e) {
    return this.readTime = e, this;
  }
  get hasLocalMutations() {
    return this.documentState === 1;
  }
  get hasCommittedMutations() {
    return this.documentState === 2;
  }
  get hasPendingWrites() {
    return this.hasLocalMutations || this.hasCommittedMutations;
  }
  isValidDocument() {
    return this.documentType !== 0;
  }
  isFoundDocument() {
    return this.documentType === 1;
  }
  isNoDocument() {
    return this.documentType === 2;
  }
  isUnknownDocument() {
    return this.documentType === 3;
  }
  isEqual(e) {
    return e instanceof Fr && this.key.isEqual(e.key) && this.version.isEqual(e.version) && this.documentType === e.documentType && this.documentState === e.documentState && this.data.isEqual(e.data);
  }
  mutableCopy() {
    return new Fr(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);
  }
  toString() {
    return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;
  }
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class wI {
  constructor(e, t = null, r = [], i = [], s = null, a = null, o = null) {
    this.path = e, this.collectionGroup = t, this.orderBy = r, this.filters = i, this.limit = s, this.startAt = a, this.endAt = o, this.D = null;
  }
}
function w2(n, e = null, t = [], r = [], i = null, s = null, a = null) {
  return new wI(n, e, t, r, i, s, a);
}
class ri extends class {
} {
  constructor(e, t, r) {
    super(), this.field = e, this.op = t, this.value = r;
  }
  static create(e, t, r) {
    return e.isKeyField() ? t === "in" || t === "not-in" ? this.F(e, t, r) : new TI(e, t, r) : t === "array-contains" ? new SI(e, r) : t === "in" ? new EI(e, r) : t === "not-in" ? new MI(e, r) : t === "array-contains-any" ? new _I(e, r) : new ri(e, t, r);
  }
  static F(e, t, r) {
    return t === "in" ? new AI(e, r) : new CI(e, r);
  }
  matches(e) {
    const t = e.data.field(this.field);
    return this.op === "!=" ? t !== null && this.S(sd(t, this.value)) : t !== null && ma(this.value) === ma(t) && this.S(sd(t, this.value));
  }
  S(e) {
    switch (this.op) {
      case "<":
        return e < 0;
      case "<=":
        return e <= 0;
      case "==":
        return e === 0;
      case "!=":
        return e !== 0;
      case ">":
        return e > 0;
      case ">=":
        return e >= 0;
      default:
        return Oe();
    }
  }
  q() {
    return ["<", "<=", ">", ">=", "!=", "not-in"].indexOf(this.op) >= 0;
  }
}
class TI extends ri {
  constructor(e, t, r) {
    super(e, t, r), this.key = It.fromName(r.referenceValue);
  }
  matches(e) {
    const t = It.comparator(e.key, this.key);
    return this.S(t);
  }
}
class AI extends ri {
  constructor(e, t) {
    super(e, "in", t), this.keys = vw("in", t);
  }
  matches(e) {
    return this.keys.some((t) => t.isEqual(e.key));
  }
}
class CI extends ri {
  constructor(e, t) {
    super(e, "not-in", t), this.keys = vw("not-in", t);
  }
  matches(e) {
    return !this.keys.some((t) => t.isEqual(e.key));
  }
}
function vw(n, e) {
  var t;
  return (((t = e.arrayValue) === null || t === void 0 ? void 0 : t.values) || []).map((r) => It.fromName(r.referenceValue));
}
class SI extends ri {
  constructor(e, t) {
    super(e, "array-contains", t);
  }
  matches(e) {
    const t = e.data.field(this.field);
    return xw(t) && Ku(t.arrayValue, this.value);
  }
}
class EI extends ri {
  constructor(e, t) {
    super(e, "in", t);
  }
  matches(e) {
    const t = e.data.field(this.field);
    return t !== null && Ku(this.value.arrayValue, t);
  }
}
class MI extends ri {
  constructor(e, t) {
    super(e, "not-in", t);
  }
  matches(e) {
    if (Ku(this.value.arrayValue, {
      nullValue: "NULL_VALUE"
    }))
      return !1;
    const t = e.data.field(this.field);
    return t !== null && !Ku(this.value.arrayValue, t);
  }
}
class _I extends ri {
  constructor(e, t) {
    super(e, "array-contains-any", t);
  }
  matches(e) {
    const t = e.data.field(this.field);
    return !(!xw(t) || !t.arrayValue.values) && t.arrayValue.values.some((r) => Ku(this.value.arrayValue, r));
  }
}
class od {
  constructor(e, t) {
    this.position = e, this.inclusive = t;
  }
}
class fu {
  constructor(e, t = "asc") {
    this.field = e, this.dir = t;
  }
}
function RI(n, e) {
  return n.dir === e.dir && n.field.isEqual(e.field);
}
function T2(n, e) {
  if (n === null)
    return e === null;
  if (e === null || n.inclusive !== e.inclusive || n.position.length !== e.position.length)
    return !1;
  for (let t = 0; t < n.position.length; t++)
    if (!mo(n.position[t], e.position[t]))
      return !1;
  return !0;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Oa {
  constructor(e, t = null, r = [], i = [], s = null, a = "F", o = null, u = null) {
    this.path = e, this.collectionGroup = t, this.explicitOrderBy = r, this.filters = i, this.limit = s, this.limitType = a, this.startAt = o, this.endAt = u, this.O = null, this.k = null, this.startAt, this.endAt;
  }
}
function ty(n) {
  return n.explicitOrderBy.length > 0 ? n.explicitOrderBy[0].field : null;
}
function ny(n) {
  for (const e of n.filters)
    if (e.q())
      return e.field;
  return null;
}
function ww(n) {
  return n.collectionGroup !== null;
}
function eh(n) {
  const e = No(n);
  if (e.O === null) {
    e.O = [];
    const t = ny(e), r = ty(e);
    if (t !== null && r === null)
      t.isKeyField() || e.O.push(new fu(t)), e.O.push(new fu(zn.keyField(), "asc"));
    else {
      let i = !1;
      for (const s of e.explicitOrderBy)
        e.O.push(s), s.field.isKeyField() && (i = !0);
      if (!i) {
        const s = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : "asc";
        e.O.push(new fu(zn.keyField(), s));
      }
    }
  }
  return e.O;
}
function ud(n) {
  const e = No(n);
  if (!e.k)
    if (e.limitType === "F")
      e.k = w2(e.path, e.collectionGroup, eh(e), e.filters, e.limit, e.startAt, e.endAt);
    else {
      const t = [];
      for (const s of eh(e)) {
        const a = s.dir === "desc" ? "asc" : "desc";
        t.push(new fu(s.field, a));
      }
      const r = e.endAt ? new od(e.endAt.position, e.endAt.inclusive) : null, i = e.startAt ? new od(e.startAt.position, e.startAt.inclusive) : null;
      e.k = w2(e.path, e.collectionGroup, t, e.filters, e.limit, r, i);
    }
  return e.k;
}
function PI(n, e) {
  return function(t, r) {
    if (t.limit !== r.limit || t.orderBy.length !== r.orderBy.length)
      return !1;
    for (let a = 0; a < t.orderBy.length; a++)
      if (!RI(t.orderBy[a], r.orderBy[a]))
        return !1;
    if (t.filters.length !== r.filters.length)
      return !1;
    for (let a = 0; a < t.filters.length; a++)
      if (i = t.filters[a], s = r.filters[a], i.op !== s.op || !i.field.isEqual(s.field) || !mo(i.value, s.value))
        return !1;
    var i, s;
    return t.collectionGroup === r.collectionGroup && !!t.path.isEqual(r.path) && !!T2(t.startAt, r.startAt) && T2(t.endAt, r.endAt);
  }(ud(n), ud(e)) && n.limitType === e.limitType;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Tw(n, e) {
  return function(t) {
    return typeof t == "number" && Number.isInteger(t) && !nd(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;
  }(e) ? function(t) {
    return {
      integerValue: "" + t
    };
  }(e) : function(t, r) {
    if (t.C) {
      if (isNaN(r))
        return {
          doubleValue: "NaN"
        };
      if (r === 1 / 0)
        return {
          doubleValue: "Infinity"
        };
      if (r === -1 / 0)
        return {
          doubleValue: "-Infinity"
        };
    }
    return {
      doubleValue: nd(r) ? "-0" : r
    };
  }(n, e);
}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class jd {
  constructor() {
    this._ = void 0;
  }
}
class Aw extends jd {
}
class Cw extends jd {
  constructor(e) {
    super(), this.elements = e;
  }
}
class Sw extends jd {
  constructor(e) {
    super(), this.elements = e;
  }
}
class Ew extends jd {
  constructor(e, t) {
    super(), this.L = e, this.M = t;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class zd {
  constructor(e, t) {
    this.field = e, this.transform = t;
  }
}
class ln {
  constructor(e, t) {
    this.updateTime = e, this.exists = t;
  }
  static none() {
    return new ln();
  }
  static exists(e) {
    return new ln(void 0, e);
  }
  static updateTime(e) {
    return new ln(e);
  }
  get isNone() {
    return this.updateTime === void 0 && this.exists === void 0;
  }
  isEqual(e) {
    return this.exists === e.exists && (this.updateTime ? !!e.updateTime && this.updateTime.isEqual(e.updateTime) : !e.updateTime);
  }
}
class Gd {
}
class Mw extends Gd {
  constructor(e, t, r, i = []) {
    super(), this.key = e, this.value = t, this.precondition = r, this.fieldTransforms = i, this.type = 0;
  }
  getFieldMask() {
    return null;
  }
}
class ry extends Gd {
  constructor(e, t, r, i, s = []) {
    super(), this.key = e, this.data = t, this.fieldMask = r, this.precondition = i, this.fieldTransforms = s, this.type = 1;
  }
  getFieldMask() {
    return this.fieldMask;
  }
}
class Wd extends Gd {
  constructor(e, t) {
    super(), this.key = e, this.precondition = t, this.type = 2, this.fieldTransforms = [];
  }
  getFieldMask() {
    return null;
  }
}
class _w extends Gd {
  constructor(e, t) {
    super(), this.key = e, this.precondition = t, this.type = 3, this.fieldTransforms = [];
  }
  getFieldMask() {
    return null;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const OI = (() => ({
  asc: "ASCENDING",
  desc: "DESCENDING"
}))(), II = (() => ({
  "<": "LESS_THAN",
  "<=": "LESS_THAN_OR_EQUAL",
  ">": "GREATER_THAN",
  ">=": "GREATER_THAN_OR_EQUAL",
  "==": "EQUAL",
  "!=": "NOT_EQUAL",
  "array-contains": "ARRAY_CONTAINS",
  in: "IN",
  "not-in": "NOT_IN",
  "array-contains-any": "ARRAY_CONTAINS_ANY"
}))();
class kI {
  constructor(e, t) {
    this.databaseId = e, this.C = t;
  }
}
function th(n, e) {
  return n.C ? `${new Date(1e3 * e.seconds).toISOString().replace(/\.\d*/, "").replace("Z", "")}.${("000000000" + e.nanoseconds).slice(-9)}Z` : {
    seconds: "" + e.seconds,
    nanos: e.nanoseconds
  };
}
function DI(n, e) {
  return n.C ? e.toBase64() : e.toUint8Array();
}
function BI(n, e) {
  return th(n, e.toTimestamp());
}
function nh(n) {
  return pn(!!n), _n.fromTimestamp(function(e) {
    const t = ya(e);
    return new In(t.seconds, t.nanos);
  }(n));
}
function iy(n, e) {
  return function(t) {
    return new _t(["projects", t.projectId, "databases", t.database]);
  }(n).child("documents").child(e).canonicalString();
}
function ld(n, e) {
  return iy(n.databaseId, e.path);
}
function rh(n, e) {
  const t = function(i) {
    const s = _t.fromString(i);
    return pn(Ow(s)), s;
  }(e);
  if (t.get(1) !== n.databaseId.projectId)
    throw new X(ie, "Tried to deserialize key from different project: " + t.get(1) + " vs " + n.databaseId.projectId);
  if (t.get(3) !== n.databaseId.database)
    throw new X(ie, "Tried to deserialize key from different database: " + t.get(3) + " vs " + n.databaseId.database);
  return new It((pn((r = t).length > 4 && r.get(4) === "documents"), r.popFirst(5)));
  var r;
}
function A2(n, e) {
  return iy(n.databaseId, e);
}
function Rw(n) {
  return new _t(["projects", n.databaseId.projectId, "databases", n.databaseId.database]).canonicalString();
}
function C2(n, e, t) {
  return {
    name: ld(n, e),
    fields: t.value.mapValue.fields
  };
}
function FI(n, e) {
  return "found" in e ? function(t, r) {
    pn(!!r.found), r.found.name, r.found.updateTime;
    const i = rh(t, r.found.name), s = nh(r.found.updateTime), a = new Gn({
      mapValue: {
        fields: r.found.fields
      }
    });
    return Fr.newFoundDocument(i, s, a);
  }(n, e) : "missing" in e ? function(t, r) {
    pn(!!r.missing), pn(!!r.readTime);
    const i = rh(t, r.missing), s = nh(r.readTime);
    return Fr.newNoDocument(i, s);
  }(n, e) : Oe();
}
function NI(n, e) {
  let t;
  if (e instanceof Mw)
    t = {
      update: C2(n, e.key, e.value)
    };
  else if (e instanceof Wd)
    t = {
      delete: ld(n, e.key)
    };
  else if (e instanceof ry)
    t = {
      update: C2(n, e.key, e.data),
      updateMask: UI(e.fieldMask)
    };
  else {
    if (!(e instanceof _w))
      return Oe();
    t = {
      verify: ld(n, e.key)
    };
  }
  return e.fieldTransforms.length > 0 && (t.updateTransforms = e.fieldTransforms.map((r) => function(i, s) {
    const a = s.transform;
    if (a instanceof Aw)
      return {
        fieldPath: s.field.canonicalString(),
        setToServerValue: "REQUEST_TIME"
      };
    if (a instanceof Cw)
      return {
        fieldPath: s.field.canonicalString(),
        appendMissingElements: {
          values: a.elements
        }
      };
    if (a instanceof Sw)
      return {
        fieldPath: s.field.canonicalString(),
        removeAllFromArray: {
          values: a.elements
        }
      };
    if (a instanceof Ew)
      return {
        fieldPath: s.field.canonicalString(),
        increment: a.M
      };
    throw Oe();
  }(0, r))), e.precondition.isNone || (t.currentDocument = function(r, i) {
    return i.updateTime !== void 0 ? {
      updateTime: BI(r, i.updateTime)
    } : i.exists !== void 0 ? {
      exists: i.exists
    } : Oe();
  }(n, e.precondition)), t;
}
function Pw(n, e) {
  const t = {
    structuredQuery: {}
  }, r = e.path;
  e.collectionGroup !== null ? (t.parent = A2(n, r), t.structuredQuery.from = [{
    collectionId: e.collectionGroup,
    allDescendants: !0
  }]) : (t.parent = A2(n, r.popLast()), t.structuredQuery.from = [{
    collectionId: r.lastSegment()
  }]);
  const i = function(u) {
    if (u.length === 0)
      return;
    const l = u.map((p) => function(h) {
      if (h.op === "==") {
        if (v2(h.value))
          return {
            unaryFilter: {
              field: $a(h.field),
              op: "IS_NAN"
            }
          };
        if (x2(h.value))
          return {
            unaryFilter: {
              field: $a(h.field),
              op: "IS_NULL"
            }
          };
      } else if (h.op === "!=") {
        if (v2(h.value))
          return {
            unaryFilter: {
              field: $a(h.field),
              op: "IS_NOT_NAN"
            }
          };
        if (x2(h.value))
          return {
            unaryFilter: {
              field: $a(h.field),
              op: "IS_NOT_NULL"
            }
          };
      }
      return {
        fieldFilter: {
          field: $a(h.field),
          op: LI(h.op),
          value: h.value
        }
      };
    }(p));
    return l.length === 1 ? l[0] : {
      compositeFilter: {
        op: "AND",
        filters: l
      }
    };
  }(e.filters);
  i && (t.structuredQuery.where = i);
  const s = function(u) {
    if (u.length !== 0)
      return u.map((l) => function(p) {
        return {
          field: $a(p.field),
          direction: $I(p.dir)
        };
      }(l));
  }(e.orderBy);
  s && (t.structuredQuery.orderBy = s);
  const a = function(u, l) {
    return u.C || bw(l) ? l : {
      value: l
    };
  }(n, e.limit);
  var o;
  return a !== null && (t.structuredQuery.limit = a), e.startAt && (t.structuredQuery.startAt = {
    before: (o = e.startAt).inclusive,
    values: o.position
  }), e.endAt && (t.structuredQuery.endAt = function(u) {
    return {
      before: !u.inclusive,
      values: u.position
    };
  }(e.endAt)), t;
}
function $I(n) {
  return OI[n];
}
function LI(n) {
  return II[n];
}
function $a(n) {
  return {
    fieldPath: n.canonicalString()
  };
}
function UI(n) {
  const e = [];
  return n.fields.forEach((t) => e.push(t.canonicalString())), {
    fieldPaths: e
  };
}
function Ow(n) {
  return n.length >= 4 && n.get(0) === "projects" && n.get(2) === "databases";
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function sy(n) {
  return new kI(n, !0);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Iw {
  constructor(e, t, r = 1e3, i = 1.5, s = 6e4) {
    this.U = e, this.timerId = t, this.j = r, this.B = i, this.G = s, this.W = 0, this.K = null, this.Y = Date.now(), this.reset();
  }
  reset() {
    this.W = 0;
  }
  H() {
    this.W = this.G;
  }
  J(e) {
    this.cancel();
    const t = Math.floor(this.W + this.X()), r = Math.max(0, Date.now() - this.Y), i = Math.max(0, t - r);
    i > 0 && fa("ExponentialBackoff", `Backing off for ${i} ms (base delay: ${this.W} ms, delay with jitter: ${t} ms, last attempt: ${r} ms ago)`), this.K = this.U.enqueueAfterDelay(this.timerId, i, () => (this.Y = Date.now(), e())), this.W *= this.B, this.W < this.j && (this.W = this.j), this.W > this.G && (this.W = this.G);
  }
  Z() {
    this.K !== null && (this.K.skipDelay(), this.K = null);
  }
  cancel() {
    this.K !== null && (this.K.cancel(), this.K = null);
  }
  X() {
    return (Math.random() - 0.5) * this.W;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class VI extends class {
} {
  constructor(e, t, r, i) {
    super(), this.authCredentials = e, this.appCheckCredentials = t, this.connection = r, this.L = i, this.tt = !1;
  }
  et() {
    if (this.tt)
      throw new X(Mi, "The client has already been terminated.");
  }
  I(e, t, r) {
    return this.et(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(([i, s]) => this.connection.I(e, t, r, i, s)).catch((i) => {
      throw i.name === "FirebaseError" ? (i.code === td && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), i) : new X(no, i.toString());
    });
  }
  P(e, t, r, i) {
    return this.et(), Promise.all([this.authCredentials.getToken(), this.appCheckCredentials.getToken()]).then(([s, a]) => this.connection.P(e, t, r, s, a, i)).catch((s) => {
      throw s.name === "FirebaseError" ? (s.code === td && (this.authCredentials.invalidateToken(), this.appCheckCredentials.invalidateToken()), s) : new X(no, s.toString());
    });
  }
  terminate() {
    this.tt = !0;
  }
}
async function $o(n, e) {
  const t = No(n), r = Rw(t.L) + "/documents", i = {
    writes: e.map((s) => NI(t.L, s))
  };
  await t.I("Commit", r, i);
}
async function kw(n, e) {
  const t = No(n), r = Rw(t.L) + "/documents", i = {
    documents: e.map((u) => ld(t.L, u))
  }, s = await t.P("BatchGetDocuments", r, i, e.length), a = /* @__PURE__ */ new Map();
  s.forEach((u) => {
    const l = FI(t.L, u);
    a.set(l.key.toString(), l);
  });
  const o = [];
  return e.forEach((u) => {
    const l = a.get(u.toString());
    pn(!!l), o.push(l);
  }), o;
}
async function jI(n, e) {
  const t = No(n), r = Pw(t.L, ud(e));
  return (await t.P("RunQuery", r.parent, {
    structuredQuery: r.structuredQuery
  })).filter((i) => !!i.document).map((i) => function(s, a, o) {
    const u = rh(s, a.name), l = nh(a.updateTime), p = new Gn({
      mapValue: {
        fields: a.fields
      }
    }), h = Fr.newFoundDocument(u, l, p);
    return o && h.setHasCommittedMutations(), o ? h.setHasCommittedMutations() : h;
  }(t.L, i.document, void 0));
}
async function zI(n, e) {
  const t = No(n), r = function(s, a) {
    const o = Pw(s, a);
    return {
      structuredAggregationQuery: {
        aggregations: [{
          count: {},
          alias: "count_alias"
        }],
        structuredQuery: o.structuredQuery
      },
      parent: o.parent
    };
  }(t.L, ud(e)), i = r.parent;
  return t.connection.v || delete r.parent, (await t.P("RunAggregationQuery", i, r, 1)).filter((s) => !!s.result).map((s) => s.result.aggregateFields);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const hu = /* @__PURE__ */ new Map();
function Fi(n) {
  if (n._terminated)
    throw new X(Mi, "The client has already been terminated.");
  if (!hu.has(n)) {
    fa("ComponentProvider", "Initializing Datastore");
    const s = function(u) {
      return new bI(u, fetch.bind(null));
    }((e = n._databaseId, t = n.app.options.appId || "", r = n._persistenceKey, i = n._freezeSettings(), new hI(e, t, r, i.host, i.ssl, i.experimentalForceLongPolling, i.experimentalAutoDetectLongPolling, i.useFetchStreams))), a = sy(n._databaseId), o = function(u, l, p, h) {
      return new VI(u, l, p, h);
    }(n._authCredentials, n._appCheckCredentials, s, a);
    hu.set(n, o);
  }
  var e, t, r, i;
  /**
  * @license
  * Copyright 2018 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  return hu.get(n);
}
class S2 {
  constructor(e) {
    var t;
    if (e.host === void 0) {
      if (e.ssl !== void 0)
        throw new X(ie, "Can't provide ssl option if host option is not set");
      this.host = "firestore.googleapis.com", this.ssl = !0;
    } else
      this.host = e.host, this.ssl = (t = e.ssl) === null || t === void 0 || t;
    if (this.credentials = e.credentials, this.ignoreUndefinedProperties = !!e.ignoreUndefinedProperties, e.cacheSizeBytes === void 0)
      this.cacheSizeBytes = 41943040;
    else {
      if (e.cacheSizeBytes !== -1 && e.cacheSizeBytes < 1048576)
        throw new X(ie, "cacheSizeBytes must be at least 1048576");
      this.cacheSizeBytes = e.cacheSizeBytes;
    }
    this.experimentalForceLongPolling = !!e.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!e.experimentalAutoDetectLongPolling, this.useFetchStreams = !!e.useFetchStreams, function(r, i, s, a) {
      if (i === !0 && a === !0)
        throw new X(ie, `${r} and ${s} cannot be used together.`);
    }("experimentalForceLongPolling", e.experimentalForceLongPolling, "experimentalAutoDetectLongPolling", e.experimentalAutoDetectLongPolling);
  }
  isEqual(e) {
    return this.host === e.host && this.ssl === e.ssl && this.credentials === e.credentials && this.cacheSizeBytes === e.cacheSizeBytes && this.experimentalForceLongPolling === e.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === e.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === e.ignoreUndefinedProperties && this.useFetchStreams === e.useFetchStreams;
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ii {
  constructor(e, t, r, i) {
    this._authCredentials = e, this._appCheckCredentials = t, this._databaseId = r, this._app = i, this.type = "firestore-lite", this._persistenceKey = "(lite)", this._settings = new S2({}), this._settingsFrozen = !1;
  }
  get app() {
    if (!this._app)
      throw new X(Mi, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
    return this._app;
  }
  get _initialized() {
    return this._settingsFrozen;
  }
  get _terminated() {
    return this._terminateTask !== void 0;
  }
  _setSettings(e) {
    if (this._settingsFrozen)
      throw new X(Mi, "Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.");
    this._settings = new S2(e), e.credentials !== void 0 && (this._authCredentials = function(t) {
      if (!t)
        return new oI();
      switch (t.type) {
        case "gapi":
          const r = t.client;
          return new dI(r, t.sessionIndex || "0", t.iamToken || null, t.authTokenFactory || null);
        case "provider":
          return t.client;
        default:
          throw new X(ie, "makeAuthCredentialsProvider failed due to invalid credential type");
      }
    }(e.credentials));
  }
  _getSettings() {
    return this._settings;
  }
  _freezeSettings() {
    return this._settingsFrozen = !0, this._settings;
  }
  _delete() {
    return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;
  }
  toJSON() {
    return {
      app: this._app,
      databaseId: this._databaseId,
      settings: this._settings
    };
  }
  _terminate() {
    return function(e) {
      const t = hu.get(e);
      t && (fa("ComponentProvider", "Removing Datastore"), hu.delete(e), t.terminate());
    }(this), Promise.resolve();
  }
}
function GI(n, e, t) {
  t || (t = "(default)");
  const r = W0(n, "firestore/lite");
  if (r.isInitialized(t))
    throw new X(Mi, "Firestore can only be initialized once per app.");
  return r.initialize({
    options: e,
    instanceIdentifier: t
  });
}
function WI(n, e) {
  const t = typeof n == "object" ? n : HO(), r = typeof n == "string" ? n : e || "(default)", i = W0(t, "firestore/lite").getImmediate({
    identifier: r
  });
  if (!i._initialized) {
    const s = VP("firestore");
    s && Dw(i, ...s);
  }
  return i;
}
function Dw(n, e, t, r = {}) {
  var i;
  const s = (n = hr(n, ii))._getSettings();
  if (s.host !== "firestore.googleapis.com" && s.host !== e && uw("Host has been set in both settings() and useEmulator(), emulator host will be used"), n._setSettings(Object.assign(Object.assign({}, s), {
    host: `${e}:${t}`,
    ssl: !1
  })), r.mockUserToken) {
    let a, o;
    if (typeof r.mockUserToken == "string")
      a = r.mockUserToken, o = En.MOCK_USER;
    else {
      a = GP(r.mockUserToken, (i = n._app) === null || i === void 0 ? void 0 : i.options.projectId);
      const u = r.mockUserToken.sub || r.mockUserToken.user_id;
      if (!u)
        throw new X(ie, "mockUserToken must contain 'sub' or 'user_id' field!");
      o = new En(u);
    }
    n._authCredentials = new uI(new yw(a, o));
  }
}
function HI(n) {
  return n = hr(n, ii), jO(n.app, "firestore/lite"), n._delete();
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class KI {
  constructor() {
    this.type = "AggregateField";
  }
}
class Bw {
  constructor(e, t) {
    this._data = t, this.type = "AggregateQuerySnapshot", this.query = e;
  }
  data() {
    return this._data;
  }
}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class qI {
  constructor(e, t, r) {
    this.query = e, this.datastore = t, this.userDataWriter = r;
  }
  run() {
    return zI(this.datastore, this.query._query).then((e) => {
      pn(e[0] !== void 0);
      const t = Object.entries(e[0]).filter(([r, i]) => r === "count_alias").map(([r, i]) => this.userDataWriter.convertValue(i))[0];
      return pn(typeof t == "number"), Promise.resolve(new Bw(this.query, {
        count: t
      }));
    });
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Ft {
  constructor(e, t, r) {
    this.converter = t, this._key = r, this.type = "document", this.firestore = e;
  }
  get _path() {
    return this._key.path;
  }
  get id() {
    return this._key.path.lastSegment();
  }
  get path() {
    return this._key.path.canonicalString();
  }
  get parent() {
    return new ar(this.firestore, this.converter, this._key.path.popLast());
  }
  withConverter(e) {
    return new Ft(this.firestore, e, this._key);
  }
}
class Kn {
  constructor(e, t, r) {
    this.converter = t, this._query = r, this.type = "query", this.firestore = e;
  }
  withConverter(e) {
    return new Kn(this.firestore, e, this._query);
  }
}
class ar extends Kn {
  constructor(e, t, r) {
    super(e, t, new Oa(r)), this._path = r, this.type = "collection";
  }
  get id() {
    return this._query.path.lastSegment();
  }
  get path() {
    return this._query.path.canonicalString();
  }
  get parent() {
    const e = this._path.popLast();
    return e.isEmpty() ? null : new Ft(
      this.firestore,
      null,
      new It(e)
    );
  }
  withConverter(e) {
    return new ar(this.firestore, e, this._path);
  }
}
function ih(n, e, ...t) {
  if (n = $t(n), X0("collection", "path", e), n instanceof ii) {
    const r = _t.fromString(e, ...t);
    return f2(r), new ar(n, null, r);
  }
  {
    if (!(n instanceof Ft || n instanceof ar))
      throw new X(ie, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    const r = n._path.child(_t.fromString(e, ...t));
    return f2(r), new ar(
      n.firestore,
      null,
      r
    );
  }
}
function QI(n, e) {
  if (n = hr(n, ii), X0("collectionGroup", "collection id", e), e.indexOf("/") >= 0)
    throw new X(ie, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);
  return new Kn(
    n,
    null,
    function(t) {
      return new Oa(_t.emptyPath(), t);
    }(e)
  );
}
function yu(n, e, ...t) {
  if (n = $t(n), arguments.length === 1 && (e = xI.$()), X0("doc", "path", e), n instanceof ii) {
    const r = _t.fromString(e, ...t);
    return p2(r), new Ft(
      n,
      null,
      new It(r)
    );
  }
  {
    if (!(n instanceof Ft || n instanceof ar))
      throw new X(ie, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    const r = n._path.child(_t.fromString(e, ...t));
    return p2(r), new Ft(n.firestore, n instanceof ar ? n.converter : null, new It(r));
  }
}
function JI(n, e) {
  return n = $t(n), e = $t(e), (n instanceof Ft || n instanceof ar) && (e instanceof Ft || e instanceof ar) && n.firestore === e.firestore && n.path === e.path && n.converter === e.converter;
}
function ay(n, e) {
  return n = $t(n), e = $t(e), n instanceof Kn && e instanceof Kn && n.firestore === e.firestore && PI(n._query, e._query) && n.converter === e.converter;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ba {
  constructor(e) {
    this._byteString = e;
  }
  static fromBase64String(e) {
    try {
      return new ba(_i.fromBase64String(e));
    } catch (t) {
      throw new X(ie, "Failed to construct data from Base64 string: " + t);
    }
  }
  static fromUint8Array(e) {
    return new ba(_i.fromUint8Array(e));
  }
  toBase64() {
    return this._byteString.toBase64();
  }
  toUint8Array() {
    return this._byteString.toUint8Array();
  }
  toString() {
    return "Bytes(base64: " + this.toBase64() + ")";
  }
  isEqual(e) {
    return this._byteString.isEqual(e._byteString);
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ws {
  constructor(...e) {
    for (let t = 0; t < e.length; ++t)
      if (e[t].length === 0)
        throw new X(ie, "Invalid field name at argument $(i + 1). Field names must not be empty.");
    this._internalPath = new zn(e);
  }
  isEqual(e) {
    return this._internalPath.isEqual(e._internalPath);
  }
}
function YI() {
  return new ws("__name__");
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Ts {
  constructor(e) {
    this._methodName = e;
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Hd {
  constructor(e, t) {
    if (!isFinite(e) || e < -90 || e > 90)
      throw new X(ie, "Latitude must be a number between -90 and 90, but was: " + e);
    if (!isFinite(t) || t < -180 || t > 180)
      throw new X(ie, "Longitude must be a number between -180 and 180, but was: " + t);
    this._lat = e, this._long = t;
  }
  get latitude() {
    return this._lat;
  }
  get longitude() {
    return this._long;
  }
  isEqual(e) {
    return this._lat === e._lat && this._long === e._long;
  }
  toJSON() {
    return {
      latitude: this._lat,
      longitude: this._long
    };
  }
  _compareTo(e) {
    return jt(this._lat, e._lat) || jt(this._long, e._long);
  }
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const XI = /^__.*__$/;
class ZI {
  constructor(e, t, r) {
    this.data = e, this.fieldMask = t, this.fieldTransforms = r;
  }
  toMutation(e, t) {
    return this.fieldMask !== null ? new ry(e, this.data, this.fieldMask, t, this.fieldTransforms) : new Mw(e, this.data, t, this.fieldTransforms);
  }
}
class Fw {
  constructor(e, t, r) {
    this.data = e, this.fieldMask = t, this.fieldTransforms = r;
  }
  toMutation(e, t) {
    return new ry(e, this.data, this.fieldMask, t, this.fieldTransforms);
  }
}
function Nw(n) {
  switch (n) {
    case 0:
    case 2:
    case 1:
      return !0;
    case 3:
    case 4:
      return !1;
    default:
      throw Oe();
  }
}
class Kd {
  constructor(e, t, r, i, s, a) {
    this.settings = e, this.databaseId = t, this.L = r, this.ignoreUndefinedProperties = i, s === void 0 && this.nt(), this.fieldTransforms = s || [], this.fieldMask = a || [];
  }
  get path() {
    return this.settings.path;
  }
  get rt() {
    return this.settings.rt;
  }
  st(e) {
    return new Kd(Object.assign(Object.assign({}, this.settings), e), this.databaseId, this.L, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);
  }
  it(e) {
    var t;
    const r = (t = this.path) === null || t === void 0 ? void 0 : t.child(e), i = this.st({
      path: r,
      ot: !1
    });
    return i.ut(e), i;
  }
  ct(e) {
    var t;
    const r = (t = this.path) === null || t === void 0 ? void 0 : t.child(e), i = this.st({
      path: r,
      ot: !1
    });
    return i.nt(), i;
  }
  at(e) {
    return this.st({
      path: void 0,
      ot: !0
    });
  }
  ht(e) {
    return cd(e, this.settings.methodName, this.settings.lt || !1, this.path, this.settings.ft);
  }
  contains(e) {
    return this.fieldMask.find((t) => e.isPrefixOf(t)) !== void 0 || this.fieldTransforms.find((t) => e.isPrefixOf(t.field)) !== void 0;
  }
  nt() {
    if (this.path)
      for (let e = 0; e < this.path.length; e++)
        this.ut(this.path.get(e));
  }
  ut(e) {
    if (e.length === 0)
      throw this.ht("Document fields must not be empty");
    if (Nw(this.rt) && XI.test(e))
      throw this.ht('Document fields cannot begin and end with "__"');
  }
}
class ek {
  constructor(e, t, r) {
    this.databaseId = e, this.ignoreUndefinedProperties = t, this.L = r || sy(e);
  }
  dt(e, t, r, i = !1) {
    return new Kd({
      rt: e,
      methodName: t,
      ft: r,
      path: zn.emptyPath(),
      ot: !1,
      lt: i
    }, this.databaseId, this.L, this.ignoreUndefinedProperties);
  }
}
function Ia(n) {
  const e = n._freezeSettings(), t = sy(n._databaseId);
  return new ek(n._databaseId, !!e.ignoreUndefinedProperties, t);
}
function qd(n, e, t, r, i, s = {}) {
  const a = n.dt(s.merge || s.mergeFields ? 2 : 0, e, t, i);
  cy("Data must be an object, but it was:", a, r);
  const o = Uw(r, a);
  let u, l;
  if (s.merge)
    u = new ha(a.fieldMask), l = a.fieldTransforms;
  else if (s.mergeFields) {
    const p = [];
    for (const h of s.mergeFields) {
      const b = sh(e, h, t);
      if (!a.contains(b))
        throw new X(ie, `Field '${b}' is specified in your field mask but missing from your input data.`);
      jw(p, b) || p.push(b);
    }
    u = new ha(p), l = a.fieldTransforms.filter((h) => u.covers(h.field));
  } else
    u = null, l = a.fieldTransforms;
  return new ZI(new Gn(o), u, l);
}
class vl extends Ts {
  _toFieldTransform(e) {
    if (e.rt !== 2)
      throw e.rt === 1 ? e.ht(`${this._methodName}() can only appear at the top level of your update data`) : e.ht(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);
    return e.fieldMask.push(e.path), null;
  }
  isEqual(e) {
    return e instanceof vl;
  }
}
function $w(n, e, t) {
  return new Kd({
    rt: 3,
    ft: e.settings.ft,
    methodName: n._methodName,
    ot: t
  }, e.databaseId, e.L, e.ignoreUndefinedProperties);
}
class oy extends Ts {
  _toFieldTransform(e) {
    return new zd(e.path, new Aw());
  }
  isEqual(e) {
    return e instanceof oy;
  }
}
class tk extends Ts {
  constructor(e, t) {
    super(e), this.wt = t;
  }
  _toFieldTransform(e) {
    const t = $w(
      this,
      e,
      !0
    ), r = this.wt.map((s) => ka(s, t)), i = new Cw(r);
    return new zd(e.path, i);
  }
  isEqual(e) {
    return this === e;
  }
}
class nk extends Ts {
  constructor(e, t) {
    super(e), this.wt = t;
  }
  _toFieldTransform(e) {
    const t = $w(
      this,
      e,
      !0
    ), r = this.wt.map((s) => ka(s, t)), i = new Sw(r);
    return new zd(e.path, i);
  }
  isEqual(e) {
    return this === e;
  }
}
class rk extends Ts {
  constructor(e, t) {
    super(e), this.yt = t;
  }
  _toFieldTransform(e) {
    const t = new Ew(e.L, Tw(e.L, this.yt));
    return new zd(e.path, t);
  }
  isEqual(e) {
    return this === e;
  }
}
function uy(n, e, t, r) {
  const i = n.dt(1, e, t);
  cy("Data must be an object, but it was:", i, r);
  const s = [], a = Gn.empty();
  xl(r, (u, l) => {
    const p = dy(e, u, t);
    l = $t(l);
    const h = i.ct(p);
    if (l instanceof vl)
      s.push(p);
    else {
      const b = ka(l, h);
      b != null && (s.push(p), a.set(p, b));
    }
  });
  const o = new ha(s);
  return new Fw(a, o, i.fieldTransforms);
}
function ly(n, e, t, r, i, s) {
  const a = n.dt(1, e, t), o = [sh(e, r, t)], u = [i];
  if (s.length % 2 != 0)
    throw new X(ie, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);
  for (let b = 0; b < s.length; b += 2)
    o.push(sh(e, s[b])), u.push(s[b + 1]);
  const l = [], p = Gn.empty();
  for (let b = o.length - 1; b >= 0; --b)
    if (!jw(l, o[b])) {
      const C = o[b];
      let v = u[b];
      v = $t(v);
      const T = a.ct(C);
      if (v instanceof vl)
        l.push(C);
      else {
        const w = ka(v, T);
        w != null && (l.push(C), p.set(C, w));
      }
    }
  const h = new ha(l);
  return new Fw(p, h, a.fieldTransforms);
}
function Lw(n, e, t, r = !1) {
  return ka(t, n.dt(r ? 4 : 3, e));
}
function ka(n, e) {
  if (Vw(
    n = $t(n)
  ))
    return cy("Unsupported field value:", e, n), Uw(n, e);
  if (n instanceof Ts)
    return function(t, r) {
      if (!Nw(r.rt))
        throw r.ht(`${t._methodName}() can only be used with update() and set()`);
      if (!r.path)
        throw r.ht(`${t._methodName}() is not currently supported inside arrays`);
      const i = t._toFieldTransform(r);
      i && r.fieldTransforms.push(i);
    }(n, e), null;
  if (n === void 0 && e.ignoreUndefinedProperties)
    return null;
  if (e.path && e.fieldMask.push(e.path), n instanceof Array) {
    if (e.settings.ot && e.rt !== 4)
      throw e.ht("Nested arrays are not supported");
    return function(t, r) {
      const i = [];
      let s = 0;
      for (const a of t) {
        let o = ka(a, r.at(s));
        o == null && (o = {
          nullValue: "NULL_VALUE"
        }), i.push(o), s++;
      }
      return {
        arrayValue: {
          values: i
        }
      };
    }(n, e);
  }
  return function(t, r) {
    if ((t = $t(t)) === null)
      return {
        nullValue: "NULL_VALUE"
      };
    if (typeof t == "number")
      return Tw(r.L, t);
    if (typeof t == "boolean")
      return {
        booleanValue: t
      };
    if (typeof t == "string")
      return {
        stringValue: t
      };
    if (t instanceof Date) {
      const i = In.fromDate(t);
      return {
        timestampValue: th(r.L, i)
      };
    }
    if (t instanceof In) {
      const i = new In(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
      return {
        timestampValue: th(r.L, i)
      };
    }
    if (t instanceof Hd)
      return {
        geoPointValue: {
          latitude: t.latitude,
          longitude: t.longitude
        }
      };
    if (t instanceof ba)
      return {
        bytesValue: DI(r.L, t._byteString)
      };
    if (t instanceof Ft) {
      const i = r.databaseId, s = t.firestore._databaseId;
      if (!s.isEqual(i))
        throw r.ht(`Document reference is for database ${s.projectId}/${s.database} but should be for database ${i.projectId}/${i.database}`);
      return {
        referenceValue: iy(t.firestore._databaseId || r.databaseId, t._key.path)
      };
    }
    throw r.ht(`Unsupported field value: ${Vd(t)}`);
  }(n, e);
}
function Uw(n, e) {
  const t = {};
  return function(r) {
    for (const i in r)
      if (Object.prototype.hasOwnProperty.call(r, i))
        return !1;
    return !0;
  }(n) ? e.path && e.path.length > 0 && e.fieldMask.push(e.path) : xl(n, (r, i) => {
    const s = ka(i, e.it(r));
    s != null && (t[r] = s);
  }), {
    mapValue: {
      fields: t
    }
  };
}
function Vw(n) {
  return !(typeof n != "object" || n === null || n instanceof Array || n instanceof Date || n instanceof In || n instanceof Hd || n instanceof ba || n instanceof Ft || n instanceof Ts);
}
function cy(n, e, t) {
  if (!Vw(t) || !function(r) {
    return typeof r == "object" && r !== null && (Object.getPrototypeOf(r) === Object.prototype || Object.getPrototypeOf(r) === null);
  }(t)) {
    const r = Vd(t);
    throw r === "an object" ? e.ht(n + " a custom object") : e.ht(n + " " + r);
  }
}
function sh(n, e, t) {
  if ((e = $t(e)) instanceof ws)
    return e._internalPath;
  if (typeof e == "string")
    return dy(n, e);
  throw cd(
    "Field path arguments must be of type string or ",
    n,
    !1,
    void 0,
    t
  );
}
const ik = new RegExp("[~\\*/\\[\\]]");
function dy(n, e, t) {
  if (e.search(ik) >= 0)
    throw cd(
      `Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`,
      n,
      !1,
      void 0,
      t
    );
  try {
    return new ws(...e.split("."))._internalPath;
  } catch {
    throw cd(
      `Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`,
      n,
      !1,
      void 0,
      t
    );
  }
}
function cd(n, e, t, r, i) {
  const s = r && !r.isEmpty(), a = i !== void 0;
  let o = `Function ${e}() called with invalid data`;
  t && (o += " (via `toFirestore()`)"), o += ". ";
  let u = "";
  return (s || a) && (u += " (found", s && (u += ` in field ${r}`), a && (u += ` in document ${i}`), u += ")"), new X(ie, o + n + u);
}
function jw(n, e) {
  return n.some((t) => t.isEqual(e));
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class ms {
  constructor(e, t, r, i, s) {
    this._firestore = e, this._userDataWriter = t, this._key = r, this._document = i, this._converter = s;
  }
  get id() {
    return this._key.path.lastSegment();
  }
  get ref() {
    return new Ft(this._firestore, this._converter, this._key);
  }
  exists() {
    return this._document !== null;
  }
  data() {
    if (this._document) {
      if (this._converter) {
        const e = new py(
          this._firestore,
          this._userDataWriter,
          this._key,
          this._document,
          null
        );
        return this._converter.fromFirestore(e);
      }
      return this._userDataWriter.convertValue(this._document.data.value);
    }
  }
  get(e) {
    if (this._document) {
      const t = this._document.data.field(fy("DocumentSnapshot.get", e));
      if (t !== null)
        return this._userDataWriter.convertValue(t);
    }
  }
}
class py extends ms {
  data() {
    return super.data();
  }
}
class dd {
  constructor(e, t) {
    this._docs = t, this.query = e;
  }
  get docs() {
    return [...this._docs];
  }
  get size() {
    return this.docs.length;
  }
  get empty() {
    return this.docs.length === 0;
  }
  forEach(e, t) {
    this._docs.forEach(e, t);
  }
}
function zw(n, e) {
  return n = $t(n), e = $t(e), n instanceof ms && e instanceof ms ? n._firestore === e._firestore && n._key.isEqual(e._key) && (n._document === null ? e._document === null : n._document.isEqual(e._document)) && n._converter === e._converter : n instanceof dd && e instanceof dd && ay(n.query, e.query) && Z0(n.docs, e.docs, zw);
}
function fy(n, e) {
  return typeof e == "string" ? dy(n, e) : e instanceof ws ? e._internalPath : e._delegate._internalPath;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Lo {
}
function Gw(n, ...e) {
  for (const t of e)
    n = t._apply(n);
  return n;
}
class sk extends Lo {
  constructor(e, t, r) {
    super(), this._t = e, this.gt = t, this.vt = r, this.type = "where";
  }
  _apply(e) {
    const t = Ia(e.firestore), r = function(i, s, a, o, u, l, p) {
      let h;
      if (u.isKeyField()) {
        if (l === "array-contains" || l === "array-contains-any")
          throw new X(ie, `Invalid Query. You can't perform '${l}' queries on documentId().`);
        if (l === "in" || l === "not-in") {
          M2(p, l);
          const C = [];
          for (const v of p)
            C.push(E2(o, i, v));
          h = {
            arrayValue: {
              values: C
            }
          };
        } else
          h = E2(o, i, p);
      } else
        l !== "in" && l !== "not-in" && l !== "array-contains-any" || M2(p, l), h = Lw(
          a,
          s,
          p,
          l === "in" || l === "not-in"
        );
      const b = ri.create(u, l, h);
      return function(C, v) {
        if (v.q()) {
          const w = ny(C);
          if (w !== null && !w.isEqual(v.field))
            throw new X(ie, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${w.toString()}' and '${v.field.toString()}'`);
          const M = ty(C);
          M !== null && Jw(C, v.field, M);
        }
        const T = function(w, M) {
          for (const I of w.filters)
            if (M.indexOf(I.op) >= 0)
              return I.op;
          return null;
        }(
          C,
          function(w) {
            switch (w) {
              case "!=":
                return ["!=", "not-in"];
              case "array-contains":
                return ["array-contains", "array-contains-any", "not-in"];
              case "in":
                return ["array-contains-any", "in", "not-in"];
              case "array-contains-any":
                return ["array-contains", "array-contains-any", "in", "not-in"];
              case "not-in":
                return ["array-contains", "array-contains-any", "in", "not-in", "!="];
              default:
                return [];
            }
          }(v.op)
        );
        if (T !== null)
          throw T === v.op ? new X(ie, `Invalid query. You cannot use more than one '${v.op.toString()}' filter.`) : new X(ie, `Invalid query. You cannot use '${v.op.toString()}' filters with '${T.toString()}' filters.`);
      }(i, b), b;
    }(e._query, "where", t, e.firestore._databaseId, this._t, this.gt, this.vt);
    return new Kn(e.firestore, e.converter, function(i, s) {
      const a = i.filters.concat([s]);
      return new Oa(i.path, i.collectionGroup, i.explicitOrderBy.slice(), a, i.limit, i.limitType, i.startAt, i.endAt);
    }(e._query, r));
  }
}
function Ww(n, e, t) {
  const r = e, i = fy("where", n);
  return new sk(i, r, t);
}
class ak extends Lo {
  constructor(e, t) {
    super(), this._t = e, this.bt = t, this.type = "orderBy";
  }
  _apply(e) {
    const t = function(r, i, s) {
      if (r.startAt !== null)
        throw new X(ie, "Invalid query. You must not call startAt() or startAfter() before calling orderBy().");
      if (r.endAt !== null)
        throw new X(ie, "Invalid query. You must not call endAt() or endBefore() before calling orderBy().");
      const a = new fu(i, s);
      return function(o, u) {
        if (ty(o) === null) {
          const l = ny(o);
          l !== null && Jw(o, l, u.field);
        }
      }(r, a), a;
    }(e._query, this._t, this.bt);
    return new Kn(e.firestore, e.converter, function(r, i) {
      const s = r.explicitOrderBy.concat([i]);
      return new Oa(r.path, r.collectionGroup, s, r.filters.slice(), r.limit, r.limitType, r.startAt, r.endAt);
    }(e._query, t));
  }
}
function ok(n, e = "asc") {
  const t = e, r = fy("orderBy", n);
  return new ak(r, t);
}
class Hw extends Lo {
  constructor(e, t, r) {
    super(), this.type = e, this.Et = t, this.It = r;
  }
  _apply(e) {
    return new Kn(e.firestore, e.converter, function(t, r, i) {
      return new Oa(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), r, i, t.startAt, t.endAt);
    }(e._query, this.Et, this.It));
  }
}
function uk(n) {
  return mw("limit", n), new Hw("limit", n, "F");
}
function lk(n) {
  return mw("limitToLast", n), new Hw("limitToLast", n, "L");
}
class Kw extends Lo {
  constructor(e, t, r) {
    super(), this.type = e, this.Tt = t, this.At = r;
  }
  _apply(e) {
    const t = Qw(e, this.type, this.Tt, this.At);
    return new Kn(e.firestore, e.converter, function(r, i) {
      return new Oa(r.path, r.collectionGroup, r.explicitOrderBy.slice(), r.filters.slice(), r.limit, r.limitType, i, r.endAt);
    }(e._query, t));
  }
}
function ck(...n) {
  return new Kw(
    "startAt",
    n,
    !0
  );
}
function dk(...n) {
  return new Kw(
    "startAfter",
    n,
    !1
  );
}
class qw extends Lo {
  constructor(e, t, r) {
    super(), this.type = e, this.Tt = t, this.At = r;
  }
  _apply(e) {
    const t = Qw(e, this.type, this.Tt, this.At);
    return new Kn(e.firestore, e.converter, function(r, i) {
      return new Oa(r.path, r.collectionGroup, r.explicitOrderBy.slice(), r.filters.slice(), r.limit, r.limitType, r.startAt, i);
    }(e._query, t));
  }
}
function pk(...n) {
  return new qw(
    "endBefore",
    n,
    !1
  );
}
function fk(...n) {
  return new qw("endAt", n, !0);
}
function Qw(n, e, t, r) {
  if (t[0] = $t(t[0]), t[0] instanceof ms)
    return function(i, s, a, o, u) {
      if (!o)
        throw new X(q0, `Can't use a DocumentSnapshot that doesn't exist for ${a}().`);
      const l = [];
      for (const p of eh(i))
        if (p.field.isKeyField())
          l.push(ad(s, o.key));
        else {
          const h = o.data.field(p.field);
          if (ey(h))
            throw new X(ie, 'Invalid query. You are trying to start or end a query using a document for which the field "' + p.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');
          if (h === null) {
            const b = p.field.canonicalString();
            throw new X(ie, `Invalid query. You are trying to start or end a query using a document for which the field '${b}' (used as the orderBy) does not exist.`);
          }
          l.push(h);
        }
      return new od(l, u);
    }(n._query, n.firestore._databaseId, e, t[0]._document, r);
  {
    const i = Ia(n.firestore);
    return function(s, a, o, u, l, p) {
      const h = s.explicitOrderBy;
      if (l.length > h.length)
        throw new X(ie, `Too many arguments provided to ${u}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);
      const b = [];
      for (let C = 0; C < l.length; C++) {
        const v = l[C];
        if (h[C].field.isKeyField()) {
          if (typeof v != "string")
            throw new X(ie, `Invalid query. Expected a string for document ID in ${u}(), but got a ${typeof v}`);
          if (!ww(s) && v.indexOf("/") !== -1)
            throw new X(ie, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${u}() must be a plain document ID, but '${v}' contains a slash.`);
          const T = s.path.child(_t.fromString(v));
          if (!It.isDocumentKey(T))
            throw new X(ie, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${u}() must result in a valid document path, but '${T}' is not because it contains an odd number of segments.`);
          const w = new It(T);
          b.push(ad(a, w));
        } else {
          const T = Lw(o, u, v);
          b.push(T);
        }
      }
      return new od(b, p);
    }(n._query, n.firestore._databaseId, i, e, t, r);
  }
}
function E2(n, e, t) {
  if (typeof (t = $t(t)) == "string") {
    if (t === "")
      throw new X(ie, "Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.");
    if (!ww(e) && t.indexOf("/") !== -1)
      throw new X(ie, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${t}' contains a '/' character.`);
    const r = e.path.child(_t.fromString(t));
    if (!It.isDocumentKey(r))
      throw new X(ie, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);
    return ad(n, new It(r));
  }
  if (t instanceof Ft)
    return ad(n, t._key);
  throw new X(ie, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${Vd(t)}.`);
}
function M2(n, e) {
  if (!Array.isArray(n) || n.length === 0)
    throw new X(ie, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);
  if (n.length > 10)
    throw new X(ie, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);
}
function Jw(n, e, t) {
  if (!t.isEqual(e))
    throw new X(ie, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${t.toString()}' instead.`);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function Qd(n, e, t) {
  let r;
  return r = n ? t && (t.merge || t.mergeFields) ? n.toFirestore(e, t) : n.toFirestore(e) : e, r;
}
class Jd extends class {
  convertValue(e, t = "none") {
    switch (ma(e)) {
      case 0:
        return null;
      case 1:
        return e.booleanValue;
      case 2:
        return Dt(e.integerValue || e.doubleValue);
      case 3:
        return this.convertTimestamp(e.timestampValue);
      case 4:
        return this.convertServerTimestamp(e, t);
      case 5:
        return e.stringValue;
      case 6:
        return this.convertBytes(Wu(e.bytesValue));
      case 7:
        return this.convertReference(e.referenceValue);
      case 8:
        return this.convertGeoPoint(e.geoPointValue);
      case 9:
        return this.convertArray(e.arrayValue, t);
      case 10:
        return this.convertObject(e.mapValue, t);
      default:
        throw Oe();
    }
  }
  convertObject(e, t) {
    const r = {};
    return xl(e.fields, (i, s) => {
      r[i] = this.convertValue(s, t);
    }), r;
  }
  convertGeoPoint(e) {
    return new Hd(Dt(e.latitude), Dt(e.longitude));
  }
  convertArray(e, t) {
    return (e.values || []).map((r) => this.convertValue(r, t));
  }
  convertServerTimestamp(e, t) {
    switch (t) {
      case "previous":
        const r = gw(e);
        return r == null ? null : this.convertValue(r, t);
      case "estimate":
        return this.convertTimestamp(Hu(e));
      default:
        return null;
    }
  }
  convertTimestamp(e) {
    const t = ya(e);
    return new In(t.seconds, t.nanos);
  }
  convertDocumentKey(e, t) {
    const r = _t.fromString(e);
    pn(Ow(r));
    const i = new zu(r.get(1), r.get(3)), s = new It(r.popFirst(5));
    return i.isEqual(t) || Ud(`Document ${s} contains a document reference within a different database (${i.projectId}/${i.database}) which is not supported. It will be treated as a reference in the current database (${t.projectId}/${t.database}) instead.`), s;
  }
} {
  constructor(e) {
    super(), this.firestore = e;
  }
  convertBytes(e) {
    return new ba(e);
  }
  convertReference(e) {
    const t = this.convertDocumentKey(e, this.firestore._databaseId);
    return new Ft(this.firestore, null, t);
  }
}
function hk(n) {
  const e = Fi((n = hr(n, Ft)).firestore), t = new Jd(n.firestore);
  return kw(e, [n._key]).then((r) => {
    pn(r.length === 1);
    const i = r[0];
    return new ms(n.firestore, t, n._key, i.isFoundDocument() ? i : null, n.converter);
  });
}
function ah(n) {
  (function(r) {
    if (r.limitType === "L" && r.explicitOrderBy.length === 0)
      throw new X(J0, "limitToLast() queries require specifying at least one orderBy() clause");
  })((n = hr(n, Kn))._query);
  const e = Fi(n.firestore), t = new Jd(n.firestore);
  return jI(e, n._query).then((r) => {
    const i = r.map((s) => new py(n.firestore, t, s.key, s, n.converter));
    return n._query.limitType === "L" && i.reverse(), new dd(n, i);
  });
}
function oh(n, e, t) {
  const r = Qd((n = hr(n, Ft)).converter, e, t), i = qd(Ia(n.firestore), "setDoc", n._key, r, n.converter !== null, t);
  return $o(Fi(n.firestore), [i.toMutation(n._key, ln.none())]);
}
function yk(n, e, t, ...r) {
  const i = Ia((n = hr(n, Ft)).firestore);
  let s;
  return s = typeof (e = $t(e)) == "string" || e instanceof ws ? ly(i, "updateDoc", n._key, e, t, r) : uy(i, "updateDoc", n._key, e), $o(Fi(n.firestore), [s.toMutation(n._key, ln.exists(!0))]);
}
function Yw(n) {
  return $o(Fi((n = hr(n, Ft)).firestore), [new Wd(n._key, ln.none())]);
}
function mk(n, e) {
  const t = yu(n = hr(n, ar)), r = Qd(n.converter, e), i = qd(Ia(n.firestore), "addDoc", t._key, r, t.converter !== null, {});
  return $o(Fi(n.firestore), [i.toMutation(t._key, ln.exists(!1))]).then(() => t);
}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function bk(n) {
  const e = hr(n.firestore, ii), t = Fi(e), r = new Jd(e);
  return new qI(n, t, r).run();
}
function gk(n, e) {
  return ay(n.query, e.query) && Yc(n.data(), e.data());
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function xk() {
  return new vl("deleteField");
}
function vk() {
  return new oy("serverTimestamp");
}
function wk(...n) {
  return new tk("arrayUnion", n);
}
function Tk(...n) {
  return new nk("arrayRemove", n);
}
function Ak(n) {
  return new rk("increment", n);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Xw {
  constructor(e, t) {
    this._firestore = e, this._commitHandler = t, this._mutations = [], this._committed = !1, this._dataReader = Ia(e);
  }
  set(e, t, r) {
    this._verifyNotCommitted();
    const i = Qs(e, this._firestore), s = Qd(i.converter, t, r), a = qd(this._dataReader, "WriteBatch.set", i._key, s, i.converter !== null, r);
    return this._mutations.push(a.toMutation(i._key, ln.none())), this;
  }
  update(e, t, r, ...i) {
    this._verifyNotCommitted();
    const s = Qs(e, this._firestore);
    let a;
    return a = typeof (t = $t(t)) == "string" || t instanceof ws ? ly(this._dataReader, "WriteBatch.update", s._key, t, r, i) : uy(this._dataReader, "WriteBatch.update", s._key, t), this._mutations.push(a.toMutation(s._key, ln.exists(!0))), this;
  }
  delete(e) {
    this._verifyNotCommitted();
    const t = Qs(e, this._firestore);
    return this._mutations = this._mutations.concat(new Wd(t._key, ln.none())), this;
  }
  commit() {
    return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();
  }
  _verifyNotCommitted() {
    if (this._committed)
      throw new X(Mi, "A write batch can no longer be used after commit() has been called.");
  }
}
function Qs(n, e) {
  if ((n = $t(n)).firestore !== e)
    throw new X(ie, "Provided document reference is from a different Firestore instance.");
  return n;
}
function Zw(n) {
  const e = Fi(n = hr(n, ii));
  return new Xw(n, (t) => $o(e, t));
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Ck {
  constructor(e) {
    this.datastore = e, this.readVersions = /* @__PURE__ */ new Map(), this.mutations = [], this.committed = !1, this.lastWriteError = null, this.writtenDocs = /* @__PURE__ */ new Set();
  }
  async lookup(e) {
    if (this.ensureCommitNotCalled(), this.mutations.length > 0)
      throw new X(ie, "Firestore transactions require all reads to be executed before all writes.");
    const t = await kw(this.datastore, e);
    return t.forEach((r) => this.recordVersion(r)), t;
  }
  set(e, t) {
    this.write(t.toMutation(e, this.precondition(e))), this.writtenDocs.add(e.toString());
  }
  update(e, t) {
    try {
      this.write(t.toMutation(e, this.preconditionForUpdate(e)));
    } catch (r) {
      this.lastWriteError = r;
    }
    this.writtenDocs.add(e.toString());
  }
  delete(e) {
    this.write(new Wd(e, this.precondition(e))), this.writtenDocs.add(e.toString());
  }
  async commit() {
    if (this.ensureCommitNotCalled(), this.lastWriteError)
      throw this.lastWriteError;
    const e = this.readVersions;
    this.mutations.forEach((t) => {
      e.delete(t.key.toString());
    }), e.forEach((t, r) => {
      const i = It.fromPath(r);
      this.mutations.push(new _w(i, this.precondition(i)));
    }), await $o(this.datastore, this.mutations), this.committed = !0;
  }
  recordVersion(e) {
    let t;
    if (e.isFoundDocument())
      t = e.version;
    else {
      if (!e.isNoDocument())
        throw Oe();
      t = _n.min();
    }
    const r = this.readVersions.get(e.key.toString());
    if (r) {
      if (!t.isEqual(r))
        throw new X(Q0, "Document version changed between two reads.");
    } else
      this.readVersions.set(e.key.toString(), t);
  }
  precondition(e) {
    const t = this.readVersions.get(e.toString());
    return !this.writtenDocs.has(e.toString()) && t ? t.isEqual(_n.min()) ? ln.exists(!1) : ln.updateTime(t) : ln.none();
  }
  preconditionForUpdate(e) {
    const t = this.readVersions.get(e.toString());
    if (!this.writtenDocs.has(e.toString()) && t) {
      if (t.isEqual(_n.min()))
        throw new X(ie, "Can't update a document that doesn't exist.");
      return ln.updateTime(t);
    }
    return ln.exists(!0);
  }
  write(e) {
    this.ensureCommitNotCalled(), this.mutations.push(e);
  }
  ensureCommitNotCalled() {
  }
}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const Sk = {
  maxAttempts: 5
};
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Ek {
  constructor(e, t, r, i, s) {
    this.asyncQueue = e, this.datastore = t, this.options = r, this.updateFunction = i, this.deferred = s, this.Rt = r.maxAttempts, this.Pt = new Iw(this.asyncQueue, "transaction_retry");
  }
  run() {
    this.Rt -= 1, this.Vt();
  }
  Vt() {
    this.Pt.J(async () => {
      const e = new Ck(this.datastore), t = this.Nt(e);
      t && t.then((r) => {
        this.asyncQueue.enqueueAndForget(() => e.commit().then(() => {
          this.deferred.resolve(r);
        }).catch((i) => {
          this.$t(i);
        }));
      }).catch((r) => {
        this.$t(r);
      });
    });
  }
  Nt(e) {
    try {
      const t = this.updateFunction(e);
      return !bw(t) && t.catch && t.then ? t : (this.deferred.reject(Error("Transaction callback must return a Promise")), null);
    } catch (t) {
      return this.deferred.reject(t), null;
    }
  }
  $t(e) {
    this.Rt > 0 && this.Dt(e) ? (this.Rt -= 1, this.asyncQueue.enqueueAndForget(() => (this.Vt(), Promise.resolve()))) : this.deferred.reject(e);
  }
  Dt(e) {
    if (e.name === "FirebaseError") {
      const t = e.code;
      return t === "aborted" || t === "failed-precondition" || t === "already-exists" || !function(r) {
        switch (r) {
          default:
            return Oe();
          case K0:
          case no:
          case lw:
          case dw:
          case fw:
          case hw:
          case td:
            return !1;
          case ie:
          case q0:
          case sI:
          case cw:
          case Mi:
          case Q0:
          case pw:
          case J0:
          case aI:
            return !0;
        }
      }(t);
    }
    return !1;
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function rf() {
  return typeof document < "u" ? document : null;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class hy {
  constructor(e, t, r, i, s) {
    this.asyncQueue = e, this.timerId = t, this.targetTimeMs = r, this.op = i, this.removalCallback = s, this.deferred = new Y0(), this.then = this.deferred.promise.then.bind(this.deferred.promise), this.deferred.promise.catch((a) => {
    });
  }
  static createAndSchedule(e, t, r, i, s) {
    const a = Date.now() + r, o = new hy(e, t, a, i, s);
    return o.start(r), o;
  }
  start(e) {
    this.timerHandle = setTimeout(() => this.handleDelayElapsed(), e);
  }
  skipDelay() {
    return this.handleDelayElapsed();
  }
  cancel(e) {
    this.timerHandle !== null && (this.clearTimeout(), this.deferred.reject(new X(K0, "Operation cancelled" + (e ? ": " + e : ""))));
  }
  handleDelayElapsed() {
    this.asyncQueue.enqueueAndForget(() => this.timerHandle !== null ? (this.clearTimeout(), this.op().then((e) => this.deferred.resolve(e))) : Promise.resolve());
  }
  clearTimeout() {
    this.timerHandle !== null && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);
  }
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Mk {
  constructor() {
    this.xt = Promise.resolve(), this.Ft = [], this.St = !1, this.qt = [], this.Ot = null, this.kt = !1, this.Ct = !1, this.Lt = [], this.Pt = new Iw(this, "async_queue_retry"), this.Mt = () => {
      const t = rf();
      t && fa("AsyncQueue", "Visibility state changed to " + t.visibilityState), this.Pt.Z();
    };
    const e = rf();
    e && typeof e.addEventListener == "function" && e.addEventListener("visibilitychange", this.Mt);
  }
  get isShuttingDown() {
    return this.St;
  }
  enqueueAndForget(e) {
    this.enqueue(e);
  }
  enqueueAndForgetEvenWhileRestricted(e) {
    this.Ut(), this.jt(e);
  }
  enterRestrictedMode(e) {
    if (!this.St) {
      this.St = !0, this.Ct = e || !1;
      const t = rf();
      t && typeof t.removeEventListener == "function" && t.removeEventListener("visibilitychange", this.Mt);
    }
  }
  enqueue(e) {
    if (this.Ut(), this.St)
      return new Promise(() => {
      });
    const t = new Y0();
    return this.jt(() => this.St && this.Ct ? Promise.resolve() : (e().then(t.resolve, t.reject), t.promise)).then(() => t.promise);
  }
  enqueueRetryable(e) {
    this.enqueueAndForget(() => (this.Ft.push(e), this.Bt()));
  }
  async Bt() {
    if (this.Ft.length !== 0) {
      try {
        await this.Ft[0](), this.Ft.shift(), this.Pt.reset();
      } catch (e) {
        if (!function(t) {
          return t.name === "IndexedDbTransactionError";
        }(e))
          throw e;
        fa("AsyncQueue", "Operation failed with retryable error: " + e);
      }
      this.Ft.length > 0 && this.Pt.J(() => this.Bt());
    }
  }
  jt(e) {
    const t = this.xt.then(() => (this.kt = !0, e().catch((r) => {
      this.Ot = r, this.kt = !1;
      const i = function(s) {
        let a = s.message || "";
        return s.stack && (a = s.stack.includes(s.message) ? s.stack : s.message + `
` + s.stack), a;
      }(r);
      throw Ud("INTERNAL UNHANDLED ERROR: ", i), r;
    }).then((r) => (this.kt = !1, r))));
    return this.xt = t, t;
  }
  enqueueAfterDelay(e, t, r) {
    this.Ut(), this.Lt.indexOf(e) > -1 && (t = 0);
    const i = hy.createAndSchedule(this, e, t, r, (s) => this.Qt(s));
    return this.qt.push(i), i;
  }
  Ut() {
    this.Ot && Oe();
  }
  verifyOperationInProgress() {
  }
  async zt() {
    let e;
    do
      e = this.xt, await e;
    while (e !== this.xt);
  }
  Gt(e) {
    for (const t of this.qt)
      if (t.timerId === e)
        return !0;
    return !1;
  }
  Wt(e) {
    return this.zt().then(() => {
      this.qt.sort((t, r) => t.targetTimeMs - r.targetTimeMs);
      for (const t of this.qt)
        if (t.skipDelay(), e !== "all" && t.timerId === e)
          break;
      return this.zt();
    });
  }
  Kt(e) {
    this.Lt.push(e);
  }
  Qt(e) {
    const t = this.qt.indexOf(e);
    this.qt.splice(t, 1);
  }
}
class e5 {
  constructor(e, t) {
    this._firestore = e, this._transaction = t, this._dataReader = Ia(e);
  }
  get(e) {
    const t = Qs(e, this._firestore), r = new Jd(this._firestore);
    return this._transaction.lookup([t._key]).then((i) => {
      if (!i || i.length !== 1)
        return Oe();
      const s = i[0];
      if (s.isFoundDocument())
        return new ms(this._firestore, r, s.key, s, t.converter);
      if (s.isNoDocument())
        return new ms(this._firestore, r, t._key, null, t.converter);
      throw Oe();
    });
  }
  set(e, t, r) {
    const i = Qs(e, this._firestore), s = Qd(i.converter, t, r), a = qd(this._dataReader, "Transaction.set", i._key, s, i.converter !== null, r);
    return this._transaction.set(i._key, a), this;
  }
  update(e, t, r, ...i) {
    const s = Qs(e, this._firestore);
    let a;
    return a = typeof (t = $t(t)) == "string" || t instanceof ws ? ly(this._dataReader, "Transaction.update", s._key, t, r, i) : uy(this._dataReader, "Transaction.update", s._key, t), this._transaction.update(s._key, a), this;
  }
  delete(e) {
    const t = Qs(e, this._firestore);
    return this._transaction.delete(t._key), this;
  }
}
function _k(n, e, t) {
  const r = Fi(n = hr(n, ii)), i = Object.assign(Object.assign({}, Sk), t);
  (function(a) {
    if (a.maxAttempts < 1)
      throw new X(ie, "Max attempts must be at least 1");
  })(i);
  const s = new Y0();
  return new Ek(new Mk(), r, i, (a) => e(new e5(n, a)), s).run(), s.promise;
}
(function(n) {
  Fo = n;
})(`${WO}_lite`), ed(new Vu("firestore/lite", (n, { instanceIdentifier: e, options: t }) => {
  const r = n.getProvider("app").getImmediate(), i = new ii(new lI(n.getProvider("auth-internal")), new fI(n.getProvider("app-check-internal")), function(s, a) {
    if (!Object.prototype.hasOwnProperty.apply(s.options, ["projectId"]))
      throw new X(ie, '"projectId" not provided in firebase.initializeApp.');
    return new zu(s.options.projectId, a);
  }(r, e), r);
  return t && i._setSettings(t), i;
}, "PUBLIC").setMultipleInstances(!0)), to("firestore-lite", "3.7.3", ""), to("firestore-lite", "3.7.3", "esm2017");
const _2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  AggregateField: KI,
  AggregateQuerySnapshot: Bw,
  Bytes: ba,
  CollectionReference: ar,
  DocumentReference: Ft,
  DocumentSnapshot: ms,
  FieldPath: ws,
  FieldValue: Ts,
  Firestore: ii,
  FirestoreError: X,
  GeoPoint: Hd,
  Query: Kn,
  QueryConstraint: Lo,
  QueryDocumentSnapshot: py,
  QuerySnapshot: dd,
  Timestamp: In,
  Transaction: e5,
  WriteBatch: Xw,
  addDoc: mk,
  aggregateQuerySnapshotEqual: gk,
  arrayRemove: Tk,
  arrayUnion: wk,
  collection: ih,
  collectionGroup: QI,
  connectFirestoreEmulator: Dw,
  deleteDoc: Yw,
  deleteField: xk,
  doc: yu,
  documentId: YI,
  endAt: fk,
  endBefore: pk,
  getCount: bk,
  getDoc: hk,
  getDocs: ah,
  getFirestore: WI,
  increment: Ak,
  initializeFirestore: GI,
  limit: uk,
  limitToLast: lk,
  orderBy: ok,
  query: Gw,
  queryEqual: ay,
  refEqual: JI,
  runTransaction: _k,
  serverTimestamp: vk,
  setDoc: oh,
  setLogLevel: iI,
  snapshotEqual: zw,
  startAfter: dk,
  startAt: ck,
  terminate: HI,
  updateDoc: yk,
  where: Ww,
  writeBatch: Zw
}, Symbol.toStringTag, { value: "Module" }));
var cc = /* @__PURE__ */ ((n) => (n.low = "Low Risk", n.moderate = "Moderate Risk", n.high = "High Risk", n))(cc || {}), Rk = Object.defineProperty, Pk = Object.getOwnPropertyDescriptor, Yd = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? Pk(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && Rk(e, t, i), i;
}, jl = (n, e) => (t, r) => e(t, r, n);
const t5 = pe.createInterface("ReserveStore");
let ga = class {
  constructor(n, e, t, r) {
    this.contractStore = n, this.contractService = e, this.numberService = t, this.dataStore = r;
  }
  reserveValue;
  kCurMarketCap;
  backing;
  kCurPrice;
  kCurSupply;
  transactions = [];
  reserveAssets = [];
  kCurReserveDistribution;
  kCurMentoDistribution;
  kCurPrimaryPoolDistribution;
  minBacking;
  kGuilderCurrentPrice;
  kGuilderTotalSupply;
  kGuilderSpread;
  kGuilderInflationRate;
  kGuilderTobinTax;
  static register(n) {
    n.register(de.singleton(t5, ga));
  }
  get kCurCirculatingDistribution() {
    return !this.kCurReserveDistribution || !this.kCurMentoDistribution || !this.kCurPrimaryPoolDistribution ? 0 : 1 - (this.kCurReserveDistribution + this.kCurMentoDistribution + this.kCurPrimaryPoolDistribution);
  }
  get currentCollateralizationRatio() {
    return this.numberService.fromString(Vt(this.backing ?? 0, 2));
  }
  get currentLeverageRatio() {
    return this.backing ? this.calculateLeverage(this.backing) : 0;
  }
  get maxLeverageRatio() {
    return 1 / this.numberService.fromString(Vt(this.minBacking ?? 0, 4)) * 100;
  }
  get minCollateralizationRatio() {
    return this.numberService.fromString(Vt(this.minBacking ?? 0, 4));
  }
  get minCollateralizationValue() {
    return this.kCurMarketCap ? this.minCollateralizationRatio * this.numberService.fromString(Vt(this.kCurMarketCap, 18)) : 0;
  }
  get maxLeverageMultiplier() {
    return `${Math.round(this.maxLeverageRatio / 100 * 100) / 100}x`;
  }
  get kCurTotalValue() {
    return this.numberService.fromString(Vt(this.kCurMarketCap ?? 0, 18));
  }
  get kGuilderMarketCap() {
    return this.kGuilderCurrentPrice ? this.kGuilderCurrentPrice * this.numberService.fromString(Vt(this.kGuilderTotalSupply ?? 0, 18)) : 0;
  }
  get kCurPriceFloor() {
    return !this.reserveValue || !this.kCurSupply ? 0 : this.numberService.fromString(Vt(this.reserveValue, 18)) / this.numberService.fromString(Vt(this.kCurSupply, 18));
  }
  get kCurPriceCeiling() {
    return !this.reserveValue || !this.kCurSupply ? 0 : this.kCurPriceFloor * 1.9;
  }
  get lowRiskAssets() {
    return this.reserveAssets?.filter((n) => n.type === Xi.Stablecoin) ?? [];
  }
  get moderateRiskAssets() {
    return this.reserveAssets?.filter((n) => n.type === Xi.NonStablecoin) ?? [];
  }
  get highRiskAssets() {
    return this.reserveAssets?.filter((n) => n.type === Xi.Ecological) ?? [];
  }
  get kGuilderValueRatio() {
    return this.kCurPrice ? 4 / this.kCurPrice : 0;
  }
  getRiskClass(n) {
    switch (n) {
      case Xi.Ecological:
        return cc.high;
      case Xi.NonStablecoin:
        return cc.moderate;
      case Xi.Stablecoin:
        return cc.low;
    }
  }
  async loadAssets() {
    const n = await this.getReserveContract(), e = n.address;
    if (!e)
      return;
    const t = (await Promise.all([
      n.allRegisteredERC20s().then((i) => i.map((s) => ({ tokenId: void 0, address: s }))),
      n.allRegisteredERC721Ids().then((i) => i.map((s) => ({ tokenId: s.id, address: s.erc721 })))
    ])).flatMap((i) => i);
    this.reserveAssets = (await Promise.all(
      t.map(
        (i) => this.contractStore.getAsset(i.address, i.tokenId, n, e, this.transactions).catch()
      )
    )).filter(Boolean), this.loadkCurData();
    const r = await n.reserveStatus();
    this.reserveValue = r[0], this.kCurMarketCap = r[1], this.backing = r[2], this.minBacking = await n.minBacking();
  }
  async loadkCur() {
    await this.loadkCurData();
    const n = await this.getReserveContract();
    if (!this.kCurSupply)
      return;
    const t = await (await this.contractService.getContract("monetary", "Kolektivo Curacao Reserve Token")).balanceOf(n.address);
    this.kCurReserveDistribution = this.numberService.fromString(Vt(t, 18)) / this.numberService.fromString(Vt(this.kCurSupply, 18)), this.kCurMentoDistribution = 0, this.kCurPrimaryPoolDistribution = 0;
  }
  async loadkGuilder() {
    !(await this.getReserveContract()).address || (this.kGuilderCurrentPrice = 4, this.kGuilderTotalSupply = ne.from(1934223345231232342413213n), this.kGuilderSpread = 0.2, this.kGuilderInflationRate = 0.01, this.kGuilderTobinTax = 0.05);
  }
  async loadkCurData() {
    if (this.kCurPrice || this.kCurSupply)
      return;
    const n = await this.getReserveContract(), e = await n.token();
    if (!e)
      return;
    const t = n.address;
    if (!t)
      return;
    const r = await n.tokenOracle();
    if (!r)
      return;
    const i = await this.contractStore.getAsset(e, void 0, n, t, void 0, r);
    this.kCurPrice = i?.token.price, this.kCurSupply = i?.totalSupply;
  }
  getReserveContract() {
    return this.contractService.getContract("monetary", "Reserve");
  }
  async getReserveValueOverTime(n) {
    const [e, t] = await Promise.all([
      this.getData("reserve", n),
      this.getReserveContract().then((r) => r.reserveStatus())
    ]);
    return e.push({
      createdAt: new Date(),
      value: t[0]
    }), e;
  }
  async getkGuilderValueRatioOverTime(n) {
    const [e] = await Promise.all([this.getData("kGuilder", n), this.loadkCurData()]);
    return e.push({
      createdAt: new Date(),
      value: this.kGuilderValueRatio
    }), e;
  }
  async getLeverageRatioValueOverTime(n) {
    const [e, [t, r]] = await Promise.all([
      this.getData("kCurRatio", n),
      this.getReserveContract().then((i) => Promise.all([i.reserveStatus(), i.minBacking()]))
    ]);
    return e.push({
      createdAt: new Date(),
      currentLeverageRatio: this.calculateLeverage(t[2]),
      maxLeverageRatio: 1 / (this.numberService.fromString(Vt(r, 2)) / 100) * 100
    }), e;
  }
  async getkCurSupplyData(n) {
    const [e] = await Promise.all([this.getData("kCurSupply", n), this.loadkCur()]);
    return e.push({
      createdAt: new Date(),
      kCurCirculatingDistribution: this.kCurCirculatingDistribution,
      kCurMentoDistribution: this.kCurMentoDistribution,
      kCurPrimaryPoolDistribution: this.kCurPrimaryPoolDistribution,
      kCurReserveDistribution: this.kCurReserveDistribution
    }), e;
  }
  async getkCurPriceOverTime(n) {
    const [e] = await Promise.all([this.getData("kCurPrice", n), this.loadkCurData(), this.loadAssets()]);
    return e.push({
      createdAt: new Date(),
      kCurPrice: this.kCurPrice,
      kCurPriceCeiling: this.kCurPriceCeiling,
      kCurPriceFloor: this.kCurPriceFloor
    }), e;
  }
  async getRiskOverTime(n) {
    const [e, [t, r]] = await Promise.all([
      this.getData("risk", n),
      this.getReserveContract().then((i) => Promise.all([i.reserveStatus(), i.minBacking()])),
      this.loadAssets()
    ]);
    return this.kCurMarketCap = t[1], this.minBacking = r, e.push({
      createdAt: new Date(),
      minCollateralValue: this.minCollateralizationValue,
      marketCap: this.kCurTotalValue,
      lowRisk: this.lowRiskAssets.map((i) => i.total).sum(),
      moderateRisk: this.moderateRiskAssets.map((i) => i.total).sum(),
      highRisk: this.highRiskAssets.map((i) => i.total).sum()
    }), e;
  }
  async getData(n, e) {
    const t = G6(e), r = await this.dataStore.getDocs(`chartData/${n}/${z6(e)}`, "createdAt", "desc", {
      fieldPath: "createdAt",
      opStr: ">=",
      value: t
    });
    return r.sort((i, s) => new Date(i.createdAt).getTime() - new Date(s.createdAt).getTime()), r;
  }
  calculateLeverage(n) {
    return 1 / this.numberService.fromString(Vt(n, 4)) * 100;
  }
};
Yd([
  Ld()
], ga.prototype, "loadAssets", 1);
Yd([
  Ld()
], ga.prototype, "loadkCur", 1);
Yd([
  Ld()
], ga.prototype, "loadkGuilder", 1);
ga = Yd([
  jl(0, j0),
  jl(1, Do),
  jl(2, ml),
  jl(3, z0)
], ga);
var Ok = Object.defineProperty, Ik = Object.getOwnPropertyDescriptor, kk = (n, e, t, r) => {
  for (var i = r > 1 ? void 0 : r ? Ik(e, t) : e, s = n.length - 1, a; s >= 0; s--)
    (a = n[s]) && (i = (r ? a(e, t, i) : a(i)) || i);
  return r && i && Ok(e, t, i), i;
}, Dk = (n, e) => (t, r) => e(t, r, n);
const Bk = pe.createInterface();
let R2 = class {
  constructor(n) {
    this.walletConnector = n;
  }
  provider;
  async connect(n) {
    this.provider = n ? await this.walletConnector.connectTo(n) : await this.walletConnector.connect();
  }
};
R2 = kk([
  Dk(0, V0)
], R2);
var Lt = /* @__PURE__ */ ((n) => (n[n.minute = 0] = "minute", n[n.hour = 1] = "hour", n[n.day = 2] = "day", n))(Lt || {});
const sf = pe.createContainer().register(de.instance(g6, sw({ ...PP, apiKey: globalThis.process.env.FIREBASE_API_KEY }))).register(de.instance(R0, {})).register(po).register(Lu).register(de.instance(Bk, {})).register(de.instance(V0, {})).register(de.instance(P0, { lsGet: () => "", lsSet: () => "" })).register(Bu).register(qc).register(fo).register(Qc).register(
  de.instance(bl, {
    chainId: J8,
    ipfsGateway: Q8,
    chainUrl: Y8,
    chain: X8,
    isDevelopment: { ALLUSERSPROFILE: "C:\\ProgramData", AMDRMPATH: "C:\\Program Files\\AMD\\RyzenMaster\\", ANDROID_HOME: "C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk", APPDATA: "C:\\Users\\Brandon\\AppData\\Roaming", CHROME_CRASHPAD_PIPE_NAME: "\\\\.\\pipe\\crashpad_45880_UWUMZIVXPRYDKNKX", CLASSPATH: ".;", COLOR: "1", COLORTERM: "truecolor", COMMONPROGRAMFILES: "C:\\Program Files\\Common Files", COMPUTERNAME: "DESKTOP-72OQKP6", COMSPEC: "C:\\WINDOWS\\system32\\cmd.exe", ChocolateyInstall: "C:\\ProgramData\\chocolatey", ChocolateyLastPathUpdate: "132215198773539171", "CommonProgramFiles(x86)": "C:\\Program Files (x86)\\Common Files", CommonProgramW6432: "C:\\Program Files\\Common Files", DriverData: "C:\\Windows\\System32\\Drivers\\DriverData", EDITOR: "notepad.exe", EXEPATH: "C:\\Program Files\\Git\\bin", GIT_ASKPASS: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass.sh", HOME: "C:\\Users\\Brandon", HOMEDRIVE: "C:", HOMEPATH: "\\Users\\Brandon", INIT_CWD: "C:\\Users\\Brandon\\source\\repos\\dapp", INTEL_DEV_REDIST: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\", JAVA_HOME: "C:\\Program Files\\Java\\jdk1.8.0_231", LANG: "en_US.UTF-8", LOCALAPPDATA: "C:\\Users\\Brandon\\AppData\\Local", LOGONSERVER: "\\\\DESKTOP-72OQKP6", MIC_LD_LIBRARY_PATH: "C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\compiler\\lib\\mic", MSYSTEM: "MINGW64", MYSQLCONNECTOR_ASSEMBLIESPATH: "C:\\Program Files (x86)\\MySQL\\Connector NET 8.0\\Assemblies\\v4.5.2", NODE: "C:\\Program Files\\nodejs\\node.exe", NUMBER_OF_PROCESSORS: "32", NVM_HOME: "C:\\Users\\Brandon\\AppData\\Roaming\\nvm", NVM_SYMLINK: "C:\\Program Files\\nodejs", ORIGINAL_XDG_CURRENT_DESKTOP: "undefined", OS: "Windows_NT", OcpApimSubscriptionKey: "15752dea34354b65bb7b54bca0da1b8d", OneDrive: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", OneDriveCommercial: "C:\\Users\\Brandon\\OneDrive - Grey & Co Salon", PAC_CLI_LAUNCHER_AGENT: "powerplatform-vscode/1.0.21", PATH: "C:\\Program Files\\Git\\mingw64\\bin;C:\\Program Files\\Git\\usr\\bin;C:\\Users\\Brandon\\bin;C:\\Users\\Brandon\\source\\repos\\dapp\\node_modules\\.bin;C:\\Users\\Brandon\\source\\repos\\node_modules\\.bin;C:\\Users\\Brandon\\source\\node_modules\\.bin;C:\\Users\\Brandon\\node_modules\\.bin;C:\\Users\\node_modules\\.bin;C:\\node_modules\\.bin;C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\@npmcli\\run-script\\lib\\node-gyp-bin;C:\\Users\\Brandon\\AppData\\Roaming\\Code\\User\\globalStorage\\microsoft-isvexptools.powerplatform-vscode\\pac\\tools;C:\\Program Files (x86)\\Razer Chroma SDK\\bin;C:\\Program Files\\Razer Chroma SDK\\bin;C:\\Program Files (x86)\\Razer\\ChromaBroadcast\\bin;C:\\Program Files\\Razer\\ChromaBroadcast\\bin;C:\\Python39\\Scripts;C:\\Python39;C:\\Program Files (x86)\\Common Files\\Intel\\Shared Libraries\\redist\\intel64\\compiler;C:\\Python27;C:\\Python27\\Scripts;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\Program Files\\dotnet;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\130\\Tools\\Binn;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\Binn;C:\\Program Files\\Microsoft SQL Server\\130\\DTS\\Binn;C:\\WINDOWS\\System32\\OpenSSH;C:\\ProgramData\\chocolatey\\bin;C:\\Program Files\\Microsoft SQL Server\\Client SDK\\ODBC\\170\\Tools\\Binn;C:\\Program Files\\Microsoft VS Code Insiders\\bin;C:\\Program Files\\Java\\jdk1.8.0_231\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\platform-tools;C:\\Program Files (x86)\\Microsoft SQL Server\\150\\DTS\\Binn;C:\\Program Files\\gradle-6.3\\bin;C:\\flutter\\bin;C:\\Users\\Brandon\\AppData\\Local\\Android\\Sdk\\tools;C:\\Program Files\\MongoDB\\Server\\4.2\\bin;C:\\Program Files\\Microsoft\\Azure Functions Core Tools;C:\\Program Files\\Microsoft SQL Server\\150\\Tools\\Binn;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHu;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\npm;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\L;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Program Files (x8;C:\\Program Files (x86)\\dotnet;C:\\WINDOWS\\system32\\config\\systemprofile\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Program Files\\Git\\cmd;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0;C:\\WINDOWS\\System32\\OpenSSH;C:\\Program Files\\Docker\\Docker\\resources\\bin;C:\\ProgramData\\DockerDesktop\\version-bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\PowerAppsCLI;C:\\Program Files\\MySQL\\MySQL Shell 8.0\\bin;C:\\Users\\Brandon\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;C:\\Users\\Brandon\\.dotnet\\tools;C:\\Users\\Brandon\\AppData\\Local\\GitHubDesktop\\bin;C:\\Nuget;C:\\Program Files\\OpenSSL-Win64\\bin;C:\\Users\\Brandon\\AppData\\Local\\Programs\\Fiddler;C:\\Program Files\\maven\\bin;C:\\Program Files (x86)\\Rico Suter\\NSwagStudio;C:\\Users\\Brandon\\AppData\\Roaming\\nvm;C:\\Program Files\\nodejs;C:\\Users\\Brandon\\AppData\\Local\\JetBrains\\Toolbox\\scripts;%USERPROFILE%\\AppData\\Local\\Microsoft\\WindowsApps", PATHEXT: ".COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL", PLINK_PROTOCOL: "ssh", PREFERRED_WORKSPACE_MANAGER: "yarn", PROCESSOR_ARCHITECTURE: "AMD64", PROCESSOR_IDENTIFIER: "AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD", PROCESSOR_LEVEL: "23", PROCESSOR_REVISION: "7100", PROGRAMFILES: "C:\\Program Files", PSModulePath: "C:\\Users\\Brandon\\Documents\\WindowsPowerShell\\Modules;C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\Tools\\PowerShell\\Modules\\", PUBLIC: "C:\\Users\\Public", PWD: "C:/Users/Brandon/source/repos/dapp", ProgramData: "C:\\ProgramData", "ProgramFiles(x86)": "C:\\Program Files (x86)", ProgramW6432: "C:\\Program Files", SESSIONNAME: "Console", SHLVL: "0", SYSTEMDRIVE: "C:", SYSTEMROOT: "C:\\WINDOWS", TEMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", TERM: "xterm-256color", TERM_PROGRAM: "vscode", TERM_PROGRAM_VERSION: "1.73.1", TMP: "C:\\Users\\Brandon\\AppData\\Local\\Temp", USERDOMAIN: "DESKTOP-72OQKP6", USERDOMAIN_ROAMINGPROFILE: "DESKTOP-72OQKP6", USERNAME: "Brandon", USERPROFILE: "C:\\Users\\Brandon", VS160PROCOMNTOOLS: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\Tools\\", VSCODE_GIT_ASKPASS_EXTRA_ARGS: "--ms-enable-electron-run-as-node", VSCODE_GIT_ASKPASS_MAIN: "c:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\resources\\app\\extensions\\git\\dist\\askpass-main.js", VSCODE_GIT_ASKPASS_NODE: "C:\\Users\\Brandon\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe", VSCODE_GIT_IPC_HANDLE: "\\\\.\\pipe\\vscode-git-b178cbeab5-sock", WINDIR: "C:\\WINDOWS", "asl.log": "Destination=file", npm_command: "run-script", npm_config_cache: "C:\\Users\\Brandon\\AppData\\Local\\npm-cache", npm_config_global_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_globalconfig: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\etc\\npmrc", npm_config_init_module: "C:\\Users\\Brandon\\.npm-init.js", npm_config_local_prefix: "C:\\Users\\Brandon\\source\\repos\\dapp", npm_config_metrics_registry: "https://registry.npmjs.org/", npm_config_node_gyp: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js", npm_config_noproxy: "", npm_config_prefix: "C:\\Users\\Brandon\\AppData\\Roaming\\npm", npm_config_script_shell: "C:\\Program Files\\git\\bin\\bash.exe", npm_config_shamefully_hoist: "true", npm_config_user_agent: "npm/8.6.0 node/v19.0.1 win32 x64 workspaces/false", npm_config_userconfig: "C:\\Users\\Brandon\\.npmrc", npm_execpath: "C:\\Users\\Brandon\\AppData\\Roaming\\npm\\node_modules\\npm\\bin\\npm-cli.js", npm_lifecycle_event: "build:dev:chart-data-script", npm_lifecycle_script: "vite build --config vite.config-lib.ts --mode development", npm_node_execpath: "C:\\Program Files\\nodejs\\node.exe", npm_package_engines_node: ">=16.0.0", npm_package_json: "C:\\Users\\Brandon\\source\\repos\\dapp\\package.json", npm_package_name: "@kolektivo/dapp", npm_package_version: "1.0.0" }.NODE_ENV !== "production",
    scanLink: Z8
  })
).register(Ed).register(Uu).register(ga).register(
  de.instance(x6, {
    tokens: RP.tokens
  })
).register(Fu).register(de.instance(Sa, { uf: (n) => Number(n) })).register(
  de.instance(va, {}),
  de.instance(md, {}),
  de.instance(xa, {
    scopeTo: () => {
    }
  })
), Fk = async () => {
  let n = !1;
  const e = 5, t = 1, r = 1;
  let i = "";
  const s = sf.get(t5);
  let a = "", o = 0, u = 0, l = 0, p = 0, h = 0, b = 0, C = 0, v = 0, T = 0, w = 0, M, I = 0, F = 0, k = 0, D = 0, $ = 0;
  const V = await sf.get(M0).connect(), K = Object.values(Lt).filter((A) => typeof A == "number").map((A) => A), ae = async (A) => {
    const _ = ih(V, `chartData/lastSync/${A}`);
    return (await ah(_)).docs[0]?.id;
  }, q = async (A, _, P) => {
    P && await Yw(yu(V, `chartData/lastSync/${A}/${P}`)), await oh(yu(V, `chartData/lastSync/${A}`, _.toString()), {});
  }, oe = async (A, _, P, m) => {
    let d = m;
    typeof d != "object" && (d = { value: m }), d.createdAt = P, await oh(yu(V, `chartData/${A}/${_}`, P.toString()), d);
  }, E = async (A, _, P) => {
    const m = Zw(V);
    (await ah(Gw(ih(V, `chartData/${A}/${_}`), Ww("createdAt", "<", P)))).forEach((g) => m.delete(g.ref)), await m.commit();
  }, c = async () => (await (await sf.get(Y6).getTreasuryContract()).totalValuation()).toHexString(), y = async () => {
    await s.loadAssets(), await s.loadkCur();
  }, x = (A) => {
    const _ = new Date();
    switch (A) {
      case 0:
        _.setMinutes(_.getMinutes() - 60, 0, 0);
        break;
      case 1:
        _.setHours(_.getHours() - 24, 0, 0, 0);
        break;
      case 2:
        return Number.MIN_VALUE;
    }
    return _.getTime();
  }, S = async () => {
    i = await c(), await y(), a = s.reserveValue?.toHexString() ?? "", o = s.currentLeverageRatio, u = s.maxLeverageRatio, l = s.kCurPrice ?? 0, p = s.kCurPriceCeiling, h = s.kCurPriceFloor, b = s.kCurReserveDistribution ?? 0, C = s.kCurMentoDistribution ?? 0, v = s.kCurPrimaryPoolDistribution ?? 0, T = s.kCurCirculatingDistribution, I = s.minCollateralizationValue, F = s.kCurTotalValue, k = s.lowRiskAssets.map((A) => A.total).sum(), D = s.moderateRiskAssets.map((A) => A.total).sum(), $ = s.highRiskAssets.map((A) => A.total).sum(), w = s.kGuilderValueRatio;
  };
  await Promise.all(
    K.map(async (A) => {
      const _ = await ae(Lt[A]), P = new Date();
      let m = new Date();
      if (_ && (m = new Date(Number(_))), A === 0 ? (m.setUTCMinutes(m.getUTCMinutes() + e), m.setUTCSeconds(0, 0)) : A === 1 ? (m.setUTCHours(m.getUTCHours() + t), m.setUTCMinutes(0, 0, 0)) : (m.setUTCDate(m.getUTCDate() + r), m.setUTCHours(0, 0, 0, 0)), P >= m || !_) {
        let d = new Date();
        if (A === 0) {
          const g = 6e4 * e;
          d = new Date(Math.floor(P.getTime() / g) * g);
        } else
          A === 1 ? d.setUTCMinutes(0, 0, 0) : d.setUTCHours(0, 0, 0, 0);
        n || (n = !0, M = S()), M?.then(async () => {
          await oe("kCurPrice", Lt[A], d.getTime(), { kCurPrice: l, kCurPriceCeiling: p, kCurPriceFloor: h }), await oe("kCurRatio", Lt[A], d.getTime(), { currentLeverageRatio: o, maxLeverageRatio: u }), await oe("kCurSupply", Lt[A], d.getTime(), {
            kCurReserveDistribution: b,
            kCurMentoDistribution: C,
            kCurPrimaryPoolDistribution: v,
            kCurCirculatingDistribution: T
          }), await oe("ktt", Lt[A], d.getTime(), i), await oe("reserve", Lt[A], d.getTime(), a), await oe("risk", Lt[A], d.getTime(), {
            minCollateralValue: I,
            marketCap: F,
            lowRisk: k,
            moderateRisk: D,
            highRisk: $
          }), await oe("kGuilder", Lt[A], d.getTime(), w), await q(Lt[A], d.getTime(), _);
          const g = x(A);
          await E("kCurPrice", Lt[A], g), await E("kCurRatio", Lt[A], g), await E("kCurSupply", Lt[A], g), await E("ktt", Lt[A], g), await E("reserve", Lt[A], g), await E("risk", Lt[A], g), await E("kGuilder", Lt[A], g);
        });
      }
    })
  );
};
await Fk();

export {
  Fk as seed
};
