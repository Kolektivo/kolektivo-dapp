@mixin standardBackground {
  border: none;
  background-image: var(--Gradient08);
  background-size: 200% auto;
  color: var(--Neutral04);
}

@mixin standardButton {
  /**
    * note one benefit of all: is to set box-sizing: border-box
    * This resets all of the selected elementâ€™s properties to their initial values as defined in the CSS spec.
    */
  all: initial;
  outline: none;
  padding: 14px 24px;
  font-family: Inter;
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: 19px;
  letter-spacing: 0.6px;
  text-align: center;
  text-transform: uppercase;
  border-radius: 50px;
  cursor: pointer;
  background-color: transparent;
  transform: translateY(0);
  user-select: none;
  color: var(--Neutral04);
  white-space: nowrap;
  gap: 12px;

  display: inline-flex;
  justify-content: center;
  align-items: center;

  & > .icon {
    width: 0;
    padding-left: 0px;
    opacity: 0;
    overflow: hidden;
    transition: width 0.5s linear, opacity 0.75s linear, padding-left 0.5s linear;
    &.is-loading {
      width: 20px;
      opacity: 1;
    }
    .spinner {
      width: auto;
      animation: spin 2s linear infinite;
    }
  }

  &:focus {
    box-shadow: 0 0 10px var(--Shade06);
  }

  &.disabled,
  &.disabled:hover,
  &:disabled,
  &:disabled:hover {
    cursor: not-allowed;
    box-shadow: none;
  }

  &:hover:active:not(.disabled):not(:disabled),
  &:focus:active:not(.disabled):not(:disabled) {
    transform: translateY(-1px);
  }

  &.full-width {
    width: -webkit-fill-available;
    width: -moz-available;
  }

  transition: background 0.25s ease-in, transform 0.1s ease-in;
}

:host {
  display: inline-block;

  > button {
    &.primary {
      @include standardButton;
      @include standardBackground;

      &.disabled,
      &.disabled:hover,
      &:disabled,
      &:disabled:hover {
        background-color: var(--Neutral02);
        background-image: unset;
      }

      &:hover:not(.disabled):not(:disabled):not(.no-animation) {
        background-position: right center;
      }
    }

    &.secondary {
      @include standardButton;

      position: relative;
      background: transparent;
      border: none;

      &:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: 50px;
        padding: 2px;
        background: var(--Gradient01);
        -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0); // do no fix the errors
        // we need this for Firefox. Also, the order for (-webkit-)mask-composite is important
        -webkit-mask-composite: xor;
        mask-composite: exclude;
      }

      &:hover:not(.disabled):not(:disabled) {
        background-color: var(--Secondary05);
        border-color: var(--Primary01);
        color: var(--Neutral04);
      }

      &.disabled,
      &.disabled:hover,
      &:disabled,
      &:disabled:hover {
        border-color: var(--Neutral02);
        background-color: transparent;
        color: var(--Neutral02);
      }

      // the button is down
      &:hover:active:not(.disabled):not(:disabled),
      &:focus:active:not(.disabled):not(:disabled) {
        @include standardBackground;
        //border: 2px solid transparent;
      }
    }

    &.tertiary {
      @include standardButton;

      &:hover {
        background-color: var(--Secondary05);
      }

      &.disabled,
      &.disabled:hover,
      &:disabled,
      &:disabled:hover {
        color: var(--Neutral02);
        background-color: transparent;
      }

      // the button is down
      &:hover:active:not(.disabled):not(:disabled),
      &:focus:active:not(.disabled):not(:disabled) {
        @include standardBackground;
      }
    }

    &.formfield {
      @include standardButton;
      border-radius: 10px;
      background-color: var(--Border01);
      font-weight: 500;
      padding: 12px 16px;
      font-size: var(--font-size3);
      line-height: 22px;

      &:active {
        background-color: var(--Border02);
        color: var(--Neutral03);
      }

      &:hover {
        background-color: var(--Secondary05);
      }

      &.disabled,
      &.disabled:hover,
      &:disabled,
      &:disabled:hover {
        background-color: var(--Neutral02);
      }
    }
  }
}

:host-context(.button-group) {
  button {
    flex: 1;
    gap: 0;
  }
}

:host(:first-child) {
  button {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
}

:host(:last-child) {
  button {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

:host(:not(:first-child):not(:last-child)) {
  button {
    border-radius: 0;
  }
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
